{
.appVersion = "1352";
copyright = "Copyright 2004 The Hurricane Project Authors (https://github.com/googlefonts/passions-conflict)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = "Disable Subroutines";
value = 1;
},
{
name = glyphOrder;
value = (
.notdef,
CR,
NULL,
space,
nbspace
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
}
);
}
);
date = "2021-09-02 21:24:22 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = "Passions Conflict";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn AZE;\012languagesystem latn CRT;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature ordn;\012feature locl;\012feature sups;\012feature frac;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [brevebelowcomb cedillacomb commaaccent dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	lookupflag 0;\012	sub tildecomb dotaccentcomb by tildecomb_dotaccentcomb;\012	sub tildecomb macroncomb by tildecomb_macroncomb;\012} ccmp_Other_2;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language AZE;\012	sub i by idotaccent;\012	language CRT;\012	sub i by idotaccent;\012	language KAZ;\012	sub i by idotaccent;\012	language TAT;\012	sub i by idotaccent;\012	language TRK;\012	sub i by idotaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language ROM;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012\012lookup locl_latn_2 {\012	script latn;\012	language CAT;\012	sub l periodcentered' l by periodcentered.loclCAT;\012	sub L periodcentered' L by periodcentered.loclCAT;\012} locl_latn_2;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
ascender = 750;
capHeight = 438;
customParameters = (
{
name = typoAscender;
value = 469;
},
{
name = typoDescender;
value = -156;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 661;
},
{
name = winDescent;
value = 346;
},
{
name = hheaAscender;
value = 469;
},
{
name = hheaDescender;
value = -156;
},
{
name = strikeoutPosition;
value = 156;
},
{
name = strikeoutSize;
value = 31;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 4 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 4 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0125 128 98 76 55 33 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0126 250 205 151 112 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0127 204 181 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0128 110 98 76 55 33 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 240 181 151 112 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 220 181 151 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0123 197 149 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0124 167 149 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 4 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
23,
25,
28,
33,
43,
22,
27,
50,
0,
0,
-514,
21,
321,
13,
888,
103
);
}
);
descender = -250;
id = "0CF23081-C341-41E4-8FF8-6B151438961F";
weightValue = 400;
widthValue = 5;
xHeight = 180;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
note = CR;
},
{
glyphname = NULL;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 0;
}
);
note = NULL;
},
{
glyphname = space;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
note = space;
unicode = 0020;
},
{
glyphname = A;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-74 -110 OFFCURVE",
"-20.667 -91.333 OFFCURVE",
"46 -52 CURVE",
"68 -62 OFFCURVE",
"93.667 -68.333 OFFCURVE",
"123 -71 CURVE SMOOTH",
"130.333 -72.333 OFFCURVE",
"134 -71.333 OFFCURVE",
"134 -68 CURVE SMOOTH",
"134 -66 OFFCURVE",
"131.667 -64.667 OFFCURVE",
"127 -64 CURVE SMOOTH",
"98.333 -61.333 OFFCURVE",
"74.667 -55.333 OFFCURVE",
"56 -46 CURVE",
"93.333 -24 OFFCURVE",
"146 19 OFFCURVE",
"214 83 CURVE",
"241.333 61.667 OFFCURVE",
"275.333 51 OFFCURVE",
"316 51 CURVE SMOOTH",
"344.667 51 OFFCURVE",
"366.333 58.333 OFFCURVE",
"381 73 CURVE SMOOTH",
"382.333 74.333 OFFCURVE",
"382.333 76 OFFCURVE",
"381 78 CURVE SMOOTH",
"379 80 OFFCURVE",
"377.333 80 OFFCURVE",
"376 78 CURVE",
"362.667 64.667 OFFCURVE",
"342.667 58 OFFCURVE",
"316 58 CURVE SMOOTH",
"277.333 58 OFFCURVE",
"245.667 68.333 OFFCURVE",
"221 89 CURVE",
"304 168 LINE",
"373.333 171.333 OFFCURVE",
"425.667 173.333 OFFCURVE",
"461 174 CURVE",
"453 136.667 OFFCURVE",
"449 105 OFFCURVE",
"449 79 CURVE SMOOTH",
"449 66.333 OFFCURVE",
"450 55.333 OFFCURVE",
"452 46 CURVE SMOOTH",
"461.333 0 OFFCURVE",
"482 -23 OFFCURVE",
"514 -23 CURVE SMOOTH",
"536 -23 OFFCURVE",
"561.667 -11.667 OFFCURVE",
"591 11 CURVE SMOOTH",
"615.667 29 OFFCURVE",
"637.333 50 OFFCURVE",
"656 74 CURVE SMOOTH",
"657.333 76 OFFCURVE",
"658 78.333 OFFCURVE",
"658 81 CURVE SMOOTH",
"658 84.333 OFFCURVE",
"656.667 86 OFFCURVE",
"654 86 CURVE SMOOTH",
"652 86 OFFCURVE",
"648.333 83.333 OFFCURVE",
"643 78 CURVE SMOOTH",
"618.333 50.667 OFFCURVE",
"601.667 33 OFFCURVE",
"593 25 CURVE SMOOTH",
"567.667 2.333 OFFCURVE",
"547 -9 OFFCURVE",
"531 -9 CURVE SMOOTH",
"511.667 -9 OFFCURVE",
"498.333 6 OFFCURVE",
"491 36 CURVE SMOOTH",
"487.667 50.667 OFFCURVE",
"486 68.333 OFFCURVE",
"486 89 CURVE SMOOTH",
"486 113.667 OFFCURVE",
"488.667 143.333 OFFCURVE",
"494 178 CURVE",
"556.667 188 OFFCURVE",
"587 215.333 OFFCURVE",
"585 260 CURVE",
"584.333 263.333 OFFCURVE",
"582.667 265 OFFCURVE",
"580 265 CURVE SMOOTH",
"576 265 OFFCURVE",
"574 262.667 OFFCURVE",
"574 258 CURVE SMOOTH",
"574 223.333 OFFCURVE",
"548 202 OFFCURVE",
"496 194 CURVE",
"519.333 306 OFFCURVE",
"537 386.667 OFFCURVE",
"549 436 CURVE SMOOTH",
"550.333 442 OFFCURVE",
"550 446.333 OFFCURVE",
"548 449 CURVE",
"562 475.667 OFFCURVE",
"569 497.333 OFFCURVE",
"569 514 CURVE SMOOTH",
"569 538.667 OFFCURVE",
"553.333 551.667 OFFCURVE",
"522 553 CURVE SMOOTH",
"515.333 553 OFFCURVE",
"512 551.333 OFFCURVE",
"512 548 CURVE SMOOTH",
"512 545.333 OFFCURVE",
"514 544 OFFCURVE",
"518 544 CURVE SMOOTH",
"534 543.333 OFFCURVE",
"542 535.667 OFFCURVE",
"542 521 CURVE SMOOTH",
"542 489.667 OFFCURVE",
"507 430.333 OFFCURVE",
"437 343 CURVE SMOOTH",
"386.333 279.667 OFFCURVE",
"338.667 226 OFFCURVE",
"294 182 CURVE",
"255 178 LINE",
"325.667 248.667 OFFCURVE",
"375.667 315.333 OFFCURVE",
"405 378 CURVE SMOOTH",
"418.333 406.667 OFFCURVE",
"425 432.667 OFFCURVE",
"425 456 CURVE SMOOTH",
"425 509.333 OFFCURVE",
"392.333 541 OFFCURVE",
"347 541 CURVE SMOOTH",
"315 541 OFFCURVE",
"284 527.333 OFFCURVE",
"254 500 CURVE SMOOTH",
"218.667 468.667 OFFCURVE",
"190.333 423.333 OFFCURVE",
"169 364 CURVE SMOOTH",
"155.667 328.667 OFFCURVE",
"149 290.333 OFFCURVE",
"149 249 CURVE SMOOTH",
"149 217.667 OFFCURVE",
"153.333 189 OFFCURVE",
"162 163 CURVE",
"94 147 OFFCURVE",
"43 118.667 OFFCURVE",
"9 78 CURVE SMOOTH",
"-7 58 OFFCURVE",
"-15 38.333 OFFCURVE",
"-15 19 CURVE SMOOTH",
"-15 -9 OFFCURVE",
"1.333 -30.667 OFFCURVE",
"34 -46 CURVE",
"-24 -81.333 OFFCURVE",
"-71.667 -98.667 OFFCURVE",
"-109 -98 CURVE SMOOTH",
"-123.667 -97.333 OFFCURVE",
"-131 -92.333 OFFCURVE",
"-131 -83 CURVE SMOOTH",
"-131 -77.667 OFFCURVE",
"-129 -70.667 OFFCURVE",
"-125 -62 CURVE",
"-129.667 -64 OFFCURVE",
"-133 -68 OFFCURVE",
"-135 -74 CURVE",
"-139 -80.667 OFFCURVE",
"-141 -86.333 OFFCURVE",
"-141 -91 CURVE SMOOTH",
"-141 -101.667 OFFCURVE",
"-132 -107.333 OFFCURVE",
"-114 -108 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"25 -25.333 OFFCURVE",
"15 -9 OFFCURVE",
"15 9 CURVE SMOOTH",
"15 35.667 OFFCURVE",
"34.333 62.667 OFFCURVE",
"73 90 CURVE SMOOTH",
"103 110.667 OFFCURVE",
"136 127 OFFCURVE",
"172 139 CURVE",
"174.667 132.333 OFFCURVE",
"178 126 OFFCURVE",
"182 120 CURVE",
"147.333 90 OFFCURVE",
"116.667 66.667 OFFCURVE",
"90 50 CURVE SMOOTH",
"88.667 49.333 OFFCURVE",
"88.333 48 OFFCURVE",
"89 46 CURVE SMOOTH",
"89 44 OFFCURVE",
"90 43 OFFCURVE",
"92 43 CURVE SMOOTH",
"99.333 43 OFFCURVE",
"128.333 64.667 OFFCURVE",
"179 108 CURVE SMOOTH",
"186 114 LINE",
"191.333 106.667 OFFCURVE",
"197 100 OFFCURVE",
"203 94 CURVE",
"133.667 27.333 OFFCURVE",
"81 -17.333 OFFCURVE",
"45 -40 CURVE"
);
},
{
closed = 1;
nodes = (
"182 142 LINE",
"193.333 146 OFFCURVE",
"205 149.333 OFFCURVE",
"217 152 CURVE",
"208.333 143.333 OFFCURVE",
"199.333 135 OFFCURVE",
"190 127 CURVE"
);
},
{
closed = 1;
nodes = (
"203.667 106 OFFCURVE",
"198.667 112.667 OFFCURVE",
"194 120 CURVE",
"206.667 132 OFFCURVE",
"219.333 144 OFFCURVE",
"232 156 CURVE",
"276 164 LINE",
"247.333 136 OFFCURVE",
"225 114.667 OFFCURVE",
"209 100 CURVE"
);
},
{
closed = 1;
nodes = (
"166.667 188.667 OFFCURVE",
"163 214.333 OFFCURVE",
"163 243 CURVE SMOOTH",
"163 285 OFFCURVE",
"170 325 OFFCURVE",
"184 363 CURVE SMOOTH",
"204.667 419.667 OFFCURVE",
"231 463.333 OFFCURVE",
"263 494 CURVE SMOOTH",
"291.667 520.667 OFFCURVE",
"320 534 OFFCURVE",
"348 534 CURVE SMOOTH",
"385.333 534 OFFCURVE",
"413 505.333 OFFCURVE",
"413 460 CURVE SMOOTH",
"413 436 OFFCURVE",
"406 409.667 OFFCURVE",
"392 381 CURVE SMOOTH",
"360 314.333 OFFCURVE",
"310 246 OFFCURVE",
"242 176 CURVE",
"215.333 172.667 OFFCURVE",
"192.667 169.333 OFFCURVE",
"174 166 CURVE"
);
},
{
closed = 1;
nodes = (
"378.333 236.667 OFFCURVE",
"415.667 273.333 OFFCURVE",
"435 294 CURVE SMOOTH",
"471 332 OFFCURVE",
"503 373.333 OFFCURVE",
"531 418 CURVE",
"498 309 LINE SMOOTH",
"483.333 261.667 OFFCURVE",
"472 222 OFFCURVE",
"464 190 CURVE",
"452.667 189.333 OFFCURVE",
"429.333 188.667 OFFCURVE",
"394 188 CURVE SMOOTH",
"364 188 OFFCURVE",
"340.333 186.667 OFFCURVE",
"323 184 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012148 8 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 6 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 6 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012118 8 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 5 94 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 25 122 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01245 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 94 122 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012108 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012132 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012136 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 148 22 148 38 148 54 148 70 148 86 148 102 148 118 148 134 148 150 148 166 148 182 148 198 148 214 148 230 148 246 148 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 148 22 148 38 148 54 148 70 148 86 148 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 148 117 148 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012161 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012165 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012171 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012180 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012138 4 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01288 29 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
note = A;
unicode = 0041;
},
{
glyphname = Aacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 478, 246}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Abreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 476, 218}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 474, 213}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 194, -466}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 471, 228}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 479, 211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 467, 211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 474, 214}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB4;
},
{
glyphname = Acircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 380, 219}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 404, 156}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 205, -437}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 380, 221}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 374, 211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 372, 209}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 377, 212}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAA;
},
{
glyphname = Adblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 415, 173}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0200;
},
{
glyphname = Adieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 485, 324}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Adotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 204, -461}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA0;
},
{
glyphname = Agrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, 436, 240}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Ahookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 483, 152}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 426, 141}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0202;
},
{
glyphname = Amacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 416, 189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 381, -20}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0104;
},
{
glyphname = Aring;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 481, 190}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Aring;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 575, 284}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 01FA;
},
{
glyphname = Atilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 420, 205}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = AE;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"873 373 OFFCURVE",
"877 372 OFFCURVE",
"884 373 CURVE SMOOTH",
"920 378 OFFCURVE",
"943 403 OFFCURVE",
"943 428 CURVE SMOOTH",
"943 445 OFFCURVE",
"935 460 OFFCURVE",
"918 472 CURVE SMOOTH",
"899 485 OFFCURVE",
"872 492 OFFCURVE",
"838 492 CURVE SMOOTH",
"810 492 OFFCURVE",
"778 487 OFFCURVE",
"742 478 CURVE SMOOTH",
"699 466 OFFCURVE",
"663 449 OFFCURVE",
"634 428 CURVE SMOOTH",
"599 404 OFFCURVE",
"580 378 OFFCURVE",
"577 349 CURVE SMOOTH",
"573 305 OFFCURVE",
"630 269 OFFCURVE",
"694 270 CURVE",
"639 259 OFFCURVE",
"609 252 OFFCURVE",
"604 251 CURVE SMOOTH",
"562 238 OFFCURVE",
"526 221 OFFCURVE",
"498 202 CURVE",
"520 310 OFFCURVE",
"537 388 OFFCURVE",
"549 436 CURVE SMOOTH",
"550 442 OFFCURVE",
"550 446 OFFCURVE",
"548 449 CURVE",
"562 476 OFFCURVE",
"569 497 OFFCURVE",
"569 514 CURVE SMOOTH",
"569 539 OFFCURVE",
"553 552 OFFCURVE",
"522 553 CURVE SMOOTH",
"515 553 OFFCURVE",
"512 551 OFFCURVE",
"512 548 CURVE SMOOTH",
"512 545 OFFCURVE",
"514 544 OFFCURVE",
"518 544 CURVE SMOOTH",
"534 543 OFFCURVE",
"542 536 OFFCURVE",
"542 521 CURVE SMOOTH",
"542 490 OFFCURVE",
"507 430 OFFCURVE",
"437 343 CURVE SMOOTH",
"386 280 OFFCURVE",
"339 226 OFFCURVE",
"294 182 CURVE",
"280 180 OFFCURVE",
"266 179 OFFCURVE",
"254 177 CURVE",
"262 186 LINE SMOOTH",
"338 274 OFFCURVE",
"386 338 OFFCURVE",
"405 378 CURVE SMOOTH",
"418 407 OFFCURVE",
"425 433 OFFCURVE",
"425 456 CURVE SMOOTH",
"425 509 OFFCURVE",
"392 541 OFFCURVE",
"347 541 CURVE SMOOTH",
"315 541 OFFCURVE",
"284 527 OFFCURVE",
"254 500 CURVE SMOOTH",
"219 469 OFFCURVE",
"190 423 OFFCURVE",
"169 364 CURVE SMOOTH",
"156 329 OFFCURVE",
"149 290 OFFCURVE",
"149 249 CURVE SMOOTH",
"149 217 OFFCURVE",
"153 188 OFFCURVE",
"162 163 CURVE",
"154 161 OFFCURVE",
"146 160 OFFCURVE",
"140 158 CURVE SMOOTH",
"83 141 OFFCURVE",
"39 115 OFFCURVE",
"9 78 CURVE SMOOTH",
"-7 58 OFFCURVE",
"-15 38 OFFCURVE",
"-15 19 CURVE SMOOTH",
"-15 -9 OFFCURVE",
"1 -31 OFFCURVE",
"34 -46 CURVE",
"-24 -81 OFFCURVE",
"-72 -99 OFFCURVE",
"-109 -98 CURVE SMOOTH",
"-124 -97 OFFCURVE",
"-131 -92 OFFCURVE",
"-131 -83 CURVE SMOOTH",
"-131 -78 OFFCURVE",
"-129 -71 OFFCURVE",
"-125 -62 CURVE",
"-130 -64 OFFCURVE",
"-133 -68 OFFCURVE",
"-135 -74 CURVE",
"-139 -81 OFFCURVE",
"-141 -86 OFFCURVE",
"-141 -91 CURVE SMOOTH",
"-141 -102 OFFCURVE",
"-132 -107 OFFCURVE",
"-114 -108 CURVE SMOOTH",
"-74 -110 OFFCURVE",
"-21 -91 OFFCURVE",
"46 -52 CURVE",
"68 -62 OFFCURVE",
"94 -68 OFFCURVE",
"123 -71 CURVE SMOOTH",
"130 -72 OFFCURVE",
"134 -71 OFFCURVE",
"134 -68 CURVE SMOOTH",
"134 -66 OFFCURVE",
"132 -65 OFFCURVE",
"127 -64 CURVE SMOOTH",
"98 -61 OFFCURVE",
"75 -55 OFFCURVE",
"56 -46 CURVE",
"88 -27 OFFCURVE",
"129 5 OFFCURVE",
"180 51 CURVE SMOOTH",
"192 62 OFFCURVE",
"203 73 OFFCURVE",
"215 83 CURVE",
"241 62 OFFCURVE",
"275 51 OFFCURVE",
"316 51 CURVE SMOOTH",
"345 51 OFFCURVE",
"366 58 OFFCURVE",
"381 73 CURVE SMOOTH",
"382 74 OFFCURVE",
"382 76 OFFCURVE",
"381 78 CURVE",
"379 80 OFFCURVE",
"377 80 OFFCURVE",
"376 78 CURVE",
"363 65 OFFCURVE",
"343 58 OFFCURVE",
"316 58 CURVE SMOOTH",
"277 58 OFFCURVE",
"246 68 OFFCURVE",
"221 89 CURVE",
"249 116 OFFCURVE",
"276 142 OFFCURVE",
"304 168 CURVE",
"373 171 OFFCURVE",
"426 173 OFFCURVE",
"461 174 CURVE",
"461 171 LINE",
"432 143 OFFCURVE",
"418 112 OFFCURVE",
"418 81 CURVE SMOOTH",
"418 42 OFFCURVE",
"439 12 OFFCURVE",
"481 -11 CURVE SMOOTH",
"526 -36 OFFCURVE",
"586 -43 OFFCURVE",
"659 -34 CURVE SMOOTH",
"722 -27 OFFCURVE",
"777 -9 OFFCURVE",
"822 19 CURVE SMOOTH",
"872 50 OFFCURVE",
"898 86 OFFCURVE",
"900 126 CURVE SMOOTH",
"901 133 OFFCURVE",
"900 136 OFFCURVE",
"898 136 CURVE SMOOTH",
"895 136 OFFCURVE",
"893 133 OFFCURVE",
"893 128 CURVE SMOOTH",
"890 94 OFFCURVE",
"865 63 OFFCURVE",
"819 35 CURVE SMOOTH",
"776 9 OFFCURVE",
"725 -8 OFFCURVE",
"668 -16 CURVE SMOOTH",
"650 -19 OFFCURVE",
"633 -20 OFFCURVE",
"618 -20 CURVE SMOOTH",
"569 -20 OFFCURVE",
"529 -9 OFFCURVE",
"500 12 CURVE SMOOTH",
"473 32 OFFCURVE",
"459 57 OFFCURVE",
"459 87 CURVE SMOOTH",
"459 116 OFFCURVE",
"472 143 OFFCURVE",
"498 168 CURVE SMOOTH",
"527 195 OFFCURVE",
"568 216 OFFCURVE",
"621 229 CURVE SMOOTH",
"678 244 OFFCURVE",
"733 251 OFFCURVE",
"784 249 CURVE SMOOTH",
"800 248 OFFCURVE",
"808 253 OFFCURVE",
"808 262 CURVE SMOOTH",
"808 271 OFFCURVE",
"801 275 OFFCURVE",
"788 274 CURVE SMOOTH",
"745 272 OFFCURVE",
"707 277 OFFCURVE",
"672 289 CURVE SMOOTH",
"632 302 OFFCURVE",
"613 321 OFFCURVE",
"616 345 CURVE SMOOTH",
"620 393 OFFCURVE",
"674 440 OFFCURVE",
"741 461 CURVE SMOOTH",
"778 472 OFFCURVE",
"810 478 OFFCURVE",
"836 478 CURVE SMOOTH",
"863 478 OFFCURVE",
"884 472 OFFCURVE",
"898 460 CURVE SMOOTH",
"909 451 OFFCURVE",
"914 438 OFFCURVE",
"914 423 CURVE SMOOTH",
"914 398 OFFCURVE",
"873 387 OFFCURVE",
"873 376 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"163 285 OFFCURVE",
"170 325 OFFCURVE",
"184 363 CURVE SMOOTH",
"205 420 OFFCURVE",
"231 463 OFFCURVE",
"263 494 CURVE SMOOTH",
"292 521 OFFCURVE",
"320 534 OFFCURVE",
"348 534 CURVE SMOOTH",
"385 534 OFFCURVE",
"413 505 OFFCURVE",
"413 460 CURVE SMOOTH",
"413 436 OFFCURVE",
"406 410 OFFCURVE",
"392 381 CURVE SMOOTH",
"358 310 OFFCURVE",
"309 242 OFFCURVE",
"242 175 CURVE",
"215 172 OFFCURVE",
"192 168 OFFCURVE",
"173 165 CURVE",
"166 188 OFFCURVE",
"163 214 OFFCURVE",
"163 243 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"364 188 OFFCURVE",
"340 187 OFFCURVE",
"323 184 CURVE",
"378 237 OFFCURVE",
"416 273 OFFCURVE",
"435 294 CURVE SMOOTH",
"471 332 OFFCURVE",
"503 373 OFFCURVE",
"531 418 CURVE",
"498 309 LINE SMOOTH",
"483 262 OFFCURVE",
"472 222 OFFCURVE",
"464 190 CURVE",
"453 189 OFFCURVE",
"429 189 OFFCURVE",
"394 188 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"205 105 OFFCURVE",
"201 110 OFFCURVE",
"197 116 CURVE",
"209 128 OFFCURVE",
"221 141 OFFCURVE",
"235 156 CURVE",
"248 159 OFFCURVE",
"262 162 OFFCURVE",
"276 164 CURVE",
"209 100 LINE"
);
},
{
closed = 1;
nodes = (
"193 146 OFFCURVE",
"205 149 OFFCURVE",
"218 152 CURVE",
"190 127 LINE",
"187 132 OFFCURVE",
"184 137 OFFCURVE",
"182 142 CURVE"
);
},
{
closed = 1;
nodes = (
"112 9 OFFCURVE",
"74 -22 OFFCURVE",
"45 -40 CURVE",
"25 -25 OFFCURVE",
"15 -9 OFFCURVE",
"15 9 CURVE SMOOTH",
"15 46 OFFCURVE",
"50 83 OFFCURVE",
"119 118 CURVE SMOOTH",
"134 126 OFFCURVE",
"152 133 OFFCURVE",
"172 139 CURVE",
"175 132 OFFCURVE",
"178 126 OFFCURVE",
"182 120 CURVE",
"147 91 OFFCURVE",
"117 67 OFFCURVE",
"90 50 CURVE",
"89 49 OFFCURVE",
"88 48 OFFCURVE",
"89 46 CURVE",
"89 44 OFFCURVE",
"90 43 OFFCURVE",
"92 43 CURVE SMOOTH",
"112 43 OFFCURVE",
"144 65 OFFCURVE",
"190 109 CURVE",
"194 104 OFFCURVE",
"198 99 OFFCURVE",
"203 94 CURVE",
"160 53 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012129 8 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 6 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012194 8 143 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 5 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 5 171 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012194 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01256 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01278 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 90 122 90 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012104 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012117 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012125 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 129 22 129 38 129 54 129 70 129 86 129 102 129 118 129 134 129 150 129 166 129 182 129 198 129 214 129 230 129 246 129 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 129 22 129 38 129 54 129 70 129 86 129 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 129 117 129 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 143 122 143 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 143 25 143 41 143 57 143 73 143 89 143 105 143 121 143 137 143 153 143 169 143 185 143 201 143 217 143 233 143 249 143 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 143 25 143 41 143 57 143 73 143 89 143 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012149 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 171 122 171 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 171 25 171 41 171 57 171 73 171 89 171 105 171 121 171 137 171 153 171 169 171 185 171 201 171 217 171 233 171 249 171 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 171 25 171 41 171 57 171 73 171 89 171 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012209 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 909;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 799, 146}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 909;
}
);
unicode = 01FC;
},
{
glyphname = B;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-9 -102.333 OFFCURVE",
"-7.333 -102 OFFCURVE",
"-6 -100 CURVE SMOOTH",
"45 -9 LINE",
"80.333 -38.333 OFFCURVE",
"127.333 -53 OFFCURVE",
"186 -53 CURVE SMOOTH",
"257.333 -53 OFFCURVE",
"322.667 -41.333 OFFCURVE",
"382 -18 CURVE SMOOTH",
"438.667 4.667 OFFCURVE",
"481 33.333 OFFCURVE",
"509 68 CURVE SMOOTH",
"533.667 97.333 OFFCURVE",
"546 125.667 OFFCURVE",
"546 153 CURVE SMOOTH",
"546 185 OFFCURVE",
"529.333 211.667 OFFCURVE",
"496 233 CURVE SMOOTH",
"464.667 252.333 OFFCURVE",
"426 262 OFFCURVE",
"380 262 CURVE SMOOTH",
"370 262 OFFCURVE",
"360 261.667 OFFCURVE",
"350 261 CURVE SMOOTH",
"343 261 LINE",
"400.333 280.333 OFFCURVE",
"448 306.333 OFFCURVE",
"486 339 CURVE SMOOTH",
"519.333 367.667 OFFCURVE",
"536 394.333 OFFCURVE",
"536 419 CURVE SMOOTH",
"536 438.333 OFFCURVE",
"526 453 OFFCURVE",
"506 463 CURVE SMOOTH",
"485.333 474.333 OFFCURVE",
"456.667 479 OFFCURVE",
"420 477 CURVE SMOOTH",
"396.667 475.667 OFFCURVE",
"369.667 473 OFFCURVE",
"339 469 CURVE SMOOTH",
"259 456 LINE",
"204 446 LINE",
"190.667 486 OFFCURVE",
"163.333 506 OFFCURVE",
"122 506 CURVE SMOOTH",
"84.667 506 OFFCURVE",
"50.333 485.333 OFFCURVE",
"41 456 CURVE SMOOTH",
"39 451.333 OFFCURVE",
"38 447 OFFCURVE",
"38 443 CURVE SMOOTH",
"38 431.667 OFFCURVE",
"43.333 422.333 OFFCURVE",
"54 415 CURVE SMOOTH",
"66.667 407 OFFCURVE",
"84.667 403.333 OFFCURVE",
"108 404 CURVE SMOOTH",
"128 405.333 OFFCURVE",
"157.333 410.333 OFFCURVE",
"196 419 CURVE",
"201.333 365.667 OFFCURVE",
"174.667 276.667 OFFCURVE",
"116 152 CURVE",
"48 120 OFFCURVE",
"14 85.333 OFFCURVE",
"14 48 CURVE SMOOTH",
"14 29.333 OFFCURVE",
"22 12.333 OFFCURVE",
"38 -3 CURVE",
"24 -29.667 OFFCURVE",
"7 -60.667 OFFCURVE",
"-13 -96 CURVE",
"-13.667 -98.667 OFFCURVE",
"-13 -100.333 OFFCURVE",
"-11 -101 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"47.667 28.333 OFFCURVE",
"46 36 OFFCURVE",
"46 44 CURVE SMOOTH",
"46 72.667 OFFCURVE",
"65 99 OFFCURVE",
"103 123 CURVE",
"88.333 92.333 OFFCURVE",
"71 58.333 OFFCURVE",
"51 21 CURVE"
);
},
{
closed = 1;
nodes = (
"116.333 -39 OFFCURVE",
"76.667 -22.333 OFFCURVE",
"56 11 CURVE",
"83.333 61 OFFCURVE",
"105 102 OFFCURVE",
"121 134 CURVE",
"133.667 140.667 OFFCURVE",
"146.333 145.333 OFFCURVE",
"159 148 CURVE",
"153.667 128.667 OFFCURVE",
"151.333 111.667 OFFCURVE",
"152 97 CURVE SMOOTH",
"153.333 57 OFFCURVE",
"177.667 32.333 OFFCURVE",
"219 35 CURVE SMOOTH",
"222.333 35.667 OFFCURVE",
"224 37 OFFCURVE",
"224 39 CURVE SMOOTH",
"224 43.667 OFFCURVE",
"221.333 45.333 OFFCURVE",
"216 44 CURVE SMOOTH",
"209 43 LINE SMOOTH",
"197 43 OFFCURVE",
"187.667 49 OFFCURVE",
"181 61 CURVE SMOOTH",
"174.333 71 OFFCURVE",
"171.333 84 OFFCURVE",
"172 100 CURVE SMOOTH",
"172 114 OFFCURVE",
"176 132 OFFCURVE",
"184 154 CURVE",
"204 156.667 OFFCURVE",
"225.333 158 OFFCURVE",
"248 158 CURVE SMOOTH",
"306.667 158 OFFCURVE",
"349 149.667 OFFCURVE",
"375 133 CURVE",
"378.333 131.667 OFFCURVE",
"381.667 131 OFFCURVE",
"385 131 CURVE SMOOTH",
"389 131 OFFCURVE",
"390 133 OFFCURVE",
"388 137 CURVE SMOOTH",
"372 163 OFFCURVE",
"327.333 176 OFFCURVE",
"254 176 CURVE SMOOTH",
"233.333 176 OFFCURVE",
"212.333 174.333 OFFCURVE",
"191 171 CURVE",
"208.333 212.333 OFFCURVE",
"234.333 260 OFFCURVE",
"269 314 CURVE SMOOTH",
"299 360.667 OFFCURVE",
"320.667 390.667 OFFCURVE",
"334 404 CURVE SMOOTH",
"336.667 406.667 OFFCURVE",
"338 409 OFFCURVE",
"338 411 CURVE SMOOTH",
"338 415.667 OFFCURVE",
"332.667 418 OFFCURVE",
"322 418 CURVE SMOOTH",
"308 418 OFFCURVE",
"297.667 413.333 OFFCURVE",
"291 404 CURVE SMOOTH",
"229 316.667 OFFCURVE",
"186.667 237.667 OFFCURVE",
"164 167 CURVE",
"152.667 165 OFFCURVE",
"142.667 162.333 OFFCURVE",
"134 159 CURVE",
"173.333 238.333 OFFCURVE",
"197.667 303.333 OFFCURVE",
"207 354 CURVE SMOOTH",
"211.667 380 OFFCURVE",
"212.667 403 OFFCURVE",
"210 423 CURVE",
"314 448 LINE SMOOTH",
"355.333 456.667 OFFCURVE",
"390.667 461 OFFCURVE",
"420 461 CURVE SMOOTH",
"472.667 461 OFFCURVE",
"499 448.333 OFFCURVE",
"499 423 CURVE SMOOTH",
"499 403 OFFCURVE",
"484 378.333 OFFCURVE",
"454 349 CURVE SMOOTH",
"417.333 311.667 OFFCURVE",
"376 285.667 OFFCURVE",
"330 271 CURVE",
"325.333 273 OFFCURVE",
"318 273.333 OFFCURVE",
"308 272 CURVE SMOOTH",
"290.667 270.667 OFFCURVE",
"277 252.667 OFFCURVE",
"277 242 CURVE SMOOTH",
"277 237.333 OFFCURVE",
"279.333 235.667 OFFCURVE",
"284 237 CURVE SMOOTH",
"306.667 243 OFFCURVE",
"330.667 246 OFFCURVE",
"356 246 CURVE SMOOTH",
"398 246 OFFCURVE",
"434 238.333 OFFCURVE",
"464 223 CURVE SMOOTH",
"496 205.667 OFFCURVE",
"512 183 OFFCURVE",
"512 155 CURVE SMOOTH",
"512 131.667 OFFCURVE",
"500.667 106.667 OFFCURVE",
"478 80 CURVE SMOOTH",
"450.667 46.667 OFFCURVE",
"411.667 19 OFFCURVE",
"361 -3 CURVE SMOOTH",
"303.667 -27 OFFCURVE",
"241.667 -39 OFFCURVE",
"175 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"75.333 432 OFFCURVE",
"59 438.333 OFFCURVE",
"59 453 CURVE SMOOTH",
"59 455.667 OFFCURVE",
"60 458.667 OFFCURVE",
"62 462 CURVE SMOOTH",
"73.333 486.667 OFFCURVE",
"93 499 OFFCURVE",
"121 499 CURVE SMOOTH",
"155.667 499 OFFCURVE",
"179 480.667 OFFCURVE",
"191 444 CURVE",
"154.333 438 OFFCURVE",
"126.667 434.667 OFFCURVE",
"108 434 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 7 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012139 8 88 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012123 113 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0126 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 88 122 88 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01271 88 139 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\012151 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01214 123 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 57 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012145 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012154 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012135 2 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012128 119 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01232 54 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012147 2 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01240 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01259 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012147 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 591;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{237, -32}";
},
{
name = top;
position = "{520, 467}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"631.667 373 OFFCURVE",
"636 389.667 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432.333 OFFCURVE",
"626.333 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584.333 488.333 OFFCURVE",
"549.667 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"418.333 498 OFFCURVE",
"334.667 478.667 OFFCURVE",
"252 440 CURVE",
"209.333 454 OFFCURVE",
"169 460 OFFCURVE",
"131 458 CURVE SMOOTH",
"91.667 456 OFFCURVE",
"57.667 444.333 OFFCURVE",
"29 423 CURVE SMOOTH",
"-3 399.667 OFFCURVE",
"-19 369.333 OFFCURVE",
"-19 332 CURVE SMOOTH",
"-19 293.333 OFFCURVE",
"-2.333 264 OFFCURVE",
"31 244 CURVE",
"-45 96 OFFCURVE",
"45 -32 OFFCURVE",
"237 -32 CURVE SMOOTH",
"256.333 -32 OFFCURVE",
"276.667 -30.667 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23.333 OFFCURVE",
"379.333 -12.667 OFFCURVE",
"428 4 CURVE SMOOTH",
"486.667 24.667 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 73.667 OFFCURVE",
"561.667 76.667 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"561.667 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"557.667 86 OFFCURVE",
"555.667 84.667 OFFCURVE",
"553 82 CURVE SMOOTH",
"519.667 51.333 OFFCURVE",
"474.667 28.667 OFFCURVE",
"418 14 CURVE SMOOTH",
"386.667 6.667 OFFCURVE",
"346 0.667 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"260.667 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109.333 -7 OFFCURVE",
"23 46.667 OFFCURVE",
"23 132 CURVE SMOOTH",
"23 162.667 OFFCURVE",
"33.333 195.667 OFFCURVE",
"54 231 CURVE",
"78.667 221.667 OFFCURVE",
"106 217 OFFCURVE",
"136 217 CURVE SMOOTH",
"177.333 217 OFFCURVE",
"212 227 OFFCURVE",
"220 243 CURVE SMOOTH",
"221.333 245 OFFCURVE",
"220.667 246.667 OFFCURVE",
"218 248 CURVE SMOOTH",
"216 249.333 OFFCURVE",
"214.667 249 OFFCURVE",
"214 247 CURVE SMOOTH",
"206.667 233 OFFCURVE",
"184.333 226 OFFCURVE",
"147 226 CURVE SMOOTH",
"116.333 226 OFFCURVE",
"87.667 231.667 OFFCURVE",
"61 243 CURVE",
"67.667 253.667 OFFCURVE",
"75.333 264 OFFCURVE",
"84 274 CURVE SMOOTH",
"131.333 336 OFFCURVE",
"196 385 OFFCURVE",
"278 421 CURVE",
"312.667 407.667 OFFCURVE",
"346.333 389.333 OFFCURVE",
"379 366 CURVE SMOOTH",
"395 354.667 OFFCURVE",
"411.333 340 OFFCURVE",
"428 322 CURVE SMOOTH",
"452 294.667 OFFCURVE",
"464 271.667 OFFCURVE",
"464 253 CURVE SMOOTH",
"464 246.333 OFFCURVE",
"462.333 240 OFFCURVE",
"459 234 CURVE",
"455.667 232 OFFCURVE",
"454 230 OFFCURVE",
"454 228 CURVE SMOOTH",
"453.333 225.333 OFFCURVE",
"454 224 OFFCURVE",
"456 224 CURVE SMOOTH",
"458 224 OFFCURVE",
"460.667 224.667 OFFCURVE",
"464 226 CURVE",
"465 227 LINE",
"543.667 264.333 OFFCURVE",
"596.333 307.667 OFFCURVE",
"623 357 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"7 274.667 OFFCURVE",
"-8.333 299.667 OFFCURVE",
"-9 331 CURVE SMOOTH",
"-10.333 365 OFFCURVE",
"4.667 392.667 OFFCURVE",
"36 414 CURVE SMOOTH",
"63.333 432 OFFCURVE",
"95 442.333 OFFCURVE",
"131 445 CURVE SMOOTH",
"165.667 447 OFFCURVE",
"201.333 443.333 OFFCURVE",
"238 434 CURVE",
"165.333 397.333 OFFCURVE",
"107.667 352 OFFCURVE",
"65 298 CURVE SMOOTH",
"54.333 284 OFFCURVE",
"45 270 OFFCURVE",
"37 256 CURVE"
);
},
{
closed = 1;
nodes = (
"475.667 247.333 OFFCURVE",
"476 250.667 OFFCURVE",
"476 254 CURVE SMOOTH",
"476 272 OFFCURVE",
"464.667 294 OFFCURVE",
"442 320 CURVE SMOOTH",
"424.667 339.333 OFFCURVE",
"405.333 356.667 OFFCURVE",
"384 372 CURVE SMOOTH",
"353.333 394 OFFCURVE",
"321.667 412 OFFCURVE",
"289 426 CURVE",
"356.333 453.333 OFFCURVE",
"420.333 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"519.667 467 OFFCURVE",
"550.667 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 435.667 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380.333 OFFCURVE",
"606.667 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 303.667 OFFCURVE",
"540 283 CURVE SMOOTH",
"526 273 OFFCURVE",
"504.333 260 OFFCURVE",
"475 244 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012106 5 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01271 4 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 4 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 541;
}
);
note = C;
unicode = 0043;
},
{
glyphname = Cacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 472, 189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 340, 292}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 010C;
},
{
glyphname = Ccedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 34, -39}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 382, 114}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 0108;
},
{
glyphname = Cdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 45, -520}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 010A;
},
{
glyphname = D;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"457.667 -88.333 OFFCURVE",
"488.333 -77.333 OFFCURVE",
"511 -56 CURVE SMOOTH",
"532.333 -36 OFFCURVE",
"543 -11 OFFCURVE",
"543 19 CURVE SMOOTH",
"543 30.333 OFFCURVE",
"541.333 41.667 OFFCURVE",
"538 53 CURVE",
"587.333 75.667 OFFCURVE",
"630.667 103 OFFCURVE",
"668 135 CURVE SMOOTH",
"721.333 181.667 OFFCURVE",
"755 243.333 OFFCURVE",
"755 302 CURVE SMOOTH",
"755 356.667 OFFCURVE",
"727.667 400 OFFCURVE",
"673 432 CURVE SMOOTH",
"626.333 458.667 OFFCURVE",
"562.333 472 OFFCURVE",
"481 472 CURVE SMOOTH",
"429 472 OFFCURVE",
"370.667 466.333 OFFCURVE",
"306 455 CURVE SMOOTH",
"264.667 447.667 OFFCURVE",
"225.667 442.333 OFFCURVE",
"189 439 CURVE",
"179 483.667 OFFCURVE",
"153.333 506 OFFCURVE",
"112 506 CURVE SMOOTH",
"68 506 OFFCURVE",
"29 476 OFFCURVE",
"29 444 CURVE SMOOTH",
"29 416.667 OFFCURVE",
"58.667 403 OFFCURVE",
"118 403 CURVE SMOOTH",
"135.333 403 OFFCURVE",
"155.667 404.333 OFFCURVE",
"179 407 CURVE",
"183 352.333 OFFCURVE",
"169.333 283.333 OFFCURVE",
"138 200 CURVE",
"58 177.333 OFFCURVE",
"2 125 OFFCURVE",
"2 77 CURVE SMOOTH",
"2 51 OFFCURVE",
"17.333 30 OFFCURVE",
"48 14 CURVE",
"40.667 0.667 OFFCURVE",
"32.667 -12.667 OFFCURVE",
"24 -26 CURVE",
"23.333 -28.667 OFFCURVE",
"24 -30.333 OFFCURVE",
"26 -31 CURVE SMOOTH",
"28 -32.333 OFFCURVE",
"29.667 -32 OFFCURVE",
"31 -30 CURVE SMOOTH",
"39.667 -17.333 OFFCURVE",
"48 -4.333 OFFCURVE",
"56 9 CURVE",
"94.667 -8.333 OFFCURVE",
"148.333 -17 OFFCURVE",
"217 -17 CURVE SMOOTH",
"325 -17 OFFCURVE",
"427.667 4.333 OFFCURVE",
"525 47 CURVE",
"528.333 35.667 OFFCURVE",
"530 24.667 OFFCURVE",
"530 14 CURVE SMOOTH",
"530 -40.667 OFFCURVE",
"488.333 -81 OFFCURVE",
"419 -81 CURVE SMOOTH",
"400.333 -81.667 OFFCURVE",
"383 -77.333 OFFCURVE",
"367 -68 CURVE SMOOTH",
"352.333 -60 OFFCURVE",
"343.667 -51 OFFCURVE",
"341 -41 CURVE",
"339.667 -39 OFFCURVE",
"338 -38.333 OFFCURVE",
"336 -39 CURVE SMOOTH",
"333.333 -39.667 OFFCURVE",
"332.333 -41.333 OFFCURVE",
"333 -44 CURVE SMOOTH",
"341 -66.667 OFFCURVE",
"379 -89 OFFCURVE",
"419 -89 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"40 41.667 OFFCURVE",
"31 55 OFFCURVE",
"31 71 CURVE SMOOTH",
"31 103 OFFCURVE",
"68.333 140 OFFCURVE",
"123 164 CURVE",
"105 120.667 OFFCURVE",
"83.333 76.333 OFFCURVE",
"58 31 CURVE"
);
},
{
closed = 1;
nodes = (
"142.667 3 OFFCURVE",
"96.667 10.667 OFFCURVE",
"66 26 CURVE",
"94 74 OFFCURVE",
"118 122 OFFCURVE",
"138 170 CURVE",
"148 173.333 OFFCURVE",
"158 176.333 OFFCURVE",
"168 179 CURVE",
"156.667 146.333 OFFCURVE",
"151.333 119 OFFCURVE",
"152 97 CURVE SMOOTH",
"153.333 57 OFFCURVE",
"177.667 32.333 OFFCURVE",
"219 35 CURVE SMOOTH",
"222.333 35.667 OFFCURVE",
"224 37 OFFCURVE",
"224 39 CURVE SMOOTH",
"224 43.667 OFFCURVE",
"221.333 45.333 OFFCURVE",
"216 44 CURVE SMOOTH",
"209 43 LINE SMOOTH",
"197 43 OFFCURVE",
"187.667 49 OFFCURVE",
"181 61 CURVE SMOOTH",
"174.333 71 OFFCURVE",
"171.333 84 OFFCURVE",
"172 100 CURVE SMOOTH",
"172.667 120 OFFCURVE",
"181.333 148.667 OFFCURVE",
"198 186 CURVE",
"217.333 189.333 OFFCURVE",
"238.333 191 OFFCURVE",
"261 191 CURVE SMOOTH",
"334.333 191 OFFCURVE",
"409.667 170.333 OFFCURVE",
"451 141 CURVE SMOOTH",
"479 121.667 OFFCURVE",
"499.667 99.333 OFFCURVE",
"513 74 CURVE",
"415 26.667 OFFCURVE",
"312 3 OFFCURVE",
"204 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"68.667 436 OFFCURVE",
"58 444.667 OFFCURVE",
"58 460 CURVE SMOOTH",
"58 478.667 OFFCURVE",
"79.333 494 OFFCURVE",
"114 494 CURVE SMOOTH",
"145.333 494 OFFCURVE",
"165.667 475.333 OFFCURVE",
"175 438 CURVE",
"137.667 434 OFFCURVE",
"109.333 432.667 OFFCURVE",
"90 434 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"512.333 109 OFFCURVE",
"489.667 133.333 OFFCURVE",
"459 154 CURVE SMOOTH",
"433 171.333 OFFCURVE",
"401 185.667 OFFCURVE",
"363 197 CURVE SMOOTH",
"321.667 208.333 OFFCURVE",
"281 214 OFFCURVE",
"241 214 CURVE SMOOTH",
"231 214 OFFCURVE",
"221 213.667 OFFCURVE",
"211 213 CURVE",
"229.667 251 OFFCURVE",
"253.333 291 OFFCURVE",
"282 333 CURVE SMOOTH",
"306 370.333 OFFCURVE",
"323.333 394 OFFCURVE",
"334 404 CURVE SMOOTH",
"336.667 406.667 OFFCURVE",
"338 409 OFFCURVE",
"338 411 CURVE SMOOTH",
"338 415.667 OFFCURVE",
"332.667 418 OFFCURVE",
"322 418 CURVE SMOOTH",
"308 418 OFFCURVE",
"297.667 413.333 OFFCURVE",
"291 404 CURVE SMOOTH",
"243 337.333 OFFCURVE",
"206 272.333 OFFCURVE",
"180 209 CURVE",
"170.667 208.333 OFFCURVE",
"161.333 206.667 OFFCURVE",
"152 204 CURVE",
"183.333 286 OFFCURVE",
"197 354 OFFCURVE",
"193 408 CURVE",
"229.667 413.333 OFFCURVE",
"271.333 421 OFFCURVE",
"318 431 CURVE SMOOTH",
"388.667 447 OFFCURVE",
"448.333 455 OFFCURVE",
"497 455 CURVE SMOOTH",
"629 455 OFFCURVE",
"719 400 OFFCURVE",
"719 312 CURVE SMOOTH",
"719 257.333 OFFCURVE",
"684.333 195.333 OFFCURVE",
"631 150 CURVE SMOOTH",
"600.333 124 OFFCURVE",
"565.667 101 OFFCURVE",
"527 81 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01235 8 108 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 7 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012131 6 50 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 6 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01267 8 124 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01228 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01232 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 35 117 35 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01244 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012111 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 124 122 124 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012133 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0122 78 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 3 127 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01257 52 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 4 9 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01296 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012133 9 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 741;
}
);
note = D;
unicode = 0044;
},
{
glyphname = DZcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 674, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1217;
}
);
unicode = 01C4;
},
{
glyphname = Eth;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 45, -15}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, 345, 266}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 010E;
},
{
glyphname = Dcroat;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 0110;
},
{
glyphname = Dzcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 704, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1002;
}
);
unicode = 01C5;
},
{
glyphname = E;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{155, -37}";
},
{
name = ogonek;
position = "{261, -30}";
},
{
name = top;
position = "{470, 441}";
},
{
name = topleft;
position = "{423, 478}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"487.667 132.667 OFFCURVE",
"486.667 136 OFFCURVE",
"484 136 CURVE SMOOTH",
"481.333 136 OFFCURVE",
"479.667 133.333 OFFCURVE",
"479 128 CURVE SMOOTH",
"476.333 94 OFFCURVE",
"452 63 OFFCURVE",
"406 35 CURVE SMOOTH",
"362.667 9 OFFCURVE",
"312 -8 OFFCURVE",
"254 -16 CURVE SMOOTH",
"237.333 -18.667 OFFCURVE",
"220.667 -20 OFFCURVE",
"204 -20 CURVE SMOOTH",
"155.333 -20 OFFCURVE",
"116.333 -9.333 OFFCURVE",
"87 12 CURVE SMOOTH",
"59.667 32 OFFCURVE",
"46 57 OFFCURVE",
"46 87 CURVE SMOOTH",
"46 101 OFFCURVE",
"49.667 115 OFFCURVE",
"57 129 CURVE",
"73.667 115.667 OFFCURVE",
"95.667 109 OFFCURVE",
"123 109 CURVE SMOOTH",
"142.333 109 OFFCURVE",
"161.667 112.333 OFFCURVE",
"181 119 CURVE SMOOTH",
"194.333 123.667 OFFCURVE",
"208.333 131.667 OFFCURVE",
"223 143 CURVE SMOOTH",
"240.333 157 OFFCURVE",
"249 170.333 OFFCURVE",
"249 183 CURVE SMOOTH",
"249 187 OFFCURVE",
"248 191 OFFCURVE",
"246 195 CURVE SMOOTH",
"244.667 197 OFFCURVE",
"243.667 198 OFFCURVE",
"243 198 CURVE",
"241 196.667 OFFCURVE",
"240.667 195 OFFCURVE",
"242 193 CURVE SMOOTH",
"243.333 190.333 OFFCURVE",
"244 187.333 OFFCURVE",
"244 184 CURVE SMOOTH",
"244 173.333 OFFCURVE",
"235 161.667 OFFCURVE",
"217 149 CURVE SMOOTH",
"186.333 127.667 OFFCURVE",
"164.333 124 OFFCURVE",
"139 124 CURVE SMOOTH",
"109 124 OFFCURVE",
"85.333 132 OFFCURVE",
"68 148 CURVE",
"95.333 185.333 OFFCURVE",
"142 212.333 OFFCURVE",
"208 229 CURVE SMOOTH",
"265.333 244.333 OFFCURVE",
"319.667 251 OFFCURVE",
"371 249 CURVE SMOOTH",
"387 248.333 OFFCURVE",
"395 252.667 OFFCURVE",
"395 262 CURVE SMOOTH",
"395 270.667 OFFCURVE",
"388 274.667 OFFCURVE",
"374 274 CURVE SMOOTH",
"332 272 OFFCURVE",
"293.667 277 OFFCURVE",
"259 289 CURVE SMOOTH",
"219 302.333 OFFCURVE",
"200.333 321 OFFCURVE",
"203 345 CURVE SMOOTH",
"204.333 360.333 OFFCURVE",
"210.333 375.333 OFFCURVE",
"221 390 CURVE",
"257 405.333 OFFCURVE",
"291.667 415.667 OFFCURVE",
"325 421 CURVE SMOOTH",
"340.333 423.667 OFFCURVE",
"361.333 425 OFFCURVE",
"388 425 CURVE SMOOTH",
"448.667 425 OFFCURVE",
"479 415.333 OFFCURVE",
"479 396 CURVE SMOOTH",
"479 389.333 OFFCURVE",
"475.667 384.667 OFFCURVE",
"469 382 CURVE",
"463 382 OFFCURVE",
"460 380 OFFCURVE",
"460 376 CURVE SMOOTH",
"460 374 OFFCURVE",
"461.667 373 OFFCURVE",
"465 373 CURVE SMOOTH",
"467 373 LINE",
"471 373 LINE",
"508.333 378.333 OFFCURVE",
"530 402.667 OFFCURVE",
"530 428 CURVE SMOOTH",
"530 445.333 OFFCURVE",
"521.333 460 OFFCURVE",
"504 472 CURVE SMOOTH",
"485.333 485.333 OFFCURVE",
"459 492 OFFCURVE",
"425 492 CURVE SMOOTH",
"397 492 OFFCURVE",
"365 487.333 OFFCURVE",
"329 478 CURVE SMOOTH",
"249 455.333 OFFCURVE",
"197.333 422.333 OFFCURVE",
"174 379 CURVE",
"77.333 327 OFFCURVE",
"29 263.667 OFFCURVE",
"29 189 CURVE SMOOTH",
"29 177.667 OFFCURVE",
"31.333 167.333 OFFCURVE",
"36 158 CURVE",
"11.333 128 OFFCURVE",
"1.333 97.667 OFFCURVE",
"6 67 CURVE SMOOTH",
"10.667 36.333 OFFCURVE",
"29 11.667 OFFCURVE",
"61 -7 CURVE SMOOTH",
"94.333 -27.667 OFFCURVE",
"137.667 -38 OFFCURVE",
"191 -38 CURVE SMOOTH",
"209 -38 OFFCURVE",
"227.333 -36.667 OFFCURVE",
"246 -34 CURVE SMOOTH",
"309.333 -26.667 OFFCURVE",
"363.667 -9 OFFCURVE",
"409 19 CURVE SMOOTH",
"459 50.333 OFFCURVE",
"485 86 OFFCURVE",
"487 126 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"46.667 181.667 OFFCURVE",
"45 191.333 OFFCURVE",
"45 202 CURVE SMOOTH",
"45 263.333 OFFCURVE",
"86 317.333 OFFCURVE",
"168 364 CURVE",
"166 358.667 OFFCURVE",
"164.667 353.667 OFFCURVE",
"164 349 CURVE SMOOTH",
"160 305 OFFCURVE",
"217 268.667 OFFCURVE",
"281 270 CURVE",
"225.667 258.667 OFFCURVE",
"195.667 252.333 OFFCURVE",
"191 251 CURVE SMOOTH",
"130.333 231.667 OFFCURVE",
"83.333 205.667 OFFCURVE",
"50 173 CURVE"
);
},
{
closed = 1;
nodes = (
"484.333 388 OFFCURVE",
"486 392 OFFCURVE",
"486 396 CURVE SMOOTH",
"486 422 OFFCURVE",
"450.333 435 OFFCURVE",
"379 435 CURVE SMOOTH",
"355.667 435 OFFCURVE",
"337.333 434 OFFCURVE",
"324 432 CURVE SMOOTH",
"295.333 426.667 OFFCURVE",
"266.333 418.667 OFFCURVE",
"237 408 CURVE",
"285 456 OFFCURVE",
"371 478 OFFCURVE",
"423 478 CURVE SMOOTH",
"450.333 478 OFFCURVE",
"470.667 472 OFFCURVE",
"484 460 CURVE SMOOTH",
"495.333 450.667 OFFCURVE",
"501 438.333 OFFCURVE",
"501 423 CURVE SMOOTH",
"501 403 OFFCURVE",
"494.333 390 OFFCURVE",
"481 384 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 7 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 8 66 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 66 122 66 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0120 66 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0129 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01221 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01299 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012115 3 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01288 1 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 4 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 496;
}
);
note = E;
unicode = 0045;
},
{
glyphname = Eacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 374, 192}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 343, 112}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0114;
},
{
glyphname = Ecaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 265, 281}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 011A;
},
{
glyphname = Ecircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 279, 183}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 295, 113}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 58, -502}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 291, 116}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 302, 111}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 284, 111}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 296, 107}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC4;
},
{
glyphname = Edblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 319, 102}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0204;
},
{
glyphname = Edieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 381, 260}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 380, 117}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 66, -502}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EB8;
},
{
glyphname = Egrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, 335, 173}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Ehookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 375, 91}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 333, 100}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0206;
},
{
glyphname = Emacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 304, 148}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0112;
},
{
glyphname = Eogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 27, -36}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 309, 107}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBC;
},
{
glyphname = F;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"326.667 -61.667 OFFCURVE",
"479.333 39.333 OFFCURVE",
"558 218 CURVE",
"565.333 217.333 OFFCURVE",
"580.667 214.667 OFFCURVE",
"604 210 CURVE SMOOTH",
"624.667 206 OFFCURVE",
"639.667 204 OFFCURVE",
"649 204 CURVE SMOOTH",
"659.667 204 OFFCURVE",
"659.667 207 OFFCURVE",
"649 213 CURVE SMOOTH",
"639 218.333 OFFCURVE",
"625.667 222 OFFCURVE",
"609 224 CURVE SMOOTH",
"563 233 LINE",
"599 308.333 OFFCURVE",
"626 364.667 OFFCURVE",
"644 402 CURVE",
"710 383 LINE SMOOTH",
"736.667 376.333 OFFCURVE",
"759.333 373 OFFCURVE",
"778 373 CURVE SMOOTH",
"800.667 373 OFFCURVE",
"816.333 379.667 OFFCURVE",
"825 393 CURVE SMOOTH",
"825.667 393.667 OFFCURVE",
"826 394.667 OFFCURVE",
"826 396 CURVE SMOOTH",
"826 399.333 OFFCURVE",
"824 401 OFFCURVE",
"820 401 CURVE SMOOTH",
"818.667 401 OFFCURVE",
"817.333 400.333 OFFCURVE",
"816 399 CURVE",
"811.333 391 OFFCURVE",
"803 387 OFFCURVE",
"791 387 CURVE SMOOTH",
"787.667 387 OFFCURVE",
"777 388.333 OFFCURVE",
"759 391 CURVE SMOOTH",
"743.667 393 OFFCURVE",
"726 397 OFFCURVE",
"706 403 CURVE SMOOTH",
"653 419 LINE",
"654 421 LINE SMOOTH",
"655.333 423.667 OFFCURVE",
"656 426.333 OFFCURVE",
"656 429 CURVE SMOOTH",
"656 437 OFFCURVE",
"651.667 441 OFFCURVE",
"643 441 CURVE SMOOTH",
"635 440.333 OFFCURVE",
"627.333 436.333 OFFCURVE",
"620 429 CURVE",
"594 435.667 OFFCURVE",
"567 441.667 OFFCURVE",
"539 447 CURVE",
"537.667 482.333 OFFCURVE",
"527.667 510 OFFCURVE",
"509 530 CURVE SMOOTH",
"492.333 548 OFFCURVE",
"472 557 OFFCURVE",
"448 557 CURVE SMOOTH",
"424.667 557 OFFCURVE",
"403.333 549.333 OFFCURVE",
"384 534 CURVE SMOOTH",
"363.333 517.333 OFFCURVE",
"348.667 494.667 OFFCURVE",
"340 466 CURVE",
"284 465.333 OFFCURVE",
"237 458.667 OFFCURVE",
"199 446 CURVE SMOOTH",
"145 428 OFFCURVE",
"105.667 405.333 OFFCURVE",
"81 378 CURVE SMOOTH",
"59 353.333 OFFCURVE",
"52.333 330.333 OFFCURVE",
"61 309 CURVE SMOOTH",
"69.667 289 OFFCURVE",
"89.667 279 OFFCURVE",
"121 279 CURVE SMOOTH",
"135 279 OFFCURVE",
"150 281.333 OFFCURVE",
"166 286 CURVE SMOOTH",
"174.667 288.667 OFFCURVE",
"179 291.667 OFFCURVE",
"179 295 CURVE SMOOTH",
"179 297 OFFCURVE",
"177 298 OFFCURVE",
"173 298 CURVE SMOOTH",
"164 297 LINE",
"150.667 293 OFFCURVE",
"138.667 291 OFFCURVE",
"128 291 CURVE SMOOTH",
"102.667 291 OFFCURVE",
"90 300 OFFCURVE",
"90 318 CURVE SMOOTH",
"90 332 OFFCURVE",
"99.333 347 OFFCURVE",
"118 363 CURVE SMOOTH",
"162 400.333 OFFCURVE",
"240.667 428 OFFCURVE",
"334 436 CURVE",
"333.333 430.667 OFFCURVE",
"333 425 OFFCURVE",
"333 419 CURVE SMOOTH",
"333 391.667 OFFCURVE",
"340 365 OFFCURVE",
"354 339 CURVE SMOOTH",
"368.667 312.333 OFFCURVE",
"390 289.667 OFFCURVE",
"418 271 CURVE",
"419.333 269 OFFCURVE",
"420.667 269 OFFCURVE",
"422 271 CURVE SMOOTH",
"423.333 273 OFFCURVE",
"423 274.667 OFFCURVE",
"421 276 CURVE SMOOTH",
"373 309.333 OFFCURVE",
"349 355 OFFCURVE",
"349 413 CURVE SMOOTH",
"349 421 OFFCURVE",
"349.667 429.333 OFFCURVE",
"351 438 CURVE",
"407 441.333 OFFCURVE",
"464.667 438.333 OFFCURVE",
"524 429 CURVE",
"522.667 371.667 OFFCURVE",
"505.667 308.667 OFFCURVE",
"473 240 CURVE",
"453 240.667 OFFCURVE",
"434 241 OFFCURVE",
"416 241 CURVE SMOOTH",
"350.667 241 OFFCURVE",
"308.667 236 OFFCURVE",
"290 226 CURVE SMOOTH",
"283.333 222 OFFCURVE",
"276 215.667 OFFCURVE",
"268 207 CURVE SMOOTH",
"258.667 197 OFFCURVE",
"257.333 192 OFFCURVE",
"264 192 CURVE SMOOTH",
"266.667 192 OFFCURVE",
"271 192.667 OFFCURVE",
"277 194 CURVE SMOOTH",
"305 203.333 OFFCURVE",
"397.667 217 OFFCURVE",
"463 221 CURVE",
"427.667 153.667 OFFCURVE",
"385.333 99.667 OFFCURVE",
"336 59 CURVE SMOOTH",
"280.667 13 OFFCURVE",
"223.333 -9.333 OFFCURVE",
"164 -8 CURVE SMOOTH",
"162 -8 OFFCURVE",
"160.667 -9 OFFCURVE",
"160 -11 CURVE SMOOTH",
"159.333 -13 OFFCURVE",
"160.333 -14.333 OFFCURVE",
"163 -15 CURVE",
"226.333 -18.333 OFFCURVE",
"287.667 4 OFFCURVE",
"347 52 CURVE SMOOTH",
"399.667 94.667 OFFCURVE",
"444.333 151 OFFCURVE",
"481 221 CURVE",
"497.667 221.667 OFFCURVE",
"510.333 221 OFFCURVE",
"519 219 CURVE",
"480.333 135 OFFCURVE",
"432.667 72.333 OFFCURVE",
"376 31 CURVE SMOOTH",
"310.667 -16.333 OFFCURVE",
"229.667 -39.333 OFFCURVE",
"133 -38 CURVE SMOOTH",
"97 -38 OFFCURVE",
"69.667 -31.667 OFFCURVE",
"51 -19 CURVE SMOOTH",
"35 -9 OFFCURVE",
"27 4.333 OFFCURVE",
"27 21 CURVE SMOOTH",
"27 32.333 OFFCURVE",
"31 44 OFFCURVE",
"39 56 CURVE SMOOTH",
"73.667 105.333 OFFCURVE",
"142.333 129.333 OFFCURVE",
"245 128 CURVE SMOOTH",
"290.333 126.667 OFFCURVE",
"316.667 124.333 OFFCURVE",
"324 121 CURVE SMOOTH",
"328 119 OFFCURVE",
"331.333 118 OFFCURVE",
"334 118 CURVE SMOOTH",
"336.667 118 OFFCURVE",
"338 118.667 OFFCURVE",
"338 120 CURVE SMOOTH",
"338 123.333 OFFCURVE",
"333.667 127 OFFCURVE",
"325 131 CURVE SMOOTH",
"308.333 139 OFFCURVE",
"281.333 143.333 OFFCURVE",
"244 144 CURVE SMOOTH",
"118 145.333 OFFCURVE",
"40 117.667 OFFCURVE",
"10 61 CURVE SMOOTH",
"3.333 49 OFFCURVE",
"0 37 OFFCURVE",
"0 25 CURVE SMOOTH",
"0 1.667 OFFCURVE",
"11.667 -17.667 OFFCURVE",
"35 -33 CURVE SMOOTH",
"60.333 -49.667 OFFCURVE",
"96.667 -58.333 OFFCURVE",
"144 -59 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"517 237.333 OFFCURVE",
"503.667 238.333 OFFCURVE",
"489 239 CURVE",
"521.667 306.333 OFFCURVE",
"538.667 368.667 OFFCURVE",
"540 426 CURVE",
"562.667 422.667 OFFCURVE",
"585 418.333 OFFCURVE",
"607 413 CURVE",
"595 394.333 OFFCURVE",
"580.333 363 OFFCURVE",
"563 319 CURVE SMOOTH",
"545 271.667 OFFCURVE",
"533.667 244 OFFCURVE",
"529 236 CURVE"
);
},
{
closed = 1;
nodes = (
"465.333 460 OFFCURVE",
"409.667 465.333 OFFCURVE",
"357 466 CURVE",
"365 493.333 OFFCURVE",
"377.667 514.667 OFFCURVE",
"395 530 CURVE SMOOTH",
"411 544 OFFCURVE",
"428.667 551 OFFCURVE",
"448 551 CURVE SMOOTH",
"468 551 OFFCURVE",
"485 542.667 OFFCURVE",
"499 526 CURVE SMOOTH",
"514.333 507.333 OFFCURVE",
"522.667 482 OFFCURVE",
"524 450 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01277 5 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012118 7 128 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 7 114 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 77 117 77 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01299 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012124 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01248 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012106 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012159 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012159 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 4 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 2 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012159 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 116 233 116 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 116 24 116 40 116 56 116 72 116 88 116 104 116 120 116 136 116 152 116 168 116 184 116 200 116 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01216 48 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012124 48 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 668;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"308.667 -41 OFFCURVE",
"385.333 -21.333 OFFCURVE",
"458 18 CURVE SMOOTH",
"532.667 58.667 OFFCURVE",
"570 103.667 OFFCURVE",
"570 153 CURVE SMOOTH",
"570 171.667 OFFCURVE",
"564.333 186.667 OFFCURVE",
"553 198 CURVE",
"590.333 195.333 OFFCURVE",
"626.333 188.667 OFFCURVE",
"661 178 CURVE",
"661.667 187.333 OFFCURVE",
"661.667 193 OFFCURVE",
"661 195 CURVE SMOOTH",
"659.667 199.667 OFFCURVE",
"655.667 203.333 OFFCURVE",
"649 206 CURVE SMOOTH",
"623.667 217.333 OFFCURVE",
"581 223 OFFCURVE",
"521 223 CURVE SMOOTH",
"488.333 223 OFFCURVE",
"452.333 221.333 OFFCURVE",
"413 218 CURVE SMOOTH",
"316.333 210 OFFCURVE",
"254 200.333 OFFCURVE",
"226 189 CURVE SMOOTH",
"216.667 185 OFFCURVE",
"205 161.333 OFFCURVE",
"209 148 CURVE",
"235.667 152.667 OFFCURVE",
"272.333 160.333 OFFCURVE",
"319 171 CURVE SMOOTH",
"360.333 180.333 OFFCURVE",
"393 186.667 OFFCURVE",
"417 190 CURVE SMOOTH",
"453 195.333 OFFCURVE",
"491.333 198 OFFCURVE",
"532 198 CURVE",
"540 132 OFFCURVE",
"514 78.333 OFFCURVE",
"454 37 CURVE SMOOTH",
"400 0.333 OFFCURVE",
"334.667 -18 OFFCURVE",
"258 -18 CURVE SMOOTH",
"200 -18 OFFCURVE",
"152.333 -6.667 OFFCURVE",
"115 16 CURVE SMOOTH",
"73.667 40.667 OFFCURVE",
"53 74.667 OFFCURVE",
"53 118 CURVE SMOOTH",
"53 180 OFFCURVE",
"78.333 238.333 OFFCURVE",
"129 293 CURVE",
"155.667 281.667 OFFCURVE",
"186.333 276 OFFCURVE",
"221 276 CURVE SMOOTH",
"263.667 276 OFFCURVE",
"301.333 286.333 OFFCURVE",
"308 301 CURVE SMOOTH",
"309.333 303 OFFCURVE",
"309 304.667 OFFCURVE",
"307 306 CURVE SMOOTH",
"305 308 OFFCURVE",
"303.333 307.667 OFFCURVE",
"302 305 CURVE SMOOTH",
"294.667 291.667 OFFCURVE",
"272 285 OFFCURVE",
"234 285 CURVE SMOOTH",
"199.333 285 OFFCURVE",
"168 291.333 OFFCURVE",
"140 304 CURVE",
"194 358.667 OFFCURVE",
"262 399 OFFCURVE",
"344 425 CURVE SMOOTH",
"372.667 433.667 OFFCURVE",
"406.667 441.667 OFFCURVE",
"446 449 CURVE",
"454.667 443.667 OFFCURVE",
"463.667 437.667 OFFCURVE",
"473 431 CURVE SMOOTH",
"491.667 417.667 OFFCURVE",
"509.333 400.667 OFFCURVE",
"526 380 CURVE SMOOTH",
"546 354 OFFCURVE",
"556 332 OFFCURVE",
"556 314 CURVE SMOOTH",
"556 306.667 OFFCURVE",
"554 300 OFFCURVE",
"550 294 CURVE",
"546 290.667 OFFCURVE",
"544.333 288 OFFCURVE",
"545 286 CURVE SMOOTH",
"545.667 283.333 OFFCURVE",
"550.333 284 OFFCURVE",
"559 288 CURVE",
"587 297.333 OFFCURVE",
"611.667 310.333 OFFCURVE",
"633 327 CURVE SMOOTH",
"660.333 347.667 OFFCURVE",
"674 369 OFFCURVE",
"674 391 CURVE SMOOTH",
"674 412.333 OFFCURVE",
"665.667 433.333 OFFCURVE",
"649 454 CURVE SMOOTH",
"628.333 480.667 OFFCURVE",
"592 494 OFFCURVE",
"540 494 CURVE SMOOTH",
"505.333 494 OFFCURVE",
"464 488 OFFCURVE",
"416 476 CURVE",
"349.333 508 OFFCURVE",
"285.667 522.333 OFFCURVE",
"225 519 CURVE SMOOTH",
"185 517 OFFCURVE",
"148.667 505 OFFCURVE",
"116 483 CURVE SMOOTH",
"78.667 457.667 OFFCURVE",
"60 427 OFFCURVE",
"60 391 CURVE SMOOTH",
"60 357.667 OFFCURVE",
"73 331 OFFCURVE",
"99 311 CURVE",
"48.333 255.667 OFFCURVE",
"23 195.667 OFFCURVE",
"23 131 CURVE SMOOTH",
"23 72.333 OFFCURVE",
"43.333 28.333 OFFCURVE",
"84 -1 CURVE SMOOTH",
"120 -27.667 OFFCURVE",
"168 -41 OFFCURVE",
"228 -41 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"88.333 340.333 OFFCURVE",
"76.667 362.333 OFFCURVE",
"76 389 CURVE SMOOTH",
"74.667 423 OFFCURVE",
"93.333 452 OFFCURVE",
"132 476 CURVE SMOOTH",
"166 496 OFFCURVE",
"201.333 506 OFFCURVE",
"238 506 CURVE SMOOTH",
"298 506 OFFCURVE",
"352.667 495 OFFCURVE",
"402 473 CURVE",
"382.667 467.667 OFFCURVE",
"361.667 461.333 OFFCURVE",
"339 454 CURVE SMOOTH",
"243.667 423.333 OFFCURVE",
"167.667 379.667 OFFCURVE",
"111 323 CURVE"
);
},
{
closed = 1;
nodes = (
"565.333 307.667 OFFCURVE",
"566 313 OFFCURVE",
"566 319 CURVE SMOOTH",
"566 337 OFFCURVE",
"557.667 357.667 OFFCURVE",
"541 381 CURVE SMOOTH",
"525.667 401.667 OFFCURVE",
"508 419.333 OFFCURVE",
"488 434 CURVE SMOOTH",
"460 452 LINE",
"495.333 458 OFFCURVE",
"526.333 461 OFFCURVE",
"553 461 CURVE SMOOTH",
"615.667 461 OFFCURVE",
"647 444 OFFCURVE",
"647 410 CURVE SMOOTH",
"647 394.667 OFFCURVE",
"636.667 374.667 OFFCURVE",
"616 350 CURVE SMOOTH",
"597.333 327.333 OFFCURVE",
"580 311.667 OFFCURVE",
"564 303 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 8 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 106 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 6 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 5 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01212 38 94 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 16 122 16 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01220 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01248 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01292 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01267 4 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 18 114 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 644;
}
);
note = G;
unicode = 0047;
},
{
glyphname = Gbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 475, 116}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 011E;
},
{
glyphname = Gcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 460, 132}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 01E6;
},
{
glyphname = Gcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 432, 101}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 011C;
},
{
glyphname = Gcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 510, 195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 0122;
},
{
glyphname = Gdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 497, 117}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 0120;
},
{
glyphname = H;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"254.333 -68 OFFCURVE",
"324.667 -45.333 OFFCURVE",
"388 0 CURVE SMOOTH",
"422.667 25.333 OFFCURVE",
"454.333 54 OFFCURVE",
"483 86 CURVE",
"508.333 87.333 OFFCURVE",
"532 96.333 OFFCURVE",
"554 113 CURVE SMOOTH",
"574 129 OFFCURVE",
"587.667 147.333 OFFCURVE",
"595 168 CURVE SMOOTH",
"595.667 170 OFFCURVE",
"595 171.667 OFFCURVE",
"593 173 CURVE",
"590.333 173.667 OFFCURVE",
"588.667 172.667 OFFCURVE",
"588 170 CURVE SMOOTH",
"581.333 152 OFFCURVE",
"569.333 135.667 OFFCURVE",
"552 121 CURVE SMOOTH",
"532.667 106.333 OFFCURVE",
"511.667 97.333 OFFCURVE",
"489 94 CURVE",
"525.667 136.667 OFFCURVE",
"557.333 186.333 OFFCURVE",
"584 243 CURVE",
"612 239.667 OFFCURVE",
"653.667 230.667 OFFCURVE",
"709 216 CURVE",
"689 150 OFFCURVE",
"679.667 96.333 OFFCURVE",
"681 55 CURVE SMOOTH",
"681 39.667 OFFCURVE",
"686 25.667 OFFCURVE",
"696 13 CURVE SMOOTH",
"706 -1.667 OFFCURVE",
"718.667 -9 OFFCURVE",
"734 -9 CURVE SMOOTH",
"744.667 -9 OFFCURVE",
"756 -5 OFFCURVE",
"768 3 CURVE SMOOTH",
"771.333 5.667 OFFCURVE",
"773 8.667 OFFCURVE",
"773 12 CURVE SMOOTH",
"773 14.667 OFFCURVE",
"772 16 OFFCURVE",
"770 16 CURVE SMOOTH",
"768.667 16 OFFCURVE",
"766.667 15 OFFCURVE",
"764 13 CURVE SMOOTH",
"754 5.667 OFFCURVE",
"745.333 2 OFFCURVE",
"738 2 CURVE SMOOTH",
"718 2 OFFCURVE",
"708 21.333 OFFCURVE",
"708 60 CURVE SMOOTH",
"708 73 LINE",
"712 109.667 OFFCURVE",
"723 154.667 OFFCURVE",
"741 208 CURVE",
"783 194.667 OFFCURVE",
"804 180 OFFCURVE",
"804 164 CURVE SMOOTH",
"804 159.333 OFFCURVE",
"802 154.5 OFFCURVE",
"798 149.5 CURVE SMOOTH",
"794 144.5 OFFCURVE",
"792 141 OFFCURVE",
"792 139 CURVE SMOOTH",
"792 137 OFFCURVE",
"792.667 136 OFFCURVE",
"794 136 CURVE SMOOTH",
"797.333 136 OFFCURVE",
"800.667 138 OFFCURVE",
"804 142 CURVE SMOOTH",
"813.333 151.333 OFFCURVE",
"818 160.667 OFFCURVE",
"818 170 CURVE SMOOTH",
"818 192 OFFCURVE",
"794.667 211.667 OFFCURVE",
"748 229 CURVE",
"769 284 LINE SMOOTH",
"787 328.667 OFFCURVE",
"812.667 375.333 OFFCURVE",
"846 424 CURVE SMOOTH",
"893.333 493.333 OFFCURVE",
"935.667 528 OFFCURVE",
"973 528 CURVE SMOOTH",
"988.333 528 OFFCURVE",
"1002.667 521.333 OFFCURVE",
"1016 508 CURVE SMOOTH",
"1020.667 503.333 OFFCURVE",
"1024 501 OFFCURVE",
"1026 501 CURVE SMOOTH",
"1028 501 OFFCURVE",
"1029 502.333 OFFCURVE",
"1029 505 CURVE SMOOTH",
"1029 512.333 OFFCURVE",
"1026 517.667 OFFCURVE",
"1020 521 CURVE SMOOTH",
"999.333 534.333 OFFCURVE",
"978 541 OFFCURVE",
"956 541 CURVE SMOOTH",
"907.333 541 OFFCURVE",
"860 508.667 OFFCURVE",
"814 444 CURVE SMOOTH",
"775.333 390 OFFCURVE",
"742.667 321.667 OFFCURVE",
"716 239 CURVE",
"668.667 253 OFFCURVE",
"628.667 262.667 OFFCURVE",
"596 268 CURVE",
"616 315.333 OFFCURVE",
"625 361.333 OFFCURVE",
"623 406 CURVE SMOOTH",
"621.667 431.333 OFFCURVE",
"608.667 444 OFFCURVE",
"584 444 CURVE SMOOTH",
"563.333 444 OFFCURVE",
"542.333 437.667 OFFCURVE",
"521 425 CURVE",
"510.333 471 OFFCURVE",
"485 499.333 OFFCURVE",
"445 510 CURVE SMOOTH",
"407.667 519.333 OFFCURVE",
"371 510.667 OFFCURVE",
"335 484 CURVE SMOOTH",
"296.333 454.667 OFFCURVE",
"274 413.667 OFFCURVE",
"268 361 CURVE SMOOTH",
"264 329.667 OFFCURVE",
"266.667 297.333 OFFCURVE",
"276 264 CURVE",
"248 260 OFFCURVE",
"222 254 OFFCURVE",
"198 246 CURVE SMOOTH",
"136 228 OFFCURVE",
"87 200.333 OFFCURVE",
"51 163 CURVE SMOOTH",
"17.667 128.333 OFFCURVE",
"1 92 OFFCURVE",
"1 54 CURVE SMOOTH",
"1 39.333 OFFCURVE",
"3.667 25 OFFCURVE",
"9 11 CURVE SMOOTH",
"30.333 -38.333 OFFCURVE",
"95.667 -68 OFFCURVE",
"177 -68 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 -54 OFFCURVE",
"50.667 -26.333 OFFCURVE",
"36 19 CURVE SMOOTH",
"34 27 OFFCURVE",
"33 35.333 OFFCURVE",
"33 44 CURVE SMOOTH",
"33 77.333 OFFCURVE",
"48.667 110 OFFCURVE",
"80 142 CURVE SMOOTH",
"113.333 175.333 OFFCURVE",
"158.667 201 OFFCURVE",
"216 219 CURVE SMOOTH",
"237.333 225.667 OFFCURVE",
"260.333 231.333 OFFCURVE",
"285 236 CURVE",
"309.667 174 OFFCURVE",
"348.333 130 OFFCURVE",
"401 104 CURVE",
"330.333 18.667 OFFCURVE",
"248.667 -24 OFFCURVE",
"156 -24 CURVE SMOOTH",
"152 -24 OFFCURVE",
"145 -22.333 OFFCURVE",
"135 -19 CURVE SMOOTH",
"122.333 -15 OFFCURVE",
"113.333 -10 OFFCURVE",
"108 -4 CURVE SMOOTH",
"106.667 -2 OFFCURVE",
"105 -1.667 OFFCURVE",
"103 -3 CURVE",
"101.667 -5 OFFCURVE",
"101.667 -7 OFFCURVE",
"103 -9 CURVE SMOOTH",
"109 -15.667 OFFCURVE",
"119 -21.333 OFFCURVE",
"133 -26 CURVE SMOOTH",
"143.667 -29.333 OFFCURVE",
"151.333 -31 OFFCURVE",
"156 -31 CURVE SMOOTH",
"251.333 -31 OFFCURVE",
"336 12.667 OFFCURVE",
"410 100 CURVE",
"421.333 95.333 OFFCURVE",
"432.667 91.667 OFFCURVE",
"444 89 CURVE",
"423.333 65 OFFCURVE",
"400.333 43 OFFCURVE",
"375 23 CURVE SMOOTH",
"313 -28.333 OFFCURVE",
"245.333 -54 OFFCURVE",
"172 -54 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"356.667 135 OFFCURVE",
"321 177.667 OFFCURVE",
"299 239 CURVE",
"355.667 248.333 OFFCURVE",
"417.333 252.333 OFFCURVE",
"484 251 CURVE",
"465.333 199 OFFCURVE",
"439.333 152.333 OFFCURVE",
"406 111 CURVE"
);
},
{
closed = 1;
nodes = (
"437.667 98 OFFCURVE",
"426.667 101.333 OFFCURVE",
"416 106 CURVE",
"450.667 149.333 OFFCURVE",
"478 197.333 OFFCURVE",
"498 250 CURVE",
"544 248 LINE",
"516.667 188.667 OFFCURVE",
"485 138 OFFCURVE",
"449 96 CURVE"
);
},
{
closed = 1;
nodes = (
"283 298.333 OFFCURVE",
"280.667 329.333 OFFCURVE",
"284 360 CURVE SMOOTH",
"290 404 OFFCURVE",
"306.667 440 OFFCURVE",
"334 468 CURVE SMOOTH",
"360.667 493.333 OFFCURVE",
"389.667 506 OFFCURVE",
"421 506 CURVE SMOOTH",
"446.333 506 OFFCURVE",
"467.333 496.333 OFFCURVE",
"484 477 CURVE SMOOTH",
"502 455 OFFCURVE",
"511 424.333 OFFCURVE",
"511 385 CURVE SMOOTH",
"511 351.667 OFFCURVE",
"505 315.333 OFFCURVE",
"493 276 CURVE",
"420.333 279.333 OFFCURVE",
"353 276.333 OFFCURVE",
"291 267 CURVE"
);
},
{
closed = 1;
nodes = (
"507 275 LINE",
"511 288.333 OFFCURVE",
"514.667 302 OFFCURVE",
"518 316 CURVE SMOOTH",
"526 354 OFFCURVE",
"527.667 387.667 OFFCURVE",
"523 417 CURVE",
"533.667 423 OFFCURVE",
"543 426 OFFCURVE",
"551 426 CURVE SMOOTH",
"567.667 426 OFFCURVE",
"576.667 416.667 OFFCURVE",
"578 398 CURVE SMOOTH",
"579.333 358 OFFCURVE",
"571.333 315.667 OFFCURVE",
"554 271 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012134 8 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01257 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 5 114 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 6 92 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 2 234 2 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01253 2 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 114 122 114 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012120 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 102 134 118 134 134 134 150 134 166 134 182 134 198 134 214 134 230 134 246 134 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 134 117 134 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012143 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012163 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 2 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012173 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012139 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 3 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 163 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012169 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012169 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 876;
}
);
note = H;
unicode = 0048;
},
{
glyphname = Hbar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = emdash;
transform = "{0.89888, 0, 0, 0.62431, 447, 260}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 876;
}
);
unicode = 0126;
},
{
glyphname = Hcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 557, 65}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 876;
}
);
unicode = 0124;
},
{
glyphname = I;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"427.667 497.333 OFFCURVE",
"419.333 501 OFFCURVE",
"410 501 CURVE SMOOTH",
"398.667 501 OFFCURVE",
"386.333 495.667 OFFCURVE",
"373 485 CURVE",
"357 511 OFFCURVE",
"334 524 OFFCURVE",
"304 524 CURVE SMOOTH",
"268.667 524 OFFCURVE",
"236.333 508 OFFCURVE",
"207 476 CURVE SMOOTH",
"175 441.333 OFFCURVE",
"157.333 398.333 OFFCURVE",
"154 347 CURVE SMOOTH",
"150.667 291.667 OFFCURVE",
"160 242.333 OFFCURVE",
"182 199 CURVE SMOOTH",
"206 151.667 OFFCURVE",
"241.667 121.667 OFFCURVE",
"289 109 CURVE",
"237 25 OFFCURVE",
"171.667 -32 OFFCURVE",
"93 -62 CURVE",
"57 -50 OFFCURVE",
"39 -18.333 OFFCURVE",
"39 33 CURVE SMOOTH",
"39 46.333 OFFCURVE",
"40.333 61 OFFCURVE",
"43 77 CURVE SMOOTH",
"55 143.667 OFFCURVE",
"88.333 201 OFFCURVE",
"143 249 CURVE SMOOTH",
"146.333 252.333 OFFCURVE",
"148 255 OFFCURVE",
"148 257 CURVE SMOOTH",
"148 259.667 OFFCURVE",
"145.667 261 OFFCURVE",
"141 261 CURVE SMOOTH",
"139.667 261 OFFCURVE",
"138.667 260.667 OFFCURVE",
"138 260 CURVE SMOOTH",
"70 202.667 OFFCURVE",
"29.667 141.333 OFFCURVE",
"17 76 CURVE SMOOTH",
"14.333 62 OFFCURVE",
"13 48.667 OFFCURVE",
"13 36 CURVE SMOOTH",
"13 -14 OFFCURVE",
"30.667 -49.667 OFFCURVE",
"66 -71 CURVE",
"41 -77 LINE SMOOTH",
"30.333 -79.667 OFFCURVE",
"-2.667 -72.333 OFFCURVE",
"-16 -67 CURVE",
"-18.667 -67 OFFCURVE",
"-20 -68.333 OFFCURVE",
"-20 -71 CURVE SMOOTH",
"-20 -72.333 OFFCURVE",
"-19.667 -73.333 OFFCURVE",
"-19 -74 CURVE SMOOTH",
"-12.333 -78 OFFCURVE",
"-2.333 -81.333 OFFCURVE",
"11 -84 CURVE SMOOTH",
"24.333 -85.333 OFFCURVE",
"35 -85.333 OFFCURVE",
"43 -84 CURVE SMOOTH",
"53.667 -82 OFFCURVE",
"64.333 -79.333 OFFCURVE",
"75 -76 CURVE",
"90.333 -83.333 OFFCURVE",
"107.667 -87 OFFCURVE",
"127 -87 CURVE SMOOTH",
"167 -87 OFFCURVE",
"207.667 -71.667 OFFCURVE",
"249 -41 CURVE SMOOTH",
"295.667 -7 OFFCURVE",
"337 42.333 OFFCURVE",
"373 107 CURVE",
"400.333 113 OFFCURVE",
"424.667 126 OFFCURVE",
"446 146 CURVE SMOOTH",
"466.667 164 OFFCURVE",
"480 183.667 OFFCURVE",
"486 205 CURVE",
"487.333 207.667 OFFCURVE",
"486.667 209 OFFCURVE",
"484 209 CURVE SMOOTH",
"480.667 209.667 OFFCURVE",
"478.667 208.667 OFFCURVE",
"478 206 CURVE SMOOTH",
"472.667 187.333 OFFCURVE",
"461 169.667 OFFCURVE",
"443 153 CURVE SMOOTH",
"423.667 135 OFFCURVE",
"402 122.667 OFFCURVE",
"378 116 CURVE",
"394.667 147.333 OFFCURVE",
"410 181.667 OFFCURVE",
"424 219 CURVE SMOOTH",
"450.667 292.333 OFFCURVE",
"464 353 OFFCURVE",
"464 401 CURVE SMOOTH",
"464 441 OFFCURVE",
"454.333 470.667 OFFCURVE",
"435 490 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"181.667 -32.667 OFFCURVE",
"246.333 24.333 OFFCURVE",
"299 107 CURVE",
"309 105 OFFCURVE",
"319.667 103.667 OFFCURVE",
"331 103 CURVE",
"320.333 83 OFFCURVE",
"309.333 64.667 OFFCURVE",
"298 48 CURVE SMOOTH",
"273.333 13.333 OFFCURVE",
"244.333 -14.667 OFFCURVE",
"211 -36 CURVE SMOOTH",
"179.667 -56 OFFCURVE",
"149.667 -66 OFFCURVE",
"121 -66 CURVE SMOOTH",
"115.667 -66 OFFCURVE",
"110.333 -65.333 OFFCURVE",
"105 -64 CURVE"
);
},
{
closed = 1;
nodes = (
"376.333 448.667 OFFCURVE",
"380 425.333 OFFCURVE",
"380 398 CURVE SMOOTH",
"380 354 OFFCURVE",
"371.333 305 OFFCURVE",
"354 251 CURVE SMOOTH",
"338.667 201.667 OFFCURVE",
"318.667 156.667 OFFCURVE",
"294 116 CURVE",
"250.667 127.333 OFFCURVE",
"218 153.667 OFFCURVE",
"196 195 CURVE SMOOTH",
"176 232.333 OFFCURVE",
"166 276 OFFCURVE",
"166 326 CURVE SMOOTH",
"166 370.667 OFFCURVE",
"177 412 OFFCURVE",
"199 450 CURVE SMOOTH",
"225.667 494.667 OFFCURVE",
"260 517 OFFCURVE",
"302 517 CURVE SMOOTH",
"329.333 517 OFFCURVE",
"350 504 OFFCURVE",
"364 478 CURVE",
"318.667 434 OFFCURVE",
"276 341.333 OFFCURVE",
"276 284 CURVE SMOOTH",
"276 253.333 OFFCURVE",
"286.667 238 OFFCURVE",
"308 238 CURVE SMOOTH",
"320 238 OFFCURVE",
"326 240 OFFCURVE",
"326 244 CURVE SMOOTH",
"326 245.333 OFFCURVE",
"325.333 246 OFFCURVE",
"324 246 CURVE",
"326.667 245.333 OFFCURVE",
"323.333 245 OFFCURVE",
"314 245 CURVE SMOOTH",
"309.333 245 OFFCURVE",
"305.333 248.167 OFFCURVE",
"302 254.5 CURVE SMOOTH",
"298.667 260.833 OFFCURVE",
"297 269.667 OFFCURVE",
"297 281 CURVE SMOOTH",
"297 308.333 OFFCURVE",
"304.333 341.333 OFFCURVE",
"319 380 CURVE SMOOTH",
"333.667 420.667 OFFCURVE",
"350.333 450 OFFCURVE",
"369 468 CURVE"
);
},
{
closed = 1;
nodes = (
"323.333 111 OFFCURVE",
"313 112 OFFCURVE",
"303 114 CURVE",
"346.333 184 OFFCURVE",
"374.333 259.667 OFFCURVE",
"387 341 CURVE SMOOTH",
"390.333 361.667 OFFCURVE",
"392 381 OFFCURVE",
"392 399 CURVE SMOOTH",
"392 429 OFFCURVE",
"387.333 454.333 OFFCURVE",
"378 475 CURVE",
"379 476 LINE SMOOTH",
"385.667 480.667 OFFCURVE",
"391.667 483 OFFCURVE",
"397 483 CURVE SMOOTH",
"403 483 OFFCURVE",
"407.667 480.667 OFFCURVE",
"411 476 CURVE SMOOTH",
"421 461.333 OFFCURVE",
"426 440.333 OFFCURVE",
"426 413 CURVE SMOOTH",
"426 366.333 OFFCURVE",
"412.333 305 OFFCURVE",
"385 229 CURVE SMOOTH",
"369 183.667 OFFCURVE",
"352 144.333 OFFCURVE",
"334 111 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012120 5 106 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 128 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01267 32 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 27 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 4 229 4 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 32 234 32 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01251 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01253 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012104 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 120 117 120 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012124 128 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01255 4 87 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012104 87 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = I;
unicode = 0049;
},
{
glyphname = Iacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 328, 203}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 322, 111}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012C;
},
{
glyphname = Icircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 265, 186}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 291, 119}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0208;
},
{
glyphname = Idieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 363, 273}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 326, 113}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0130;
},
{
glyphname = Idotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 2, -558}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 1ECA;
},
{
glyphname = Igrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, 298, 193}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Ihookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 336, 115}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 298, 111}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 020A;
},
{
glyphname = Imacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, 285, 159}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -6, -81}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 283, 118}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0128;
},
{
glyphname = J;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"65.333 -186 OFFCURVE",
"108.667 -175 OFFCURVE",
"154 -153 CURVE SMOOTH",
"196.667 -133.667 OFFCURVE",
"235.333 -108 OFFCURVE",
"270 -76 CURVE SMOOTH",
"337.333 -14.667 OFFCURVE",
"387.667 61.667 OFFCURVE",
"421 153 CURVE SMOOTH",
"452.333 236.333 OFFCURVE",
"473 328.333 OFFCURVE",
"483 429 CURVE",
"522.333 427 OFFCURVE",
"545 420 OFFCURVE",
"551 408 CURVE SMOOTH",
"552.333 405.333 OFFCURVE",
"554.333 404 OFFCURVE",
"557 404 CURVE SMOOTH",
"560.333 404 OFFCURVE",
"562 405.667 OFFCURVE",
"562 409 CURVE SMOOTH",
"562 410.333 OFFCURVE",
"561.667 411.667 OFFCURVE",
"561 413 CURVE SMOOTH",
"551 433.667 OFFCURVE",
"525.667 447 OFFCURVE",
"485 453 CURVE",
"487 473 OFFCURVE",
"488 489.667 OFFCURVE",
"488 503 CURVE SMOOTH",
"487.333 510.333 OFFCURVE",
"483.667 514 OFFCURVE",
"477 514 CURVE SMOOTH",
"466.333 514 OFFCURVE",
"451 502.667 OFFCURVE",
"451 496 CURVE SMOOTH",
"451 484 OFFCURVE",
"450.333 470.667 OFFCURVE",
"449 456 CURVE",
"427.667 456.667 OFFCURVE",
"404.667 455.667 OFFCURVE",
"380 453 CURVE",
"364.667 498.333 OFFCURVE",
"336.667 521.333 OFFCURVE",
"296 522 CURVE SMOOTH",
"237.333 523.333 OFFCURVE",
"180.667 460 OFFCURVE",
"174 388 CURVE SMOOTH",
"174 384 LINE",
"134.667 357.333 OFFCURVE",
"116.333 329 OFFCURVE",
"119 299 CURVE SMOOTH",
"121 281.667 OFFCURVE",
"129 268.333 OFFCURVE",
"143 259 CURVE SMOOTH",
"150.333 255 OFFCURVE",
"154 255.667 OFFCURVE",
"154 261 CURVE SMOOTH",
"154 262.333 OFFCURVE",
"152.667 264 OFFCURVE",
"150 266 CURVE SMOOTH",
"141.333 271.333 OFFCURVE",
"136.333 281.667 OFFCURVE",
"135 297 CURVE SMOOTH",
"133 318.333 OFFCURVE",
"145.667 338.667 OFFCURVE",
"173 358 CURVE",
"175 326.667 OFFCURVE",
"185 298.333 OFFCURVE",
"203 273 CURVE SMOOTH",
"221.667 245 OFFCURVE",
"247.333 224.333 OFFCURVE",
"280 211 CURVE",
"282 209.667 OFFCURVE",
"283.667 210.333 OFFCURVE",
"285 213 CURVE SMOOTH",
"286.333 215 OFFCURVE",
"285.667 216.667 OFFCURVE",
"283 218 CURVE SMOOTH",
"251 231.333 OFFCURVE",
"227 252.333 OFFCURVE",
"211 281 CURVE SMOOTH",
"196.333 307 OFFCURVE",
"189 336 OFFCURVE",
"189 368 CURVE",
"235 394 OFFCURVE",
"296.667 412.333 OFFCURVE",
"374 423 CURVE",
"384 365 OFFCURVE",
"376.667 294.667 OFFCURVE",
"352 212 CURVE SMOOTH",
"326.667 126 OFFCURVE",
"290.333 52.333 OFFCURVE",
"243 -9 CURVE SMOOTH",
"189.667 -78.333 OFFCURVE",
"131.333 -117.333 OFFCURVE",
"68 -126 CURVE",
"66.667 -126.667 OFFCURVE",
"65.333 -127.667 OFFCURVE",
"64 -129 CURVE",
"64 -133 LINE",
"64.667 -133.667 OFFCURVE",
"66 -134 OFFCURVE",
"68 -134 CURVE SMOOTH",
"128.667 -127.333 OFFCURVE",
"185.333 -94.667 OFFCURVE",
"238 -36 CURVE SMOOTH",
"284.667 15.333 OFFCURVE",
"322.333 80 OFFCURVE",
"351 158 CURVE SMOOTH",
"379 232.667 OFFCURVE",
"393 302.333 OFFCURVE",
"393 367 CURVE SMOOTH",
"393 388.333 OFFCURVE",
"391.333 407.667 OFFCURVE",
"388 425 CURVE",
"408.667 427.667 OFFCURVE",
"428.333 429 OFFCURVE",
"447 429 CURVE",
"436.333 335 OFFCURVE",
"415 245 OFFCURVE",
"383 159 CURVE SMOOTH",
"343.667 52.333 OFFCURVE",
"288 -31.667 OFFCURVE",
"216 -93 CURVE SMOOTH",
"156 -143 OFFCURVE",
"98.667 -168 OFFCURVE",
"44 -168 CURVE SMOOTH",
"-5.333 -168 OFFCURVE",
"-35 -141.667 OFFCURVE",
"-31 -99 CURVE SMOOTH",
"-26.333 -55 OFFCURVE",
"4.667 -12.667 OFFCURVE",
"62 28 CURVE SMOOTH",
"109.333 60.667 OFFCURVE",
"167.667 88.667 OFFCURVE",
"237 112 CURVE SMOOTH",
"245 114.667 OFFCURVE",
"249 117 OFFCURVE",
"249 119 CURVE SMOOTH",
"249 121 OFFCURVE",
"247 122 OFFCURVE",
"243 122 CURVE SMOOTH",
"239.667 122 OFFCURVE",
"236.333 121.667 OFFCURVE",
"233 121 CURVE SMOOTH",
"153 94.333 OFFCURVE",
"87.333 64.333 OFFCURVE",
"36 31 CURVE SMOOTH",
"-28.667 -11.667 OFFCURVE",
"-63.333 -55.667 OFFCURVE",
"-68 -101 CURVE SMOOTH",
"-74.667 -150.333 OFFCURVE",
"-37.333 -186 OFFCURVE",
"24 -186 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"198 432 OFFCURVE",
"211.333 461.333 OFFCURVE",
"232 484 CURVE SMOOTH",
"251.333 504.667 OFFCURVE",
"272.667 514.667 OFFCURVE",
"296 514 CURVE SMOOTH",
"330.667 514 OFFCURVE",
"354.667 493.333 OFFCURVE",
"368 452 CURVE",
"331 446 LINE SMOOTH",
"279.667 436.667 OFFCURVE",
"233.333 420 OFFCURVE",
"192 396 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01280 7 92 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01250 3 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012117 22 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012117 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
note = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 317, 114}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0134;
},
{
glyphname = K;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"709.333 -53 OFFCURVE",
"713.333 -48.667 OFFCURVE",
"716 -40 CURVE SMOOTH",
"721.333 -20.667 OFFCURVE",
"724 -2 OFFCURVE",
"724 16 CURVE SMOOTH",
"724 84 OFFCURVE",
"685.667 140.333 OFFCURVE",
"609 185 CURVE SMOOTH",
"555 216.333 OFFCURVE",
"486 240.667 OFFCURVE",
"402 258 CURVE",
"478 290 OFFCURVE",
"542 327 OFFCURVE",
"594 369 CURVE SMOOTH",
"652 415.667 OFFCURVE",
"684.667 460.667 OFFCURVE",
"692 504 CURVE SMOOTH",
"693 510 LINE SMOOTH",
"693 514.667 OFFCURVE",
"691.667 517 OFFCURVE",
"689 517 CURVE SMOOTH",
"685.667 517 OFFCURVE",
"682.333 512.333 OFFCURVE",
"679 503 CURVE SMOOTH",
"655 431 OFFCURVE",
"516.667 329 OFFCURVE",
"362 265 CURVE",
"344 268 LINE",
"400 375.333 OFFCURVE",
"433 437 OFFCURVE",
"443 453 CURVE SMOOTH",
"445.667 456.333 OFFCURVE",
"447 460 OFFCURVE",
"447 464 CURVE SMOOTH",
"447 470.667 OFFCURVE",
"442.333 474 OFFCURVE",
"433 474 CURVE SMOOTH",
"413.667 474 OFFCURVE",
"398.667 466.333 OFFCURVE",
"388 451 CURVE",
"369 411 LINE SMOOTH",
"344.333 354.333 OFFCURVE",
"324.333 308.333 OFFCURVE",
"309 273 CURVE",
"269 276 LINE",
"292.333 338 OFFCURVE",
"304 390.333 OFFCURVE",
"304 433 CURVE SMOOTH",
"304 471.667 OFFCURVE",
"295 502 OFFCURVE",
"277 524 CURVE SMOOTH",
"261 544.667 OFFCURVE",
"240.333 555 OFFCURVE",
"215 555 CURVE SMOOTH",
"184.333 555 OFFCURVE",
"157.333 540.333 OFFCURVE",
"134 511 CURVE SMOOTH",
"108 478.333 OFFCURVE",
"93.667 434.333 OFFCURVE",
"91 379 CURVE SMOOTH",
"89.667 347 OFFCURVE",
"94.667 311.333 OFFCURVE",
"106 272 CURVE",
"54.667 262.667 OFFCURVE",
"29 247.667 OFFCURVE",
"29 227 CURVE SMOOTH",
"29 205.667 OFFCURVE",
"60.333 188.667 OFFCURVE",
"103 186 CURVE",
"139 187 LINE",
"150.333 165 OFFCURVE",
"163 145.667 OFFCURVE",
"177 129 CURVE",
"157.667 105 OFFCURVE",
"136.667 83.667 OFFCURVE",
"114 65 CURVE",
"113 63 LINE",
"113 59.667 OFFCURVE",
"114.667 58 OFFCURVE",
"118 58 CURVE SMOOTH",
"121.333 58 OFFCURVE",
"132.333 67.667 OFFCURVE",
"151 87 CURVE SMOOTH",
"165.667 101.667 OFFCURVE",
"176.333 113.333 OFFCURVE",
"183 122 CURVE",
"191.667 111.333 OFFCURVE",
"201 102 OFFCURVE",
"211 94 CURVE",
"177 46 OFFCURVE",
"145.333 20.667 OFFCURVE",
"116 18 CURVE SMOOTH",
"76 12.667 OFFCURVE",
"42 40.667 OFFCURVE",
"42 74 CURVE SMOOTH",
"42 77.333 OFFCURVE",
"42.667 81.5 OFFCURVE",
"44 86.5 CURVE SMOOTH",
"45.333 91.5 OFFCURVE",
"46 95 OFFCURVE",
"46 97 CURVE SMOOTH",
"46 101 OFFCURVE",
"44.333 103 OFFCURVE",
"41 103 CURVE SMOOTH",
"35 103 OFFCURVE",
"31.333 99.667 OFFCURVE",
"30 93 CURVE SMOOTH",
"29.333 87.667 OFFCURVE",
"29 82.667 OFFCURVE",
"29 78 CURVE SMOOTH",
"29 28.667 OFFCURVE",
"66 -4.333 OFFCURVE",
"114 -3 CURVE SMOOTH",
"150 -2.333 OFFCURVE",
"189 25 OFFCURVE",
"231 79 CURVE",
"263.667 57.667 OFFCURVE",
"299.667 47 OFFCURVE",
"339 47 CURVE SMOOTH",
"367.667 47 OFFCURVE",
"387 54 OFFCURVE",
"397 68 CURVE SMOOTH",
"398.333 70 OFFCURVE",
"397.667 72 OFFCURVE",
"395 74 CURVE SMOOTH",
"393 75.333 OFFCURVE",
"391.333 75.333 OFFCURVE",
"390 74 CURVE SMOOTH",
"380.667 60.667 OFFCURVE",
"363 54 OFFCURVE",
"337 54 CURVE SMOOTH",
"299.667 54 OFFCURVE",
"265.667 64.667 OFFCURVE",
"235 86 CURVE",
"261 120 OFFCURVE",
"290.333 167.333 OFFCURVE",
"323 228 CURVE",
"345 236 LINE",
"443 218 OFFCURVE",
"524.333 190.333 OFFCURVE",
"589 153 CURVE SMOOTH",
"667 108.333 OFFCURVE",
"706 57 OFFCURVE",
"706 -1 CURVE SMOOTH",
"706 -13.667 OFFCURVE",
"704 -26.333 OFFCURVE",
"700 -39 CURVE",
"699 -46 LINE SMOOTH",
"699 -50.667 OFFCURVE",
"700.667 -53 OFFCURVE",
"704 -53 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"80.667 209.667 OFFCURVE",
"71 215.333 OFFCURVE",
"71 226 CURVE SMOOTH",
"71 236.667 OFFCURVE",
"84.667 248.333 OFFCURVE",
"106 251 CURVE",
"111 253 LINE",
"116.333 237.667 OFFCURVE",
"122 223 OFFCURVE",
"128 209 CURVE",
"118 208.333 OFFCURVE",
"108.667 208.333 OFFCURVE",
"100 209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"171 151.333 OFFCURVE",
"160.333 168.667 OFFCURVE",
"151 188 CURVE",
"173 190 OFFCURVE",
"196.667 193.667 OFFCURVE",
"222 199 CURVE",
"210 176.333 OFFCURVE",
"197 155.333 OFFCURVE",
"183 136 CURVE"
);
},
{
closed = 1;
nodes = (
"206 108.667 OFFCURVE",
"196.667 118.333 OFFCURVE",
"188 129 CURVE",
"205.333 151 OFFCURVE",
"221.333 175.333 OFFCURVE",
"236 202 CURVE",
"281 214 LINE",
"258.333 167.333 OFFCURVE",
"236.667 129.333 OFFCURVE",
"216 100 CURVE"
);
},
{
closed = 1;
nodes = (
"134.333 223.667 OFFCURVE",
"128.667 238.667 OFFCURVE",
"124 254 CURVE",
"156.667 257.333 OFFCURVE",
"197.667 257.333 OFFCURVE",
"247 254 CURVE",
"243 244 OFFCURVE",
"238.667 234.333 OFFCURVE",
"234 225 CURVE",
"192.667 216.333 OFFCURVE",
"161.667 211 OFFCURVE",
"141 209 CURVE"
);
},
{
closed = 1;
nodes = (
"252 236 OFFCURVE",
"255.667 244.333 OFFCURVE",
"259 253 CURVE",
"277 251.667 OFFCURVE",
"286 248.667 OFFCURVE",
"286 244 CURVE SMOOTH",
"286 238.667 OFFCURVE",
"273.333 233.333 OFFCURVE",
"248 228 CURVE"
);
},
{
closed = 1;
nodes = (
"109.667 312 OFFCURVE",
"105.667 346.667 OFFCURVE",
"107 378 CURVE SMOOTH",
"109.667 430.667 OFFCURVE",
"122 472.667 OFFCURVE",
"144 504 CURVE SMOOTH",
"164 532 OFFCURVE",
"187.333 546 OFFCURVE",
"214 546 CURVE SMOOTH",
"234.667 546 OFFCURVE",
"252 536.667 OFFCURVE",
"266 518 CURVE SMOOTH",
"280.667 496.667 OFFCURVE",
"288 468 OFFCURVE",
"288 432 CURVE SMOOTH",
"288 390 OFFCURVE",
"277.333 338.667 OFFCURVE",
"256 278 CURVE",
"204.667 281.333 OFFCURVE",
"159 280 OFFCURVE",
"119 274 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01292 6 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 120 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 7 58 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01214 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012130 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012142 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012151 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012155 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012158 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012124 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012153 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012155 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012162 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0120 4 158 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01218 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01216 162 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 158 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012142 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 761;
}
);
note = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 262, 50}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0136;
},
{
glyphname = L;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"652.667 -118 OFFCURVE",
"694 -90 OFFCURVE",
"694 -34 CURVE SMOOTH",
"694 -15.333 OFFCURVE",
"679.667 5 OFFCURVE",
"651 27 CURVE SMOOTH",
"649.667 28.333 OFFCURVE",
"648 29 OFFCURVE",
"646 29 CURVE SMOOTH",
"644 29 OFFCURVE",
"643 27.667 OFFCURVE",
"643 25 CURVE SMOOTH",
"644 20 LINE",
"650.667 12 OFFCURVE",
"657.333 3.333 OFFCURVE",
"664 -6 CURVE SMOOTH",
"672 -16 OFFCURVE",
"676 -25.667 OFFCURVE",
"676 -35 CURVE SMOOTH",
"676 -70.333 OFFCURVE",
"648.333 -88 OFFCURVE",
"593 -88 CURVE SMOOTH",
"536.333 -88 OFFCURVE",
"449 -61.667 OFFCURVE",
"331 -9 CURVE",
"361.667 11 OFFCURVE",
"402.667 74.667 OFFCURVE",
"428 140 CURVE",
"511.333 143.333 OFFCURVE",
"581.667 174.333 OFFCURVE",
"639 233 CURVE SMOOTH",
"698.333 293.667 OFFCURVE",
"728 369 OFFCURVE",
"728 459 CURVE SMOOTH",
"728 479 OFFCURVE",
"722.333 498.667 OFFCURVE",
"711 518 CURVE SMOOTH",
"697 538.667 OFFCURVE",
"680.667 549 OFFCURVE",
"662 549 CURVE SMOOTH",
"636 549 OFFCURVE",
"612 544 OFFCURVE",
"590 534 CURVE",
"580 538.667 OFFCURVE",
"568.667 541 OFFCURVE",
"556 541 CURVE SMOOTH",
"514 541.667 OFFCURVE",
"477.333 515.667 OFFCURVE",
"446 463 CURVE SMOOTH",
"426 427.667 OFFCURVE",
"407 378 OFFCURVE",
"389 314 CURVE SMOOTH",
"365.667 232.667 OFFCURVE",
"349.667 181.667 OFFCURVE",
"341 161 CURVE",
"296.333 171.667 OFFCURVE",
"262 193.333 OFFCURVE",
"238 226 CURVE SMOOTH",
"214.667 256 OFFCURVE",
"203 290 OFFCURVE",
"203 328 CURVE SMOOTH",
"203 358 OFFCURVE",
"210.333 386 OFFCURVE",
"225 412 CURVE SMOOTH",
"240.333 439.333 OFFCURVE",
"262 461 OFFCURVE",
"290 477 CURVE SMOOTH",
"292 478.333 OFFCURVE",
"293 480 OFFCURVE",
"293 482 CURVE SMOOTH",
"293 486 OFFCURVE",
"291 488 OFFCURVE",
"287 488 CURVE SMOOTH",
"284 488 LINE",
"220 452 OFFCURVE",
"183 385.667 OFFCURVE",
"183 319 CURVE SMOOTH",
"183 278.333 OFFCURVE",
"195 243 OFFCURVE",
"219 213 CURVE SMOOTH",
"247 180.333 OFFCURVE",
"286 158.667 OFFCURVE",
"336 148 CURVE",
"314.667 98.667 OFFCURVE",
"290.333 60.667 OFFCURVE",
"263 34 CURVE",
"256.333 38.667 OFFCURVE",
"230.667 58.667 OFFCURVE",
"186 94 CURVE SMOOTH",
"157.333 116.667 OFFCURVE",
"134.667 133 OFFCURVE",
"118 143 CURVE SMOOTH",
"78.667 165 OFFCURVE",
"47.333 167 OFFCURVE",
"24 149 CURVE SMOOTH",
"4 134.333 OFFCURVE",
"-6 110 OFFCURVE",
"-6 76 CURVE SMOOTH",
"-6 46 OFFCURVE",
"2 20.667 OFFCURVE",
"18 0 CURVE SMOOTH",
"34.667 -22 OFFCURVE",
"59.333 -38.667 OFFCURVE",
"92 -50 CURVE SMOOTH",
"122 -60.667 OFFCURVE",
"154 -65.667 OFFCURVE",
"188 -65 CURVE SMOOTH",
"226.667 -64.333 OFFCURVE",
"267 -50.667 OFFCURVE",
"309 -24 CURVE",
"388.333 -64.667 OFFCURVE",
"430.333 -86 OFFCURVE",
"435 -88 CURVE SMOOTH",
"482.333 -108 OFFCURVE",
"527.333 -118 OFFCURVE",
"570 -118 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"134.333 -44 OFFCURVE",
"108.333 -39 OFFCURVE",
"85 -29 CURVE SMOOTH",
"35.667 -7.667 OFFCURVE",
"11 39.667 OFFCURVE",
"11 73 CURVE SMOOTH",
"11 101.667 OFFCURVE",
"25.333 116 OFFCURVE",
"54 116 CURVE SMOOTH",
"76 116 OFFCURVE",
"107.667 102.667 OFFCURVE",
"149 76 CURVE",
"236 13 LINE",
"209.333 -4.333 OFFCURVE",
"179 -13 OFFCURVE",
"145 -13 CURVE SMOOTH",
"130.333 -13 OFFCURVE",
"114.667 -11.333 OFFCURVE",
"98 -8 CURVE SMOOTH",
"96 -7.333 OFFCURVE",
"94.667 -7.667 OFFCURVE",
"94 -9 CURVE SMOOTH",
"93.333 -9.667 OFFCURVE",
"93.333 -11 OFFCURVE",
"94 -13 CURVE",
"98 -15 LINE",
"114.667 -19.667 OFFCURVE",
"131.333 -22 OFFCURVE",
"148 -22 CURVE SMOOTH",
"182 -22 OFFCURVE",
"214.333 -12 OFFCURVE",
"245 8 CURVE",
"275 -13 LINE",
"242.333 -33.667 OFFCURVE",
"205 -44 OFFCURVE",
"163 -44 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"294.333 11.667 OFFCURVE",
"283.333 19.333 OFFCURVE",
"272 28 CURVE",
"304.667 56.667 OFFCURVE",
"332 95.333 OFFCURVE",
"354 144 CURVE",
"366 142 OFFCURVE",
"378.333 141 OFFCURVE",
"391 141 CURVE",
"382.333 115 OFFCURVE",
"369.333 87.333 OFFCURVE",
"352 58 CURVE SMOOTH",
"332 24.667 OFFCURVE",
"316.333 7 OFFCURVE",
"305 5 CURVE"
);
},
{
closed = 1;
nodes = (
"383 153.667 OFFCURVE",
"371 154.667 OFFCURVE",
"359 156 CURVE",
"370.333 184 OFFCURVE",
"385.333 234.333 OFFCURVE",
"404 307 CURVE SMOOTH",
"421.333 371.667 OFFCURVE",
"438.667 421 OFFCURVE",
"456 455 CURVE SMOOTH",
"482.667 507.667 OFFCURVE",
"516 534 OFFCURVE",
"556 534 CURVE SMOOTH",
"564.667 533.333 OFFCURVE",
"573 531.667 OFFCURVE",
"581 529 CURVE",
"539.667 507.667 OFFCURVE",
"506.667 468.667 OFFCURVE",
"482 412 CURVE SMOOTH",
"472 388 OFFCURVE",
"457.333 345.667 OFFCURVE",
"438 285 CURVE SMOOTH",
"413.333 207.667 OFFCURVE",
"399.333 164.667 OFFCURVE",
"396 156 CURVE SMOOTH",
"395 153 LINE"
);
},
{
closed = 1;
nodes = (
"451 210 LINE SMOOTH",
"481 295.333 OFFCURVE",
"507.667 362.667 OFFCURVE",
"531 412 CURVE SMOOTH",
"551 456 OFFCURVE",
"576 489.667 OFFCURVE",
"606 513 CURVE",
"615.333 501.667 OFFCURVE",
"620 487.333 OFFCURVE",
"620 470 CURVE SMOOTH",
"620 448 OFFCURVE",
"613 426 OFFCURVE",
"599 404 CURVE SMOOTH",
"583.667 380.667 OFFCURVE",
"563.667 363.333 OFFCURVE",
"539 352 CURVE SMOOTH",
"537 350.667 OFFCURVE",
"536.667 349 OFFCURVE",
"538 347 CURVE SMOOTH",
"538.667 345 OFFCURVE",
"540.333 344.333 OFFCURVE",
"543 345 CURVE SMOOTH",
"570.333 355.667 OFFCURVE",
"592.333 372.667 OFFCURVE",
"609 396 CURVE SMOOTH",
"623.667 418 OFFCURVE",
"631 440.667 OFFCURVE",
"631 464 CURVE SMOOTH",
"631 486 OFFCURVE",
"625 504 OFFCURVE",
"613 518 CURVE",
"629 528.667 OFFCURVE",
"643.333 534 OFFCURVE",
"656 534 CURVE SMOOTH",
"686 534 OFFCURVE",
"701 508 OFFCURVE",
"701 456 CURVE SMOOTH",
"701 379.333 OFFCURVE",
"675.333 311 OFFCURVE",
"624 251 CURVE SMOOTH",
"570.667 189.667 OFFCURVE",
"506.333 157 OFFCURVE",
"431 153 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012160 7 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 7 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01227 127 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012218 127 234 127 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 127 25 127 41 127 57 127 73 127 89 127 105 127 121 127 137 127 153 127 169 127 185 127 201 127 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01238 127 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01248 127 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01250 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012109 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012134 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012138 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012150 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012154 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012168 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01236 4 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 1 111 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012165 4 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 701;
}
);
note = L;
unicode = 004C;
},
{
glyphname = LJ;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 598, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1044;
}
);
unicode = 01C7;
},
{
glyphname = Lacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 619, 199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = quotesingle;
transform = "{0.8, 0, 0, 0.8, 674, 138}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 742;
}
);
unicode = 013D;
},
{
glyphname = Lcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 210, -49}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 013B;
},
{
glyphname = Ldot;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 413, -120}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 013F;
},
{
glyphname = Lj;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 732, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 887;
}
);
unicode = 01C8;
},
{
glyphname = Lslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = hyphen;
transform = "{1.14005, 0.11982, -0.08662, 0.82412, 241, -24}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 0141;
},
{
glyphname = M;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"662.667 -141 OFFCURVE",
"687.333 -129.333 OFFCURVE",
"712 -106 CURVE SMOOTH",
"718 -100 OFFCURVE",
"721 -95.333 OFFCURVE",
"721 -92 CURVE SMOOTH",
"721 -90 OFFCURVE",
"719.667 -89 OFFCURVE",
"717 -89 CURVE SMOOTH",
"713.667 -89 OFFCURVE",
"710.667 -90.667 OFFCURVE",
"708 -94 CURVE SMOOTH",
"691.333 -112 OFFCURVE",
"676.333 -121 OFFCURVE",
"663 -121 CURVE SMOOTH",
"649 -121 OFFCURVE",
"642.333 -107 OFFCURVE",
"643 -79 CURVE SMOOTH",
"643 -27 OFFCURVE",
"662.667 38.667 OFFCURVE",
"702 118 CURVE SMOOTH",
"734 184 OFFCURVE",
"772.667 247 OFFCURVE",
"818 307 CURVE SMOOTH",
"878 385.667 OFFCURVE",
"908 441.333 OFFCURVE",
"908 474 CURVE SMOOTH",
"908 489.333 OFFCURVE",
"900 497 OFFCURVE",
"884 497 CURVE SMOOTH",
"870.667 497 OFFCURVE",
"850.667 491 OFFCURVE",
"824 479 CURVE SMOOTH",
"770.667 454.333 OFFCURVE",
"708.667 393 OFFCURVE",
"638 295 CURVE SMOOTH",
"582.667 218.333 OFFCURVE",
"540 147.667 OFFCURVE",
"510 83 CURVE",
"510.667 89.667 OFFCURVE",
"516.667 119.333 OFFCURVE",
"528 172 CURVE SMOOTH",
"538 222.667 OFFCURVE",
"544.667 261.667 OFFCURVE",
"548 289 CURVE SMOOTH",
"549.333 307 OFFCURVE",
"550 324.333 OFFCURVE",
"550 341 CURVE SMOOTH",
"550 379.667 OFFCURVE",
"545.667 410.333 OFFCURVE",
"537 433 CURVE SMOOTH",
"527.667 458.333 OFFCURVE",
"514.333 471 OFFCURVE",
"497 471 CURVE SMOOTH",
"465 471 OFFCURVE",
"424.667 430.667 OFFCURVE",
"376 350 CURVE SMOOTH",
"360.667 325.333 OFFCURVE",
"342.333 287.333 OFFCURVE",
"321 236 CURVE",
"326.333 267.333 OFFCURVE",
"329 297 OFFCURVE",
"329 325 CURVE SMOOTH",
"329 421 OFFCURVE",
"302.667 489 OFFCURVE",
"250 529 CURVE SMOOTH",
"226 547.667 OFFCURVE",
"201.333 557 OFFCURVE",
"176 557 CURVE SMOOTH",
"98.667 557 OFFCURVE",
"31 471.667 OFFCURVE",
"31 381 CURVE SMOOTH",
"31 357.667 OFFCURVE",
"35.333 335.667 OFFCURVE",
"44 315 CURVE SMOOTH",
"47.333 307 OFFCURVE",
"51.333 303 OFFCURVE",
"56 303 CURVE SMOOTH",
"59.333 303 OFFCURVE",
"61 305.667 OFFCURVE",
"61 311 CURVE SMOOTH",
"61 315 OFFCURVE",
"60 319.667 OFFCURVE",
"58 325 CURVE SMOOTH",
"52.667 337.667 OFFCURVE",
"50 352.333 OFFCURVE",
"50 369 CURVE SMOOTH",
"50 410.333 OFFCURVE",
"63 449.333 OFFCURVE",
"89 486 CURVE SMOOTH",
"115.667 524 OFFCURVE",
"145.667 543 OFFCURVE",
"179 543 CURVE SMOOTH",
"200.333 543 OFFCURVE",
"220.333 534 OFFCURVE",
"239 516 CURVE SMOOTH",
"277.667 479.333 OFFCURVE",
"297 425.333 OFFCURVE",
"297 354 CURVE SMOOTH",
"297 296 OFFCURVE",
"283.667 226 OFFCURVE",
"257 144 CURVE SMOOTH",
"245 106.667 OFFCURVE",
"232 73 OFFCURVE",
"218 43 CURVE",
"206.667 47 OFFCURVE",
"196.333 53 OFFCURVE",
"187 61 CURVE",
"238.333 173 OFFCURVE",
"264.333 276 OFFCURVE",
"265 370 CURVE SMOOTH",
"265 409.333 OFFCURVE",
"256.667 440 OFFCURVE",
"240 462 CURVE SMOOTH",
"225.333 482.667 OFFCURVE",
"206.333 493 OFFCURVE",
"183 493 CURVE SMOOTH",
"153 493 OFFCURVE",
"126.667 477 OFFCURVE",
"104 445 CURVE SMOOTH",
"79.333 409.667 OFFCURVE",
"67 362.333 OFFCURVE",
"67 303 CURVE SMOOTH",
"67 291.667 OFFCURVE",
"67.667 279.667 OFFCURVE",
"69 267 CURVE SMOOTH",
"72.333 229.667 OFFCURVE",
"83 191.667 OFFCURVE",
"101 153 CURVE SMOOTH",
"121 111.667 OFFCURVE",
"145.333 80 OFFCURVE",
"174 58 CURVE",
"158 23.333 OFFCURVE",
"143 -5.333 OFFCURVE",
"129 -28 CURVE SMOOTH",
"127.667 -30 OFFCURVE",
"128 -31.667 OFFCURVE",
"130 -33 CURVE SMOOTH",
"132 -33.667 OFFCURVE",
"133.333 -33.333 OFFCURVE",
"134 -32 CURVE SMOOTH",
"154 -1.333 OFFCURVE",
"170.333 26.667 OFFCURVE",
"183 52 CURVE",
"193 44.667 OFFCURVE",
"203.333 39.333 OFFCURVE",
"214 36 CURVE",
"184.667 -24 OFFCURVE",
"155 -59.333 OFFCURVE",
"125 -70 CURVE SMOOTH",
"121 -72 OFFCURVE",
"117 -73 OFFCURVE",
"113 -73 CURVE SMOOTH",
"99 -73 OFFCURVE",
"93.333 -65.333 OFFCURVE",
"96 -50 CURVE SMOOTH",
"96.667 -44 OFFCURVE",
"95.333 -41 OFFCURVE",
"92 -41 CURVE SMOOTH",
"86 -41 OFFCURVE",
"83 -47 OFFCURVE",
"83 -59 CURVE SMOOTH",
"83 -83.667 OFFCURVE",
"95.667 -96 OFFCURVE",
"121 -96 CURVE SMOOTH",
"125.667 -96 OFFCURVE",
"130.667 -95.667 OFFCURVE",
"136 -95 CURVE SMOOTH",
"154 -91.667 OFFCURVE",
"174 -77.667 OFFCURVE",
"196 -53 CURVE SMOOTH",
"216.667 -31 OFFCURVE",
"236 -4 OFFCURVE",
"254 28 CURVE",
"296.667 26.667 OFFCURVE",
"352.667 50 OFFCURVE",
"366 86 CURVE",
"367.333 88 OFFCURVE",
"366.667 89.667 OFFCURVE",
"364 91 CURVE SMOOTH",
"362 91.667 OFFCURVE",
"360.333 91 OFFCURVE",
"359 89 CURVE",
"353.667 72.333 OFFCURVE",
"340 59 OFFCURVE",
"318 49 CURVE SMOOTH",
"297.333 39 OFFCURVE",
"277.333 34.333 OFFCURVE",
"258 35 CURVE",
"269.333 55.667 OFFCURVE",
"278.333 75.667 OFFCURVE",
"285 95 CURVE SMOOTH",
"310.333 167 OFFCURVE",
"339.667 236.667 OFFCURVE",
"373 304 CURVE SMOOTH",
"419.667 398 OFFCURVE",
"455 445 OFFCURVE",
"479 445 CURVE SMOOTH",
"503.667 445 OFFCURVE",
"515 393 OFFCURVE",
"513 289 CURVE SMOOTH",
"511.667 235.667 OFFCURVE",
"501.667 159.333 OFFCURVE",
"483 60 CURVE SMOOTH",
"481.667 55.333 OFFCURVE",
"481 51.333 OFFCURVE",
"481 48 CURVE SMOOTH",
"481 36.667 OFFCURVE",
"484.333 31 OFFCURVE",
"491 31 CURVE SMOOTH",
"502.333 31 OFFCURVE",
"513 43.667 OFFCURVE",
"523 69 CURVE SMOOTH",
"543 122.333 OFFCURVE",
"577.333 182 OFFCURVE",
"626 248 CURVE SMOOTH",
"668 305.333 OFFCURVE",
"712 356.333 OFFCURVE",
"758 401 CURVE SMOOTH",
"802 444.333 OFFCURVE",
"831 466 OFFCURVE",
"845 466 CURVE SMOOTH",
"849 466 OFFCURVE",
"851 463.333 OFFCURVE",
"851 458 CURVE SMOOTH",
"851 452 OFFCURVE",
"848.667 443.333 OFFCURVE",
"844 432 CURVE SMOOTH",
"836 415.333 OFFCURVE",
"811.667 372.667 OFFCURVE",
"771 304 CURVE SMOOTH",
"726.333 228.667 OFFCURVE",
"693 169 OFFCURVE",
"671 125 CURVE SMOOTH",
"635 55 OFFCURVE",
"613 -1.333 OFFCURVE",
"605 -44 CURVE SMOOTH",
"602.333 -58.667 OFFCURVE",
"601 -72.333 OFFCURVE",
"601 -85 CURVE SMOOTH",
"601 -122.333 OFFCURVE",
"613.333 -141 OFFCURVE",
"638 -141 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"152.333 89.667 OFFCURVE",
"130.333 121.667 OFFCURVE",
"113 163 CURVE SMOOTH",
"97 199.667 OFFCURVE",
"87.667 236 OFFCURVE",
"85 272 CURVE SMOOTH",
"83.667 285.333 OFFCURVE",
"83 298.333 OFFCURVE",
"83 311 CURVE SMOOTH",
"83 365 OFFCURVE",
"93.333 408.333 OFFCURVE",
"114 441 CURVE SMOOTH",
"132 469.667 OFFCURVE",
"153.333 484 OFFCURVE",
"178 484 CURVE SMOOTH",
"198 484 OFFCURVE",
"214.667 474.333 OFFCURVE",
"228 455 CURVE SMOOTH",
"242 433.667 OFFCURVE",
"249 404 OFFCURVE",
"249 366 CURVE SMOOTH",
"248.333 269.333 OFFCURVE",
"225 169.667 OFFCURVE",
"179 67 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01277 7 87 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 8 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 8 164 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012124 8 138 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 87 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01245 87 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 94 117 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01296 69 94 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 164 122 164 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 164 25 164 41 164 57 164 73 164 89 164 105 164 121 164 137 164 153 164 169 164 185 164 201 164 217 164 233 164 249 164 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 164 25 164 41 164 57 164 73 164 89 164 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012164 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 138 122 138 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 153 138 169 138 185 138 201 138 217 138 233 138 249 138 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012172 2 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01290 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012126 4 136 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 4 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012100 4 166 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 819;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"650.333 -140.333 OFFCURVE",
"661.667 -138.333 OFFCURVE",
"675 -133 CURVE SMOOTH",
"690.333 -127.667 OFFCURVE",
"703 -120 OFFCURVE",
"713 -110 CURVE SMOOTH",
"719.667 -102.667 OFFCURVE",
"723 -95.667 OFFCURVE",
"723 -89 CURVE SMOOTH",
"723 -86.333 OFFCURVE",
"721.667 -85.667 OFFCURVE",
"719 -87 CURVE",
"719 -95.437 OFFCURVE",
"684.249 -114 OFFCURVE",
"669 -114 CURVE SMOOTH",
"645.667 -114 OFFCURVE",
"634 -95.333 OFFCURVE",
"634 -58 CURVE SMOOTH",
"634 -16.667 OFFCURVE",
"647.333 43.667 OFFCURVE",
"674 123 CURVE SMOOTH",
"690 170.333 OFFCURVE",
"722.333 244 OFFCURVE",
"771 344 CURVE SMOOTH",
"786.333 374.667 OFFCURVE",
"794 400.333 OFFCURVE",
"794 421 CURVE SMOOTH",
"794 443 OFFCURVE",
"784.333 454 OFFCURVE",
"765 454 CURVE SMOOTH",
"757.667 454 OFFCURVE",
"749 452.333 OFFCURVE",
"739 449 CURVE SMOOTH",
"721.667 443.667 OFFCURVE",
"697.333 430 OFFCURVE",
"666 408 CURVE SMOOTH",
"592 354.667 OFFCURVE",
"506 270 OFFCURVE",
"408 154 CURVE",
"442 258 OFFCURVE",
"459 336.667 OFFCURVE",
"459 390 CURVE SMOOTH",
"459 468.667 OFFCURVE",
"428.333 512 OFFCURVE",
"367 520 CURVE",
"349.667 548 OFFCURVE",
"326.333 562 OFFCURVE",
"297 562 CURVE SMOOTH",
"255.667 562 OFFCURVE",
"212 530.333 OFFCURVE",
"188 473 CURVE",
"138 447.667 OFFCURVE",
"98 418 OFFCURVE",
"68 384 CURVE SMOOTH",
"32.667 344 OFFCURVE",
"15 303 OFFCURVE",
"15 261 CURVE SMOOTH",
"15 219.667 OFFCURVE",
"36.333 196 OFFCURVE",
"71 196 CURVE SMOOTH",
"79.667 196 OFFCURVE",
"89.333 197.667 OFFCURVE",
"100 201 CURVE SMOOTH",
"105.333 203 OFFCURVE",
"108 206 OFFCURVE",
"108 210 CURVE SMOOTH",
"108 212.667 OFFCURVE",
"106 214 OFFCURVE",
"102 214 CURVE SMOOTH",
"100 214 OFFCURVE",
"97 213.5 OFFCURVE",
"93 212.5 CURVE SMOOTH",
"89 211.5 OFFCURVE",
"86 211 OFFCURVE",
"84 211 CURVE SMOOTH",
"62.667 211 OFFCURVE",
"45 230 OFFCURVE",
"45 254 CURVE SMOOTH",
"45 282 OFFCURVE",
"57.667 313.333 OFFCURVE",
"83 348 CURVE SMOOTH",
"107 380 OFFCURVE",
"137.667 410 OFFCURVE",
"175 438 CURVE",
"169 413.333 OFFCURVE",
"166 386.333 OFFCURVE",
"166 357 CURVE SMOOTH",
"166 340.333 OFFCURVE",
"167 323 OFFCURVE",
"169 305 CURVE SMOOTH",
"181.667 201 OFFCURVE",
"224 131.667 OFFCURVE",
"296 97 CURVE",
"293 91 LINE SMOOTH",
"275.667 49 OFFCURVE",
"258.667 14 OFFCURVE",
"242 -14 CURVE SMOOTH",
"240.667 -16.667 OFFCURVE",
"241 -18.667 OFFCURVE",
"243 -20 CURVE SMOOTH",
"245.667 -21.333 OFFCURVE",
"247.667 -20.667 OFFCURVE",
"249 -18 CURVE SMOOTH",
"264.333 8 OFFCURVE",
"280 40.333 OFFCURVE",
"296 79 CURVE SMOOTH",
"303 94 LINE",
"313.667 89.333 OFFCURVE",
"325 85.667 OFFCURVE",
"337 83 CURVE",
"323 49 OFFCURVE",
"313.333 24.333 OFFCURVE",
"308 9 CURVE SMOOTH",
"304 0.333 OFFCURVE",
"302 -7 OFFCURVE",
"302 -13 CURVE SMOOTH",
"302 -18.333 OFFCURVE",
"304.333 -21 OFFCURVE",
"309 -21 CURVE SMOOTH",
"313.667 -21 OFFCURVE",
"320.333 -18 OFFCURVE",
"329 -12 CURVE SMOOTH",
"337 -6.667 OFFCURVE",
"342 -2.333 OFFCURVE",
"344 1 CURVE SMOOTH",
"362.667 35.667 OFFCURVE",
"376.667 62.333 OFFCURVE",
"386 81 CURVE",
"419.333 83.667 OFFCURVE",
"449.333 95 OFFCURVE",
"476 115 CURVE SMOOTH",
"503.333 137 OFFCURVE",
"522.667 165 OFFCURVE",
"534 199 CURVE",
"534 201.667 OFFCURVE",
"533 203.333 OFFCURVE",
"531 204 CURVE SMOOTH",
"529 204.667 OFFCURVE",
"527.333 203.667 OFFCURVE",
"526 201 CURVE",
"507.333 142.333 OFFCURVE",
"454.333 100 OFFCURVE",
"393 92 CURVE",
"417 130 OFFCURVE",
"449 170.333 OFFCURVE",
"489 213 CURVE SMOOTH",
"511.667 237 OFFCURVE",
"548.333 273 OFFCURVE",
"599 321 CURVE SMOOTH",
"635.667 356.333 OFFCURVE",
"672.667 385.333 OFFCURVE",
"710 408 CURVE SMOOTH",
"721.333 414.667 OFFCURVE",
"730.333 418 OFFCURVE",
"737 418 CURVE SMOOTH",
"745 418 OFFCURVE",
"749 412.667 OFFCURVE",
"749 402 CURVE SMOOTH",
"749 396 OFFCURVE",
"747.333 387.667 OFFCURVE",
"744 377 CURVE SMOOTH",
"706.667 275.667 OFFCURVE",
"676.333 194.667 OFFCURVE",
"653 134 CURVE SMOOTH",
"621 47 LINE SMOOTH",
"605.667 -1.667 OFFCURVE",
"598 -41 OFFCURVE",
"598 -71 CURVE SMOOTH",
"598 -111.667 OFFCURVE",
"612.333 -134.333 OFFCURVE",
"641 -139 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"234.333 139 OFFCURVE",
"195.667 207 OFFCURVE",
"183 311 CURVE SMOOTH",
"180.333 329 OFFCURVE",
"179 346.667 OFFCURVE",
"179 364 CURVE SMOOTH",
"179 394.667 OFFCURVE",
"182.667 422.667 OFFCURVE",
"190 448 CURVE",
"248.667 488 OFFCURVE",
"300 508 OFFCURVE",
"344 508 CURVE SMOOTH",
"349.333 508 OFFCURVE",
"354.667 507.333 OFFCURVE",
"360 506 CURVE",
"368.667 487.333 OFFCURVE",
"373.333 464 OFFCURVE",
"374 436 CURVE SMOOTH",
"376.667 349.333 OFFCURVE",
"351.667 239.667 OFFCURVE",
"299 107 CURVE"
);
},
{
closed = 1;
nodes = (
"329 95 OFFCURVE",
"317.333 98.333 OFFCURVE",
"306 103 CURVE",
"362.667 243.667 OFFCURVE",
"390 354.667 OFFCURVE",
"388 436 CURVE SMOOTH",
"387.333 462 OFFCURVE",
"383 484.333 OFFCURVE",
"375 503 CURVE",
"410.333 493 OFFCURVE",
"428 462.333 OFFCURVE",
"428 411 CURVE SMOOTH",
"428 351 OFFCURVE",
"406.667 264 OFFCURVE",
"364 150 CURVE SMOOTH",
"341 93 LINE"
);
},
{
closed = 1;
nodes = (
"223.667 529 OFFCURVE",
"259.667 556 OFFCURVE",
"293 556 CURVE SMOOTH",
"317 556 OFFCURVE",
"336.667 544.333 OFFCURVE",
"352 521 CURVE",
"345 521 LINE SMOOTH",
"305.667 521 OFFCURVE",
"257.667 507.667 OFFCURVE",
"201 481 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012117 8 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 6 111 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 6 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012143 8 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 8 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012153 8 62 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0124 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 25 122 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 21 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 62 122 62 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01272 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012113 111 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 117 22 117 38 117 54 117 70 117 86 117 102 117 118 117 134 117 150 117 166 117 182 117 198 117 214 117 230 117 246 117 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 117 22 117 38 117 54 117 70 117 86 117 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 117 117 117 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012145 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012153 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012156 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012139 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 11 233 11 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 11 24 11 40 11 56 11 72 11 88 11 104 11 120 11 136 11 152 11 168 11 184 11 200 11 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0122 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 139 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 761;
}
);
note = N;
unicode = 004E;
},
{
glyphname = NJ;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 661, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1107;
}
);
unicode = 01CA;
},
{
glyphname = Nacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 712, 106}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, 598, 254}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0147;
},
{
glyphname = Ncommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 332, -32}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"794 443 OFFCURVE",
"784 454 OFFCURVE",
"765 454 CURVE SMOOTH",
"758 454 OFFCURVE",
"749 452 OFFCURVE",
"739 449 CURVE SMOOTH",
"722 444 OFFCURVE",
"697 430 OFFCURVE",
"666 408 CURVE SMOOTH",
"592 355 OFFCURVE",
"506 270 OFFCURVE",
"408 154 CURVE",
"442 258 OFFCURVE",
"459 337 OFFCURVE",
"459 390 CURVE SMOOTH",
"459 469 OFFCURVE",
"428 512 OFFCURVE",
"367 520 CURVE",
"350 548 OFFCURVE",
"326 562 OFFCURVE",
"297 562 CURVE SMOOTH",
"256 562 OFFCURVE",
"212 530 OFFCURVE",
"188 473 CURVE",
"138 448 OFFCURVE",
"98 418 OFFCURVE",
"68 384 CURVE SMOOTH",
"33 344 OFFCURVE",
"15 303 OFFCURVE",
"15 261 CURVE SMOOTH",
"15 220 OFFCURVE",
"36 196 OFFCURVE",
"71 196 CURVE SMOOTH",
"80 196 OFFCURVE",
"89 198 OFFCURVE",
"100 201 CURVE SMOOTH",
"105 203 OFFCURVE",
"108 206 OFFCURVE",
"108 210 CURVE SMOOTH",
"108 213 OFFCURVE",
"106 214 OFFCURVE",
"102 214 CURVE SMOOTH",
"100 214 OFFCURVE",
"97 214 OFFCURVE",
"93 213 CURVE SMOOTH",
"89 212 OFFCURVE",
"86 211 OFFCURVE",
"84 211 CURVE SMOOTH",
"63 211 OFFCURVE",
"45 230 OFFCURVE",
"45 254 CURVE SMOOTH",
"45 282 OFFCURVE",
"58 313 OFFCURVE",
"83 348 CURVE SMOOTH",
"107 380 OFFCURVE",
"138 410 OFFCURVE",
"175 438 CURVE",
"169 413 OFFCURVE",
"166 386 OFFCURVE",
"166 357 CURVE SMOOTH",
"166 340 OFFCURVE",
"167 323 OFFCURVE",
"169 305 CURVE SMOOTH",
"182 201 OFFCURVE",
"224 132 OFFCURVE",
"296 97 CURVE",
"293 91 LINE SMOOTH",
"273 50 OFFCURVE",
"259 14 OFFCURVE",
"242 -14 CURVE",
"241 -17 OFFCURVE",
"241 -19 OFFCURVE",
"243 -20 CURVE SMOOTH",
"246 -21 OFFCURVE",
"248 -21 OFFCURVE",
"249 -18 CURVE",
"264 8 OFFCURVE",
"278 41 OFFCURVE",
"296 79 CURVE SMOOTH",
"303 94 LINE",
"314 89 OFFCURVE",
"325 86 OFFCURVE",
"337 83 CURVE",
"323 49 OFFCURVE",
"313 24 OFFCURVE",
"308 9 CURVE SMOOTH",
"304 0 OFFCURVE",
"302 -7 OFFCURVE",
"302 -13 CURVE SMOOTH",
"302 -18 OFFCURVE",
"304 -21 OFFCURVE",
"309 -21 CURVE SMOOTH",
"314 -21 OFFCURVE",
"320 -18 OFFCURVE",
"329 -12 CURVE SMOOTH",
"337 -7 OFFCURVE",
"342 -2 OFFCURVE",
"344 1 CURVE SMOOTH",
"363 36 OFFCURVE",
"377 62 OFFCURVE",
"386 81 CURVE",
"419 84 OFFCURVE",
"449 95 OFFCURVE",
"476 115 CURVE SMOOTH",
"503 137 OFFCURVE",
"523 165 OFFCURVE",
"534 199 CURVE",
"534 202 OFFCURVE",
"533 203 OFFCURVE",
"531 204 CURVE SMOOTH",
"529 205 OFFCURVE",
"527 204 OFFCURVE",
"526 201 CURVE SMOOTH",
"507 142 OFFCURVE",
"454 100 OFFCURVE",
"393 92 CURVE",
"417 130 OFFCURVE",
"449 170 OFFCURVE",
"489 213 CURVE SMOOTH",
"512 237 OFFCURVE",
"548 273 OFFCURVE",
"599 321 CURVE SMOOTH",
"636 356 OFFCURVE",
"673 385 OFFCURVE",
"710 408 CURVE SMOOTH",
"721 415 OFFCURVE",
"730 418 OFFCURVE",
"737 418 CURVE SMOOTH",
"745 418 OFFCURVE",
"749 413 OFFCURVE",
"749 402 CURVE SMOOTH",
"749 380 OFFCURVE",
"703 246 OFFCURVE",
"692 217 CURVE SMOOTH",
"627 38 OFFCURVE",
"557 -184 OFFCURVE",
"448 -220 CURVE",
"411 -230 OFFCURVE",
"347 -211 OFFCURVE",
"356 -141 CURVE SMOOTH",
"360 -114 OFFCURVE",
"374 -96 OFFCURVE",
"382 -90 CURVE",
"385 -90 OFFCURVE",
"380 -86 OFFCURVE",
"375 -87 CURVE SMOOTH",
"367 -88 OFFCURVE",
"349 -106 OFFCURVE",
"344 -131 CURVE SMOOTH",
"327 -206 OFFCURVE",
"382 -251 OFFCURVE",
"448 -235 CURVE SMOOTH",
"584 -202 OFFCURVE",
"648 -11 OFFCURVE",
"719 187 CURVE SMOOTH",
"754 286 OFFCURVE",
"794 388 OFFCURVE",
"794 421 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"317 556 OFFCURVE",
"337 544 OFFCURVE",
"352 521 CURVE",
"345 521 LINE SMOOTH",
"306 521 OFFCURVE",
"258 508 OFFCURVE",
"201 481 CURVE",
"224 529 OFFCURVE",
"260 556 OFFCURVE",
"293 556 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"234 139 OFFCURVE",
"196 207 OFFCURVE",
"183 311 CURVE SMOOTH",
"180 329 OFFCURVE",
"179 347 OFFCURVE",
"179 364 CURVE SMOOTH",
"179 395 OFFCURVE",
"183 423 OFFCURVE",
"190 448 CURVE",
"249 488 OFFCURVE",
"300 508 OFFCURVE",
"344 508 CURVE SMOOTH",
"349 508 OFFCURVE",
"355 507 OFFCURVE",
"360 506 CURVE",
"369 487 OFFCURVE",
"373 464 OFFCURVE",
"374 436 CURVE SMOOTH",
"377 349 OFFCURVE",
"352 240 OFFCURVE",
"299 107 CURVE"
);
},
{
closed = 1;
nodes = (
"329 95 OFFCURVE",
"317 98 OFFCURVE",
"306 103 CURVE",
"363 244 OFFCURVE",
"390 355 OFFCURVE",
"388 436 CURVE SMOOTH",
"387 462 OFFCURVE",
"383 484 OFFCURVE",
"375 503 CURVE",
"410 493 OFFCURVE",
"428 462 OFFCURVE",
"428 411 CURVE SMOOTH",
"428 351 OFFCURVE",
"410 263 OFFCURVE",
"364 150 CURVE SMOOTH",
"341 93 LINE"
);
}
);
width = 761;
}
);
unicode = 014A;
},
{
glyphname = Nj;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 808, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 963;
}
);
unicode = 01CB;
},
{
glyphname = Ntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 627, 118}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"178.333 469.333 OFFCURVE",
"127 438 OFFCURVE",
"89 400 CURVE SMOOTH",
"47 358 OFFCURVE",
"26 312.333 OFFCURVE",
"26 263 CURVE SMOOTH",
"26 220.333 OFFCURVE",
"53.667 182.333 OFFCURVE",
"91 165 CURVE",
"78.333 136.333 OFFCURVE",
"72 109.667 OFFCURVE",
"72 85 CURVE SMOOTH",
"72 51 OFFCURVE",
"84 24.667 OFFCURVE",
"108 6 CURVE SMOOTH",
"134.667 -15.333 OFFCURVE",
"173.667 -26 OFFCURVE",
"225 -26 CURVE SMOOTH",
"311 -26 OFFCURVE",
"396.667 -7.333 OFFCURVE",
"482 30 CURVE SMOOTH",
"572.667 69.333 OFFCURVE",
"643.333 122 OFFCURVE",
"694 188 CURVE SMOOTH",
"756.667 268.667 OFFCURVE",
"774.667 342 OFFCURVE",
"748 408 CURVE SMOOTH",
"722.667 471.333 OFFCURVE",
"662 511.667 OFFCURVE",
"566 529 CURVE",
"561.333 559 OFFCURVE",
"549 582 OFFCURVE",
"529 598 CURVE SMOOTH",
"509.667 612 OFFCURVE",
"485.333 619 OFFCURVE",
"456 619 CURVE SMOOTH",
"416 619 OFFCURVE",
"376 606.667 OFFCURVE",
"336 582 CURVE SMOOTH",
"298 558.667 OFFCURVE",
"267 529.333 OFFCURVE",
"243 494 CURVE"
);
},
{
closed = 1;
nodes = (
"208 221.667 OFFCURVE",
"228 188.333 OFFCURVE",
"258 161 CURVE",
"248 159.667 OFFCURVE",
"238 159 OFFCURVE",
"228 159 CURVE SMOOTH",
"200 159 OFFCURVE",
"171 163 OFFCURVE",
"141 171 CURVE",
"154.333 202.333 OFFCURVE",
"173.333 232.333 OFFCURVE",
"198 261 CURVE"
);
},
{
closed = 1;
nodes = (
"199 409 OFFCURVE",
"190 366.667 OFFCURVE",
"190 322 CURVE SMOOTH",
"190 312.667 OFFCURVE",
"190.333 304 OFFCURVE",
"191 296 CURVE",
"152.333 260.667 OFFCURVE",
"122.333 223.667 OFFCURVE",
"101 185 CURVE",
"70.333 198.333 OFFCURVE",
"49 230.333 OFFCURVE",
"49 265 CURVE SMOOTH",
"49 298.333 OFFCURVE",
"65 331.667 OFFCURVE",
"97 365 CURVE SMOOTH",
"126.333 396.333 OFFCURVE",
"166.333 424.333 OFFCURVE",
"217 449 CURVE"
);
},
{
closed = 1;
nodes = (
"549.333 68 OFFCURVE",
"402.667 -6 OFFCURVE",
"224 -6 CURVE SMOOTH",
"157.333 -6 OFFCURVE",
"119 29 OFFCURVE",
"119 89 CURVE SMOOTH",
"119 109 OFFCURVE",
"123.667 130.667 OFFCURVE",
"133 154 CURVE",
"163.667 145.333 OFFCURVE",
"194 141 OFFCURVE",
"224 141 CURVE SMOOTH",
"242 141 OFFCURVE",
"259.333 142.333 OFFCURVE",
"276 145 CURVE",
"318 114.333 OFFCURVE",
"365.667 99 OFFCURVE",
"419 99 CURVE SMOOTH",
"468.333 99 OFFCURVE",
"510.667 112 OFFCURVE",
"546 138 CURVE SMOOTH",
"547.333 139.333 OFFCURVE",
"548 141 OFFCURVE",
"548 143 CURVE",
"546.667 144.333 OFFCURVE",
"545.333 145 OFFCURVE",
"544 145 CURVE",
"541 144 LINE",
"507 118.667 OFFCURVE",
"467 106 OFFCURVE",
"421 106 CURVE SMOOTH",
"372.333 106 OFFCURVE",
"328.333 120 OFFCURVE",
"289 148 CURVE",
"359 164 OFFCURVE",
"419.667 203 OFFCURVE",
"471 265 CURVE SMOOTH",
"517.667 322.333 OFFCURVE",
"548.333 387.667 OFFCURVE",
"563 461 CURVE SMOOTH",
"566.333 477.667 OFFCURVE",
"567.667 493.333 OFFCURVE",
"567 508 CURVE",
"615.667 498.667 OFFCURVE",
"654 482 OFFCURVE",
"682 458 CURVE SMOOTH",
"710.667 432 OFFCURVE",
"725 400.333 OFFCURVE",
"725 363 CURVE SMOOTH",
"725 318.333 OFFCURVE",
"704.667 269.333 OFFCURVE",
"664 216 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"550.667 495 OFFCURVE",
"549.333 478.333 OFFCURVE",
"546 461 CURVE SMOOTH",
"533.333 393.667 OFFCURVE",
"504.333 332.333 OFFCURVE",
"459 277 CURVE SMOOTH",
"406.333 211.667 OFFCURVE",
"344 173.667 OFFCURVE",
"272 163 CURVE",
"238.667 192.333 OFFCURVE",
"217.667 229.333 OFFCURVE",
"209 274 CURVE",
"240.333 310 OFFCURVE",
"276.333 340.667 OFFCURVE",
"317 366 CURVE SMOOTH",
"355 390 OFFCURVE",
"390.333 405 OFFCURVE",
"423 411 CURVE SMOOTH",
"427.667 412.333 OFFCURVE",
"430 414.667 OFFCURVE",
"430 418 CURVE SMOOTH",
"430 420.667 OFFCURVE",
"427 421.667 OFFCURVE",
"421 421 CURVE SMOOTH",
"391 415.667 OFFCURVE",
"356.667 403 OFFCURVE",
"318 383 CURVE SMOOTH",
"278 362.333 OFFCURVE",
"240 337 OFFCURVE",
"204 307 CURVE",
"204 322 LINE SMOOTH",
"204 370 OFFCURVE",
"214.333 415 OFFCURVE",
"235 457 CURVE",
"302.333 487.667 OFFCURVE",
"371.667 506.333 OFFCURVE",
"443 513 CURVE SMOOTH",
"481 516.333 OFFCURVE",
"516.667 515.667 OFFCURVE",
"550 511 CURVE"
);
},
{
closed = 1;
nodes = (
"516 536.667 OFFCURVE",
"481.667 538 OFFCURVE",
"445 536 CURVE SMOOTH",
"383 533.333 OFFCURVE",
"322 521.667 OFFCURVE",
"262 501 CURVE",
"298.667 550.333 OFFCURVE",
"343.667 584 OFFCURVE",
"397 602 CURVE SMOOTH",
"419.667 609.333 OFFCURVE",
"440 613 OFFCURVE",
"458 613 CURVE SMOOTH",
"510 613 OFFCURVE",
"540 586 OFFCURVE",
"548 532 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01251 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012120 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 6 58 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 58 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 51 117 51 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 120 117 120 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012123 4 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 3 116 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012100 116 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 763;
}
);
note = O;
unicode = 004F;
},
{
glyphname = Oacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 569, 218}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Obreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 014E;
},
{
glyphname = Ocircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 496, 211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 517, 155}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 71, -488}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 518, 155}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 521, 149}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 524, 149}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 528, 149}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED6;
},
{
glyphname = Odblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 507, 174}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 020C;
},
{
glyphname = Odieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 593, 293}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Odieresismacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 558, 151}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 508, 207}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 022A;
},
{
glyphname = Odotaccentmacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 536, 127}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 489, 187}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 0230;
},
{
glyphname = Odotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 74, -496}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ECC;
},
{
glyphname = Ograve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, 533, 196}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Ohookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 563, 118}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 579, 54}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 575, 169}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 65, -486}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 528, 151}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 558, 122}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 505, 150}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 576, 219}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 516, 158}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 020E;
},
{
glyphname = Omacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 507, 175}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 014C;
},
{
glyphname = Oogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 01EA;
},
{
glyphname = Oslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{436, -128}";
},
{
name = top;
position = "{569, 391}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"112.333 -125 OFFCURVE",
"116.333 -123.667 OFFCURVE",
"121 -121 CURVE SMOOTH",
"137 -110.333 OFFCURVE",
"152.667 -97.333 OFFCURVE",
"170 -80 CURVE",
"179 -80 LINE SMOOTH",
"255.667 -80 OFFCURVE",
"332.333 -63 OFFCURVE",
"409 -29 CURVE SMOOTH",
"460.987 -9.195 OFFCURVE",
"570.086 63.81 OFFCURVE",
"599 112 CURVE SMOOTH",
"635 166.667 OFFCURVE",
"659 211.333 OFFCURVE",
"659 258 CURVE SMOOTH",
"659 308 OFFCURVE",
"636.333 348.333 OFFCURVE",
"591 379 CURVE SMOOTH",
"584.333 383 OFFCURVE",
"577 387 OFFCURVE",
"569 391 CURVE",
"602.333 420.333 OFFCURVE",
"631.333 437 OFFCURVE",
"658 441 CURVE",
"663.333 441 OFFCURVE",
"669 439.333 OFFCURVE",
"675 436 CURVE SMOOTH",
"681 432.667 OFFCURVE",
"685.333 431 OFFCURVE",
"688 431 CURVE SMOOTH",
"692 431 OFFCURVE",
"694 432.667 OFFCURVE",
"694 436 CURVE SMOOTH",
"694 442 OFFCURVE",
"690.333 447 OFFCURVE",
"683 451 CURVE SMOOTH",
"671 457.667 OFFCURVE",
"657.667 461 OFFCURVE",
"643 461 CURVE SMOOTH",
"603 461 OFFCURVE",
"567 440 OFFCURVE",
"531 408 CURVE",
"516.333 412 OFFCURVE",
"501.333 416.333 OFFCURVE",
"484 419 CURVE",
"480.667 443 OFFCURVE",
"471.667 461.667 OFFCURVE",
"457 475 CURVE SMOOTH",
"439 491.667 OFFCURVE",
"415.333 500 OFFCURVE",
"386 500 CURVE SMOOTH",
"321.333 500 OFFCURVE",
"265 471.667 OFFCURVE",
"217 415 CURVE SMOOTH",
"208.333 405.667 OFFCURVE",
"200.667 396 OFFCURVE",
"194 386 CURVE",
"145.333 368 OFFCURVE",
"105.333 346 OFFCURVE",
"74 320 CURVE SMOOTH",
"24.667 279.333 OFFCURVE",
"0 232.333 OFFCURVE",
"0 179 CURVE SMOOTH",
"0 141.667 OFFCURVE",
"24.667 106.667 OFFCURVE",
"58 92 CURVE",
"46.667 66 OFFCURVE",
"41 42 OFFCURVE",
"41 20 CURVE SMOOTH",
"41 -10 OFFCURVE",
"52 -33.667 OFFCURVE",
"74 -51 CURVE SMOOTH",
"90.667 -65.667 OFFCURVE",
"114 -74.667 OFFCURVE",
"144 -78 CURVE",
"138.667 -84 OFFCURVE",
"133 -90 OFFCURVE",
"127.5 -95 CURVE SMOOTH",
"111 -111 LINE",
"106.333 -114.333 OFFCURVE",
"104 -117.667 OFFCURVE",
"104 -121 CURVE SMOOTH",
"104 -123.667 OFFCURVE",
"105.667 -125 OFFCURVE",
"109 -125 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"111.667 -55.667 OFFCURVE",
"84 -25 OFFCURVE",
"84 23 CURVE SMOOTH",
"84 41.667 OFFCURVE",
"88 61.333 OFFCURVE",
"96 82 CURVE",
"122.667 74 OFFCURVE",
"150 70 OFFCURVE",
"178 70 CURVE SMOOTH",
"216 70 OFFCURVE",
"251.333 77.333 OFFCURVE",
"284 92 CURVE",
"246.667 36 OFFCURVE",
"205 -14.333 OFFCURVE",
"161 -61 CURVE"
);
},
{
closed = 1;
nodes = (
"155.667 86 OFFCURVE",
"129.667 90 OFFCURVE",
"103 98 CURVE",
"126.333 150 OFFCURVE",
"164.667 198 OFFCURVE",
"218 242 CURVE SMOOTH",
"266 280.667 OFFCURVE",
"312 304.333 OFFCURVE",
"356 313 CURVE",
"360.667 313 OFFCURVE",
"363 315 OFFCURVE",
"363 319 CURVE SMOOTH",
"363 321 OFFCURVE",
"360.333 321.667 OFFCURVE",
"355 321 CURVE SMOOTH",
"310.333 314.333 OFFCURVE",
"259.667 291.667 OFFCURVE",
"203 253 CURVE SMOOTH",
"141.667 210.333 OFFCURVE",
"96.667 162.333 OFFCURVE",
"68 109 CURVE",
"40 121 OFFCURVE",
"20 150.333 OFFCURVE",
"20 181 CURVE SMOOTH",
"20 225.667 OFFCURVE",
"46 266.333 OFFCURVE",
"98 303 CURVE SMOOTH",
"118.667 318.333 OFFCURVE",
"142.333 332.333 OFFCURVE",
"169 345 CURVE",
"155 316.333 OFFCURVE",
"148 285.667 OFFCURVE",
"148 253 CURVE SMOOTH",
"148 229.151 OFFCURVE",
"160 228.732 OFFCURVE",
"160 253 CURVE SMOOTH",
"160 290.333 OFFCURVE",
"169 320 OFFCURVE",
"185 352 CURVE",
"209 362.667 OFFCURVE",
"235 370.667 OFFCURVE",
"263 380 CURVE SMOOTH",
"323.667 397.333 OFFCURVE",
"375.333 406 OFFCURVE",
"418 406 CURVE SMOOTH",
"436.667 406 OFFCURVE",
"455 404.333 OFFCURVE",
"471 403 CURVE",
"471 397 LINE SMOOTH",
"471 376.333 OFFCURVE",
"468.667 356 OFFCURVE",
"464 336 CURVE",
"447.333 315.333 OFFCURVE",
"431.333 294.667 OFFCURVE",
"416 274 CURVE SMOOTH",
"400.667 253.333 OFFCURVE",
"386 234 OFFCURVE",
"372 215 CURVE SMOOTH",
"339 170 LINE SMOOTH",
"328 155 OFFCURVE",
"316 138.333 OFFCURVE",
"304 121 CURVE",
"264.667 97.667 OFFCURVE",
"223.667 86 OFFCURVE",
"181 86 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"225 -26 OFFCURVE",
"266 22 OFFCURVE",
"313 82 CURVE SMOOTH",
"354 135 LINE",
"363.333 143 OFFCURVE",
"371.667 150.667 OFFCURVE",
"381 160 CURVE SMOOTH",
"407.667 188 OFFCURVE",
"429.667 219.333 OFFCURVE",
"447 254 CURVE",
"489.667 307.333 OFFCURVE",
"523.333 347.333 OFFCURVE",
"554 378 CURVE",
"557.333 376.667 OFFCURVE",
"560 375 OFFCURVE",
"562.5 373.5 CURVE SMOOTH",
"569 369 LINE SMOOTH",
"607 343 OFFCURVE",
"628 311.667 OFFCURVE",
"628 269 CURVE SMOOTH",
"628 229 OFFCURVE",
"607.667 186 OFFCURVE",
"573 138 CURVE SMOOTH",
"472.807 0.894 OFFCURVE",
"357.274 -59.286 OFFCURVE",
"189 -62 CURVE"
);
},
{
closed = 1;
nodes = (
"215 398 LINE SMOOTH",
"244 442 OFFCURVE",
"286.333 468.667 OFFCURVE",
"333 484 CURVE SMOOTH",
"353 490.667 OFFCURVE",
"370.667 494 OFFCURVE",
"388 494 CURVE SMOOTH",
"415.333 494 OFFCURVE",
"436.333 485 OFFCURVE",
"451 467 CURVE SMOOTH",
"459.667 455 OFFCURVE",
"465.667 440 OFFCURVE",
"469 422 CURVE",
"448.333 424.667 OFFCURVE",
"426.333 426 OFFCURVE",
"403 426 CURVE SMOOTH",
"350.333 426 OFFCURVE",
"295.333 417.667 OFFCURVE",
"238 401 CURVE SMOOTH",
"233.333 399.667 OFFCURVE",
"229 398 OFFCURVE",
"224.5 396.5 CURVE SMOOTH",
"211 392 LINE"
);
},
{
closed = 1;
nodes = (
"482 358 LINE",
"484.667 372 OFFCURVE",
"486 385.333 OFFCURVE",
"486 398 CURVE SMOOTH",
"486 400 LINE",
"495.333 398.667 OFFCURVE",
"505.667 395.667 OFFCURVE",
"515 393 CURVE",
"509 387 OFFCURVE",
"504 381 OFFCURVE",
"498 375 CURVE SMOOTH",
"481 357 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01258 7 160 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 8 155 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 8 110 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01220 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01254 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01280 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 86 117 86 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012102 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 110 122 110 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012123 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012151 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012184 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012102 3 138 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 4 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01275 2 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012168 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 694;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Oslashacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 537, 95}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 694;
}
);
unicode = 01FE;
},
{
glyphname = Otilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 503, 199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = Otildemacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 499, 134}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"764 -38 OFFCURVE",
"782.333 -36.667 OFFCURVE",
"801 -34 CURVE SMOOTH",
"864.333 -26.667 OFFCURVE",
"918.667 -9 OFFCURVE",
"964 19 CURVE SMOOTH",
"1014 50.333 OFFCURVE",
"1040 86 OFFCURVE",
"1042 126 CURVE SMOOTH",
"1042.667 132.667 OFFCURVE",
"1041.667 136 OFFCURVE",
"1039 136 CURVE SMOOTH",
"1036.333 136 OFFCURVE",
"1034.667 133.333 OFFCURVE",
"1034 128 CURVE SMOOTH",
"1030.667 94 OFFCURVE",
"1006.333 63 OFFCURVE",
"961 35 CURVE SMOOTH",
"917.667 9 OFFCURVE",
"867 -8 OFFCURVE",
"809 -16 CURVE SMOOTH",
"791.667 -18.667 OFFCURVE",
"775 -20 OFFCURVE",
"759 -20 CURVE SMOOTH",
"710.333 -20 OFFCURVE",
"671.333 -9.333 OFFCURVE",
"642 12 CURVE SMOOTH",
"614.667 32 OFFCURVE",
"601 57 OFFCURVE",
"601 87 CURVE SMOOTH",
"601 91 OFFCURVE",
"601.333 95 OFFCURVE",
"602 99 CURVE",
"646.667 132.333 OFFCURVE",
"683 170 OFFCURVE",
"711 212 CURVE",
"727 218.667 OFFCURVE",
"744.333 224.333 OFFCURVE",
"763 229 CURVE SMOOTH",
"820.333 244.333 OFFCURVE",
"874.667 251 OFFCURVE",
"926 249 CURVE SMOOTH",
"942 248.333 OFFCURVE",
"950 252.667 OFFCURVE",
"950 262 CURVE SMOOTH",
"950 270.667 OFFCURVE",
"943 274.667 OFFCURVE",
"929 274 CURVE SMOOTH",
"891.667 272.667 OFFCURVE",
"856.667 276.667 OFFCURVE",
"824 286 CURVE SMOOTH",
"786 297.333 OFFCURVE",
"764.333 312.667 OFFCURVE",
"759 332 CURVE",
"759 356 LINE",
"771 398.667 OFFCURVE",
"821.667 441 OFFCURVE",
"883 461 CURVE SMOOTH",
"920.333 472.333 OFFCURVE",
"952 478 OFFCURVE",
"978 478 CURVE SMOOTH",
"1005.333 478 OFFCURVE",
"1025.667 472 OFFCURVE",
"1039 460 CURVE SMOOTH",
"1050.333 450.667 OFFCURVE",
"1056 438.333 OFFCURVE",
"1056 423 CURVE SMOOTH",
"1056 397.928 OFFCURVE",
"1014 387.054 OFFCURVE",
"1014 376 CURVE SMOOTH",
"1014 373.333 OFFCURVE",
"1018 372.333 OFFCURVE",
"1026 373 CURVE SMOOTH",
"1063.333 378.333 OFFCURVE",
"1085 402.667 OFFCURVE",
"1085 428 CURVE SMOOTH",
"1085 445.333 OFFCURVE",
"1076.333 460 OFFCURVE",
"1059 472 CURVE SMOOTH",
"1040.333 485.333 OFFCURVE",
"1014 492 OFFCURVE",
"980 492 CURVE SMOOTH",
"952 492 OFFCURVE",
"920 487.333 OFFCURVE",
"884 478 CURVE SMOOTH",
"824 461.333 OFFCURVE",
"779 437.333 OFFCURVE",
"749 406 CURVE",
"723.667 470.667 OFFCURVE",
"662.667 511.667 OFFCURVE",
"566 529 CURVE",
"561.333 559 OFFCURVE",
"549 582 OFFCURVE",
"529 598 CURVE SMOOTH",
"509.667 612 OFFCURVE",
"485.333 619 OFFCURVE",
"456 619 CURVE SMOOTH",
"416 619 OFFCURVE",
"376 606.667 OFFCURVE",
"336 582 CURVE SMOOTH",
"298 558.667 OFFCURVE",
"267 529.333 OFFCURVE",
"243 494 CURVE",
"178.333 469.333 OFFCURVE",
"127 438 OFFCURVE",
"89 400 CURVE SMOOTH",
"47 358 OFFCURVE",
"26 312.333 OFFCURVE",
"26 263 CURVE SMOOTH",
"26 220.333 OFFCURVE",
"53.667 182.333 OFFCURVE",
"91 165 CURVE",
"78.333 136.333 OFFCURVE",
"72 109.667 OFFCURVE",
"72 85 CURVE SMOOTH",
"72 51 OFFCURVE",
"84 24.667 OFFCURVE",
"108 6 CURVE SMOOTH",
"134.667 -15.333 OFFCURVE",
"173.667 -26 OFFCURVE",
"225 -26 CURVE SMOOTH",
"335.667 -26 OFFCURVE",
"459.667 8.333 OFFCURVE",
"561 71 CURVE",
"564.333 39.667 OFFCURVE",
"581.667 14 OFFCURVE",
"613 -6 CURVE SMOOTH",
"647 -27.333 OFFCURVE",
"691.333 -38 OFFCURVE",
"746 -38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"200 159 OFFCURVE",
"171 163 OFFCURVE",
"141 171 CURVE",
"154.333 202.333 OFFCURVE",
"173.333 232.333 OFFCURVE",
"198 261 CURVE",
"208 221.667 OFFCURVE",
"228 188.333 OFFCURVE",
"258 161 CURVE",
"248 159.667 OFFCURVE",
"238 159 OFFCURVE",
"228 159 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"70.333 198.333 OFFCURVE",
"49 230.333 OFFCURVE",
"49 265 CURVE SMOOTH",
"49 298.333 OFFCURVE",
"65 331.667 OFFCURVE",
"97 365 CURVE SMOOTH",
"126.333 396.333 OFFCURVE",
"166.333 424.333 OFFCURVE",
"217 449 CURVE",
"199 409 OFFCURVE",
"190 366.667 OFFCURVE",
"190 322 CURVE SMOOTH",
"190 312.667 OFFCURVE",
"190.333 304 OFFCURVE",
"191 296 CURVE",
"152.333 260.667 OFFCURVE",
"122.333 223.667 OFFCURVE",
"101 185 CURVE"
);
},
{
closed = 1;
nodes = (
"157.333 -6 OFFCURVE",
"119 29 OFFCURVE",
"119 89 CURVE SMOOTH",
"119 109 OFFCURVE",
"123.667 130.667 OFFCURVE",
"133 154 CURVE",
"163.667 145.333 OFFCURVE",
"194 141 OFFCURVE",
"224 141 CURVE SMOOTH",
"242 141 OFFCURVE",
"259.333 142.333 OFFCURVE",
"276 145 CURVE",
"318 114.333 OFFCURVE",
"365.667 99 OFFCURVE",
"419 99 CURVE SMOOTH",
"468.333 99 OFFCURVE",
"510.667 112 OFFCURVE",
"546 138 CURVE SMOOTH",
"547.333 139.333 OFFCURVE",
"548 141 OFFCURVE",
"548 143 CURVE",
"546.667 144.333 OFFCURVE",
"545.333 145 OFFCURVE",
"544 145 CURVE",
"541 144 LINE",
"507 118.667 OFFCURVE",
"467 106 OFFCURVE",
"421 106 CURVE SMOOTH",
"372.333 106 OFFCURVE",
"328.333 120 OFFCURVE",
"289 148 CURVE",
"359 164 OFFCURVE",
"419.667 203 OFFCURVE",
"471 265 CURVE SMOOTH",
"517.667 322.333 OFFCURVE",
"548.333 387.667 OFFCURVE",
"563 461 CURVE SMOOTH",
"566.333 477.667 OFFCURVE",
"567.667 493.333 OFFCURVE",
"567 508 CURVE",
"661.667 490.667 OFFCURVE",
"721 441.667 OFFCURVE",
"725 371 CURVE",
"722.333 363.667 OFFCURVE",
"720.333 356.333 OFFCURVE",
"719 349 CURVE SMOOTH",
"718.333 341.667 OFFCURVE",
"719 334.667 OFFCURVE",
"721 328 CURVE",
"713 293.333 OFFCURVE",
"694 256 OFFCURVE",
"664 216 CURVE",
"663 216 LINE",
"610.333 186 OFFCURVE",
"577.667 151.667 OFFCURVE",
"565 113 CURVE",
"470.333 33.667 OFFCURVE",
"356.667 -6 OFFCURVE",
"224 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"238.667 192.333 OFFCURVE",
"217.667 229.333 OFFCURVE",
"209 274 CURVE",
"240.333 310 OFFCURVE",
"276.333 340.667 OFFCURVE",
"317 366 CURVE SMOOTH",
"355 390 OFFCURVE",
"390.333 405 OFFCURVE",
"423 411 CURVE SMOOTH",
"427.667 412.333 OFFCURVE",
"430 414.667 OFFCURVE",
"430 418 CURVE SMOOTH",
"430 420.667 OFFCURVE",
"427 421.667 OFFCURVE",
"421 421 CURVE SMOOTH",
"391 415.667 OFFCURVE",
"356.667 403 OFFCURVE",
"318 383 CURVE SMOOTH",
"278 362.333 OFFCURVE",
"240 337 OFFCURVE",
"204 307 CURVE",
"204 322 LINE SMOOTH",
"204 370 OFFCURVE",
"214.333 415 OFFCURVE",
"235 457 CURVE",
"302.333 487.667 OFFCURVE",
"371.667 506.333 OFFCURVE",
"443 513 CURVE SMOOTH",
"481 516.333 OFFCURVE",
"516.667 515.667 OFFCURVE",
"550 511 CURVE",
"550.667 495 OFFCURVE",
"549.333 478.333 OFFCURVE",
"546 461 CURVE SMOOTH",
"533.333 393.667 OFFCURVE",
"504.333 332.333 OFFCURVE",
"459 277 CURVE SMOOTH",
"406.333 211.667 OFFCURVE",
"344 173.667 OFFCURVE",
"272 163 CURVE"
);
},
{
closed = 1;
nodes = (
"298.667 550.333 OFFCURVE",
"343.667 584 OFFCURVE",
"397 602 CURVE SMOOTH",
"419.667 609.333 OFFCURVE",
"440 613 OFFCURVE",
"458 613 CURVE SMOOTH",
"510 613 OFFCURVE",
"540 586 OFFCURVE",
"548 532 CURVE",
"516 536.667 OFFCURVE",
"481.667 538 OFFCURVE",
"445 536 CURVE SMOOTH",
"383 533.333 OFFCURVE",
"322 521.667 OFFCURVE",
"262 501 CURVE"
);
},
{
closed = 1;
nodes = (
"740 262 OFFCURVE",
"746.333 277.667 OFFCURVE",
"751 293 CURVE",
"774.333 277 OFFCURVE",
"802.667 269.333 OFFCURVE",
"836 270 CURVE",
"778 258.667 OFFCURVE",
"743.333 250.667 OFFCURVE",
"732 246 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 5 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 8 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 6 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012152 5 161 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01210 29 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 22 117 22 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01259 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01283 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01293 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 103 117 103 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012118 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012144 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 161 122 161 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 161 25 161 41 161 57 161 73 161 89 161 105 161 121 161 137 161 153 161 169 161 185 161 201 161 217 161 233 161 249 161 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 161 25 161 41 161 57 161 73 161 89 161 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012203 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012138 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012192 3 114 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01285 121 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012148 1 165 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 3 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012176 4 180 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 180 176 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012176 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01283 99 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012200 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012200 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 99 200 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012106 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012118 121 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012192 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1060;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"1 -87 OFFCURVE",
"2 -85 OFFCURVE",
"2 -82 CURVE SMOOTH",
"1 -78 OFFCURVE",
"1 -74 OFFCURVE",
"1 -69 CURVE SMOOTH",
"1 -30 OFFCURVE",
"28 49 OFFCURVE",
"82 169 CURVE",
"91 165 OFFCURVE",
"102 162 OFFCURVE",
"114 160 CURVE",
"87 95 OFFCURVE",
"74 46 OFFCURVE",
"75 12 CURVE SMOOTH",
"79 -34 OFFCURVE",
"107 -64 OFFCURVE",
"155 -61 CURVE SMOOTH",
"158 -61 OFFCURVE",
"160 -59 OFFCURVE",
"160 -56 CURVE SMOOTH",
"160 -50 OFFCURVE",
"157 -48 OFFCURVE",
"150 -50 CURVE SMOOTH",
"143 -52 LINE SMOOTH",
"128 -52 OFFCURVE",
"117 -44 OFFCURVE",
"110 -30 CURVE SMOOTH",
"102 -17 OFFCURVE",
"99 -2 OFFCURVE",
"99 16 CURVE SMOOTH",
"99 42 OFFCURVE",
"115 88 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE SMOOTH",
"248 151 OFFCURVE",
"305 161 OFFCURVE",
"369 180 CURVE SMOOTH",
"442 201 OFFCURVE",
"501 226 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"178 488 LINE",
"172 536 OFFCURVE",
"141 560 OFFCURVE",
"86 558 CURVE SMOOTH",
"43 557 OFFCURVE",
"6 531 OFFCURVE",
"6 499 CURVE SMOOTH",
"6 468 OFFCURVE",
"27 451 OFFCURVE",
"68 448 CURVE SMOOTH",
"91 446 OFFCURVE",
"123 448 OFFCURVE",
"161 456 CURVE",
"159 424 OFFCURVE",
"149 384 OFFCURVE",
"133 336 CURVE",
"130 335 LINE SMOOTH",
"64 306 OFFCURVE",
"26 265 OFFCURVE",
"26 231 CURVE SMOOTH",
"26 207 OFFCURVE",
"40 189 OFFCURVE",
"68 175 CURVE",
"17 57 OFFCURVE",
"-8 -22 OFFCURVE",
"-8 -61 CURVE SMOOTH",
"-8 -70 OFFCURVE",
"-7 -78 OFFCURVE",
"-6 -85 CURVE SMOOTH",
"-5 -88 OFFCURVE",
"-4 -89 OFFCURVE",
"-1 -88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 207 OFFCURVE",
"56 220 OFFCURVE",
"56 235 CURVE SMOOTH",
"56 264 OFFCURVE",
"80 291 OFFCURVE",
"126 315 CURVE",
"115 285 OFFCURVE",
"99 246 OFFCURVE",
"77 195 CURVE"
);
},
{
closed = 1;
nodes = (
"110 178 OFFCURVE",
"99 182 OFFCURVE",
"89 187 CURVE",
"117 249 OFFCURVE",
"136 295 OFFCURVE",
"148 326 CURVE",
"165 333 OFFCURVE",
"185 339 OFFCURVE",
"208 342 CURVE",
"174 283 OFFCURVE",
"145 227 OFFCURVE",
"121 175 CURVE"
);
},
{
closed = 1;
nodes = (
"42 478 OFFCURVE",
"26 486 OFFCURVE",
"26 502 CURVE SMOOTH",
"26 524 OFFCURVE",
"54 546 OFFCURVE",
"85 547 CURVE SMOOTH",
"131 550 OFFCURVE",
"157 530 OFFCURVE",
"161 486 CURVE",
"124 481 OFFCURVE",
"95 478 OFFCURVE",
"75 478 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"186 232 OFFCURVE",
"220 292 OFFCURVE",
"257 349 CURVE",
"272 350 OFFCURVE",
"287 351 OFFCURVE",
"302 351 CURVE SMOOTH",
"359 351 OFFCURVE",
"399 342 OFFCURVE",
"425 326 CURVE SMOOTH",
"428 324 OFFCURVE",
"433 323 OFFCURVE",
"436 323 CURVE SMOOTH",
"441 323 OFFCURVE",
"442 325 OFFCURVE",
"440 329 CURVE SMOOTH",
"425 355 OFFCURVE",
"384 367 OFFCURVE",
"320 367 CURVE SMOOTH",
"303 367 OFFCURVE",
"286 366 OFFCURVE",
"267 364 CURVE",
"286 392 OFFCURVE",
"300 410 OFFCURVE",
"309 419 CURVE SMOOTH",
"312 423 OFFCURVE",
"313 425 OFFCURVE",
"313 427 CURVE SMOOTH",
"313 433 OFFCURVE",
"308 437 OFFCURVE",
"296 437 CURVE SMOOTH",
"278 437 OFFCURVE",
"266 431 OFFCURVE",
"258 419 CURVE SMOOTH",
"246 403 OFFCURVE",
"233 383 OFFCURVE",
"218 357 CURVE",
"193 354 OFFCURVE",
"173 349 OFFCURVE",
"155 342 CURVE",
"170 389 OFFCURVE",
"178 428 OFFCURVE",
"179 459 CURVE",
"214 467 OFFCURVE",
"239 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01225 52 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 109 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 25 229 25 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01266 52 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0125 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0129 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01211 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01213 52 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01288 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012102 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 109 122 109 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012119 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01274 3 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 4 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 1 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 1 84 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 530;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Thorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"1 -87 OFFCURVE",
"2 -85 OFFCURVE",
"2 -82 CURVE SMOOTH",
"1 -78 OFFCURVE",
"1 -74 OFFCURVE",
"1 -69 CURVE SMOOTH",
"1 -30 OFFCURVE",
"28 49 OFFCURVE",
"82 169 CURVE",
"91 165 OFFCURVE",
"102 162 OFFCURVE",
"114 160 CURVE",
"62 23 OFFCURVE",
"49 -43 OFFCURVE",
"50 -90 CURVE SMOOTH",
"54 -152 OFFCURVE",
"82 -193 OFFCURVE",
"130 -189 CURVE SMOOTH",
"133 -189 OFFCURVE",
"135 -186 OFFCURVE",
"135 -182 CURVE SMOOTH",
"135 -174 OFFCURVE",
"132 -171 OFFCURVE",
"125 -174 CURVE SMOOTH",
"118 -176 LINE SMOOTH",
"104 -182 OFFCURVE",
"92 -166 OFFCURVE",
"85 -147 CURVE SMOOTH",
"77 -129 OFFCURVE",
"74 -109 OFFCURVE",
"74 -84 CURVE SMOOTH",
"74 -49 OFFCURVE",
"90 14 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE SMOOTH",
"248 151 OFFCURVE",
"305 161 OFFCURVE",
"369 180 CURVE SMOOTH",
"442 201 OFFCURVE",
"501 226 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"178 488 LINE",
"172 536 OFFCURVE",
"141 560 OFFCURVE",
"86 558 CURVE SMOOTH",
"43 557 OFFCURVE",
"6 531 OFFCURVE",
"6 499 CURVE SMOOTH",
"6 468 OFFCURVE",
"27 451 OFFCURVE",
"68 448 CURVE SMOOTH",
"91 446 OFFCURVE",
"123 448 OFFCURVE",
"161 456 CURVE",
"159 424 OFFCURVE",
"149 384 OFFCURVE",
"133 336 CURVE",
"130 335 LINE SMOOTH",
"62 312 OFFCURVE",
"26 265 OFFCURVE",
"26 231 CURVE SMOOTH",
"26 207 OFFCURVE",
"40 189 OFFCURVE",
"68 175 CURVE",
"17 57 OFFCURVE",
"-8 -22 OFFCURVE",
"-8 -61 CURVE SMOOTH",
"-8 -70 OFFCURVE",
"-7 -78 OFFCURVE",
"-6 -85 CURVE SMOOTH",
"-5 -88 OFFCURVE",
"-4 -89 OFFCURVE",
"-1 -88 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 207 OFFCURVE",
"56 220 OFFCURVE",
"56 235 CURVE SMOOTH",
"56 264 OFFCURVE",
"80 291 OFFCURVE",
"126 315 CURVE",
"115 285 OFFCURVE",
"99 246 OFFCURVE",
"77 195 CURVE"
);
},
{
closed = 1;
nodes = (
"110 178 OFFCURVE",
"99 182 OFFCURVE",
"89 187 CURVE",
"117 249 OFFCURVE",
"136 295 OFFCURVE",
"148 326 CURVE",
"165 333 OFFCURVE",
"185 339 OFFCURVE",
"208 342 CURVE",
"174 283 OFFCURVE",
"145 227 OFFCURVE",
"121 175 CURVE"
);
},
{
closed = 1;
nodes = (
"42 478 OFFCURVE",
"26 486 OFFCURVE",
"26 502 CURVE SMOOTH",
"26 524 OFFCURVE",
"54 546 OFFCURVE",
"85 547 CURVE SMOOTH",
"131 550 OFFCURVE",
"157 530 OFFCURVE",
"161 486 CURVE",
"124 481 OFFCURVE",
"95 478 OFFCURVE",
"75 478 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"186 232 OFFCURVE",
"220 292 OFFCURVE",
"257 349 CURVE",
"272 350 OFFCURVE",
"287 351 OFFCURVE",
"302 351 CURVE SMOOTH",
"359 351 OFFCURVE",
"399 342 OFFCURVE",
"425 326 CURVE SMOOTH",
"428 324 OFFCURVE",
"433 323 OFFCURVE",
"436 323 CURVE SMOOTH",
"441 323 OFFCURVE",
"442 325 OFFCURVE",
"440 329 CURVE SMOOTH",
"425 355 OFFCURVE",
"384 367 OFFCURVE",
"320 367 CURVE SMOOTH",
"303 367 OFFCURVE",
"286 366 OFFCURVE",
"267 364 CURVE",
"322 467 OFFCURVE",
"418 632 OFFCURVE",
"427 641 CURVE SMOOTH",
"430 645 OFFCURVE",
"431 647 OFFCURVE",
"431 649 CURVE SMOOTH",
"431 655 OFFCURVE",
"426 659 OFFCURVE",
"414 659 CURVE SMOOTH",
"396 659 OFFCURVE",
"384 653 OFFCURVE",
"376 641 CURVE SMOOTH",
"364 625 OFFCURVE",
"272 451 OFFCURVE",
"218 357 CURVE",
"193 354 OFFCURVE",
"173 349 OFFCURVE",
"155 342 CURVE",
"170 389 OFFCURVE",
"178 428 OFFCURVE",
"179 459 CURVE",
"214 467 OFFCURVE",
"239 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE SMOOTH"
);
}
);
width = 530;
}
);
unicode = 00DE;
},
{
glyphname = Q;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"717 287.333 OFFCURVE",
"731 325.667 OFFCURVE",
"731 361 CURVE SMOOTH",
"731 419 OFFCURVE",
"696.667 461.667 OFFCURVE",
"628 489 CURVE SMOOTH",
"578 509.667 OFFCURVE",
"520 519.667 OFFCURVE",
"454 519 CURVE SMOOTH",
"314 517 OFFCURVE",
"203.667 487 OFFCURVE",
"123 429 CURVE SMOOTH",
"49.667 377 OFFCURVE",
"13 312 OFFCURVE",
"13 234 CURVE SMOOTH",
"13 188 OFFCURVE",
"27.333 143.333 OFFCURVE",
"56 100 CURVE",
"52.667 82.667 OFFCURVE",
"52 65.667 OFFCURVE",
"54 49 CURVE SMOOTH",
"58.667 16.333 OFFCURVE",
"75 -9.333 OFFCURVE",
"103 -28 CURVE SMOOTH",
"128.333 -45.333 OFFCURVE",
"159.333 -54.333 OFFCURVE",
"196 -55 CURVE SMOOTH",
"211.333 -55 OFFCURVE",
"228 -53.667 OFFCURVE",
"246 -51 CURVE",
"384 -112.333 OFFCURVE",
"513 -143 OFFCURVE",
"633 -143 CURVE SMOOTH",
"656.333 -143 OFFCURVE",
"678.333 -141.667 OFFCURVE",
"699 -139 CURVE SMOOTH",
"755 -132.333 OFFCURVE",
"783 -103 OFFCURVE",
"783 -51 CURVE SMOOTH",
"783 -37 OFFCURVE",
"780.667 -21.333 OFFCURVE",
"776 -4 CURVE SMOOTH",
"775.333 0.667 OFFCURVE",
"773 3 OFFCURVE",
"769 3 CURVE SMOOTH",
"765 3 OFFCURVE",
"763.333 0.667 OFFCURVE",
"764 -4 CURVE SMOOTH",
"767.333 -24.667 OFFCURVE",
"769 -36.667 OFFCURVE",
"769 -40 CURVE SMOOTH",
"769 -86.667 OFFCURVE",
"722 -110 OFFCURVE",
"628 -110 CURVE SMOOTH",
"570 -110 OFFCURVE",
"500 -101.333 OFFCURVE",
"418 -84 CURVE SMOOTH",
"350 -70 OFFCURVE",
"302 -56.667 OFFCURVE",
"274 -44 CURVE",
"328.667 -30.667 OFFCURVE",
"387.667 -4.667 OFFCURVE",
"451 34 CURVE",
"486.333 18.667 OFFCURVE",
"520.667 11 OFFCURVE",
"554 11 CURVE SMOOTH",
"643.333 11 OFFCURVE",
"708 71 OFFCURVE",
"708 159 CURVE SMOOTH",
"708 187 OFFCURVE",
"701.667 216 OFFCURVE",
"689 246 CURVE"
);
},
{
closed = 1;
nodes = (
"177.667 -32.667 OFFCURVE",
"153.333 -26.667 OFFCURVE",
"134 -14 CURVE SMOOTH",
"113.333 0 OFFCURVE",
"101.333 20.667 OFFCURVE",
"98 48 CURVE",
"128 18 OFFCURVE",
"164.333 -8.667 OFFCURVE",
"207 -32 CURVE"
);
},
{
closed = 1;
nodes = (
"303 188.667 OFFCURVE",
"315 154.667 OFFCURVE",
"339 122 CURVE SMOOTH",
"360.333 92.667 OFFCURVE",
"388.333 68 OFFCURVE",
"423 48 CURVE",
"353.667 7.333 OFFCURVE",
"293 -18 OFFCURVE",
"241 -28 CURVE",
"176.333 6 OFFCURVE",
"128 49.333 OFFCURVE",
"96 102 CURVE",
"104 232.667 OFFCURVE",
"154 323.667 OFFCURVE",
"246 375 CURVE SMOOTH",
"289.333 399 OFFCURVE",
"338.333 411 OFFCURVE",
"393 411 CURVE SMOOTH",
"445.667 411 OFFCURVE",
"495.333 400 OFFCURVE",
"542 378 CURVE SMOOTH",
"590.667 354.667 OFFCURVE",
"628.333 322.667 OFFCURVE",
"655 282 CURVE",
"633.667 223.333 OFFCURVE",
"585.333 164.667 OFFCURVE",
"510 106 CURVE SMOOTH",
"490 90.667 OFFCURVE",
"466.333 74.667 OFFCURVE",
"439 58 CURVE",
"405 78 OFFCURVE",
"377.333 102 OFFCURVE",
"356 130 CURVE SMOOTH",
"332 162 OFFCURVE",
"320 195 OFFCURVE",
"320 229 CURVE SMOOTH",
"320 241.667 OFFCURVE",
"322.667 252.333 OFFCURVE",
"328 261 CURVE SMOOTH",
"333.333 269 OFFCURVE",
"338.667 272.667 OFFCURVE",
"344 272 CURVE SMOOTH",
"346.667 271.333 OFFCURVE",
"348 272.333 OFFCURVE",
"348 275 CURVE SMOOTH",
"348 277.667 OFFCURVE",
"346.667 279 OFFCURVE",
"344 279 CURVE SMOOTH",
"334.667 280.333 OFFCURVE",
"326 276 OFFCURVE",
"318 266 CURVE SMOOTH",
"308 255.333 OFFCURVE",
"303 241.333 OFFCURVE",
"303 224 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"62.333 191.667 OFFCURVE",
"60 210.333 OFFCURVE",
"60 229 CURVE SMOOTH",
"60 307 OFFCURVE",
"93.667 372 OFFCURVE",
"161 424 CURVE SMOOTH",
"235.667 480.667 OFFCURVE",
"335 507 OFFCURVE",
"459 503 CURVE SMOOTH",
"569.667 499 OFFCURVE",
"650.667 446.333 OFFCURVE",
"664 369 CURVE SMOOTH",
"668.667 346.333 OFFCURVE",
"667.333 322.333 OFFCURVE",
"660 297 CURVE",
"629.333 340.333 OFFCURVE",
"588 374.333 OFFCURVE",
"536 399 CURVE SMOOTH",
"486 422.333 OFFCURVE",
"433 434 OFFCURVE",
"377 434 CURVE SMOOTH",
"323 434 OFFCURVE",
"273.333 422.667 OFFCURVE",
"228 400 CURVE SMOOTH",
"140.667 356.667 OFFCURVE",
"87 281 OFFCURVE",
"67 173 CURVE"
);
},
{
closed = 1;
nodes = (
"491.333 60 OFFCURVE",
"514.667 76.333 OFFCURVE",
"536 93 CURVE SMOOTH",
"598.667 141.667 OFFCURVE",
"646.333 188.333 OFFCURVE",
"679 233 CURVE",
"689 207 OFFCURVE",
"694 182 OFFCURVE",
"694 158 CURVE SMOOTH",
"694 78 OFFCURVE",
"640.333 23 OFFCURVE",
"559 23 CURVE SMOOTH",
"530.333 23 OFFCURVE",
"499.333 30 OFFCURVE",
"466 44 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01272 8 45 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01297 7 85 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 6 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 6 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01215 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 72 22 72 38 72 54 72 70 72 86 72 102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 72 22 72 38 72 54 72 70 72 86 72 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 72 117 72 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01255 45 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01274 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01281 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012117 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01219 4 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 2 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 4 109 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 37 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 748;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"41.667 -105.333 OFFCURVE",
"43.667 -105 OFFCURVE",
"45 -103 CURVE SMOOTH",
"76 -47 LINE",
"91.333 -57.667 OFFCURVE",
"110.333 -62.333 OFFCURVE",
"133 -61 CURVE SMOOTH",
"137 -61 OFFCURVE",
"139 -59.333 OFFCURVE",
"139 -56 CURVE SMOOTH",
"139 -50 OFFCURVE",
"135.667 -47.667 OFFCURVE",
"129 -49 CURVE SMOOTH",
"125.667 -49.667 OFFCURVE",
"122.333 -50 OFFCURVE",
"119 -50 CURVE SMOOTH",
"105 -50 OFFCURVE",
"93.667 -43.667 OFFCURVE",
"85 -31 CURVE",
"123 38.333 OFFCURVE",
"151.667 93.333 OFFCURVE",
"171 134 CURVE",
"181.667 133.333 OFFCURVE",
"193.333 133 OFFCURVE",
"206 133 CURVE SMOOTH",
"257.333 133 OFFCURVE",
"311 139.667 OFFCURVE",
"367 153 CURVE",
"475.667 98.333 OFFCURVE",
"530 37 OFFCURVE",
"530 -31 CURVE SMOOTH",
"530 -42.333 OFFCURVE",
"528.333 -53.333 OFFCURVE",
"525 -64 CURVE",
"524 -71 LINE SMOOTH",
"524 -75.667 OFFCURVE",
"525.667 -78 OFFCURVE",
"529 -78 CURVE SMOOTH",
"534.333 -78 OFFCURVE",
"538.333 -73.333 OFFCURVE",
"541 -64 CURVE SMOOTH",
"546.333 -44 OFFCURVE",
"549 -24.667 OFFCURVE",
"549 -6 CURVE SMOOTH",
"549 65.333 OFFCURVE",
"507.333 123.667 OFFCURVE",
"424 169 CURVE",
"442.667 175.667 OFFCURVE",
"460.333 182.667 OFFCURVE",
"477 190 CURVE SMOOTH",
"531 214 OFFCURVE",
"573.333 243.667 OFFCURVE",
"604 279 CURVE SMOOTH",
"633.333 312.333 OFFCURVE",
"648 345.667 OFFCURVE",
"648 379 CURVE SMOOTH",
"648 419 OFFCURVE",
"627.333 451.333 OFFCURVE",
"586 476 CURVE SMOOTH",
"541.333 502 OFFCURVE",
"478 514 OFFCURVE",
"396 512 CURVE SMOOTH",
"346 510.667 OFFCURVE",
"290 505.333 OFFCURVE",
"228 496 CURVE",
"208 535.333 OFFCURVE",
"173 555.667 OFFCURVE",
"123 557 CURVE SMOOTH",
"80.333 557.667 OFFCURVE",
"49 546.667 OFFCURVE",
"29 524 CURVE SMOOTH",
"19 512 OFFCURVE",
"14 499.333 OFFCURVE",
"14 486 CURVE SMOOTH",
"14 456.667 OFFCURVE",
"36.333 444 OFFCURVE",
"81 448 CURVE SMOOTH",
"96.333 448.667 OFFCURVE",
"116.667 452 OFFCURVE",
"142 458 CURVE SMOOTH",
"162 462 OFFCURVE",
"181.667 466.333 OFFCURVE",
"201 471 CURVE SMOOTH",
"207 473 OFFCURVE",
"213.667 474.667 OFFCURVE",
"221 476 CURVE",
"225.667 462.667 OFFCURVE",
"228.667 447.333 OFFCURVE",
"230 430 CURVE",
"204 400.667 OFFCURVE",
"166.667 339.667 OFFCURVE",
"118 247 CURVE",
"61.333 247 OFFCURVE",
"33 235 OFFCURVE",
"33 211 CURVE SMOOTH",
"33 193 OFFCURVE",
"48 176 OFFCURVE",
"78 160 CURVE",
"54.667 102.667 OFFCURVE",
"43.333 56.333 OFFCURVE",
"44 21 CURVE SMOOTH",
"45.333 -5.667 OFFCURVE",
"53.667 -26.333 OFFCURVE",
"69 -41 CURVE",
"37 -99 LINE SMOOTH",
"35.667 -101.667 OFFCURVE",
"36.333 -103.333 OFFCURVE",
"39 -104 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73.667 -7.667 OFFCURVE",
"71 7.667 OFFCURVE",
"71 25 CURVE SMOOTH",
"71 51 OFFCURVE",
"84 91.667 OFFCURVE",
"110 147 CURVE",
"125.333 141.667 OFFCURVE",
"141.333 138 OFFCURVE",
"158 136 CURVE",
"138.667 92.667 OFFCURVE",
"112.333 40.333 OFFCURVE",
"79 -21 CURVE"
);
},
{
closed = 1;
nodes = (
"72.667 188 OFFCURVE",
"66 197.333 OFFCURVE",
"66 206 CURVE SMOOTH",
"66 219.333 OFFCURVE",
"80 226.333 OFFCURVE",
"108 227 CURVE",
"100 210.333 OFFCURVE",
"92.667 194 OFFCURVE",
"86 178 CURVE"
);
},
{
closed = 1;
nodes = (
"147.333 151.667 OFFCURVE",
"131.667 155.667 OFFCURVE",
"117 161 CURVE",
"126.333 181 OFFCURVE",
"137 202 OFFCURVE",
"149 224 CURVE",
"154 223 LINE SMOOTH",
"165.333 221.667 OFFCURVE",
"177.667 219.333 OFFCURVE",
"191 216 CURVE",
"183.667 194.667 OFFCURVE",
"174.667 172.333 OFFCURVE",
"164 149 CURVE"
);
},
{
closed = 1;
nodes = (
"188 171.667 OFFCURVE",
"196.667 193 OFFCURVE",
"204 213 CURVE",
"249.333 201.667 OFFCURVE",
"292.667 186.667 OFFCURVE",
"334 168 CURVE",
"276.667 153.333 OFFCURVE",
"224.667 147 OFFCURVE",
"178 149 CURVE"
);
},
{
closed = 1;
nodes = (
"186 241.667 OFFCURVE",
"173 243.333 OFFCURVE",
"161 244 CURVE",
"183 282.667 OFFCURVE",
"205.333 318.667 OFFCURVE",
"228 352 CURVE",
"222.667 316.667 OFFCURVE",
"213.333 279 OFFCURVE",
"200 239 CURVE"
);
},
{
closed = 1;
nodes = (
"47.333 472 OFFCURVE",
"30 480.667 OFFCURVE",
"30 500 CURVE SMOOTH",
"30 506 OFFCURVE",
"32.333 512 OFFCURVE",
"37 518 CURVE SMOOTH",
"54.333 540 OFFCURVE",
"83.333 549.667 OFFCURVE",
"124 547 CURVE SMOOTH",
"165.333 543.667 OFFCURVE",
"195 526 OFFCURVE",
"213 494 CURVE",
"206.333 493.333 OFFCURVE",
"199.667 492.333 OFFCURVE",
"193 491 CURVE SMOOTH",
"137.667 481.667 OFFCURVE",
"100.667 476 OFFCURVE",
"82 474 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"340.333 207.667 OFFCURVE",
"281 225 OFFCURVE",
"213 237 CURVE",
"230.333 286.333 OFFCURVE",
"240.667 332.667 OFFCURVE",
"244 376 CURVE",
"260.667 399.333 OFFCURVE",
"274.333 416.333 OFFCURVE",
"285 427 CURVE SMOOTH",
"288.333 430.333 OFFCURVE",
"290 433.333 OFFCURVE",
"290 436 CURVE SMOOTH",
"290 442.667 OFFCURVE",
"283 446 OFFCURVE",
"269 446 CURVE SMOOTH",
"260.333 446 OFFCURVE",
"251.667 444 OFFCURVE",
"243 440 CURVE",
"241.667 454 OFFCURVE",
"238.667 467 OFFCURVE",
"234 479 CURVE",
"294 490.333 OFFCURVE",
"348 497 OFFCURVE",
"396 499 CURVE SMOOTH",
"464.667 502.333 OFFCURVE",
"517.333 493 OFFCURVE",
"554 471 CURVE SMOOTH",
"588 451.667 OFFCURVE",
"605 424.333 OFFCURVE",
"605 389 CURVE SMOOTH",
"605 360.333 OFFCURVE",
"592.667 330.333 OFFCURVE",
"568 299 CURVE SMOOTH",
"542.667 267 OFFCURVE",
"507.667 239.333 OFFCURVE",
"463 216 CURVE SMOOTH",
"441 204.667 OFFCURVE",
"417 194.333 OFFCURVE",
"391 185 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0126 7 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 7 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01272 8 133 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01212 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01220 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012100 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01242 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01278 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012102 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012104 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012115 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012117 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 133 122 133 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 133 25 133 41 133 57 133 73 133 89 133 105 133 121 133 137 133 153 133 169 133 185 133 201 133 217 133 233 133 249 133 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 133 25 133 41 133 57 133 73 133 89 133 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012141 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01268 1 137 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 2 94 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 4 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012137 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
note = R;
unicode = 0052;
},
{
glyphname = Racute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 381, 167}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 260, 316}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 159, -4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0156;
},
{
glyphname = Rdblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 370, 125}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0210;
},
{
glyphname = Rinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 346, 131}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0212;
},
{
glyphname = S;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"178.667 -64 OFFCURVE",
"203 -62 OFFCURVE",
"229 -58 CURVE SMOOTH",
"282.333 -50 OFFCURVE",
"330.333 -31.333 OFFCURVE",
"373 -2 CURVE SMOOTH",
"418.333 30 OFFCURVE",
"441 63.667 OFFCURVE",
"441 99 CURVE SMOOTH",
"441 137 OFFCURVE",
"415 171.667 OFFCURVE",
"363 203 CURVE",
"365 218.333 OFFCURVE",
"366 233.667 OFFCURVE",
"366 249 CURVE SMOOTH",
"366 320.333 OFFCURVE",
"348.333 379.333 OFFCURVE",
"313 426 CURVE",
"349.667 449.333 OFFCURVE",
"390 463 OFFCURVE",
"434 467 CURVE SMOOTH",
"454 468 LINE SMOOTH",
"489.333 468 OFFCURVE",
"507 457.667 OFFCURVE",
"507 437 CURVE SMOOTH",
"507 429.667 OFFCURVE",
"504.333 421 OFFCURVE",
"499 411 CURVE SMOOTH",
"486.333 385.667 OFFCURVE",
"480 370 OFFCURVE",
"480 364 CURVE SMOOTH",
"480 361.333 OFFCURVE",
"481 360 OFFCURVE",
"483 360 CURVE SMOOTH",
"490.333 360 OFFCURVE",
"509.333 376.667 OFFCURVE",
"540 410 CURVE SMOOTH",
"547.333 419.333 OFFCURVE",
"551 428 OFFCURVE",
"551 436 CURVE SMOOTH",
"551 443.333 OFFCURVE",
"546.667 446.667 OFFCURVE",
"538 446 CURVE",
"523 437 LINE SMOOTH",
"521.667 436.333 OFFCURVE",
"521 436.667 OFFCURVE",
"521 438 CURVE SMOOTH",
"522 443 LINE SMOOTH",
"522.667 446.333 OFFCURVE",
"522.667 448.667 OFFCURVE",
"522 450 CURVE",
"516.667 480.667 OFFCURVE",
"493 496 OFFCURVE",
"451 496 CURVE SMOOTH",
"446.333 496 OFFCURVE",
"441.333 495.667 OFFCURVE",
"436 495 CURVE SMOOTH",
"394.667 491 OFFCURVE",
"349 473.333 OFFCURVE",
"299 442 CURVE",
"265.667 476 OFFCURVE",
"223.667 493 OFFCURVE",
"173 493 CURVE SMOOTH",
"142.333 493 OFFCURVE",
"112.333 486.333 OFFCURVE",
"83 473 CURVE SMOOTH",
"39 453 OFFCURVE",
"9 400 OFFCURVE",
"9 352 CURVE SMOOTH",
"9 332.667 OFFCURVE",
"13.667 316 OFFCURVE",
"23 302 CURVE SMOOTH",
"40.333 276 OFFCURVE",
"66 263 OFFCURVE",
"100 263 CURVE SMOOTH",
"112 263 OFFCURVE",
"126.333 266.333 OFFCURVE",
"143 273 CURVE SMOOTH",
"162.333 281.667 OFFCURVE",
"172 290.667 OFFCURVE",
"172 300 CURVE SMOOTH",
"172 302 OFFCURVE",
"171 303.333 OFFCURVE",
"169 304 CURVE SMOOTH",
"167.667 304 OFFCURVE",
"166.333 303.333 OFFCURVE",
"165 302 CURVE",
"151 280.667 OFFCURVE",
"129.667 270 OFFCURVE",
"101 270 CURVE SMOOTH",
"70.333 270 OFFCURVE",
"47 282 OFFCURVE",
"31 306 CURVE SMOOTH",
"23 319.333 OFFCURVE",
"19 335.333 OFFCURVE",
"19 354 CURVE SMOOTH",
"19 399.333 OFFCURVE",
"46 447.333 OFFCURVE",
"86 466 CURVE SMOOTH",
"112.667 478 OFFCURVE",
"139.333 484 OFFCURVE",
"166 484 CURVE SMOOTH",
"211.333 484 OFFCURVE",
"250.667 467 OFFCURVE",
"284 433 CURVE",
"236.667 399.667 OFFCURVE",
"213 364.333 OFFCURVE",
"213 327 CURVE SMOOTH",
"213 299.667 OFFCURVE",
"224.667 275 OFFCURVE",
"248 253 CURVE SMOOTH",
"263.333 238.333 OFFCURVE",
"287 222.333 OFFCURVE",
"319 205 CURVE SMOOTH",
"330.333 198.333 OFFCURVE",
"340.333 191.333 OFFCURVE",
"349 184 CURVE",
"341.667 130.667 OFFCURVE",
"323.333 87 OFFCURVE",
"294 53 CURVE SMOOTH",
"262 15 OFFCURVE",
"221 -6 OFFCURVE",
"171 -10 CURVE",
"168.333 -10.667 OFFCURVE",
"167 -12 OFFCURVE",
"167 -14 CURVE SMOOTH",
"167.667 -16.667 OFFCURVE",
"169 -18 OFFCURVE",
"171 -18 CURVE SMOOTH",
"221 -14 OFFCURVE",
"263 7 OFFCURVE",
"297 45 CURVE SMOOTH",
"327.667 79 OFFCURVE",
"348.333 122.667 OFFCURVE",
"359 176 CURVE",
"385 152.667 OFFCURVE",
"398 127 OFFCURVE",
"398 99 CURVE SMOOTH",
"398 69.667 OFFCURVE",
"383.667 43.333 OFFCURVE",
"355 20 CURVE SMOOTH",
"324.333 -4.667 OFFCURVE",
"282.667 -21 OFFCURVE",
"230 -29 CURVE SMOOTH",
"202.667 -33.667 OFFCURVE",
"177 -36 OFFCURVE",
"153 -36 CURVE SMOOTH",
"81 -36 OFFCURVE",
"36 -15.667 OFFCURVE",
"36 19 CURVE SMOOTH",
"36 32.333 OFFCURVE",
"43.167 47.333 OFFCURVE",
"57.5 64 CURVE SMOOTH",
"71.833 80.667 OFFCURVE",
"97 96.333 OFFCURVE",
"133 111 CURVE SMOOTH",
"171.667 127 OFFCURVE",
"207.667 135 OFFCURVE",
"241 135 CURVE SMOOTH",
"252.333 135 OFFCURVE",
"262.667 134 OFFCURVE",
"272 132 CURVE SMOOTH",
"280.667 130 OFFCURVE",
"285 130.667 OFFCURVE",
"285 134 CURVE SMOOTH",
"285 135.333 OFFCURVE",
"283.667 136.667 OFFCURVE",
"281 138 CURVE SMOOTH",
"266.333 146 OFFCURVE",
"248.333 150 OFFCURVE",
"227 150 CURVE SMOOTH",
"193.667 150 OFFCURVE",
"156.333 141.333 OFFCURVE",
"115 124 CURVE SMOOTH",
"77.667 107.333 OFFCURVE",
"51.667 91.333 OFFCURVE",
"37 76 CURVE SMOOTH",
"19 56 OFFCURVE",
"10 36.333 OFFCURVE",
"10 17 CURVE SMOOTH",
"10 -6.333 OFFCURVE",
"22.667 -25.667 OFFCURVE",
"48 -41 CURVE SMOOTH",
"74.667 -56.333 OFFCURVE",
"110.667 -64 OFFCURVE",
"156 -64 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"333 220 LINE SMOOTH",
"273.667 249.333 OFFCURVE",
"244 284.333 OFFCURVE",
"244 325 CURVE SMOOTH",
"244 357.667 OFFCURVE",
"262.333 388 OFFCURVE",
"299 416 CURVE",
"335 368 OFFCURVE",
"353 308 OFFCURVE",
"353 236 CURVE SMOOTH",
"353 209 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01245 5 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 8 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 6 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 54 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 6 117 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01256 2 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 101 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01248 4 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012136 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 499;
}
);
note = S;
unicode = 0053;
},
{
glyphname = Sacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 408, 142}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015A;
},
{
glyphname = Scaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 287, 284}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 0160;
},
{
glyphname = Scedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 17, -70}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015E;
},
{
glyphname = Scircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015C;
},
{
glyphname = Scommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 0, -22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 0218;
},
{
glyphname = Germandbls;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-161 -200 OFFCURVE",
"-112 -168 OFFCURVE",
"-60 -107 CURVE SMOOTH",
"-13 -52 OFFCURVE",
"55 105 OFFCURVE",
"144 366 CURVE SMOOTH",
"156 397 OFFCURVE",
"176 423 OFFCURVE",
"195 423 CURVE SMOOTH",
"198 423 OFFCURVE",
"200 422 OFFCURVE",
"202 421 CURVE",
"236 410 OFFCURVE",
"253 386 OFFCURVE",
"252 349 CURVE SMOOTH",
"251 315 OFFCURVE",
"229 283 OFFCURVE",
"185 254 CURVE SMOOTH",
"166 241 OFFCURVE",
"156 229 OFFCURVE",
"156 218 CURVE SMOOTH",
"156 209 OFFCURVE",
"164 199 OFFCURVE",
"180 189 CURVE SMOOTH",
"205 174 OFFCURVE",
"218 153 OFFCURVE",
"218 124 CURVE SMOOTH",
"218 90 OFFCURVE",
"202 58 OFFCURVE",
"171 29 CURVE SMOOTH",
"138 -2 OFFCURVE",
"97 -18 OFFCURVE",
"48 -20 CURVE SMOOTH",
"33 -21 OFFCURVE",
"26 -23 OFFCURVE",
"26 -28 CURVE SMOOTH",
"26 -32 OFFCURVE",
"35 -34 OFFCURVE",
"52 -34 CURVE SMOOTH",
"70 -33 LINE SMOOTH",
"125 -29 OFFCURVE",
"171 -10 OFFCURVE",
"206 23 CURVE SMOOTH",
"238 53 OFFCURVE",
"254 86 OFFCURVE",
"254 123 CURVE SMOOTH",
"254 167 OFFCURVE",
"231 197 OFFCURVE",
"185 214 CURVE SMOOTH",
"182 215 OFFCURVE",
"180 218 OFFCURVE",
"180 221 CURVE SMOOTH",
"180 228 OFFCURVE",
"184 233 OFFCURVE",
"193 238 CURVE SMOOTH",
"221 253 OFFCURVE",
"244 270 OFFCURVE",
"263 291 CURVE SMOOTH",
"283 312 OFFCURVE",
"293 333 OFFCURVE",
"293 353 CURVE SMOOTH",
"294 375 OFFCURVE",
"286 393 OFFCURVE",
"269 408 CURVE SMOOTH",
"250 425 OFFCURVE",
"224 434 OFFCURVE",
"189 437 CURVE SMOOTH",
"170 439 OFFCURVE",
"154 433 OFFCURVE",
"141 420 CURVE SMOOTH",
"134 413 OFFCURVE",
"125 399 OFFCURVE",
"115 379 CURVE",
"-36 28 LINE SMOOTH",
"-67 -44 OFFCURVE",
"-94 -95 OFFCURVE",
"-117 -124 CURVE SMOOTH",
"-142 -155 OFFCURVE",
"-172 -176 OFFCURVE",
"-208 -185 CURVE SMOOTH",
"-212 -186 OFFCURVE",
"-216 -187 OFFCURVE",
"-221 -187 CURVE SMOOTH",
"-241 -187 OFFCURVE",
"-253 -181 OFFCURVE",
"-258 -169 CURVE",
"-253 -174 OFFCURVE",
"-247 -176 OFFCURVE",
"-239 -176 CURVE SMOOTH",
"-222 -176 OFFCURVE",
"-207 -162 OFFCURVE",
"-206 -146 CURVE SMOOTH",
"-203 -129 OFFCURVE",
"-216 -115 OFFCURVE",
"-233 -115 CURVE SMOOTH",
"-257 -115 OFFCURVE",
"-276 -138 OFFCURVE",
"-275 -163 CURVE SMOOTH",
"-272 -193 OFFCURVE",
"-250 -206 OFFCURVE",
"-208 -203 CURVE SMOOTH"
);
}
);
width = 262;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"214 470 OFFCURVE",
"146 441 OFFCURVE",
"83 382 CURVE SMOOTH",
"46 347 OFFCURVE",
"52 320 OFFCURVE",
"83 350 CURVE SMOOTH",
"134 400 OFFCURVE",
"212 445 OFFCURVE",
"253 445 CURVE SMOOTH",
"304 445 OFFCURVE",
"335 402 OFFCURVE",
"335 339 CURVE SMOOTH",
"335 323 OFFCURVE",
"333 307 OFFCURVE",
"331 287 CURVE",
"253 287 OFFCURVE",
"181 228 OFFCURVE",
"144 176 CURVE SMOOTH",
"122 144 OFFCURVE",
"112 114 OFFCURVE",
"112 85 CURVE SMOOTH",
"112 37 OFFCURVE",
"132 14 OFFCURVE",
"173 14 CURVE SMOOTH",
"205 14 OFFCURVE",
"238 35 OFFCURVE",
"273 73 CURVE SMOOTH",
"334 139 OFFCURVE",
"381 259 OFFCURVE",
"381 325 CURVE SMOOTH",
"381 423 OFFCURVE",
"344 470 OFFCURVE",
"267 470 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"290 164 OFFCURVE",
"216 51 OFFCURVE",
"159 51 CURVE SMOOTH",
"150 51 OFFCURVE",
"138 60 OFFCURVE",
"138 76 CURVE SMOOTH",
"138 96 OFFCURVE",
"144 123 OFFCURVE",
"159 153 CURVE SMOOTH",
"183 200 OFFCURVE",
"259 255 OFFCURVE",
"324 262 CURVE"
);
}
);
width = 433;
}
);
unicode = 018F;
},
{
glyphname = T;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"252.667 -121 OFFCURVE",
"331 -87.667 OFFCURVE",
"403 -21 CURVE",
"419 -26.333 OFFCURVE",
"436 -29 OFFCURVE",
"454 -29 CURVE SMOOTH",
"466 -29 OFFCURVE",
"478.333 -28 OFFCURVE",
"491 -26 CURVE SMOOTH",
"501 -24 OFFCURVE",
"514 -19 OFFCURVE",
"530 -11 CURVE SMOOTH",
"549.333 -1.667 OFFCURVE",
"559 6.667 OFFCURVE",
"559 14 CURVE SMOOTH",
"559 16.667 OFFCURVE",
"557.667 18 OFFCURVE",
"555 18 CURVE SMOOTH",
"553.667 18 OFFCURVE",
"552.333 17.333 OFFCURVE",
"551 16 CURVE SMOOTH",
"541.667 2.667 OFFCURVE",
"513 -13 OFFCURVE",
"489 -17 CURVE SMOOTH",
"460.333 -21.667 OFFCURVE",
"434 -20.667 OFFCURVE",
"410 -14 CURVE",
"432.667 8 OFFCURVE",
"454.333 33.667 OFFCURVE",
"475 63 CURVE SMOOTH",
"509 109.667 OFFCURVE",
"547 176 OFFCURVE",
"589 262 CURVE SMOOTH",
"659 418 LINE",
"712.333 403.333 OFFCURVE",
"764 395.333 OFFCURVE",
"814 394 CURVE SMOOTH",
"827.333 393.333 OFFCURVE",
"843 396.667 OFFCURVE",
"861 404 CURVE SMOOTH",
"882.333 413.333 OFFCURVE",
"893 423.333 OFFCURVE",
"893 434 CURVE SMOOTH",
"893 438.667 OFFCURVE",
"891 441 OFFCURVE",
"887 441 CURVE SMOOTH",
"885 441 OFFCURVE",
"883.333 439.667 OFFCURVE",
"882 437 CURVE SMOOTH",
"874.667 422.333 OFFCURVE",
"848.333 416 OFFCURVE",
"803 418 CURVE SMOOTH",
"761 418.667 OFFCURVE",
"716.667 425.667 OFFCURVE",
"670 439 CURVE",
"682 460.333 OFFCURVE",
"693 477 OFFCURVE",
"703 489 CURVE SMOOTH",
"719.667 508.333 OFFCURVE",
"734 518 OFFCURVE",
"746 518 CURVE SMOOTH",
"757.333 518 OFFCURVE",
"762.333 511 OFFCURVE",
"761 497 CURVE SMOOTH",
"760.333 493 OFFCURVE",
"761 491 OFFCURVE",
"763 491 CURVE SMOOTH",
"766.333 491 OFFCURVE",
"768 495.333 OFFCURVE",
"768 504 CURVE SMOOTH",
"768 517.333 OFFCURVE",
"756.667 529 OFFCURVE",
"742 529 CURVE SMOOTH",
"700.667 529 OFFCURVE",
"666.333 499 OFFCURVE",
"637 447 CURVE",
"542 468 LINE",
"534 521.333 OFFCURVE",
"497.333 553 OFFCURVE",
"452 553 CURVE SMOOTH",
"414 553 OFFCURVE",
"378.333 534.667 OFFCURVE",
"345 498 CURVE",
"314.333 500 OFFCURVE",
"285.667 501 OFFCURVE",
"259 501 CURVE SMOOTH",
"96.333 501 OFFCURVE",
"11 454 OFFCURVE",
"3 360 CURVE SMOOTH",
"-0.333 327.333 OFFCURVE",
"12.333 297.333 OFFCURVE",
"41 270 CURVE SMOOTH",
"65.667 246 OFFCURVE",
"95.333 230 OFFCURVE",
"130 222 CURVE SMOOTH",
"146 218 OFFCURVE",
"160.667 216 OFFCURVE",
"174 216 CURVE SMOOTH",
"190 216 OFFCURVE",
"203.333 218.333 OFFCURVE",
"214 223 CURVE SMOOTH",
"222.667 227 OFFCURVE",
"227 230.667 OFFCURVE",
"227 234 CURVE SMOOTH",
"227 236 OFFCURVE",
"225.667 237 OFFCURVE",
"223 237 CURVE SMOOTH",
"218.333 237 OFFCURVE",
"210.667 236 OFFCURVE",
"200 234 CURVE",
"178 233 LINE",
"148 235.667 OFFCURVE",
"116.333 247.333 OFFCURVE",
"83 268 CURVE SMOOTH",
"39 294.667 OFFCURVE",
"18.667 325.667 OFFCURVE",
"22 361 CURVE SMOOTH",
"28 427.667 OFFCURVE",
"109.667 461 OFFCURVE",
"267 461 CURVE SMOOTH",
"283 461 OFFCURVE",
"300 460.667 OFFCURVE",
"318 460 CURVE",
"294 421.333 OFFCURVE",
"277.333 374.333 OFFCURVE",
"268 319 CURVE SMOOTH",
"264 298.333 OFFCURVE",
"262 276 OFFCURVE",
"262 252 CURVE SMOOTH",
"262 164 OFFCURVE",
"282.333 93 OFFCURVE",
"323 39 CURVE",
"293 2.333 OFFCURVE",
"265.667 -26.667 OFFCURVE",
"241 -48 CURVE SMOOTH",
"240.333 -48.667 OFFCURVE",
"240 -49.667 OFFCURVE",
"240 -51 CURVE SMOOTH",
"240 -54.333 OFFCURVE",
"241.333 -56 OFFCURVE",
"244 -56 CURVE SMOOTH",
"245.333 -56 OFFCURVE",
"246.333 -55.333 OFFCURVE",
"247 -54 CURVE",
"271 -32.667 OFFCURVE",
"298 -3.667 OFFCURVE",
"328 33 CURVE",
"336.667 21.667 OFFCURVE",
"346.333 12 OFFCURVE",
"357 4 CURVE",
"288.333 -62.667 OFFCURVE",
"225.333 -96 OFFCURVE",
"168 -96 CURVE SMOOTH",
"144.667 -96 OFFCURVE",
"126.667 -89.333 OFFCURVE",
"114 -76 CURVE SMOOTH",
"103.333 -64.667 OFFCURVE",
"98 -50.333 OFFCURVE",
"98 -33 CURVE SMOOTH",
"98 -5.667 OFFCURVE",
"108 16.333 OFFCURVE",
"128 33 CURVE SMOOTH",
"131.333 36.333 OFFCURVE",
"133 39.667 OFFCURVE",
"133 43 CURVE SMOOTH",
"133 46.333 OFFCURVE",
"131.667 48 OFFCURVE",
"129 48 CURVE SMOOTH",
"126.333 48 OFFCURVE",
"123.333 46.333 OFFCURVE",
"120 43 CURVE SMOOTH",
"92.667 19 OFFCURVE",
"79 -9.667 OFFCURVE",
"79 -43 CURVE SMOOTH",
"79 -65 OFFCURVE",
"86.333 -83.333 OFFCURVE",
"101 -98 CURVE SMOOTH",
"116.333 -113.333 OFFCURVE",
"138.667 -121 OFFCURVE",
"168 -121 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"296.333 99 OFFCURVE",
"279 165.667 OFFCURVE",
"279 249 CURVE SMOOTH",
"279 274.333 OFFCURVE",
"280.667 298.333 OFFCURVE",
"284 321 CURVE SMOOTH",
"294 375.667 OFFCURVE",
"310.333 421.667 OFFCURVE",
"333 459 CURVE",
"405 453.667 OFFCURVE",
"456.333 449.333 OFFCURVE",
"487 446 CURVE SMOOTH",
"529 441 LINE",
"529 423 OFFCURVE",
"526.333 403.667 OFFCURVE",
"521 383 CURVE SMOOTH",
"493 281 OFFCURVE",
"429.667 169.667 OFFCURVE",
"331 49 CURVE"
);
},
{
closed = 1;
nodes = (
"354 19.667 OFFCURVE",
"344.667 29.667 OFFCURVE",
"336 41 CURVE",
"442 170.333 OFFCURVE",
"508.333 283.333 OFFCURVE",
"535 380 CURVE SMOOTH",
"540.333 400.667 OFFCURVE",
"543.333 420.333 OFFCURVE",
"544 439 CURVE",
"580.667 433.667 OFFCURVE",
"608.333 429 OFFCURVE",
"627 425 CURVE",
"554.333 273 OFFCURVE",
"486.333 157.333 OFFCURVE",
"423 78 CURVE SMOOTH",
"403.667 53.333 OFFCURVE",
"384 31 OFFCURVE",
"364 11 CURVE"
);
},
{
closed = 1;
nodes = (
"466.667 483 OFFCURVE",
"410.333 491.333 OFFCURVE",
"359 496 CURVE",
"388.333 529.333 OFFCURVE",
"419.333 546 OFFCURVE",
"452 546 CURVE SMOOTH",
"490.667 546 OFFCURVE",
"520 519 OFFCURVE",
"528 471 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012161 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01219 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01253 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01257 4 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 4 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 4 140 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 79 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0125 79 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 588;
}
);
note = T;
unicode = 0054;
},
{
glyphname = Tbar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = hyphen;
transform = "{1.19195, 0, 0, 1, 426, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = quotesingle;
transform = "{1, 0, 0, 1, 574, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 643;
}
);
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, 30, -125}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 0162;
},
{
glyphname = Tcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 0, -74}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 021A;
},
{
glyphname = U;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"639.667 -113 OFFCURVE",
"643 -111.333 OFFCURVE",
"643 -108 CURVE SMOOTH",
"643 -105.333 OFFCURVE",
"637.667 -102 OFFCURVE",
"627 -98 CURVE SMOOTH",
"584.333 -80.667 OFFCURVE",
"563 -39 OFFCURVE",
"563 27 CURVE SMOOTH",
"563 88.333 OFFCURVE",
"582.333 170.667 OFFCURVE",
"621 274 CURVE",
"662.333 327.333 OFFCURVE",
"690 366 OFFCURVE",
"704 390 CURVE SMOOTH",
"729.333 432.667 OFFCURVE",
"742 465 OFFCURVE",
"742 487 CURVE SMOOTH",
"742 500.333 OFFCURVE",
"737.333 507 OFFCURVE",
"728 507 CURVE SMOOTH",
"705.333 507 OFFCURVE",
"677.333 481 OFFCURVE",
"644 429 CURVE SMOOTH",
"630.667 409 OFFCURVE",
"618.667 384.333 OFFCURVE",
"608 355 CURVE SMOOTH",
"600 333 OFFCURVE",
"592.333 311 OFFCURVE",
"585 289 CURVE",
"504 173 LINE SMOOTH",
"462 114.333 OFFCURVE",
"425 69 OFFCURVE",
"393 37 CURVE SMOOTH",
"349.667 -6.333 OFFCURVE",
"312.667 -28 OFFCURVE",
"282 -28 CURVE SMOOTH",
"256 -28 OFFCURVE",
"243 -14.333 OFFCURVE",
"243 13 CURVE SMOOTH",
"243 49.667 OFFCURVE",
"267 100 OFFCURVE",
"315 164 CURVE SMOOTH",
"334.333 190.667 OFFCURVE",
"348.667 209.667 OFFCURVE",
"358 221 CURVE SMOOTH",
"398 276.333 OFFCURVE",
"418 326 OFFCURVE",
"418 370 CURVE SMOOTH",
"418 411.333 OFFCURVE",
"401 440 OFFCURVE",
"367 456 CURVE",
"367 475 LINE SMOOTH",
"365.667 509 OFFCURVE",
"355.333 535 OFFCURVE",
"336 553 CURVE SMOOTH",
"318 568.333 OFFCURVE",
"294.333 576 OFFCURVE",
"265 576 CURVE SMOOTH",
"206.333 576 OFFCURVE",
"135.333 543 OFFCURVE",
"94 495 CURVE SMOOTH",
"58 453.667 OFFCURVE",
"40 412.333 OFFCURVE",
"40 371 CURVE SMOOTH",
"40 355 OFFCURVE",
"43 340 OFFCURVE",
"49 326 CURVE",
"17.667 288 OFFCURVE",
"2 251.333 OFFCURVE",
"2 216 CURVE SMOOTH",
"2 178 OFFCURVE",
"20 144.667 OFFCURVE",
"56 116 CURVE SMOOTH",
"60.667 112.667 OFFCURVE",
"65 111 OFFCURVE",
"69 111 CURVE SMOOTH",
"72.333 111 OFFCURVE",
"74 112.333 OFFCURVE",
"74 115 CURVE SMOOTH",
"74 117.667 OFFCURVE",
"70.667 121 OFFCURVE",
"64 125 CURVE SMOOTH",
"36.667 141 OFFCURVE",
"23 163.667 OFFCURVE",
"23 193 CURVE SMOOTH",
"23 223.667 OFFCURVE",
"38 258.667 OFFCURVE",
"68 298 CURVE",
"88 276.667 OFFCURVE",
"113.333 266 OFFCURVE",
"144 266 CURVE SMOOTH",
"156 266 OFFCURVE",
"168 268 OFFCURVE",
"180 272 CURVE SMOOTH",
"182.667 272.667 OFFCURVE",
"183.667 274 OFFCURVE",
"183 276 CURVE SMOOTH",
"181.667 278.667 OFFCURVE",
"180 279.667 OFFCURVE",
"178 279 CURVE SMOOTH",
"166.667 275.667 OFFCURVE",
"155.333 274 OFFCURVE",
"144 274 CURVE SMOOTH",
"114 274 OFFCURVE",
"90.333 284.333 OFFCURVE",
"73 305 CURVE",
"97 335.667 OFFCURVE",
"126.333 363.667 OFFCURVE",
"161 389 CURVE SMOOTH",
"219.667 432.333 OFFCURVE",
"272 454 OFFCURVE",
"318 454 CURVE SMOOTH",
"331.333 454 OFFCURVE",
"342.333 452 OFFCURVE",
"351 448 CURVE",
"347.667 395.333 OFFCURVE",
"323.667 333 OFFCURVE",
"279 261 CURVE SMOOTH",
"208 151 LINE",
"178.667 99.667 OFFCURVE",
"164 58.667 OFFCURVE",
"164 28 CURVE SMOOTH",
"164 -7.333 OFFCURVE",
"178 -27.667 OFFCURVE",
"206 -33 CURVE SMOOTH",
"208 -33.667 OFFCURVE",
"209.333 -32.667 OFFCURVE",
"210 -30 CURVE SMOOTH",
"210.667 -28 OFFCURVE",
"210 -26.667 OFFCURVE",
"208 -26 CURVE SMOOTH",
"186 -22 OFFCURVE",
"175 -4 OFFCURVE",
"175 28 CURVE SMOOTH",
"175 58.667 OFFCURVE",
"189.667 98.667 OFFCURVE",
"219 148 CURVE SMOOTH",
"291 258 LINE SMOOTH",
"335.667 326 OFFCURVE",
"360.667 386.333 OFFCURVE",
"366 439 CURVE",
"377.333 428.333 OFFCURVE",
"383 413 OFFCURVE",
"383 393 CURVE SMOOTH",
"383 356.333 OFFCURVE",
"363.333 307.333 OFFCURVE",
"324 246 CURVE SMOOTH",
"304.667 217.333 OFFCURVE",
"289.667 195.667 OFFCURVE",
"279 181 CURVE SMOOTH",
"232.333 115 OFFCURVE",
"209 61 OFFCURVE",
"209 19 CURVE SMOOTH",
"209 -2.333 OFFCURVE",
"215.667 -19 OFFCURVE",
"229 -31 CURVE SMOOTH",
"240.333 -41.667 OFFCURVE",
"256 -47 OFFCURVE",
"276 -47 CURVE SMOOTH",
"319.333 -47 OFFCURVE",
"373.333 -11 OFFCURVE",
"438 61 CURVE SMOOTH",
"468.667 95 OFFCURVE",
"511.333 150 OFFCURVE",
"566 226 CURVE",
"542.667 150.667 OFFCURVE",
"531 86.667 OFFCURVE",
"531 34 CURVE SMOOTH",
"531 -50 OFFCURVE",
"561 -98.333 OFFCURVE",
"621 -111 CURVE SMOOTH",
"625.667 -112.333 OFFCURVE",
"629.667 -113 OFFCURVE",
"633 -113 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"52.667 344 OFFCURVE",
"51 354.667 OFFCURVE",
"51 366 CURVE SMOOTH",
"51 404.667 OFFCURVE",
"69.333 445 OFFCURVE",
"106 487 CURVE SMOOTH",
"148.667 535 OFFCURVE",
"211 566 OFFCURVE",
"263 566 CURVE SMOOTH",
"323 566 OFFCURVE",
"352.667 531.333 OFFCURVE",
"352 462 CURVE",
"339.333 466 OFFCURVE",
"325 468 OFFCURVE",
"309 468 CURVE SMOOTH",
"259 468 OFFCURVE",
"204 448.333 OFFCURVE",
"144 409 CURVE SMOOTH",
"109.333 387 OFFCURVE",
"80 362 OFFCURVE",
"56 334 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012115 7 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01225 89 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 6 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 8 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 125 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 25 229 25 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012106 57 122 57 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01267 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 73 122 73 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012134 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012134 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01227 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012134 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 97 233 97 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 97 24 97 40 97 56 97 72 97 88 97 104 97 120 97 136 97 152 97 168 97 184 97 200 97 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0120 134 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0129 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01275 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 663;
}
);
note = U;
unicode = 0055;
},
{
glyphname = Uacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 425, 134}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ubreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 422, 59}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016C;
},
{
glyphname = Ucircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 365, 138}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 425, 54}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0214;
},
{
glyphname = Udieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 471, 206}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Udotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 145, -513}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE4;
},
{
glyphname = Ugrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, 402, 122}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 431, 43}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 593, 79}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 458, 136}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 137, -508}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 410, 120}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 446, 34}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 399, 92}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 446, 133}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 399, 38}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0216;
},
{
glyphname = Umacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 391, 113}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016A;
},
{
glyphname = Uogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 128, -42}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 447, 126}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 398, 117}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0168;
},
{
glyphname = V;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"371 -70 OFFCURVE",
"449.667 -9 OFFCURVE",
"567 113 CURVE SMOOTH",
"614.333 162.333 OFFCURVE",
"652.667 211.667 OFFCURVE",
"682 261 CURVE SMOOTH",
"718.667 322.333 OFFCURVE",
"737 377 OFFCURVE",
"737 425 CURVE SMOOTH",
"737 472.333 OFFCURVE",
"719.333 511.333 OFFCURVE",
"684 542 CURVE SMOOTH",
"676 548.667 OFFCURVE",
"670 552 OFFCURVE",
"666 552 CURVE SMOOTH",
"664.667 552 OFFCURVE",
"664 551 OFFCURVE",
"664 549 CURVE SMOOTH",
"664 545.667 OFFCURVE",
"666.667 540.667 OFFCURVE",
"672 534 CURVE SMOOTH",
"698 504 OFFCURVE",
"711 468.333 OFFCURVE",
"711 427 CURVE SMOOTH",
"711 379.667 OFFCURVE",
"694.667 326.667 OFFCURVE",
"662 268 CURVE SMOOTH",
"635.333 220 OFFCURVE",
"600 172.333 OFFCURVE",
"556 125 CURVE SMOOTH",
"532.667 99 OFFCURVE",
"498.333 67.333 OFFCURVE",
"453 30 CURVE SMOOTH",
"395.667 -16.667 OFFCURVE",
"357.333 -40 OFFCURVE",
"338 -40 CURVE SMOOTH",
"333.333 -40 OFFCURVE",
"331 -36 OFFCURVE",
"331 -28 CURVE SMOOTH",
"331 -13.333 OFFCURVE",
"337.667 14.667 OFFCURVE",
"351 56 CURVE",
"379.667 54.667 OFFCURVE",
"408 62.333 OFFCURVE",
"436 79 CURVE SMOOTH",
"461.333 93 OFFCURVE",
"476.667 110 OFFCURVE",
"482 130 CURVE SMOOTH",
"482.667 132 OFFCURVE",
"481.667 133.333 OFFCURVE",
"479 134 CURVE SMOOTH",
"476.333 134.667 OFFCURVE",
"474.667 134 OFFCURVE",
"474 132 CURVE SMOOTH",
"470 114 OFFCURVE",
"456.333 98.333 OFFCURVE",
"433 85 CURVE SMOOTH",
"407 70.333 OFFCURVE",
"380.667 63.333 OFFCURVE",
"354 64 CURVE",
"377.333 132 OFFCURVE",
"395.333 182.333 OFFCURVE",
"408 215 CURVE SMOOTH",
"425.333 263.667 OFFCURVE",
"434 306.667 OFFCURVE",
"434 344 CURVE SMOOTH",
"434 417.333 OFFCURVE",
"404.333 459.667 OFFCURVE",
"345 471 CURVE",
"337 499.667 OFFCURVE",
"324 522 OFFCURVE",
"306 538 CURVE SMOOTH",
"290 552 OFFCURVE",
"271.333 559 OFFCURVE",
"250 559 CURVE SMOOTH",
"220.667 559 OFFCURVE",
"195 546.333 OFFCURVE",
"173 521 CURVE SMOOTH",
"153.667 499 OFFCURVE",
"139.667 472.333 OFFCURVE",
"131 441 CURVE SMOOTH",
"127 426.333 OFFCURVE",
"124.333 411 OFFCURVE",
"123 395 CURVE",
"87 369 OFFCURVE",
"58.667 341 OFFCURVE",
"38 311 CURVE SMOOTH",
"14 277.667 OFFCURVE",
"2 246 OFFCURVE",
"2 216 CURVE SMOOTH",
"2 178 OFFCURVE",
"20 144.667 OFFCURVE",
"56 116 CURVE SMOOTH",
"60.667 112.667 OFFCURVE",
"65 111 OFFCURVE",
"69 111 CURVE SMOOTH",
"72.333 111 OFFCURVE",
"74 112.333 OFFCURVE",
"74 115 CURVE SMOOTH",
"74 117.667 OFFCURVE",
"70.667 121 OFFCURVE",
"64 125 CURVE SMOOTH",
"36.667 141 OFFCURVE",
"23 163.667 OFFCURVE",
"23 193 CURVE SMOOTH",
"23 241.667 OFFCURVE",
"55.667 296 OFFCURVE",
"121 356 CURVE",
"121 298.667 OFFCURVE",
"134.333 245.333 OFFCURVE",
"161 196 CURVE SMOOTH",
"189 144 OFFCURVE",
"227 104.667 OFFCURVE",
"275 78 CURVE",
"255.667 20 OFFCURVE",
"244.667 -23 OFFCURVE",
"242 -51 CURVE",
"241.333 -53 OFFCURVE",
"242.333 -54.667 OFFCURVE",
"245 -56 CURVE SMOOTH",
"247 -57.333 OFFCURVE",
"248 -56.667 OFFCURVE",
"248 -54 CURVE SMOOTH",
"250 -30.667 OFFCURVE",
"262 12 OFFCURVE",
"284 74 CURVE",
"294 68.667 OFFCURVE",
"304.333 64.333 OFFCURVE",
"315 61 CURVE",
"304.333 23 OFFCURVE",
"297.667 -10.333 OFFCURVE",
"295 -39 CURVE SMOOTH",
"293.667 -53.667 OFFCURVE",
"313.667 -70 OFFCURVE",
"331 -70 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"235.667 114.667 OFFCURVE",
"200.667 155 OFFCURVE",
"174 209 CURVE SMOOTH",
"148.667 260.333 OFFCURVE",
"136 314 OFFCURVE",
"136 370 CURVE",
"206 428.667 OFFCURVE",
"266.667 458 OFFCURVE",
"318 458 CURVE SMOOTH",
"323.333 458 OFFCURVE",
"328.667 457.333 OFFCURVE",
"334 456 CURVE",
"338 437.333 OFFCURVE",
"340 414 OFFCURVE",
"340 386 CURVE SMOOTH",
"340 305.333 OFFCURVE",
"321.333 211 OFFCURVE",
"284 103 CURVE SMOOTH",
"279 88 LINE"
);
},
{
closed = 1;
nodes = (
"307.333 73.333 OFFCURVE",
"297 77.667 OFFCURVE",
"287 83 CURVE",
"294 102 LINE SMOOTH",
"334 214.667 OFFCURVE",
"354 310.333 OFFCURVE",
"354 389 CURVE SMOOTH",
"354 413.667 OFFCURVE",
"352.333 434.333 OFFCURVE",
"349 451 CURVE",
"378.333 439 OFFCURVE",
"393 408.667 OFFCURVE",
"393 360 CURVE SMOOTH",
"393 324.667 OFFCURVE",
"385 281 OFFCURVE",
"369 229 CURVE SMOOTH",
"347 159 OFFCURVE",
"330 106 OFFCURVE",
"318 70 CURVE"
);
},
{
closed = 1;
nodes = (
"140 418 OFFCURVE",
"142.333 429.667 OFFCURVE",
"145 441 CURVE SMOOTH",
"153 472.333 OFFCURVE",
"166 497.333 OFFCURVE",
"184 516 CURVE SMOOTH",
"200 534 OFFCURVE",
"218.333 544 OFFCURVE",
"239 546 CURVE SMOOTH",
"277.667 551.333 OFFCURVE",
"313 525 OFFCURVE",
"329 473 CURVE",
"275 477 OFFCURVE",
"213.333 455.667 OFFCURVE",
"144 409 CURVE",
"138 406 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01291 7 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 7 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 6 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012117 8 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 5 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 101 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 36 122 36 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012121 101 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012111 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01246 4 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 18 233 18 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0120 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 690;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"403.667 150.667 OFFCURVE",
"403 152.333 OFFCURVE",
"401 153 CURVE SMOOTH",
"399 153.667 OFFCURVE",
"397.333 153 OFFCURVE",
"396 151 CURVE",
"389.333 131.667 OFFCURVE",
"375 117 OFFCURVE",
"353 107 CURVE SMOOTH",
"333.667 98.333 OFFCURVE",
"311.333 94 OFFCURVE",
"286 94 CURVE",
"295.333 124.667 OFFCURVE",
"308.667 161.333 OFFCURVE",
"326 204 CURVE SMOOTH",
"360 285 LINE SMOOTH",
"386.667 347.667 OFFCURVE",
"400 399.667 OFFCURVE",
"400 441 CURVE SMOOTH",
"400 503 OFFCURVE",
"373.333 534 OFFCURVE",
"320 534 CURVE",
"315.333 562 OFFCURVE",
"304.667 583.667 OFFCURVE",
"288 599 CURVE SMOOTH",
"272 612.333 OFFCURVE",
"252.667 619 OFFCURVE",
"230 619 CURVE SMOOTH",
"187.333 619 OFFCURVE",
"148.667 598.667 OFFCURVE",
"114 558 CURVE SMOOTH",
"75.333 512 OFFCURVE",
"56 453.667 OFFCURVE",
"56 383 CURVE",
"26.667 345.667 OFFCURVE",
"12 310 OFFCURVE",
"12 276 CURVE SMOOTH",
"12 238 OFFCURVE",
"29.667 204.667 OFFCURVE",
"65 176 CURVE",
"70.333 172.667 OFFCURVE",
"75 171 OFFCURVE",
"79 171 CURVE SMOOTH",
"82.333 171 OFFCURVE",
"84 172 OFFCURVE",
"84 174 CURVE SMOOTH",
"84 177.333 OFFCURVE",
"80.667 181 OFFCURVE",
"74 185 CURVE SMOOTH",
"46.667 201 OFFCURVE",
"33 223.667 OFFCURVE",
"33 253 CURVE SMOOTH",
"33 276.333 OFFCURVE",
"41.667 302.333 OFFCURVE",
"59 331 CURVE",
"71 227 OFFCURVE",
"120 140.667 OFFCURVE",
"188 102 CURVE",
"151.333 9.333 OFFCURVE",
"134 -56 OFFCURVE",
"136 -94 CURVE SMOOTH",
"136.667 -98.667 OFFCURVE",
"138.333 -101 OFFCURVE",
"141 -101 CURVE SMOOTH",
"145 -101 OFFCURVE",
"146.667 -97.667 OFFCURVE",
"146 -91 CURVE SMOOTH",
"145.333 -53 OFFCURVE",
"162.333 10 OFFCURVE",
"197 98 CURVE",
"206.333 93.333 OFFCURVE",
"217.667 89.667 OFFCURVE",
"231 87 CURVE",
"228 80 LINE SMOOTH",
"216.667 53.333 OFFCURVE",
"211 28.667 OFFCURVE",
"211 6 CURVE SMOOTH",
"211 -37.333 OFFCURVE",
"227.667 -59 OFFCURVE",
"261 -59 CURVE SMOOTH",
"299 -59 OFFCURVE",
"349.333 -27.667 OFFCURVE",
"412 35 CURVE SMOOTH",
"452 74.333 OFFCURVE",
"499 129.667 OFFCURVE",
"553 201 CURVE",
"548.333 173.667 OFFCURVE",
"546 147.667 OFFCURVE",
"546 123 CURVE SMOOTH",
"546 0.333 OFFCURVE",
"597 -58.667 OFFCURVE",
"699 -54 CURVE SMOOTH",
"751 -52 OFFCURVE",
"805.667 -26.333 OFFCURVE",
"863 23 CURVE SMOOTH",
"927 78.333 OFFCURVE",
"972.667 147.333 OFFCURVE",
"1000 230 CURVE SMOOTH",
"1015.333 276 OFFCURVE",
"1023 321.333 OFFCURVE",
"1023 366 CURVE SMOOTH",
"1023 414.667 OFFCURVE",
"1013 453 OFFCURVE",
"993 481 CURVE SMOOTH",
"969.667 515.667 OFFCURVE",
"933 533 OFFCURVE",
"883 533 CURVE SMOOTH",
"843.667 533 OFFCURVE",
"807.333 523 OFFCURVE",
"774 503 CURVE SMOOTH",
"772 501.667 OFFCURVE",
"771 499.667 OFFCURVE",
"771 497 CURVE SMOOTH",
"771 493 OFFCURVE",
"773 491 OFFCURVE",
"777 491 CURVE SMOOTH",
"780 491 LINE",
"812 510.333 OFFCURVE",
"846.333 520 OFFCURVE",
"883 520 CURVE SMOOTH",
"954.333 520 OFFCURVE",
"990 477 OFFCURVE",
"990 391 CURVE SMOOTH",
"990 343 OFFCURVE",
"980.333 293.667 OFFCURVE",
"961 243 CURVE SMOOTH",
"933.667 173 OFFCURVE",
"897.667 113 OFFCURVE",
"853 63 CURVE SMOOTH",
"803 5.667 OFFCURVE",
"751.333 -26.667 OFFCURVE",
"698 -34 CURVE SMOOTH",
"691.333 -34.667 OFFCURVE",
"684.667 -35 OFFCURVE",
"678 -35 CURVE SMOOTH",
"614 -35 OFFCURVE",
"582 8.667 OFFCURVE",
"582 96 CURVE SMOOTH",
"582 137.333 OFFCURVE",
"589.333 181.333 OFFCURVE",
"604 228 CURVE SMOOTH",
"617.333 272 OFFCURVE",
"633.333 306.333 OFFCURVE",
"652 331 CURVE",
"648 334.333 OFFCURVE",
"642.333 336 OFFCURVE",
"635 336 CURVE SMOOTH",
"620.333 336 OFFCURVE",
"601 327.667 OFFCURVE",
"597 321 CURVE SMOOTH",
"528.333 200.333 OFFCURVE",
"462 109.667 OFFCURVE",
"398 49 CURVE SMOOTH",
"346 0.333 OFFCURVE",
"309.667 -24 OFFCURVE",
"289 -24 CURVE SMOOTH",
"275 -24 OFFCURVE",
"268 -13.333 OFFCURVE",
"268 8 CURVE SMOOTH",
"268 25.333 OFFCURVE",
"273 50.667 OFFCURVE",
"283 84 CURVE",
"311 85.333 OFFCURVE",
"335.333 91 OFFCURVE",
"356 101 CURVE SMOOTH",
"380 112.333 OFFCURVE",
"395.667 128 OFFCURVE",
"403 148 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"160.667 140 OFFCURVE",
"132.333 173.667 OFFCURVE",
"109 219 CURVE SMOOTH",
"88.333 261 OFFCURVE",
"75.667 304.667 OFFCURVE",
"71 350 CURVE",
"97 386 OFFCURVE",
"130.333 419 OFFCURVE",
"171 449 CURVE SMOOTH",
"226.333 490.333 OFFCURVE",
"270.667 512.333 OFFCURVE",
"304 515 CURVE",
"304.667 508.333 OFFCURVE",
"305 501.667 OFFCURVE",
"305 495 CURVE SMOOTH",
"304.333 406.333 OFFCURVE",
"270.667 287.667 OFFCURVE",
"204 139 CURVE SMOOTH",
"200.667 133 OFFCURVE",
"197.333 126 OFFCURVE",
"194 118 CURVE"
);
},
{
closed = 1;
nodes = (
"346.667 509.333 OFFCURVE",
"359 488.667 OFFCURVE",
"359 452 CURVE SMOOTH",
"359 416.667 OFFCURVE",
"347.333 368 OFFCURVE",
"324 306 CURVE SMOOTH",
"290 224.667 OFFCURVE",
"260.667 155.667 OFFCURVE",
"236 99 CURVE",
"223.333 102.333 OFFCURVE",
"212.333 107 OFFCURVE",
"203 113 CURVE",
"213 137 LINE SMOOTH",
"285 293 OFFCURVE",
"321.333 415 OFFCURVE",
"322 503 CURVE SMOOTH",
"322 514 LINE"
);
},
{
closed = 1;
nodes = (
"259.667 527.667 OFFCURVE",
"210.333 506.333 OFFCURVE",
"153 469 CURVE SMOOTH",
"120.333 448.333 OFFCURVE",
"92.667 425 OFFCURVE",
"70 399 CURVE",
"72 462.333 OFFCURVE",
"89.667 514 OFFCURVE",
"123 554 CURVE SMOOTH",
"152.333 590 OFFCURVE",
"185 608 OFFCURVE",
"221 608 CURVE SMOOTH",
"259.667 608 OFFCURVE",
"291.667 582.333 OFFCURVE",
"301 533 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012120 7 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 6 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 8 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 7 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 8 94 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 8 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 70 122 70 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 94 122 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01296 94 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 142 22 142 38 142 54 142 70 142 86 142 102 142 118 142 134 142 150 142 166 142 182 142 198 142 214 142 230 142 246 142 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 142 22 142 38 142 54 142 70 142 86 142 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 142 117 142 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012148 130 86 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012157 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012136 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01262 3 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 1 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01296 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1029;
}
);
note = W;
unicode = 0057;
},
{
glyphname = Wacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acute;
transform = "{1, 0, 0, 1, 570, 64}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 470, 57}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 568, 134}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = grave;
transform = "{1, 0, 0, 1, 521, 49}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E80;
},
{
glyphname = X;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-56.667 -141 OFFCURVE",
"-43.667 -129.333 OFFCURVE",
"-29 -106 CURVE SMOOTH",
"16.333 -34 OFFCURVE",
"83.333 40 OFFCURVE",
"172 116 CURVE",
"198.667 102.667 OFFCURVE",
"227.667 94 OFFCURVE",
"259 90 CURVE",
"261 -45.333 OFFCURVE",
"268 -118 OFFCURVE",
"280 -128 CURVE SMOOTH",
"282 -129.333 OFFCURVE",
"284 -129.667 OFFCURVE",
"286 -129 CURVE SMOOTH",
"287.333 -129 OFFCURVE",
"288 -128.333 OFFCURVE",
"288 -127 CURVE SMOOTH",
"288 -125 LINE",
"276.667 -111 OFFCURVE",
"271 -40 OFFCURVE",
"271 88 CURVE",
"286 88 LINE SMOOTH",
"294 87.333 OFFCURVE",
"301.667 87.333 OFFCURVE",
"309 88 CURVE",
"308.333 -9.333 OFFCURVE",
"329.333 -58 OFFCURVE",
"372 -58 CURVE SMOOTH",
"394.667 -58 OFFCURVE",
"423.667 -44.667 OFFCURVE",
"459 -18 CURVE SMOOTH",
"487 3.333 OFFCURVE",
"520 33.333 OFFCURVE",
"558 72 CURVE SMOOTH",
"561.333 76 OFFCURVE",
"563 79 OFFCURVE",
"563 81 CURVE SMOOTH",
"563 83.667 OFFCURVE",
"561.667 85 OFFCURVE",
"559 85 CURVE SMOOTH",
"556.333 85 OFFCURVE",
"553.667 83.667 OFFCURVE",
"551 81 CURVE SMOOTH",
"511 37 OFFCURVE",
"478 8 OFFCURVE",
"452 -6 CURVE SMOOTH",
"438 -14 OFFCURVE",
"425.333 -18 OFFCURVE",
"414 -18 CURVE SMOOTH",
"378.667 -18 OFFCURVE",
"358.333 20.667 OFFCURVE",
"353 98 CURVE",
"402.333 118 OFFCURVE",
"436 158.333 OFFCURVE",
"436 209 CURVE SMOOTH",
"436 211.667 OFFCURVE",
"435 213 OFFCURVE",
"433 213 CURVE SMOOTH",
"430.333 213 OFFCURVE",
"429 211.667 OFFCURVE",
"429 209 CURVE SMOOTH",
"427.667 162.333 OFFCURVE",
"397 125.333 OFFCURVE",
"353 108 CURVE",
"351.667 119.333 OFFCURVE",
"351 132 OFFCURVE",
"351 146 CURVE SMOOTH",
"351 165.333 OFFCURVE",
"352 188.333 OFFCURVE",
"354 215 CURVE SMOOTH",
"356 260 LINE",
"396 288.667 OFFCURVE",
"461.667 333 OFFCURVE",
"553 393 CURVE SMOOTH",
"616.333 434.333 OFFCURVE",
"656.5 463.167 OFFCURVE",
"673.5 479.5 CURVE SMOOTH",
"690.5 495.833 OFFCURVE",
"699 507.333 OFFCURVE",
"699 514 CURVE SMOOTH",
"699 516.667 OFFCURVE",
"697.333 518 OFFCURVE",
"694 518 CURVE SMOOTH",
"682 518 OFFCURVE",
"664 506.667 OFFCURVE",
"640 484 CURVE SMOOTH",
"615.333 459.333 OFFCURVE",
"576.333 428.333 OFFCURVE",
"523 391 CURVE SMOOTH",
"356 276 LINE",
"357.333 384 OFFCURVE",
"348 447.333 OFFCURVE",
"328 466 CURVE SMOOTH",
"313.333 480 OFFCURVE",
"294.333 487 OFFCURVE",
"271 487 CURVE SMOOTH",
"261.667 487 OFFCURVE",
"251.333 485.667 OFFCURVE",
"240 483 CURVE",
"228.667 506.333 OFFCURVE",
"213.667 524 OFFCURVE",
"195 536 CURVE SMOOTH",
"177.667 547.333 OFFCURVE",
"159.667 553 OFFCURVE",
"141 553 CURVE SMOOTH",
"102.333 553 OFFCURVE",
"71.667 536.333 OFFCURVE",
"49 503 CURVE SMOOTH",
"28.333 472.333 OFFCURVE",
"18 432.667 OFFCURVE",
"18 384 CURVE SMOOTH",
"18 334 OFFCURVE",
"29.667 286 OFFCURVE",
"53 240 CURVE SMOOTH",
"77.667 189.333 OFFCURVE",
"112.667 150.667 OFFCURVE",
"158 124 CURVE",
"64 46 OFFCURVE",
"-10 -30.667 OFFCURVE",
"-64 -106 CURVE SMOOTH",
"-72 -116 OFFCURVE",
"-76 -124.667 OFFCURVE",
"-76 -132 CURVE SMOOTH",
"-76 -138 OFFCURVE",
"-73.333 -141 OFFCURVE",
"-68 -141 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"232.333 105.667 OFFCURVE",
"207.333 114 OFFCURVE",
"184 126 CURVE",
"206.667 146 OFFCURVE",
"231.333 166 OFFCURVE",
"258 186 CURVE",
"259 101 LINE"
);
},
{
closed = 1;
nodes = (
"281.333 98 OFFCURVE",
"276.333 98.333 OFFCURVE",
"271 99 CURVE",
"271 197 LINE",
"316 230 LINE",
"314 176 OFFCURVE",
"311.667 132 OFFCURVE",
"309 98 CURVE",
"301.667 97.333 OFFCURVE",
"294 97.333 OFFCURVE",
"286 98 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"127.333 161.333 OFFCURVE",
"93.667 200.333 OFFCURVE",
"69 251 CURVE SMOOTH",
"47 297.667 OFFCURVE",
"36 346 OFFCURVE",
"36 396 CURVE SMOOTH",
"36 439.333 OFFCURVE",
"44.667 474.667 OFFCURVE",
"62 502 CURVE SMOOTH",
"80.667 531.333 OFFCURVE",
"106.667 546 OFFCURVE",
"140 546 CURVE SMOOTH",
"178.667 546 OFFCURVE",
"208 524 OFFCURVE",
"228 480 CURVE",
"195.333 470 OFFCURVE",
"160 451.333 OFFCURVE",
"122 424 CURVE SMOOTH",
"92 402.667 OFFCURVE",
"74 387.667 OFFCURVE",
"68 379 CURVE SMOOTH",
"65.333 375 OFFCURVE",
"64 372 OFFCURVE",
"64 370 CURVE SMOOTH",
"64 368 OFFCURVE",
"65.333 367 OFFCURVE",
"68 367 CURVE SMOOTH",
"73.333 367 OFFCURVE",
"78 368.333 OFFCURVE",
"82 371 CURVE",
"132 421.667 OFFCURVE",
"184 449 OFFCURVE",
"238 453 CURVE",
"248.667 413.667 OFFCURVE",
"255.333 330.333 OFFCURVE",
"258 203 CURVE",
"226 179.667 OFFCURVE",
"196.667 156.667 OFFCURVE",
"170 134 CURVE"
);
},
{
closed = 1;
nodes = (
"269.667 330.333 OFFCURVE",
"263 410.333 OFFCURVE",
"251 453 CURVE",
"257.667 453 OFFCURVE",
"264 452.333 OFFCURVE",
"270 451 CURVE SMOOTH",
"302 445 OFFCURVE",
"317.333 376.667 OFFCURVE",
"316 246 CURVE",
"271 213 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01220 7 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 6 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 37 122 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01228 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01240 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01281 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01295 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 37 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01253 4 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012103 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 541;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"486.667 -346 OFFCURVE",
"529 -335 OFFCURVE",
"573 -313 CURVE SMOOTH",
"613 -293.667 OFFCURVE",
"648.333 -268 OFFCURVE",
"679 -236 CURVE SMOOTH",
"735.667 -179.333 OFFCURVE",
"776.667 -104.333 OFFCURVE",
"802 -11 CURVE",
"812.667 -9.667 OFFCURVE",
"824.667 -9 OFFCURVE",
"838 -9 CURVE SMOOTH",
"868.667 -9 OFFCURVE",
"884 -14.667 OFFCURVE",
"884 -26 CURVE SMOOTH",
"884 -32.667 OFFCURVE",
"879.333 -40.667 OFFCURVE",
"870 -50 CURVE",
"868.667 -52 OFFCURVE",
"868 -53.667 OFFCURVE",
"868 -55 CURVE SMOOTH",
"868 -57 OFFCURVE",
"869 -58 OFFCURVE",
"871 -58 CURVE SMOOTH",
"872.333 -58 OFFCURVE",
"874 -57.333 OFFCURVE",
"876 -56 CURVE SMOOTH",
"889.333 -43.333 OFFCURVE",
"896 -32.333 OFFCURVE",
"896 -23 CURVE SMOOTH",
"896 -13 OFFCURVE",
"888.333 -5 OFFCURVE",
"873 1 CURVE SMOOTH",
"860.333 5.667 OFFCURVE",
"845.333 8 OFFCURVE",
"828 8 CURVE SMOOTH",
"820 8 OFFCURVE",
"812.667 7.333 OFFCURVE",
"806 6 CURVE",
"811.333 29.333 OFFCURVE",
"817 62.667 OFFCURVE",
"823 106 CURVE SMOOTH",
"829.667 159.333 OFFCURVE",
"833 205.333 OFFCURVE",
"833 244 CURVE SMOOTH",
"833 263.333 OFFCURVE",
"832 279.667 OFFCURVE",
"830 293 CURVE SMOOTH",
"826 319 OFFCURVE",
"819 332 OFFCURVE",
"809 332 CURVE SMOOTH",
"799.667 332 OFFCURVE",
"786.667 322.333 OFFCURVE",
"770 303 CURVE SMOOTH",
"708 229.667 OFFCURVE",
"643.333 167 OFFCURVE",
"576 115 CURVE SMOOTH",
"538 85.667 OFFCURVE",
"502.333 62.333 OFFCURVE",
"469 45 CURVE SMOOTH",
"437.667 29 OFFCURVE",
"413.667 21 OFFCURVE",
"397 21 CURVE SMOOTH",
"385 21 OFFCURVE",
"379 25.667 OFFCURVE",
"379 35 CURVE SMOOTH",
"379 63 OFFCURVE",
"422.667 118 OFFCURVE",
"510 200 CURVE SMOOTH",
"619.333 302.667 OFFCURVE",
"674 386.333 OFFCURVE",
"674 451 CURVE SMOOTH",
"674 516.333 OFFCURVE",
"620.333 549 OFFCURVE",
"513 549 CURVE SMOOTH",
"496.333 549 OFFCURVE",
"478.333 548.333 OFFCURVE",
"459 547 CURVE",
"420.333 577.667 OFFCURVE",
"367.333 591.333 OFFCURVE",
"300 588 CURVE SMOOTH",
"246.667 585.333 OFFCURVE",
"205.667 571.333 OFFCURVE",
"177 546 CURVE SMOOTH",
"151.667 522.667 OFFCURVE",
"140.333 495 OFFCURVE",
"143 463 CURVE",
"55 419.667 OFFCURVE",
"11 371.667 OFFCURVE",
"11 319 CURVE SMOOTH",
"11 281.667 OFFCURVE",
"33.667 253 OFFCURVE",
"79 233 CURVE SMOOTH",
"111.667 218.333 OFFCURVE",
"145 210.667 OFFCURVE",
"179 210 CURVE SMOOTH",
"213.667 209.333 OFFCURVE",
"247.667 211.667 OFFCURVE",
"281 217 CURVE SMOOTH",
"309.667 221.667 OFFCURVE",
"329.333 227.333 OFFCURVE",
"340 234 CURVE SMOOTH",
"348.667 238.667 OFFCURVE",
"353 243 OFFCURVE",
"353 247 CURVE SMOOTH",
"353 248.333 OFFCURVE",
"351.667 249 OFFCURVE",
"349 249 CURVE SMOOTH",
"345.667 249 OFFCURVE",
"340.667 247.667 OFFCURVE",
"334 245 CURVE SMOOTH",
"310.667 233.667 OFFCURVE",
"278.667 228 OFFCURVE",
"238 228 CURVE SMOOTH",
"187.333 228 OFFCURVE",
"142.333 235.667 OFFCURVE",
"103 251 CURVE SMOOTH",
"59 267 OFFCURVE",
"37 287.667 OFFCURVE",
"37 313 CURVE SMOOTH",
"37 349.667 OFFCURVE",
"75 388.333 OFFCURVE",
"151 429 CURVE",
"161 407 OFFCURVE",
"177 389 OFFCURVE",
"199 375 CURVE SMOOTH",
"223.667 360.333 OFFCURVE",
"252.333 352.667 OFFCURVE",
"285 352 CURVE SMOOTH",
"317.667 351.333 OFFCURVE",
"350.333 356.333 OFFCURVE",
"383 367 CURVE SMOOTH",
"385 367.667 OFFCURVE",
"386 369 OFFCURVE",
"386 371 CURVE SMOOTH",
"386 373.667 OFFCURVE",
"385 374.667 OFFCURVE",
"383 374 CURVE SMOOTH",
"347.667 365.333 OFFCURVE",
"315 361.667 OFFCURVE",
"285 363 CURVE SMOOTH",
"255 364.333 OFFCURVE",
"229 372 OFFCURVE",
"207 386 CURVE SMOOTH",
"187 398.667 OFFCURVE",
"172.667 415 OFFCURVE",
"164 435 CURVE",
"254 480.333 OFFCURVE",
"353 509.667 OFFCURVE",
"461 523 CURVE",
"485.667 495 OFFCURVE",
"498 461 OFFCURVE",
"498 421 CURVE SMOOTH",
"498 359 OFFCURVE",
"469.667 295.333 OFFCURVE",
"413 230 CURVE SMOOTH",
"376.333 188.667 OFFCURVE",
"351 157.667 OFFCURVE",
"337 137 CURVE SMOOTH",
"313.667 102.333 OFFCURVE",
"300.333 70.333 OFFCURVE",
"297 41 CURVE SMOOTH",
"295 23.667 OFFCURVE",
"297 8.667 OFFCURVE",
"303 -4 CURVE SMOOTH",
"311 -22 OFFCURVE",
"322.333 -31 OFFCURVE",
"337 -31 CURVE SMOOTH",
"342.333 -31 OFFCURVE",
"347.667 -29.333 OFFCURVE",
"353 -26 CURVE SMOOTH",
"354.333 -24.667 OFFCURVE",
"354.667 -23 OFFCURVE",
"354 -21 CURVE SMOOTH",
"354 -19 OFFCURVE",
"353 -18 OFFCURVE",
"351 -18 CURVE",
"347 -21 LINE SMOOTH",
"344.333 -23 OFFCURVE",
"341.333 -24 OFFCURVE",
"338 -24 CURVE SMOOTH",
"326.667 -24 OFFCURVE",
"318.333 -16 OFFCURVE",
"313 0 CURVE SMOOTH",
"309 10.667 OFFCURVE",
"307.667 24 OFFCURVE",
"309 40 CURVE SMOOTH",
"312.333 68.667 OFFCURVE",
"326.667 101.333 OFFCURVE",
"352 138 CURVE SMOOTH",
"366.667 159.333 OFFCURVE",
"390 187.667 OFFCURVE",
"422 223 CURVE SMOOTH",
"484.667 291.667 OFFCURVE",
"516 359.333 OFFCURVE",
"516 426 CURVE SMOOTH",
"516 464.667 OFFCURVE",
"504.667 497.333 OFFCURVE",
"482 524 CURVE",
"498 526 OFFCURVE",
"512.667 527 OFFCURVE",
"526 527 CURVE SMOOTH",
"612.667 527 OFFCURVE",
"656 501.333 OFFCURVE",
"656 450 CURVE SMOOTH",
"656 424 OFFCURVE",
"637 389.333 OFFCURVE",
"599 346 CURVE SMOOTH",
"488 230 LINE SMOOTH",
"438 176 OFFCURVE",
"409 144 OFFCURVE",
"401 134 CURVE SMOOTH",
"375 104 OFFCURVE",
"357.667 79 OFFCURVE",
"349 59 CURVE SMOOTH",
"341.667 42.333 OFFCURVE",
"338 28 OFFCURVE",
"338 16 CURVE SMOOTH",
"338 -6 OFFCURVE",
"349.333 -17 OFFCURVE",
"372 -17 CURVE SMOOTH",
"416.667 -17 OFFCURVE",
"488.667 22.333 OFFCURVE",
"588 101 CURVE SMOOTH",
"662 159.667 OFFCURVE",
"729 219 OFFCURVE",
"789 279 CURVE",
"790.333 239.667 OFFCURVE",
"788.333 187.333 OFFCURVE",
"783 122 CURVE SMOOTH",
"778.333 64 OFFCURVE",
"773.333 23 OFFCURVE",
"768 -1 CURVE",
"665.333 -27 OFFCURVE",
"580.333 -56 OFFCURVE",
"513 -88 CURVE SMOOTH",
"400.333 -141.333 OFFCURVE",
"344 -199 OFFCURVE",
"344 -261 CURVE SMOOTH",
"344 -310.333 OFFCURVE",
"383.333 -346 OFFCURVE",
"446 -346 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"415.333 -329 OFFCURVE",
"381 -303 OFFCURVE",
"381 -259 CURVE SMOOTH",
"381 -199 OFFCURVE",
"431.667 -145.333 OFFCURVE",
"533 -98 CURVE SMOOTH",
"583 -74 OFFCURVE",
"660 -47.667 OFFCURVE",
"764 -19 CURVE",
"735.333 -120.333 OFFCURVE",
"689.333 -199.667 OFFCURVE",
"626 -257 CURVE SMOOTH",
"572.667 -305 OFFCURVE",
"519.333 -329 OFFCURVE",
"466 -329 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"154.667 497.667 OFFCURVE",
"165.667 521.667 OFFCURVE",
"189 541 CURVE SMOOTH",
"215 563.667 OFFCURVE",
"252 576 OFFCURVE",
"300 578 CURVE SMOOTH",
"355.333 580 OFFCURVE",
"400.333 568.667 OFFCURVE",
"435 544 CURVE",
"402.333 540.667 OFFCURVE",
"366 534.667 OFFCURVE",
"326 526 CURVE SMOOTH",
"267.333 514 OFFCURVE",
"210.667 495 OFFCURVE",
"156 469 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012112 5 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012178 8 31 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 7 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012144 7 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 8 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0124 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 39 122 39 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 178 22 178 38 178 54 178 70 178 86 178 102 178 118 178 134 178 150 178 166 178 182 178 198 178 214 178 230 178 246 178 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 178 22 178 38 178 54 178 70 178 86 178 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 178 117 178 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01278 31 178 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 112 117 112 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012166 39 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012174 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012181 2 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012150 4 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012168 2 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012116 3 128 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 57 142 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012166 43 150 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 916;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Yacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 681, 75}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 616, 99}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 0176;
},
{
glyphname = Ydieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 695, 171}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Ydotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 244, -521}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 639, 78}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 663, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF6;
},
{
glyphname = Ymacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 605, -33}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 0232;
},
{
glyphname = Ytilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 634, 50}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"561 465.333 OFFCURVE",
"537.333 495.333 OFFCURVE",
"490 508 CURVE",
"467.333 550 OFFCURVE",
"423 571 OFFCURVE",
"357 571 CURVE SMOOTH",
"307 571 OFFCURVE",
"256 557.333 OFFCURVE",
"204 530 CURVE SMOOTH",
"127.333 490 OFFCURVE",
"87.667 443.333 OFFCURVE",
"85 390 CURVE",
"54.333 366.667 OFFCURVE",
"32.333 344 OFFCURVE",
"19 322 CURVE SMOOTH",
"16.333 317.333 OFFCURVE",
"15 313.333 OFFCURVE",
"15 310 CURVE SMOOTH",
"15 306.667 OFFCURVE",
"16 305 OFFCURVE",
"18 305 CURVE SMOOTH",
"18.667 305 OFFCURVE",
"29.667 314 OFFCURVE",
"51 332 CURVE SMOOTH",
"75 351.333 OFFCURVE",
"87.333 361 OFFCURVE",
"88 361 CURVE",
"98.667 317 OFFCURVE",
"145.333 286 OFFCURVE",
"208 286 CURVE SMOOTH",
"239.333 286 OFFCURVE",
"272 293.667 OFFCURVE",
"306 309 CURVE",
"308.667 309.667 OFFCURVE",
"309.333 311 OFFCURVE",
"308 313 CURVE",
"307.333 315.667 OFFCURVE",
"306 316.333 OFFCURVE",
"304 315 CURVE",
"274 302.333 OFFCURVE",
"245.333 296 OFFCURVE",
"218 296 CURVE SMOOTH",
"158 296 OFFCURVE",
"115 329.333 OFFCURVE",
"107 376 CURVE",
"154.333 409.333 OFFCURVE",
"207.333 438 OFFCURVE",
"266 462 CURVE SMOOTH",
"334 490 OFFCURVE",
"391.333 504 OFFCURVE",
"438 504 CURVE SMOOTH",
"449.333 504 OFFCURVE",
"459.667 503 OFFCURVE",
"469 501 CURVE",
"478.333 485.667 OFFCURVE",
"483 468.333 OFFCURVE",
"483 449 CURVE SMOOTH",
"483 395.667 OFFCURVE",
"451.333 339 OFFCURVE",
"388 279 CURVE SMOOTH",
"367.333 260.333 OFFCURVE",
"339.333 238.667 OFFCURVE",
"304 214 CURVE SMOOTH",
"259.333 183.333 OFFCURVE",
"217.667 159 OFFCURVE",
"179 141 CURVE",
"176.333 140.333 OFFCURVE",
"175.667 138.333 OFFCURVE",
"177 135 CURVE SMOOTH",
"177.667 131.667 OFFCURVE",
"179 130.667 OFFCURVE",
"181 132 CURVE",
"220.333 149.333 OFFCURVE",
"262.667 173.667 OFFCURVE",
"308 205 CURVE SMOOTH",
"344 229.667 OFFCURVE",
"372.333 251.667 OFFCURVE",
"393 271 CURVE SMOOTH",
"465.667 339.667 OFFCURVE",
"502 402.333 OFFCURVE",
"502 459 CURVE SMOOTH",
"502 470.333 OFFCURVE",
"500.667 481 OFFCURVE",
"498 491 CURVE",
"518.667 477.667 OFFCURVE",
"529 456 OFFCURVE",
"529 426 CURVE SMOOTH",
"529 382.667 OFFCURVE",
"495 329 OFFCURVE",
"427 265 CURVE SMOOTH",
"381.667 223 OFFCURVE",
"328.667 181.667 OFFCURVE",
"268 141 CURVE SMOOTH",
"260.667 136.333 OFFCURVE",
"245 130.667 OFFCURVE",
"221 124 CURVE SMOOTH",
"199.667 118 OFFCURVE",
"186.333 112.667 OFFCURVE",
"181 108 CURVE SMOOTH",
"173 100 OFFCURVE",
"169 91.667 OFFCURVE",
"169 83 CURVE SMOOTH",
"169 76.333 OFFCURVE",
"172 73 OFFCURVE",
"178 73 CURVE SMOOTH",
"182 73 OFFCURVE",
"203 81.667 OFFCURVE",
"241 99 CURVE SMOOTH",
"250.333 103 OFFCURVE",
"262.333 106.333 OFFCURVE",
"277 109 CURVE SMOOTH",
"309 115 LINE",
"357 112.333 OFFCURVE",
"381 85 OFFCURVE",
"381 33 CURVE SMOOTH",
"381 21.667 OFFCURVE",
"380 10.333 OFFCURVE",
"378 -1 CURVE",
"275.333 -27 OFFCURVE",
"190.333 -56 OFFCURVE",
"123 -88 CURVE SMOOTH",
"10.333 -141.333 OFFCURVE",
"-46 -199 OFFCURVE",
"-46 -261 CURVE SMOOTH",
"-46 -310.333 OFFCURVE",
"-6.667 -346 OFFCURVE",
"56 -346 CURVE SMOOTH",
"96.667 -346 OFFCURVE",
"139 -335 OFFCURVE",
"183 -313 CURVE SMOOTH",
"223 -293.667 OFFCURVE",
"258.333 -268 OFFCURVE",
"289 -236 CURVE SMOOTH",
"345.667 -179.333 OFFCURVE",
"386.333 -104.333 OFFCURVE",
"411 -11 CURVE",
"422.333 -9.667 OFFCURVE",
"434.667 -9 OFFCURVE",
"448 -9 CURVE SMOOTH",
"478.667 -9 OFFCURVE",
"494 -14.667 OFFCURVE",
"494 -26 CURVE SMOOTH",
"494 -32.667 OFFCURVE",
"489 -40.667 OFFCURVE",
"479 -50 CURVE",
"477.667 -52 OFFCURVE",
"477 -53.667 OFFCURVE",
"477 -55 CURVE SMOOTH",
"477 -57 OFFCURVE",
"478.333 -58 OFFCURVE",
"481 -58 CURVE SMOOTH",
"482.333 -58 OFFCURVE",
"484 -57.333 OFFCURVE",
"486 -56 CURVE",
"498.667 -43.333 OFFCURVE",
"505 -32.333 OFFCURVE",
"505 -23 CURVE SMOOTH",
"505 -13 OFFCURVE",
"497.667 -5 OFFCURVE",
"483 1 CURVE SMOOTH",
"470.333 5.667 OFFCURVE",
"455.333 8 OFFCURVE",
"438 8 CURVE SMOOTH",
"430 8 OFFCURVE",
"422.333 7.333 OFFCURVE",
"415 6 CURVE",
"417.667 15.333 OFFCURVE",
"419 24.667 OFFCURVE",
"419 34 CURVE SMOOTH",
"419 64 OFFCURVE",
"410.667 89.667 OFFCURVE",
"394 111 CURVE SMOOTH",
"376.667 135 OFFCURVE",
"354 146.333 OFFCURVE",
"326 145 CURVE",
"402.667 200.333 OFFCURVE",
"458.667 246.667 OFFCURVE",
"494 284 CURVE SMOOTH",
"538.667 331.333 OFFCURVE",
"561 376 OFFCURVE",
"561 418 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"345.333 -120.333 OFFCURVE",
"299.333 -199.667 OFFCURVE",
"236 -257 CURVE SMOOTH",
"182.667 -305 OFFCURVE",
"129 -329 OFFCURVE",
"75 -329 CURVE SMOOTH",
"25.667 -329 OFFCURVE",
"-9 -303 OFFCURVE",
"-9 -259 CURVE SMOOTH",
"-9 -199 OFFCURVE",
"41.333 -145.333 OFFCURVE",
"142 -98 CURVE SMOOTH",
"192.667 -74 OFFCURVE",
"270 -47.667 OFFCURVE",
"374 -19 CURVE"
);
},
{
closed = 1;
nodes = (
"113.333 452.667 OFFCURVE",
"147.333 492 OFFCURVE",
"208 524 CURVE SMOOTH",
"255.333 548.667 OFFCURVE",
"301.333 561 OFFCURVE",
"346 561 CURVE SMOOTH",
"397.333 561 OFFCURVE",
"435.667 545 OFFCURVE",
"461 513 CURVE",
"452.333 514.333 OFFCURVE",
"443 515 OFFCURVE",
"433 515 CURVE SMOOTH",
"384.333 515 OFFCURVE",
"329 504.333 OFFCURVE",
"267 483 CURVE SMOOTH",
"207 462.333 OFFCURVE",
"153.333 436.667 OFFCURVE",
"106 406 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012141 8 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 7 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 8 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 57 122 57 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01222 57 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 77 122 77 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01279 97 81 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012137 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 102 141 118 141 134 141 150 141 166 141 182 141 198 141 214 141 230 141 246 141 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 141 117 141 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012133 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012144 2 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 2 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 101 233 101 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 101 24 101 40 101 56 101 72 101 88 101 104 101 120 101 136 101 152 101 168 101 184 101 200 101 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0126 133 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 484;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = Zacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 443, 214}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 334, 313}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 423, 179}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 017B;
},
{
glyphname = a;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{118, -16}";
},
{
name = ogonek;
position = "{219, 8}";
},
{
name = top;
position = "{162, 145}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27.333 -1 OFFCURVE",
"41.333 5.667 OFFCURVE",
"58 19 CURVE SMOOTH",
"75.333 34.333 OFFCURVE",
"92 52.667 OFFCURVE",
"108 74 CURVE",
"109.333 52.667 OFFCURVE",
"115 35 OFFCURVE",
"125 21 CURVE SMOOTH",
"134.333 8.333 OFFCURVE",
"144.667 1.333 OFFCURVE",
"156 0 CURVE SMOOTH",
"190.667 -4 OFFCURVE",
"232.333 20 OFFCURVE",
"281 72 CURVE SMOOTH",
"283 74.667 OFFCURVE",
"284 77.667 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 83.667 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276.333 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"233.667 38.333 OFFCURVE",
"201.333 18 OFFCURVE",
"176 18 CURVE SMOOTH",
"151.333 18 OFFCURVE",
"139 33.667 OFFCURVE",
"139 65 CURVE SMOOTH",
"139 90.333 OFFCURVE",
"146.667 117 OFFCURVE",
"162 145 CURVE SMOOTH",
"162.667 146.333 OFFCURVE",
"165.333 147.667 OFFCURVE",
"170 149 CURVE SMOOTH",
"174.667 150.333 OFFCURVE",
"177 152.333 OFFCURVE",
"177 155 CURVE SMOOTH",
"177 168.333 OFFCURVE",
"156 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130 176 OFFCURVE",
"116.667 172.667 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 150.667 OFFCURVE",
"37.667 122.333 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62.333 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"0.667 -1 OFFCURVE",
"16 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 34.667 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 56.667 OFFCURVE",
"28.667 68.667 OFFCURVE",
"36 82 CURVE SMOOTH",
"60.667 130.667 OFFCURVE",
"90.333 154.667 OFFCURVE",
"125 154 CURVE",
"117.667 139.333 OFFCURVE",
"112.333 121 OFFCURVE",
"109 99 CURVE",
"101.667 80.333 OFFCURVE",
"87.333 62 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44.333 29 OFFCURVE",
"37 29 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01240 8 12 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 40 117 40 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01218 4 36 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
note = a;
unicode = 0061;
},
{
glyphname = aacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 54, -135}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = abreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 58, -151}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 57, -198}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -73, -463}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 59, -201}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 63, -203}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 60, -158}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 53, -203}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB5;
},
{
glyphname = acircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -38, -151}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -4, -211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -77, -461}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -2, -204}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -14, -201}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -14, -198}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -14, -199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAB;
},
{
glyphname = adblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 0, -189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0201;
},
{
glyphname = adieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 63, -56}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = adotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -78, -455}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA1;
},
{
glyphname = agrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, 26, -136}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = ahookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{0.9, 0, 0, 0.9, 61, -174}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 17, -205}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0203;
},
{
glyphname = amacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 0, -165}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 29, 9}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0105;
},
{
glyphname = aring;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 71, -136}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1.2416, 0, 0, 1.2416, 35, -294}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, -76}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 01FB;
},
{
glyphname = atilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 2, -169}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = ae;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"184.667 -9 OFFCURVE",
"215.667 0.333 OFFCURVE",
"251 19 CURVE SMOOTH",
"283.667 36.333 OFFCURVE",
"307.667 54 OFFCURVE",
"323 72 CURVE SMOOTH",
"325 74.667 OFFCURVE",
"326 77.667 OFFCURVE",
"326 81 CURVE SMOOTH",
"326 89 OFFCURVE",
"322 88.333 OFFCURVE",
"314 79 CURVE SMOOTH",
"300 63.667 OFFCURVE",
"279 48.333 OFFCURVE",
"251 33 CURVE SMOOTH",
"219.667 15.667 OFFCURVE",
"193.667 7 OFFCURVE",
"173 7 CURVE SMOOTH",
"147 7 OFFCURVE",
"134 21 OFFCURVE",
"134 49 CURVE SMOOTH",
"134 55.667 OFFCURVE",
"135 63.333 OFFCURVE",
"137 72 CURVE",
"174.333 81.333 OFFCURVE",
"202 97.667 OFFCURVE",
"220 121 CURVE SMOOTH",
"230.667 135 OFFCURVE",
"236 148.333 OFFCURVE",
"236 161 CURVE SMOOTH",
"236 181.667 OFFCURVE",
"226 192 OFFCURVE",
"206 192 CURVE SMOOTH",
"191.333 192 OFFCURVE",
"176.333 185.667 OFFCURVE",
"161 173 CURVE",
"155.667 175 OFFCURVE",
"149.667 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130.333 176 OFFCURVE",
"116.667 172.667 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 150.667 OFFCURVE",
"37.667 122.333 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62.333 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"0.667 -1 OFFCURVE",
"16 -1 CURVE SMOOTH",
"27.333 -1 OFFCURVE",
"41.333 5.667 OFFCURVE",
"58 19 CURVE SMOOTH",
"72 31 OFFCURVE",
"86.333 46 OFFCURVE",
"101 64 CURVE",
"100 55 LINE",
"100 12.333 OFFCURVE",
"119.333 -9 OFFCURVE",
"158 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 34.667 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 56.667 OFFCURVE",
"28.667 68.667 OFFCURVE",
"36 82 CURVE SMOOTH",
"60.667 130.667 OFFCURVE",
"90.333 154.667 OFFCURVE",
"125 154 CURVE",
"117.667 139.333 OFFCURVE",
"112.333 121 OFFCURVE",
"109 99 CURVE",
"101.667 80.333 OFFCURVE",
"87.333 62 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44.333 29 OFFCURVE",
"37 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"158.333 125.667 OFFCURVE",
"194.667 176 OFFCURVE",
"212 176 CURVE SMOOTH",
"216.667 176 OFFCURVE",
"219 172.333 OFFCURVE",
"219 165 CURVE SMOOTH",
"219 155.667 OFFCURVE",
"215.333 144.333 OFFCURVE",
"208 131 CURVE SMOOTH",
"195.333 109.667 OFFCURVE",
"173 93.667 OFFCURVE",
"141 83 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0124 8 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 8 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 7 56 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 44 117 44 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0120 18 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 4 117 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 26 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01246 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 306;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = aeacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 136, -161}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 306;
}
);
unicode = 01FD;
},
{
glyphname = b;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 -24 OFFCURVE",
"130.667 -10.667 OFFCURVE",
"156 16 CURVE",
"191.333 20.667 OFFCURVE",
"227 39 OFFCURVE",
"263 71 CURVE SMOOTH",
"267 74.333 OFFCURVE",
"269 77.667 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 83.667 OFFCURVE",
"268 85 OFFCURVE",
"266 85 CURVE SMOOTH",
"264 85 OFFCURVE",
"261.667 84 OFFCURVE",
"259 82 CURVE",
"231.667 53.333 OFFCURVE",
"201 36.333 OFFCURVE",
"167 31 CURVE",
"188.333 59.667 OFFCURVE",
"199 88 OFFCURVE",
"199 116 CURVE SMOOTH",
"199 161.333 OFFCURVE",
"177.333 194 OFFCURVE",
"134 214 CURVE",
"192 310.667 OFFCURVE",
"237.667 374.667 OFFCURVE",
"271 406 CURVE SMOOTH",
"273 408 OFFCURVE",
"274 410 OFFCURVE",
"274 412 CURVE SMOOTH",
"274 419.333 OFFCURVE",
"266.333 423 OFFCURVE",
"251 423 CURVE SMOOTH",
"243 423 OFFCURVE",
"237 421 OFFCURVE",
"233 417 CURVE SMOOTH",
"198.333 383.667 OFFCURVE",
"155 319 OFFCURVE",
"103 223 CURVE",
"93 225 OFFCURVE",
"83.333 226 OFFCURVE",
"74 226 CURVE SMOOTH",
"50 226 OFFCURVE",
"31.333 218.333 OFFCURVE",
"18 203 CURVE SMOOTH",
"5.333 189.667 OFFCURVE",
"-1 172 OFFCURVE",
"-1 150 CURVE SMOOTH",
"-1 118.667 OFFCURVE",
"10.667 90 OFFCURVE",
"34 64 CURVE",
"30 49.333 OFFCURVE",
"28 36.667 OFFCURVE",
"28 26 CURVE SMOOTH",
"28 -7.333 OFFCURVE",
"44 -24 OFFCURVE",
"76 -24 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"61.333 -11 OFFCURVE",
"55 -0.667 OFFCURVE",
"55 20 CURVE SMOOTH",
"55 26.667 OFFCURVE",
"56 34.333 OFFCURVE",
"58 43 CURVE",
"76.667 29 OFFCURVE",
"97.333 20.333 OFFCURVE",
"120 17 CURVE",
"102.667 -1.667 OFFCURVE",
"87.333 -11 OFFCURVE",
"74 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"31.333 109.667 OFFCURVE",
"26 128.667 OFFCURVE",
"26 148 CURVE SMOOTH",
"26 167.333 OFFCURVE",
"31.667 182.667 OFFCURVE",
"43 194 CURVE SMOOTH",
"55.667 206.667 OFFCURVE",
"73.667 212 OFFCURVE",
"97 210 CURVE",
"91 198 LINE SMOOTH",
"67.667 154.667 OFFCURVE",
"51.333 119 OFFCURVE",
"42 91 CURVE"
);
},
{
closed = 1;
nodes = (
"106 34 OFFCURVE",
"83 45.667 OFFCURVE",
"63 65 CURVE",
"67 79 OFFCURVE",
"73 94.333 OFFCURVE",
"81 111 CURVE SMOOTH",
"95.667 142.333 OFFCURVE",
"111.667 173 OFFCURVE",
"129 203 CURVE",
"156.333 193.667 OFFCURVE",
"170 170.667 OFFCURVE",
"170 134 CURVE SMOOTH",
"170 110.667 OFFCURVE",
"163 85 OFFCURVE",
"149 57 CURVE SMOOTH",
"145 47.667 OFFCURVE",
"139.333 38.667 OFFCURVE",
"132 30 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01262 5 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 5 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0122 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 62 117 62 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0124 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 52 122 52 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01258 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01264 62 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0126 1 20 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"111.667 -7 OFFCURVE",
"161 19.667 OFFCURVE",
"211 73 CURVE SMOOTH",
"213 75.667 OFFCURVE",
"214 78.333 OFFCURVE",
"214 81 CURVE SMOOTH",
"214 83.667 OFFCURVE",
"213 85.333 OFFCURVE",
"211 86 CURVE SMOOTH",
"209 86 OFFCURVE",
"205.667 83.667 OFFCURVE",
"201 79 CURVE SMOOTH",
"173 49.667 OFFCURVE",
"146 29.667 OFFCURVE",
"120 19 CURVE SMOOTH",
"101.333 11.667 OFFCURVE",
"85.333 8 OFFCURVE",
"72 8 CURVE SMOOTH",
"46.667 8 OFFCURVE",
"34 20 OFFCURVE",
"34 44 CURVE SMOOTH",
"34 73.333 OFFCURVE",
"55.667 112.667 OFFCURVE",
"89 138 CURVE SMOOTH",
"101.667 148 OFFCURVE",
"114.333 153 OFFCURVE",
"127 153 CURVE SMOOTH",
"136.333 153 OFFCURVE",
"141 149 OFFCURVE",
"141 141 CURVE SMOOTH",
"141 135.667 OFFCURVE",
"138.667 129 OFFCURVE",
"134 121 CURVE SMOOTH",
"130.667 114.333 OFFCURVE",
"131.333 111 OFFCURVE",
"136 111 CURVE SMOOTH",
"137.333 111 OFFCURVE",
"139 112 OFFCURVE",
"141 114 CURVE SMOOTH",
"144.333 118.667 OFFCURVE",
"148.333 125.333 OFFCURVE",
"153 134 CURVE SMOOTH",
"157.667 144.667 OFFCURVE",
"160 153 OFFCURVE",
"160 159 CURVE SMOOTH",
"160 178.333 OFFCURVE",
"149.333 188 OFFCURVE",
"128 188 CURVE SMOOTH",
"102 188 OFFCURVE",
"75 171.333 OFFCURVE",
"47 138 CURVE SMOOTH",
"21 106.667 OFFCURVE",
"8 78.333 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 13 OFFCURVE",
"26.333 -7 OFFCURVE",
"63 -7 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01227 5 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 27 117 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 1 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 4 22 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 193;
}
);
note = c;
unicode = 0063;
},
{
glyphname = cacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 75, -170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 0107;
},
{
glyphname = ccaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, -30, -27}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 010D;
},
{
glyphname = ccedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, -84, -8}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -30, -199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 0109;
},
{
glyphname = cdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 49, -189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 010B;
},
{
glyphname = d;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27.333 -1 OFFCURVE",
"41.333 5.667 OFFCURVE",
"58 19 CURVE SMOOTH",
"75.333 34.333 OFFCURVE",
"92 52.667 OFFCURVE",
"108 74 CURVE",
"109.333 52.667 OFFCURVE",
"115 35 OFFCURVE",
"125 21 CURVE SMOOTH",
"134.333 8.333 OFFCURVE",
"144.667 1.333 OFFCURVE",
"156 0 CURVE SMOOTH",
"190.667 -4 OFFCURVE",
"232.333 20 OFFCURVE",
"281 72 CURVE SMOOTH",
"283 74.667 OFFCURVE",
"284 77.667 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 83.667 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276.333 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"233.667 38.333 OFFCURVE",
"201.333 18 OFFCURVE",
"176 18 CURVE SMOOTH",
"154 18 OFFCURVE",
"141.667 31.333 OFFCURVE",
"139 58 CURVE",
"140.333 84.667 OFFCURVE",
"149 118.333 OFFCURVE",
"165 159 CURVE",
"208.333 195.667 OFFCURVE",
"244.667 232.333 OFFCURVE",
"274 269 CURVE SMOOTH",
"316.667 321 OFFCURVE",
"338 364.333 OFFCURVE",
"338 399 CURVE SMOOTH",
"338 419 OFFCURVE",
"328.333 429 OFFCURVE",
"309 429 CURVE SMOOTH",
"297 429 OFFCURVE",
"285.333 425.333 OFFCURVE",
"274 418 CURVE SMOOTH",
"250.667 403.333 OFFCURVE",
"224 367 OFFCURVE",
"194 309 CURVE SMOOTH",
"173.333 268.333 OFFCURVE",
"154 223.667 OFFCURVE",
"136 175 CURVE",
"117.333 177 OFFCURVE",
"93.667 165.667 OFFCURVE",
"65 141 CURVE SMOOTH",
"42.333 121.667 OFFCURVE",
"24.333 101.667 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62.333 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"0.667 -1 OFFCURVE",
"16 -1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 34.667 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 56.667 OFFCURVE",
"28.667 68.667 OFFCURVE",
"36 82 CURVE SMOOTH",
"46 102.667 OFFCURVE",
"59.333 119.667 OFFCURVE",
"76 133 CURVE SMOOTH",
"94 147.667 OFFCURVE",
"112 154.667 OFFCURVE",
"130 154 CURVE",
"127.333 150 OFFCURVE",
"120.333 131.667 OFFCURVE",
"109 99 CURVE SMOOTH",
"102.333 81 OFFCURVE",
"88 62.667 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44.333 29 OFFCURVE",
"37 29 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"201.667 248.333 OFFCURVE",
"234 314.667 OFFCURVE",
"270 378 CURVE SMOOTH",
"284 402.667 OFFCURVE",
"297.667 415 OFFCURVE",
"311 415 CURVE SMOOTH",
"317.667 415 OFFCURVE",
"320.333 409.333 OFFCURVE",
"319 398 CURVE SMOOTH",
"315 369.333 OFFCURVE",
"296.333 331.667 OFFCURVE",
"263 285 CURVE SMOOTH",
"235.667 246.333 OFFCURVE",
"205.667 211 OFFCURVE",
"173 179 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01258 8 28 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 58 117 58 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01240 1 44 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
note = d;
unicode = 0064;
},
{
glyphname = eth;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"247 361 OFFCURVE",
"239 359 OFFCURVE",
"223 353 CURVE SMOOTH",
"214 349 OFFCURVE",
"205 346 OFFCURVE",
"198 343 CURVE",
"190 384 OFFCURVE",
"169 406 OFFCURVE",
"136 406 CURVE SMOOTH",
"125 406 OFFCURVE",
"116 405 OFFCURVE",
"111 402 CURVE SMOOTH",
"106 399 OFFCURVE",
"102 396 OFFCURVE",
"101 392 CURVE SMOOTH",
"101 389 OFFCURVE",
"103 388 OFFCURVE",
"106 389 CURVE SMOOTH",
"109 390 OFFCURVE",
"114 391 OFFCURVE",
"121 391 CURVE SMOOTH",
"134 391 OFFCURVE",
"144 381 OFFCURVE",
"151 360 CURVE SMOOTH",
"154 350 OFFCURVE",
"157 339 OFFCURVE",
"158 326 CURVE",
"145 320 LINE SMOOTH",
"129 312 OFFCURVE",
"118 305 OFFCURVE",
"110 298 CURVE SMOOTH",
"101 288 OFFCURVE",
"90 273 OFFCURVE",
"93 268 CURVE",
"96 265 OFFCURVE",
"104 266 OFFCURVE",
"117 274 CURVE SMOOTH",
"134 283 OFFCURVE",
"148 292 OFFCURVE",
"160 300 CURVE",
"161 291 OFFCURVE",
"161 282 OFFCURVE",
"161 273 CURVE SMOOTH",
"161 216 OFFCURVE",
"158 170 OFFCURVE",
"147 133 CURVE",
"139 88 OFFCURVE",
"89 -9 OFFCURVE",
"46 -9 CURVE SMOOTH",
"10 -9 OFFCURVE",
"43 77 OFFCURVE",
"64 108 CURVE",
"85 145 OFFCURVE",
"113 172 OFFCURVE",
"136 173 CURVE SMOOTH",
"152 175 OFFCURVE",
"153 188 OFFCURVE",
"135 188 CURVE SMOOTH",
"77 188 OFFCURVE",
"29 127 OFFCURVE",
"14 83 CURVE SMOOTH",
"-2 43 OFFCURVE",
"-9 -24 OFFCURVE",
"35 -24 CURVE SMOOTH",
"75 -24 OFFCURVE",
"113 13 OFFCURVE",
"138 54 CURVE SMOOTH",
"160 90 OFFCURVE",
"184 153 OFFCURVE",
"189 188 CURVE SMOOTH",
"195 214 OFFCURVE",
"201 268 OFFCURVE",
"201 302 CURVE SMOOTH",
"201 310 OFFCURVE",
"201 317 OFFCURVE",
"200 324 CURVE",
"209 330 OFFCURVE",
"219 336 OFFCURVE",
"231 342 CURVE SMOOTH",
"245 349 OFFCURVE",
"251 355 OFFCURVE",
"249 358 CURVE SMOOTH"
);
}
);
width = 210;
}
);
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = quotesingle;
transform = "{0.8, 0, 0, 0.8, 256, 71}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 319;
}
);
unicode = 010F;
},
{
glyphname = dcroat;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 124, 189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0111;
},
{
glyphname = dzcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 266, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 564;
}
);
unicode = 01C6;
},
{
glyphname = e;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"90.667 -9 OFFCURVE",
"122 0.333 OFFCURVE",
"158 19 CURVE SMOOTH",
"190.667 36.333 OFFCURVE",
"214.333 54 OFFCURVE",
"229 72 CURVE SMOOTH",
"231.667 74.667 OFFCURVE",
"233 77.667 OFFCURVE",
"233 81 CURVE SMOOTH",
"233 89 OFFCURVE",
"229 88.333 OFFCURVE",
"221 79 CURVE SMOOTH",
"206.333 63.667 OFFCURVE",
"185.333 48.333 OFFCURVE",
"158 33 CURVE SMOOTH",
"126.667 15.667 OFFCURVE",
"100.667 7 OFFCURVE",
"80 7 CURVE SMOOTH",
"54 7 OFFCURVE",
"41 21 OFFCURVE",
"41 49 CURVE SMOOTH",
"41 55.667 OFFCURVE",
"41.667 63.333 OFFCURVE",
"43 72 CURVE",
"80.333 81.333 OFFCURVE",
"108.333 97.667 OFFCURVE",
"127 121 CURVE SMOOTH",
"137.667 135 OFFCURVE",
"143 148.333 OFFCURVE",
"143 161 CURVE SMOOTH",
"143 181.667 OFFCURVE",
"132.667 192 OFFCURVE",
"112 192 CURVE SMOOTH",
"96 192 OFFCURVE",
"79 183.333 OFFCURVE",
"61 166 CURVE SMOOTH",
"30.333 136.667 OFFCURVE",
"6 84.333 OFFCURVE",
"6 55 CURVE SMOOTH",
"6 12.333 OFFCURVE",
"25.333 -9 OFFCURVE",
"64 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64.333 125.667 OFFCURVE",
"101.667 176 OFFCURVE",
"119 176 CURVE SMOOTH",
"123.667 176 OFFCURVE",
"126 172.333 OFFCURVE",
"126 165 CURVE SMOOTH",
"126 155.667 OFFCURVE",
"122 144.333 OFFCURVE",
"114 131 CURVE SMOOTH",
"102 109.667 OFFCURVE",
"79.667 93.667 OFFCURVE",
"47 83 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01219 8 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 7 31 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 19 117 19 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01236 6 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01221 2 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 211;
}
);
note = e;
unicode = 0065;
},
{
glyphname = eacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 43, -123}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 23, -183}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0115;
},
{
glyphname = ecaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, -47, -19}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 011B;
},
{
glyphname = ecircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -54, -141}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -35, -201}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -51, -463}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -33, -197}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -38, -201}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -35, -204}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -35, -199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC5;
},
{
glyphname = edblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 0, -183}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0205;
},
{
glyphname = edieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 47, -43}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 43, -186}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -67, -456}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EB9;
},
{
glyphname = egrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -13, -125}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ehookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{0.84758, 0, 0, 0.80219, 45, -124}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 0, -188}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0207;
},
{
glyphname = emacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, -24, -159}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0113;
},
{
glyphname = eogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, -84, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -22, -199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"123 221 OFFCURVE",
"82 207 OFFCURVE",
"45 177 CURVE SMOOTH",
"22 159 OFFCURVE",
"26 146 OFFCURVE",
"45 161 CURVE SMOOTH",
"75 186 OFFCURVE",
"123 209 OFFCURVE",
"147 209 CURVE SMOOTH",
"178 209 OFFCURVE",
"197 187 OFFCURVE",
"197 155 CURVE SMOOTH",
"197 147 OFFCURVE",
"195 139 OFFCURVE",
"194 129 CURVE",
"147 129 OFFCURVE",
"104 100 OFFCURVE",
"81 73 CURVE SMOOTH",
"68 57 OFFCURVE",
"62 42 OFFCURVE",
"62 28 CURVE SMOOTH",
"62 3 OFFCURVE",
"74 -8 OFFCURVE",
"98 -8 CURVE SMOOTH",
"118 -8 OFFCURVE",
"138 3 OFFCURVE",
"159 21 CURVE SMOOTH",
"196 54 OFFCURVE",
"224 115 OFFCURVE",
"224 149 CURVE SMOOTH",
"224 197 OFFCURVE",
"202 221 OFFCURVE",
"155 221 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"169 67 OFFCURVE",
"125 11 OFFCURVE",
"90 11 CURVE SMOOTH",
"85 11 OFFCURVE",
"77 15 OFFCURVE",
"77 23 CURVE SMOOTH",
"77 33 OFFCURVE",
"81 47 OFFCURVE",
"90 62 CURVE SMOOTH",
"105 85 OFFCURVE",
"151 113 OFFCURVE",
"190 117 CURVE"
);
}
);
width = 296;
}
);
unicode = 0259;
},
{
glyphname = f;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160.333 -196.667 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98.333 -151.333 OFFCURVE",
"-71.667 -119.667 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"133.667 152.333 OFFCURVE",
"167.333 153.333 OFFCURVE",
"174 154 CURVE SMOOTH",
"188.667 156 OFFCURVE",
"196 160 OFFCURVE",
"196 166 CURVE SMOOTH",
"196 169.333 OFFCURVE",
"193 172 OFFCURVE",
"187 174 CURVE",
"175 173.333 OFFCURVE",
"142.667 173.333 OFFCURVE",
"90 174 CURVE",
"166 241.333 OFFCURVE",
"215.333 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245.333 358.667 OFFCURVE",
"249 373.667 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418.333 OFFCURVE",
"239.667 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163.333 391.667 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98.333 279 OFFCURVE",
"78.667 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-4 173 OFFCURVE",
"-8.667 170 OFFCURVE",
"-8 164 CURVE SMOOTH",
"-6.667 156.667 OFFCURVE",
"0.667 152.667 OFFCURVE",
"14 152 CURVE SMOOTH",
"41 153 LINE",
"8.333 83 OFFCURVE",
"-29.667 11.333 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-97.667 -103.333 OFFCURVE",
"-125.333 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187.333 -184.667 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283.333 -190.667 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167.333 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304.333 -109.333 OFFCURVE",
"-295 -100 CURVE SMOOTH",
"-293 -97.333 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90.333 OFFCURVE",
"-293.333 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90.333 OFFCURVE",
"-302 -93 CURVE SMOOTH",
"-315.333 -106.333 OFFCURVE",
"-322 -122.333 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -159.667 OFFCURVE",
"-315.333 -175.333 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287.333 -202 OFFCURVE",
"-267.667 -209 OFFCURVE",
"-243 -209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121.667 248 OFFCURVE",
"154 307.667 OFFCURVE",
"184 361 CURVE SMOOTH",
"202.667 393 OFFCURVE",
"216.333 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 385.667 OFFCURVE",
"227 371.333 OFFCURVE",
"219 354 CURVE SMOOTH",
"193.667 298.667 OFFCURVE",
"149.667 241.333 OFFCURVE",
"87 182 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01256 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0122 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01240 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01234 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 4 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 154;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-154.333 -334 OFFCURVE",
"-112 -323.333 OFFCURVE",
"-68 -302 CURVE SMOOTH",
"-28 -282.667 OFFCURVE",
"7.667 -257 OFFCURVE",
"39 -225 CURVE SMOOTH",
"95.667 -167.667 OFFCURVE",
"136.333 -92.667 OFFCURVE",
"161 0 CURVE",
"178.333 2.667 OFFCURVE",
"191.667 4 OFFCURVE",
"201 4 CURVE SMOOTH",
"228.333 4 OFFCURVE",
"242 -2.667 OFFCURVE",
"242 -16 CURVE SMOOTH",
"242 -22.667 OFFCURVE",
"237.667 -30.333 OFFCURVE",
"229 -39 CURVE",
"227 -40.333 OFFCURVE",
"226 -42 OFFCURVE",
"226 -44 CURVE SMOOTH",
"226 -46 OFFCURVE",
"227.333 -47 OFFCURVE",
"230 -47 CURVE SMOOTH",
"232 -47 OFFCURVE",
"233.667 -46 OFFCURVE",
"235 -44 CURVE",
"247.667 -32.667 OFFCURVE",
"254 -21.667 OFFCURVE",
"254 -11 CURVE SMOOTH",
"254 5.667 OFFCURVE",
"238.333 16 OFFCURVE",
"207 20 CURVE SMOOTH",
"195 22 OFFCURVE",
"181.333 21.667 OFFCURVE",
"166 19 CURVE",
"184.667 95.667 OFFCURVE",
"194.667 145.333 OFFCURVE",
"196 168 CURVE SMOOTH",
"196.667 174.667 OFFCURVE",
"190.667 178 OFFCURVE",
"178 178 CURVE SMOOTH",
"164.667 178 OFFCURVE",
"157 174 OFFCURVE",
"155 166 CURVE",
"154.333 156 OFFCURVE",
"152.333 144 OFFCURVE",
"149 130 CURVE SMOOTH",
"143.667 112 OFFCURVE",
"138 99 OFFCURVE",
"132 91 CURVE SMOOTH",
"114.667 71 OFFCURVE",
"94.333 56 OFFCURVE",
"71 46 CURVE SMOOTH",
"61.667 41.333 OFFCURVE",
"54 39 OFFCURVE",
"48 39 CURVE SMOOTH",
"39.333 39 OFFCURVE",
"35 43.333 OFFCURVE",
"35 52 CURVE SMOOTH",
"35 74 OFFCURVE",
"52.667 102 OFFCURVE",
"88 136 CURVE SMOOTH",
"126.667 172.667 OFFCURVE",
"165 191 OFFCURVE",
"203 191 CURVE SMOOTH",
"232.333 191 OFFCURVE",
"247 184.333 OFFCURVE",
"247 171 CURVE SMOOTH",
"247 165 OFFCURVE",
"243.667 158 OFFCURVE",
"237 150 CURVE SMOOTH",
"235.667 148.667 OFFCURVE",
"235 147.333 OFFCURVE",
"235 146 CURVE SMOOTH",
"235 143.333 OFFCURVE",
"236.333 142 OFFCURVE",
"239 142 CURVE SMOOTH",
"240.333 142 OFFCURVE",
"242 143 OFFCURVE",
"244 145 CURVE SMOOTH",
"253.333 157 OFFCURVE",
"258 167.667 OFFCURVE",
"258 177 CURVE SMOOTH",
"258 196.333 OFFCURVE",
"241.333 206 OFFCURVE",
"208 206 CURVE SMOOTH",
"165.333 206 OFFCURVE",
"123 189.333 OFFCURVE",
"81 156 CURVE SMOOTH",
"29 116 OFFCURVE",
"3 78.667 OFFCURVE",
"3 44 CURVE SMOOTH",
"3 20 OFFCURVE",
"12.333 8 OFFCURVE",
"31 8 CURVE SMOOTH",
"45.667 8 OFFCURVE",
"63 15.667 OFFCURVE",
"83 31 CURVE SMOOTH",
"93 38.333 OFFCURVE",
"108 52.333 OFFCURVE",
"128 73 CURVE SMOOTH",
"143 88 LINE",
"127 10 LINE",
"-70.333 -40.667 OFFCURVE",
"-189 -93 OFFCURVE",
"-253 -161 CURVE SMOOTH",
"-282.333 -191.667 OFFCURVE",
"-297 -221.333 OFFCURVE",
"-297 -250 CURVE SMOOTH",
"-297 -299.333 OFFCURVE",
"-256.333 -334 OFFCURVE",
"-195 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-225 -315 OFFCURVE",
"-260 -289.333 OFFCURVE",
"-260 -248 CURVE SMOOTH",
"-260 -221.333 OFFCURVE",
"-248.333 -194.333 OFFCURVE",
"-225 -167 CURVE SMOOTH",
"-197.667 -135 OFFCURVE",
"-158.667 -107.667 OFFCURVE",
"-108 -85 CURVE SMOOTH",
"-72 -69 OFFCURVE",
"-29.333 -53.333 OFFCURVE",
"20 -38 CURVE SMOOTH",
"44 -30 OFFCURVE",
"78.333 -20 OFFCURVE",
"123 -8 CURVE",
"99.667 -108 OFFCURVE",
"56 -186.667 OFFCURVE",
"-8 -244 CURVE SMOOTH",
"-62 -291.333 OFFCURVE",
"-117 -315 OFFCURVE",
"-173 -315 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01287 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 8 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 7 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01230 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01242 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01264 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01279 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 87 117 87 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01254 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01230 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01264 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01290 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 266;
}
);
note = g;
unicode = 0067;
},
{
glyphname = gbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 85, -166}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 011F;
},
{
glyphname = gcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 65, -154}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 01E7;
},
{
glyphname = gcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 22, -170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 011D;
},
{
glyphname = gcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{0.9, 0, 0, 0.9, 130, -52}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 0123;
},
{
glyphname = gdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 102, -175}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 0121;
},
{
glyphname = h;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"18.333 1 OFFCURVE",
"24.667 3.667 OFFCURVE",
"32 9 CURVE",
"39.333 18.333 OFFCURVE",
"46.333 28 OFFCURVE",
"53 38 CURVE SMOOTH",
"68.333 58 OFFCURVE",
"82.333 73 OFFCURVE",
"95 83 CURVE SMOOTH",
"105 90.333 OFFCURVE",
"113.667 94 OFFCURVE",
"121 94 CURVE SMOOTH",
"129 94 OFFCURVE",
"135.333 88.667 OFFCURVE",
"140 78 CURVE",
"152 33 LINE SMOOTH",
"158 13.667 OFFCURVE",
"167 4 OFFCURVE",
"179 4 CURVE SMOOTH",
"207 4 OFFCURVE",
"243.333 27 OFFCURVE",
"288 73 CURVE SMOOTH",
"290 75.667 OFFCURVE",
"291 78.333 OFFCURVE",
"291 81 CURVE SMOOTH",
"291 83.667 OFFCURVE",
"290 85 OFFCURVE",
"288 85 CURVE SMOOTH",
"284.667 85 OFFCURVE",
"281.333 83 OFFCURVE",
"278 79 CURVE SMOOTH",
"268 68.333 OFFCURVE",
"256.333 58 OFFCURVE",
"243 48 CURVE SMOOTH",
"225 35.333 OFFCURVE",
"210.333 29 OFFCURVE",
"199 29 CURVE SMOOTH",
"189 29 OFFCURVE",
"182.333 37.667 OFFCURVE",
"179 55 CURVE",
"174 104 LINE SMOOTH",
"171.333 121.333 OFFCURVE",
"165 130 OFFCURVE",
"155 130 CURVE SMOOTH",
"139 130 OFFCURVE",
"117.667 118.667 OFFCURVE",
"91 96 CURVE SMOOTH",
"70.333 76 OFFCURVE",
"55.333 61 OFFCURVE",
"46 51 CURVE SMOOTH",
"34 39 LINE",
"45.333 83.667 OFFCURVE",
"60.667 123.667 OFFCURVE",
"80 159 CURVE",
"172 237.667 OFFCURVE",
"227.667 307 OFFCURVE",
"247 367 CURVE SMOOTH",
"251 378.333 OFFCURVE",
"253 388.667 OFFCURVE",
"253 398 CURVE SMOOTH",
"253 419.333 OFFCURVE",
"244 430 OFFCURVE",
"226 430 CURVE SMOOTH",
"201.333 430 OFFCURVE",
"178.667 414.667 OFFCURVE",
"158 384 CURVE SMOOTH",
"132 346.667 OFFCURVE",
"100.667 285.667 OFFCURVE",
"64 201 CURVE SMOOTH",
"34 133 OFFCURVE",
"13.333 80.667 OFFCURVE",
"2 44 CURVE SMOOTH",
"0 37.333 OFFCURVE",
"-1 30.667 OFFCURVE",
"-1 24 CURVE SMOOTH",
"-1 8.667 OFFCURVE",
"3.667 1 OFFCURVE",
"13 1 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"116 248.333 OFFCURVE",
"148 314.667 OFFCURVE",
"184 378 CURVE SMOOTH",
"198.667 402.667 OFFCURVE",
"211.667 415 OFFCURVE",
"223 415 CURVE SMOOTH",
"230.333 415 OFFCURVE",
"234 409.667 OFFCURVE",
"234 399 CURVE SMOOTH",
"234 391.667 OFFCURVE",
"231.333 381.667 OFFCURVE",
"226 369 CURVE SMOOTH",
"215.333 340.333 OFFCURVE",
"195.333 306.667 OFFCURVE",
"166 268 CURVE SMOOTH",
"140.667 235.333 OFFCURVE",
"114.667 205.667 OFFCURVE",
"88 179 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 7 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01226 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01234 2 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = h;
unicode = 0068;
},
{
glyphname = hbar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{0.84509, 0, 0, 1, 32, 97}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 283;
}
);
unicode = 0127;
},
{
glyphname = hcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 68, 47}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 283;
}
);
unicode = 0125;
},
{
glyphname = i;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"101.333 -1.333 OFFCURVE",
"141.667 23 OFFCURVE",
"189 73 CURVE SMOOTH",
"191 75.667 OFFCURVE",
"192 78.333 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 83.667 OFFCURVE",
"191 85.333 OFFCURVE",
"189 86 CURVE",
"186.333 86 OFFCURVE",
"183 83.667 OFFCURVE",
"179 79 CURVE SMOOTH",
"139 37 OFFCURVE",
"105.667 16 OFFCURVE",
"79 16 CURVE SMOOTH",
"59.667 16 OFFCURVE",
"50 29.667 OFFCURVE",
"50 57 CURVE SMOOTH",
"50 63.667 OFFCURVE",
"50.667 70.667 OFFCURVE",
"52 78 CURVE SMOOTH",
"53.333 89.333 OFFCURVE",
"58.667 103.667 OFFCURVE",
"68 121 CURVE SMOOTH",
"70 124.333 OFFCURVE",
"78.333 138.667 OFFCURVE",
"93 164 CURVE",
"94 169 LINE SMOOTH",
"94 175 OFFCURVE",
"89 178 OFFCURVE",
"79 178 CURVE SMOOTH",
"65.667 178 OFFCURVE",
"57 174.333 OFFCURVE",
"53 167 CURVE SMOOTH",
"29.667 133 OFFCURVE",
"17.333 104 OFFCURVE",
"16 80 CURVE SMOOTH",
"12 27.333 OFFCURVE",
"29.333 0.667 OFFCURVE",
"68 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"153.667 250 OFFCURVE",
"163 260.333 OFFCURVE",
"163 281 CURVE SMOOTH",
"163 294.333 OFFCURVE",
"155.333 301 OFFCURVE",
"140 301 CURVE SMOOTH",
"134 301 OFFCURVE",
"128 298.667 OFFCURVE",
"122 294 CURVE SMOOTH",
"114.667 288.667 OFFCURVE",
"111 282 OFFCURVE",
"111 274 CURVE SMOOTH",
"111 262 OFFCURVE",
"123 250 OFFCURVE",
"135 250 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 5 122 5 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01229 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 29 117 29 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01231 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
note = i;
unicode = 0069;
},
{
glyphname = idotless;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"101.333 -1.333 OFFCURVE",
"141.667 23 OFFCURVE",
"189 73 CURVE SMOOTH",
"191 75.667 OFFCURVE",
"192 78.333 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 83.667 OFFCURVE",
"191 85.333 OFFCURVE",
"189 86 CURVE",
"186.333 86 OFFCURVE",
"183 83.667 OFFCURVE",
"179 79 CURVE SMOOTH",
"139 37 OFFCURVE",
"105.667 16 OFFCURVE",
"79 16 CURVE SMOOTH",
"59.667 16 OFFCURVE",
"50 29.667 OFFCURVE",
"50 57 CURVE SMOOTH",
"50 63.667 OFFCURVE",
"50.667 70.667 OFFCURVE",
"52 78 CURVE SMOOTH",
"53.333 89.333 OFFCURVE",
"58.667 103.667 OFFCURVE",
"68 121 CURVE SMOOTH",
"70 124.333 OFFCURVE",
"78.333 138.667 OFFCURVE",
"93 164 CURVE",
"94 169 LINE SMOOTH",
"94 175 OFFCURVE",
"89 178 OFFCURVE",
"79 178 CURVE SMOOTH",
"65.667 178 OFFCURVE",
"57 174.333 OFFCURVE",
"53 167 CURVE SMOOTH",
"29.667 133 OFFCURVE",
"17.333 104 OFFCURVE",
"16 80 CURVE SMOOTH",
"12 27.333 OFFCURVE",
"29.333 0.667 OFFCURVE",
"68 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01218 8 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 18 117 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01220 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acute;
transform = "{1, 0, 0, 1, 14, -110}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 9, -194}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012D;
},
{
glyphname = icircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -81, -138}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -25, -179}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0209;
},
{
glyphname = idieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 20, -45}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = idotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 11, -214}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
},
{
glyphname = idotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -64, -463}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 1ECB;
},
{
glyphname = igrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = grave;
transform = "{1, 0, 0, 1, -42, -119}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ihookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{0.9, 0, 0, 0.9, 11, -159}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, -31, -201}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 020B;
},
{
glyphname = imacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -47, -190}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -62, 12}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012F;
},
{
glyphname = itilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -59, -162}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0129;
},
{
glyphname = j;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-235 -334 OFFCURVE",
"-167.667 -299.667 OFFCURVE",
"-101 -231 CURVE SMOOTH",
"-43 -171 OFFCURVE",
"5 -95.333 OFFCURVE",
"43 -4 CURVE",
"93 4 LINE",
"119.667 4 OFFCURVE",
"133 -2.667 OFFCURVE",
"133 -16 CURVE SMOOTH",
"133 -22.667 OFFCURVE",
"129 -30.333 OFFCURVE",
"121 -39 CURVE",
"119 -40.333 OFFCURVE",
"118 -42 OFFCURVE",
"118 -44 CURVE SMOOTH",
"118 -46 OFFCURVE",
"119.333 -47 OFFCURVE",
"122 -47 CURVE SMOOTH",
"123.333 -47 OFFCURVE",
"124.667 -46 OFFCURVE",
"126 -44 CURVE",
"138.667 -32.667 OFFCURVE",
"145 -21.667 OFFCURVE",
"145 -11 CURVE SMOOTH",
"145 5.667 OFFCURVE",
"129.667 16 OFFCURVE",
"99 20 CURVE SMOOTH",
"85.667 22 OFFCURVE",
"70.333 21.667 OFFCURVE",
"53 19 CURVE",
"67.667 64.333 OFFCURVE",
"103.333 127.667 OFFCURVE",
"126 153 CURVE SMOOTH",
"127.333 154.333 OFFCURVE",
"128 155.667 OFFCURVE",
"128 157 CURVE SMOOTH",
"128 163 OFFCURVE",
"121.333 166 OFFCURVE",
"108 166 CURVE SMOOTH",
"94.667 166 OFFCURVE",
"84 162 OFFCURVE",
"76 154 CURVE SMOOTH",
"66 144 OFFCURVE",
"54.333 122 OFFCURVE",
"41 88 CURVE SMOOTH",
"35.667 74.667 OFFCURVE",
"26.667 48.333 OFFCURVE",
"14 9 CURVE",
"-76.667 -13 OFFCURVE",
"-155.333 -39 OFFCURVE",
"-222 -69 CURVE SMOOTH",
"-282.667 -96.333 OFFCURVE",
"-329 -127 OFFCURVE",
"-361 -161 CURVE SMOOTH",
"-390.333 -191.667 OFFCURVE",
"-405 -221.333 OFFCURVE",
"-405 -250 CURVE SMOOTH",
"-405 -299.333 OFFCURVE",
"-365.667 -334 OFFCURVE",
"-303 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-347 -314 OFFCURVE",
"-368 -294.667 OFFCURVE",
"-368 -256 CURVE SMOOTH",
"-368 -234.667 OFFCURVE",
"-361 -212.333 OFFCURVE",
"-347 -189 CURVE SMOOTH",
"-331.667 -164.333 OFFCURVE",
"-311.333 -142.667 OFFCURVE",
"-286 -124 CURVE SMOOTH",
"-250 -98.667 OFFCURVE",
"-202.667 -75.333 OFFCURVE",
"-144 -54 CURVE SMOOTH",
"-108.667 -41.333 OFFCURVE",
"-57.667 -26 OFFCURVE",
"9 -8 CURVE",
"-19.667 -76 OFFCURVE",
"-48.667 -130.667 OFFCURVE",
"-78 -172 CURVE SMOOTH",
"-118 -226.667 OFFCURVE",
"-164 -266 OFFCURVE",
"-216 -290 CURVE SMOOTH",
"-250.667 -306 OFFCURVE",
"-280.333 -314 OFFCURVE",
"-305 -314 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"184.667 250 OFFCURVE",
"194 260.333 OFFCURVE",
"194 281 CURVE SMOOTH",
"194 294.333 OFFCURVE",
"186.333 301 OFFCURVE",
"171 301 CURVE SMOOTH",
"165 301 OFFCURVE",
"159 298.667 OFFCURVE",
"153 294 CURVE SMOOTH",
"146.333 288.667 OFFCURVE",
"143 282 OFFCURVE",
"143 274 CURVE SMOOTH",
"143 262 OFFCURVE",
"154 250 OFFCURVE",
"166 250 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 5 122 5 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01226 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01263 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01265 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 155;
}
);
note = j;
unicode = 006A;
},
{
glyphname = jdotless;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-235 -334 OFFCURVE",
"-168 -300 OFFCURVE",
"-101 -231 CURVE SMOOTH",
"-43 -171 OFFCURVE",
"5 -95 OFFCURVE",
"43 -4 CURVE",
"93 4 LINE",
"120 4 OFFCURVE",
"133 -3 OFFCURVE",
"133 -16 CURVE SMOOTH",
"133 -23 OFFCURVE",
"129 -30 OFFCURVE",
"121 -39 CURVE",
"119 -40 OFFCURVE",
"118 -42 OFFCURVE",
"118 -44 CURVE SMOOTH",
"118 -46 OFFCURVE",
"119 -47 OFFCURVE",
"122 -47 CURVE SMOOTH",
"123 -47 OFFCURVE",
"125 -46 OFFCURVE",
"126 -44 CURVE",
"139 -33 OFFCURVE",
"145 -22 OFFCURVE",
"145 -11 CURVE SMOOTH",
"145 6 OFFCURVE",
"130 16 OFFCURVE",
"99 20 CURVE SMOOTH",
"86 22 OFFCURVE",
"70 22 OFFCURVE",
"53 19 CURVE",
"68 64 OFFCURVE",
"103 128 OFFCURVE",
"126 153 CURVE SMOOTH",
"127 154 OFFCURVE",
"128 156 OFFCURVE",
"128 157 CURVE SMOOTH",
"128 163 OFFCURVE",
"121 166 OFFCURVE",
"108 166 CURVE SMOOTH",
"95 166 OFFCURVE",
"84 162 OFFCURVE",
"76 154 CURVE SMOOTH",
"66 144 OFFCURVE",
"54 122 OFFCURVE",
"41 88 CURVE SMOOTH",
"36 75 OFFCURVE",
"27 48 OFFCURVE",
"14 9 CURVE",
"-77 -13 OFFCURVE",
"-155 -39 OFFCURVE",
"-222 -69 CURVE SMOOTH",
"-283 -96 OFFCURVE",
"-329 -127 OFFCURVE",
"-361 -161 CURVE SMOOTH",
"-390 -192 OFFCURVE",
"-405 -221 OFFCURVE",
"-405 -250 CURVE SMOOTH",
"-405 -299 OFFCURVE",
"-366 -334 OFFCURVE",
"-303 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-347 -314 OFFCURVE",
"-368 -295 OFFCURVE",
"-368 -256 CURVE SMOOTH",
"-368 -235 OFFCURVE",
"-361 -212 OFFCURVE",
"-347 -189 CURVE SMOOTH",
"-332 -164 OFFCURVE",
"-311 -143 OFFCURVE",
"-286 -124 CURVE SMOOTH",
"-250 -99 OFFCURVE",
"-203 -75 OFFCURVE",
"-144 -54 CURVE SMOOTH",
"-109 -41 OFFCURVE",
"-58 -26 OFFCURVE",
"9 -8 CURVE",
"-20 -76 OFFCURVE",
"-49 -131 OFFCURVE",
"-78 -172 CURVE SMOOTH",
"-118 -227 OFFCURVE",
"-164 -266 OFFCURVE",
"-216 -290 CURVE SMOOTH",
"-251 -306 OFFCURVE",
"-280 -314 OFFCURVE",
"-305 -314 CURVE SMOOTH"
);
}
);
width = 155;
}
);
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -40, -206}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 155;
}
);
unicode = 0135;
},
{
glyphname = k;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"21.667 -11 OFFCURVE",
"27 -9.333 OFFCURVE",
"33 -6 CURVE",
"49.667 38 OFFCURVE",
"64.333 71 OFFCURVE",
"77 93 CURVE",
"87.667 68.333 OFFCURVE",
"101.333 47.667 OFFCURVE",
"118 31 CURVE SMOOTH",
"136 11.667 OFFCURVE",
"154.333 2 OFFCURVE",
"173 2 CURVE SMOOTH",
"191.667 2 OFFCURVE",
"215 10 OFFCURVE",
"243 26 CURVE SMOOTH",
"268.333 40 OFFCURVE",
"289.333 55.667 OFFCURVE",
"306 73 CURVE SMOOTH",
"308 75.667 OFFCURVE",
"309 78.333 OFFCURVE",
"309 81 CURVE SMOOTH",
"309 83.667 OFFCURVE",
"308 85.333 OFFCURVE",
"306 86 CURVE SMOOTH",
"304 86 OFFCURVE",
"300.667 83.667 OFFCURVE",
"296 79 CURVE SMOOTH",
"276 57.667 OFFCURVE",
"257 42.667 OFFCURVE",
"239 34 CURVE SMOOTH",
"227 27.333 OFFCURVE",
"215 24 OFFCURVE",
"203 24 CURVE SMOOTH",
"180.333 24 OFFCURVE",
"159 35.333 OFFCURVE",
"139 58 CURVE SMOOTH",
"122.333 76.667 OFFCURVE",
"109.667 100.333 OFFCURVE",
"101 129 CURVE",
"109 140.333 OFFCURVE",
"118.333 152.333 OFFCURVE",
"129 165 CURVE SMOOTH",
"151 190.333 OFFCURVE",
"170.667 203 OFFCURVE",
"188 203 CURVE SMOOTH",
"200 203 OFFCURVE",
"207 196.667 OFFCURVE",
"209 184 CURVE SMOOTH",
"209.667 177.333 OFFCURVE",
"212 174 OFFCURVE",
"216 174 CURVE SMOOTH",
"224 174 OFFCURVE",
"229 187.333 OFFCURVE",
"229 198 CURVE SMOOTH",
"229 214 OFFCURVE",
"216.667 228 OFFCURVE",
"198 228 CURVE SMOOTH",
"180 228 OFFCURVE",
"161 217.333 OFFCURVE",
"141 196 CURVE SMOOTH",
"125.667 179.333 OFFCURVE",
"111 161.333 OFFCURVE",
"97 142 CURVE",
"94.333 152 OFFCURVE",
"92.667 161.333 OFFCURVE",
"92 170 CURVE",
"177.333 245.333 OFFCURVE",
"229 311 OFFCURVE",
"247 367 CURVE SMOOTH",
"251 378.333 OFFCURVE",
"253 388.667 OFFCURVE",
"253 398 CURVE SMOOTH",
"253 419.333 OFFCURVE",
"244 430 OFFCURVE",
"226 430 CURVE SMOOTH",
"201.333 430 OFFCURVE",
"178.667 414.667 OFFCURVE",
"158 384 CURVE SMOOTH",
"132.667 346.667 OFFCURVE",
"101.333 283.333 OFFCURVE",
"64 194 CURVE SMOOTH",
"34 124.667 OFFCURVE",
"13 70 OFFCURVE",
"1 30 CURVE",
"-1 26 OFFCURVE",
"-2 21.333 OFFCURVE",
"-2 16 CURVE SMOOTH",
"-2 -2 OFFCURVE",
"4.333 -11 OFFCURVE",
"17 -11 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"34.333 52.667 OFFCURVE",
"45.333 87 OFFCURVE",
"64 129 CURVE",
"66 121.667 OFFCURVE",
"68.667 113.333 OFFCURVE",
"72 104 CURVE",
"58 80.667 OFFCURVE",
"44.333 54.667 OFFCURVE",
"31 26 CURVE"
);
},
{
closed = 1;
nodes = (
"116 248.333 OFFCURVE",
"148 314.667 OFFCURVE",
"184 378 CURVE SMOOTH",
"198.667 402.667 OFFCURVE",
"211.667 415 OFFCURVE",
"223 415 CURVE SMOOTH",
"230.333 415 OFFCURVE",
"234 409.667 OFFCURVE",
"234 399 CURVE SMOOTH",
"234 391.667 OFFCURVE",
"231.333 381.667 OFFCURVE",
"226 369 CURVE SMOOTH",
"215.333 340.333 OFFCURVE",
"195.333 306.667 OFFCURVE",
"166 268 CURVE SMOOTH",
"140.667 235.333 OFFCURVE",
"114.667 205.667 OFFCURVE",
"88 179 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01276 7 2 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01242 4 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 4 34 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 288;
}
);
note = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -32, 40}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 288;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"102 281 OFFCURVE",
"84 241 OFFCURVE",
"64 194 CURVE SMOOTH",
"34 125 OFFCURVE",
"13 70 OFFCURVE",
"1 30 CURVE",
"-1 26 OFFCURVE",
"-2 21 OFFCURVE",
"-2 16 CURVE SMOOTH",
"-2 -2 OFFCURVE",
"4 -11 OFFCURVE",
"17 -11 CURVE SMOOTH",
"22 -11 OFFCURVE",
"27 -9 OFFCURVE",
"33 -6 CURVE",
"34 -2 OFFCURVE",
"36 1 OFFCURVE",
"37 5 CURVE",
"36 37 LINE",
"34 34 OFFCURVE",
"33 30 OFFCURVE",
"31 26 CURVE",
"34 53 OFFCURVE",
"45 87 OFFCURVE",
"64 129 CURVE",
"66 122 OFFCURVE",
"86 61 OFFCURVE",
"118 31 CURVE SMOOTH",
"138 13 OFFCURVE",
"154 2 OFFCURVE",
"173 2 CURVE SMOOTH",
"192 2 OFFCURVE",
"215 10 OFFCURVE",
"243 26 CURVE SMOOTH",
"268 40 OFFCURVE",
"289 56 OFFCURVE",
"306 73 CURVE SMOOTH",
"308 76 OFFCURVE",
"309 78 OFFCURVE",
"309 81 CURVE SMOOTH",
"309 84 OFFCURVE",
"308 85 OFFCURVE",
"306 86 CURVE SMOOTH",
"304 86 OFFCURVE",
"301 84 OFFCURVE",
"296 79 CURVE SMOOTH",
"276 58 OFFCURVE",
"257 43 OFFCURVE",
"239 34 CURVE SMOOTH",
"227 27 OFFCURVE",
"215 24 OFFCURVE",
"203 24 CURVE SMOOTH",
"180 24 OFFCURVE",
"159 35 OFFCURVE",
"139 58 CURVE SMOOTH",
"122 77 OFFCURVE",
"94 129 OFFCURVE",
"88 179 CURVE",
"107 225 OFFCURVE",
"127 271 OFFCURVE",
"150 314 CURVE",
"154 342 OFFCURVE",
"129 338 OFFCURVE",
"118 314 CURVE"
);
},
{
closed = 1;
nodes = (
"91 146 OFFCURVE",
"102 159 OFFCURVE",
"116 174 CURVE SMOOTH",
"143 203 OFFCURVE",
"168 218 OFFCURVE",
"189 218 CURVE SMOOTH",
"203 218 OFFCURVE",
"212 211 OFFCURVE",
"215 196 CURVE SMOOTH",
"216 188 OFFCURVE",
"218 185 OFFCURVE",
"223 185 CURVE SMOOTH",
"233 185 OFFCURVE",
"239 200 OFFCURVE",
"239 212 CURVE SMOOTH",
"239 231 OFFCURVE",
"224 247 OFFCURVE",
"201 247 CURVE SMOOTH",
"179 247 OFFCURVE",
"155 234 OFFCURVE",
"130 210 CURVE SMOOTH",
"112 191 OFFCURVE",
"93 170 OFFCURVE",
"76 148 CURVE",
"81 133 LINE"
);
}
);
width = 288;
}
);
unicode = 0138;
},
{
glyphname = l;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"91.333 -1.333 OFFCURVE",
"131.667 23 OFFCURVE",
"179 73 CURVE SMOOTH",
"181.667 75.667 OFFCURVE",
"183 78.333 OFFCURVE",
"183 81 CURVE SMOOTH",
"183 83.667 OFFCURVE",
"181.667 85.333 OFFCURVE",
"179 86 CURVE SMOOTH",
"176.333 86 OFFCURVE",
"173 83.667 OFFCURVE",
"169 79 CURVE SMOOTH",
"147.667 56.333 OFFCURVE",
"127.667 39.667 OFFCURVE",
"109 29 CURVE SMOOTH",
"63.667 3 OFFCURVE",
"41 11.333 OFFCURVE",
"41 54 CURVE SMOOTH",
"41 88.667 OFFCURVE",
"50.667 123.667 OFFCURVE",
"70 159 CURVE",
"162 237.667 OFFCURVE",
"217.667 307 OFFCURVE",
"237 367 CURVE SMOOTH",
"241 378.333 OFFCURVE",
"243 388.667 OFFCURVE",
"243 398 CURVE SMOOTH",
"243 420 OFFCURVE",
"233.333 430.667 OFFCURVE",
"214 430 CURVE SMOOTH",
"182 428.667 OFFCURVE",
"143.333 386 OFFCURVE",
"98 302 CURVE SMOOTH",
"62 236.667 OFFCURVE",
"37.667 181.333 OFFCURVE",
"25 136 CURVE SMOOTH",
"15.667 101.333 OFFCURVE",
"11 74.667 OFFCURVE",
"11 56 CURVE SMOOTH",
"11 19.333 OFFCURVE",
"26.667 0.667 OFFCURVE",
"58 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106 248.333 OFFCURVE",
"138.333 314.667 OFFCURVE",
"175 378 CURVE SMOOTH",
"189 402.667 OFFCURVE",
"201.667 415 OFFCURVE",
"213 415 CURVE SMOOTH",
"220.333 415 OFFCURVE",
"224 409.667 OFFCURVE",
"224 399 CURVE SMOOTH",
"224 391.667 OFFCURVE",
"221.667 381.667 OFFCURVE",
"217 369 CURVE SMOOTH",
"205.667 340.333 OFFCURVE",
"185.333 306.667 OFFCURVE",
"156 268 CURVE SMOOTH",
"130.667 235.333 OFFCURVE",
"104.667 205.667 OFFCURVE",
"78 179 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0128 8 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 7 30 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01236 22 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 1 32 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 161;
}
);
note = l;
unicode = 006C;
},
{
glyphname = lacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 164, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = quotesingle;
transform = "{0.8, 0, 0, 0.8, 146, 68}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 206;
}
);
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -77, 37}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 013C;
},
{
glyphname = ldot;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = periodcentered;
transform = "{0.73281, 0, 0, 0.73281, 90, 13}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 0140;
},
{
glyphname = lj;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 129, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 284;
}
);
unicode = 01C9;
},
{
glyphname = lslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = hyphen;
transform = "{0.81512, 0.17326, -0.17326, 0.81512, -32, -5}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 0142;
},
{
glyphname = m;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"119 -6.667 OFFCURVE",
"126 -3.333 OFFCURVE",
"134 6 CURVE",
"171 63 LINE",
"184.333 79 OFFCURVE",
"193.667 89.667 OFFCURVE",
"199 95 CURVE",
"195.667 31 OFFCURVE",
"211 -1 OFFCURVE",
"245 -1 CURVE SMOOTH",
"277 -1 OFFCURVE",
"315.667 24 OFFCURVE",
"361 74 CURVE SMOOTH",
"363 76.667 OFFCURVE",
"363.667 79 OFFCURVE",
"363 81 CURVE",
"363 83.667 OFFCURVE",
"361.667 85 OFFCURVE",
"359 85 CURVE SMOOTH",
"357 85 OFFCURVE",
"354.667 83.667 OFFCURVE",
"352 81 CURVE SMOOTH",
"332 59.667 OFFCURVE",
"318.333 46.333 OFFCURVE",
"311 41 CURVE SMOOTH",
"292.333 25.667 OFFCURVE",
"275.667 18 OFFCURVE",
"261 18 CURVE SMOOTH",
"242.333 18 OFFCURVE",
"233 31.333 OFFCURVE",
"233 58 CURVE SMOOTH",
"233 78 OFFCURVE",
"238.333 105.667 OFFCURVE",
"249 141 CURVE",
"250 149 LINE SMOOTH",
"250 154.333 OFFCURVE",
"247.667 157 OFFCURVE",
"243 157 CURVE SMOOTH",
"233.667 157 OFFCURVE",
"225.333 152 OFFCURVE",
"218 142 CURVE SMOOTH",
"180 90.667 OFFCURVE",
"154.333 55 OFFCURVE",
"141 35 CURVE",
"144 99 LINE",
"141.333 123.667 OFFCURVE",
"130.333 136 OFFCURVE",
"111 136 CURVE SMOOTH",
"103.667 136 OFFCURVE",
"96.333 133.667 OFFCURVE",
"89 129 CURVE SMOOTH",
"77 119 OFFCURVE",
"67.667 110.667 OFFCURVE",
"61 104 CURVE",
"81 165 LINE",
"81 174.333 OFFCURVE",
"74.333 176 OFFCURVE",
"61 170 CURVE SMOOTH",
"49.667 164.667 OFFCURVE",
"43 160.667 OFFCURVE",
"41 158 CURVE",
"41 148.667 OFFCURVE",
"32.333 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE SMOOTH",
"-15.667 13.667 OFFCURVE",
"-16 11.667 OFFCURVE",
"-16 9 CURVE SMOOTH",
"-16 1 OFFCURVE",
"-13 -3 OFFCURVE",
"-7 -3 CURVE SMOOTH",
"-4.333 -3 OFFCURVE",
"-1.833 -2.333 OFFCURVE",
"0.5 -1 CURVE SMOOTH",
"2.833 0.333 OFFCURVE",
"10.333 12 OFFCURVE",
"23 34 CURVE SMOOTH",
"37 58.667 OFFCURVE",
"49.667 77 OFFCURVE",
"61 89 CURVE SMOOTH",
"78.333 106.333 OFFCURVE",
"90.667 115 OFFCURVE",
"98 115 CURVE SMOOTH",
"108 115 OFFCURVE",
"112 98 OFFCURVE",
"110 64 CURVE SMOOTH",
"109.333 54 OFFCURVE",
"108.333 42.333 OFFCURVE",
"107 29 CURVE SMOOTH",
"105 9 LINE SMOOTH",
"103.667 2.333 OFFCURVE",
"106.333 -2 OFFCURVE",
"113 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 4 122 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01255 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01241 4 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01257 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 341;
}
);
note = m;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"4.333 -1 OFFCURVE",
"7 1 OFFCURVE",
"9 5 CURVE",
"29 30 LINE SMOOTH",
"37 40.667 OFFCURVE",
"46.667 51 OFFCURVE",
"58 61 CURVE SMOOTH",
"105 106 LINE",
"103.667 94 OFFCURVE",
"103 83 OFFCURVE",
"103 73 CURVE SMOOTH",
"103 27 OFFCURVE",
"117.667 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"179.667 4 OFFCURVE",
"217 27.333 OFFCURVE",
"259 74 CURVE SMOOTH",
"261 76.667 OFFCURVE",
"261.667 79 OFFCURVE",
"261 81 CURVE",
"261 83.667 OFFCURVE",
"260 85 OFFCURVE",
"258 85 CURVE SMOOTH",
"255.333 85 OFFCURVE",
"252.667 83.667 OFFCURVE",
"250 81 CURVE SMOOTH",
"230 59.667 OFFCURVE",
"216.333 46.333 OFFCURVE",
"209 41 CURVE SMOOTH",
"190.333 25.667 OFFCURVE",
"173.667 18 OFFCURVE",
"159 18 CURVE SMOOTH",
"143.667 18 OFFCURVE",
"136 29.333 OFFCURVE",
"136 52 CURVE SMOOTH",
"136 70 OFFCURVE",
"143 103.333 OFFCURVE",
"157 152 CURVE SMOOTH",
"158.333 156 OFFCURVE",
"159 159.333 OFFCURVE",
"159 162 CURVE SMOOTH",
"159 166 OFFCURVE",
"157.333 168 OFFCURVE",
"154 168 CURVE SMOOTH",
"148.667 168 OFFCURVE",
"141.667 163 OFFCURVE",
"133 153 CURVE SMOOTH",
"26 38 LINE",
"54 96 OFFCURVE",
"72.333 138.333 OFFCURVE",
"81 165 CURVE",
"81 174.333 OFFCURVE",
"74.333 176 OFFCURVE",
"61 170 CURVE SMOOTH",
"49.667 164.667 OFFCURVE",
"43 160.667 OFFCURVE",
"41 158 CURVE",
"41 148.667 OFFCURVE",
"32.333 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE",
"-16.333 9.667 OFFCURVE",
"-8.333 -1 OFFCURVE",
"1 -1 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 8 41 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 25 117 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01227 1 39 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 240;
}
);
note = n;
unicode = 006E;
},
{
glyphname = nacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 59, -183}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0144;
},
{
glyphname = ncaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, -47, -44}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0148;
},
{
glyphname = ncommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -56, 42}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"149 168 OFFCURVE",
"142 163 OFFCURVE",
"133 153 CURVE SMOOTH",
"26 38 LINE",
"54 96 OFFCURVE",
"72 138 OFFCURVE",
"81 165 CURVE",
"81 174 OFFCURVE",
"74 176 OFFCURVE",
"61 170 CURVE SMOOTH",
"50 165 OFFCURVE",
"43 161 OFFCURVE",
"41 158 CURVE",
"41 149 OFFCURVE",
"32 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE",
"-16 10 OFFCURVE",
"-8 -1 OFFCURVE",
"1 -1 CURVE SMOOTH",
"4 -1 OFFCURVE",
"7 1 OFFCURVE",
"9 5 CURVE",
"29 30 LINE SMOOTH",
"37 41 OFFCURVE",
"47 51 OFFCURVE",
"58 61 CURVE SMOOTH",
"105 106 LINE",
"117 113 OFFCURVE",
"114 101 OFFCURVE",
"103 74 CURVE",
"57 -47 OFFCURVE",
"6 -181 OFFCURVE",
"-69 -205 CURVE",
"-98 -212 OFFCURVE",
"-147 -198 OFFCURVE",
"-140 -148 CURVE SMOOTH",
"-137 -128 OFFCURVE",
"-126 -115 OFFCURVE",
"-120 -111 CURVE",
"-118 -111 OFFCURVE",
"-121 -108 OFFCURVE",
"-125 -109 CURVE",
"-131 -109 OFFCURVE",
"-145 -122 OFFCURVE",
"-149 -140 CURVE SMOOTH",
"-162 -194 OFFCURVE",
"-120 -227 OFFCURVE",
"-69 -215 CURVE SMOOTH",
"21 -195 OFFCURVE",
"70 -86 OFFCURVE",
"118 37 CURVE",
"133 74 OFFCURVE",
"143 103 OFFCURVE",
"157 152 CURVE SMOOTH",
"158 156 OFFCURVE",
"159 159 OFFCURVE",
"159 162 CURVE SMOOTH",
"159 166 OFFCURVE",
"157 168 OFFCURVE",
"154 168 CURVE SMOOTH"
);
}
);
width = 174;
}
);
unicode = 014B;
},
{
glyphname = nj;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 209, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 364;
}
);
unicode = 01CC;
},
{
glyphname = ntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -29, -177}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = o;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"70.667 -18 OFFCURVE",
"104.333 2 OFFCURVE",
"127 30 CURVE",
"168.333 30 OFFCURVE",
"204.333 43.667 OFFCURVE",
"235 71 CURVE SMOOTH",
"239 74.333 OFFCURVE",
"241 77.667 OFFCURVE",
"241 81 CURVE SMOOTH",
"241 84.333 OFFCURVE",
"240 86 OFFCURVE",
"238 86 CURVE SMOOTH",
"235.333 86 OFFCURVE",
"233 85 OFFCURVE",
"231 83 CURVE SMOOTH",
"207 58.333 OFFCURVE",
"175.333 45.333 OFFCURVE",
"136 44 CURVE",
"138 46 LINE",
"152 70.667 OFFCURVE",
"159 96.333 OFFCURVE",
"159 123 CURVE SMOOTH",
"159 152.333 OFFCURVE",
"136.667 180.667 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 205.667 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87.333 209 OFFCURVE",
"79.333 203.667 OFFCURVE",
"70 193 CURVE",
"36 189.667 OFFCURVE",
"19 170.667 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"19.667 120.667 OFFCURVE",
"21 114 CURVE",
"9 82.667 OFFCURVE",
"3 55.333 OFFCURVE",
"3 32 CURVE SMOOTH",
"2.333 -1.333 OFFCURVE",
"16 -18 OFFCURVE",
"44 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41.333 0 OFFCURVE",
"33 11.333 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43.333 OFFCURVE",
"34.667 55 OFFCURVE",
"38 69 CURVE",
"54 47.667 OFFCURVE",
"77.333 35 OFFCURVE",
"108 31 CURVE",
"93.333 10.333 OFFCURVE",
"76.667 0 OFFCURVE",
"58 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79.333 50.333 OFFCURVE",
"57 70 OFFCURVE",
"49 104 CURVE",
"61 133.333 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"122.333 178.333 OFFCURVE",
"138 154.667 OFFCURVE",
"138 124 CURVE SMOOTH",
"138 99.333 OFFCURVE",
"130.667 73 OFFCURVE",
"116 45 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0122 8 39 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 2 22 2 38 2 54 2 70 2 86 2 102 2 118 2 134 2 150 2 166 2 182 2 198 2 214 2 230 2 246 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 2 22 2 38 2 54 2 70 2 86 2 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 2 117 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01243 39 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01215 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0124 3 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
note = o;
unicode = 006F;
},
{
glyphname = oacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 46, -111}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = obreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 11, -172}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 014F;
},
{
glyphname = ocircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -74, -134}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, -54, -195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -69, -466}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, -48, -191}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, -61, -189}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, -53, -194}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, -58, -194}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED7;
},
{
glyphname = odblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -9, -167}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 020D;
},
{
glyphname = odieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 22, -31}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = odieresismacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 13, -192}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -34, -141}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 022B;
},
{
glyphname = odotaccentmacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 24, -189}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -23, -129}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 0231;
},
{
glyphname = odotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -61, -471}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ECD;
},
{
glyphname = ograve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -24, -110}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ohookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{0.9, 0, 0, 0.9, 24, -149}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, -1, -226}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 26, -156}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -61, -467}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -11, -158}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 19, -180}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{0.87961, 0, 0, 1, -28, -173}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 21, -101}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 0151;
},
{
glyphname = oinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, -15, -178}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 020F;
},
{
glyphname = omacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, -44, -149}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 014D;
},
{
glyphname = oogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -65, -14}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01EB;
},
{
glyphname = oslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-13 -94 LINE SMOOTH",
"3 -78 OFFCURVE",
"20 -52.667 OFFCURVE",
"40 -18 CURVE",
"44 -18 LINE SMOOTH",
"70.667 -18 OFFCURVE",
"104.333 2 OFFCURVE",
"127 30 CURVE",
"168.333 30 OFFCURVE",
"204.333 43.667 OFFCURVE",
"235 71 CURVE SMOOTH",
"239 74.333 OFFCURVE",
"241 77.667 OFFCURVE",
"241 81 CURVE SMOOTH",
"241 84.333 OFFCURVE",
"240 86 OFFCURVE",
"238 86 CURVE SMOOTH",
"235.333 86 OFFCURVE",
"233 85 OFFCURVE",
"231 83 CURVE SMOOTH",
"207 58.333 OFFCURVE",
"175.333 45.333 OFFCURVE",
"136 44 CURVE",
"138 46 LINE",
"152 70.667 OFFCURVE",
"159 96.333 OFFCURVE",
"159 123 CURVE SMOOTH",
"159 137.667 OFFCURVE",
"154 151.333 OFFCURVE",
"144 164 CURVE SMOOTH",
"138 171 LINE",
"164.667 220.333 OFFCURVE",
"187 247 OFFCURVE",
"211 255 CURVE",
"213 256.333 OFFCURVE",
"215.667 256.333 OFFCURVE",
"219 255 CURVE SMOOTH",
"222.333 253.667 OFFCURVE",
"225 253 OFFCURVE",
"227 253 CURVE",
"228.333 253.667 OFFCURVE",
"229 254.667 OFFCURVE",
"229 256 CURVE",
"227.667 260 OFFCURVE",
"226 261.667 OFFCURVE",
"222 263 CURVE SMOOTH",
"215.333 265.667 OFFCURVE",
"206.667 266.667 OFFCURVE",
"200 264 CURVE",
"167.167 258.528 OFFCURVE",
"140.187 218.975 OFFCURVE",
"121 183 CURVE",
"116.333 186.333 OFFCURVE",
"111.333 188.667 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 205.667 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87.333 209 OFFCURVE",
"79.333 203.667 OFFCURVE",
"70 193 CURVE",
"36 189.667 OFFCURVE",
"19 170.667 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"19.667 120.667 OFFCURVE",
"21 114 CURVE",
"9 82.667 OFFCURVE",
"3 55.333 OFFCURVE",
"3 32 CURVE SMOOTH",
"2.333 6 OFFCURVE",
"10.333 -10 OFFCURVE",
"27 -16 CURVE",
"13.667 -41.333 OFFCURVE",
"-1.667 -66 OFFCURVE",
"-19 -90 CURVE SMOOTH",
"-21 -92.667 OFFCURVE",
"-21.667 -94.667 OFFCURVE",
"-21 -96 CURVE",
"-21 -97.333 OFFCURVE",
"-20 -98 OFFCURVE",
"-18 -98 CURVE"
);
},
{
closed = 1;
nodes = (
"35 13.333 OFFCURVE",
"33 22 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43.333 OFFCURVE",
"34.667 55 OFFCURVE",
"38 69 CURVE",
"43.333 61.667 OFFCURVE",
"50 55 OFFCURVE",
"58 49 CURVE",
"53 38 LINE SMOOTH",
"49 27.333 OFFCURVE",
"44.333 17.333 OFFCURVE",
"39 8 CURVE"
);
},
{
closed = 1;
nodes = (
"55.333 0 OFFCURVE",
"53 0.333 OFFCURVE",
"51 1 CURVE",
"67 31 LINE",
"71 41 LINE",
"82.333 35.667 OFFCURVE",
"94.667 32.333 OFFCURVE",
"108 31 CURVE",
"93.333 10.333 OFFCURVE",
"76.667 0 OFFCURVE",
"58 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"58 78.333 OFFCURVE",
"52.333 90 OFFCURVE",
"49 104 CURVE",
"61 133.333 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"104.333 180.333 OFFCURVE",
"110.667 178 OFFCURVE",
"116 174 CURVE",
"110.667 162.667 OFFCURVE",
"105.167 151.167 OFFCURVE",
"99.5 139.5 CURVE SMOOTH",
"84 107 LINE SMOOTH",
"77.333 95 OFFCURVE",
"71.333 82.333 OFFCURVE",
"66 69 CURVE"
);
},
{
closed = 1;
nodes = (
"101.333 47 OFFCURVE",
"89 51.333 OFFCURVE",
"79 58 CURVE",
"99 98 OFFCURVE",
"115 130 OFFCURVE",
"131 158 CURVE",
"135.667 148 OFFCURVE",
"138 136.667 OFFCURVE",
"138 124 CURVE SMOOTH",
"138 99.333 OFFCURVE",
"130.667 73 OFFCURVE",
"116 45 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01298 8 44 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 98 117 98 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01248 44 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01267 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01269 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01294 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01252 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01292 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01294 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01218 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = oslashacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 54, -140}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01FF;
},
{
glyphname = otilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, -33, -135}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = otildemacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, -40, -177}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 022D;
},
{
glyphname = oe;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"72 -18 OFFCURVE",
"98.667 -2.667 OFFCURVE",
"124 28 CURVE",
"131.333 3.333 OFFCURVE",
"149.667 -9 OFFCURVE",
"179 -9 CURVE SMOOTH",
"205.667 -9 OFFCURVE",
"237 0.333 OFFCURVE",
"273 19 CURVE SMOOTH",
"305 36.333 OFFCURVE",
"328.667 54 OFFCURVE",
"344 72 CURVE SMOOTH",
"346 74.667 OFFCURVE",
"347 77.667 OFFCURVE",
"347 81 CURVE SMOOTH",
"347 89 OFFCURVE",
"343 88.333 OFFCURVE",
"335 79 CURVE SMOOTH",
"321 63.667 OFFCURVE",
"300 48.333 OFFCURVE",
"272 33 CURVE SMOOTH",
"241.333 15.667 OFFCURVE",
"215.333 7 OFFCURVE",
"194 7 CURVE SMOOTH",
"168 7 OFFCURVE",
"155 21 OFFCURVE",
"155 49 CURVE SMOOTH",
"155 55.667 OFFCURVE",
"156 63.333 OFFCURVE",
"158 72 CURVE",
"194.667 81.333 OFFCURVE",
"222.333 97.667 OFFCURVE",
"241 121 CURVE SMOOTH",
"252.333 135 OFFCURVE",
"258 148.333 OFFCURVE",
"258 161 CURVE SMOOTH",
"258 181.667 OFFCURVE",
"247.333 192 OFFCURVE",
"226 192 CURVE SMOOTH",
"210 192 OFFCURVE",
"193.333 183.333 OFFCURVE",
"176 166 CURVE SMOOTH",
"168.667 159.333 OFFCURVE",
"161.667 151.667 OFFCURVE",
"155 143 CURVE",
"147.667 166.333 OFFCURVE",
"131.333 182 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 205.667 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87.333 209 OFFCURVE",
"79.333 203.667 OFFCURVE",
"70 193 CURVE",
"36 189.667 OFFCURVE",
"19 170.667 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"19.667 120.667 OFFCURVE",
"21 114 CURVE",
"9 82.667 OFFCURVE",
"3 55.667 OFFCURVE",
"3 33 CURVE SMOOTH",
"3 -1 OFFCURVE",
"16.667 -18 OFFCURVE",
"44 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"41.333 0 OFFCURVE",
"33 11.333 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43.333 OFFCURVE",
"34.667 55 OFFCURVE",
"38 69 CURVE",
"54 47.667 OFFCURVE",
"77.333 35 OFFCURVE",
"108 31 CURVE",
"93.333 10.333 OFFCURVE",
"76.667 0 OFFCURVE",
"58 0 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"79.333 50.333 OFFCURVE",
"57 70 OFFCURVE",
"49 104 CURVE",
"61 133.333 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"122.333 178.333 OFFCURVE",
"138 154.667 OFFCURVE",
"138 124 CURVE SMOOTH",
"137 112 LINE",
"126.333 89.333 OFFCURVE",
"121 70.333 OFFCURVE",
"121 55 CURVE SMOOTH",
"121 54 LINE",
"116 45 LINE"
);
},
{
closed = 1;
nodes = (
"178.333 125.667 OFFCURVE",
"215.667 176 OFFCURVE",
"233 176 CURVE SMOOTH",
"238.333 176 OFFCURVE",
"241 172.333 OFFCURVE",
"241 165 CURVE SMOOTH",
"241 155.667 OFFCURVE",
"237 144.333 OFFCURVE",
"229 131 CURVE SMOOTH",
"217 109.667 OFFCURVE",
"194.333 93.667 OFFCURVE",
"161 83 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01211 8 66 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01240 29 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 29 234 29 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0127 29 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 11 117 11 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01215 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01232 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 29 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01274 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01248 4 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0127 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01215 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01232 74 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01260 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01262 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-187 -209 OFFCURVE",
"-148.333 -196.667 OFFCURVE",
"-115 -172 CURVE SMOOTH",
"-59 -130.667 OFFCURVE",
"-6.333 -30.333 OFFCURVE",
"31 43 CURVE",
"45.667 13 OFFCURVE",
"70 -2 OFFCURVE",
"104 -2 CURVE SMOOTH",
"128.667 -2 OFFCURVE",
"156.333 5.333 OFFCURVE",
"187 20 CURVE SMOOTH",
"214.333 32.667 OFFCURVE",
"239.667 49.333 OFFCURVE",
"263 70 CURVE SMOOTH",
"267 73.333 OFFCURVE",
"269 77 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 83.667 OFFCURVE",
"267.667 85 OFFCURVE",
"265 85 CURVE SMOOTH",
"263.667 85 OFFCURVE",
"261.667 84 OFFCURVE",
"259 82 CURVE",
"245.667 68 OFFCURVE",
"228 54.667 OFFCURVE",
"206 42 CURVE SMOOTH",
"181.333 28 OFFCURVE",
"158 18.333 OFFCURVE",
"136 13 CURVE",
"158 30.333 OFFCURVE",
"169 54 OFFCURVE",
"169 84 CURVE SMOOTH",
"169 105.333 OFFCURVE",
"163 125.333 OFFCURVE",
"151 144 CURVE SMOOTH",
"139.667 162 OFFCURVE",
"124 176.667 OFFCURVE",
"104 188 CURVE",
"134 241.333 OFFCURVE",
"159.667 268 OFFCURVE",
"181 268 CURVE SMOOTH",
"193 268 OFFCURVE",
"198 261 OFFCURVE",
"196 247 CURVE SMOOTH",
"195.333 243.667 OFFCURVE",
"196 242 OFFCURVE",
"198 242 CURVE SMOOTH",
"202 242 OFFCURVE",
"204 246.667 OFFCURVE",
"204 256 CURVE SMOOTH",
"204 269.333 OFFCURVE",
"196.333 276 OFFCURVE",
"181 276 CURVE SMOOTH",
"145.667 276 OFFCURVE",
"111.667 250 OFFCURVE",
"79 198 CURVE",
"71 200 OFFCURVE",
"63 201.333 OFFCURVE",
"55 202 CURVE SMOOTH",
"12.333 204.667 OFFCURVE",
"-19 186.667 OFFCURVE",
"-19 156 CURVE SMOOTH",
"-19 147.333 OFFCURVE",
"-17.333 143 OFFCURVE",
"-14 143 CURVE SMOOTH",
"-9.333 143 OFFCURVE",
"-7.333 145.667 OFFCURVE",
"-8 151 CURVE SMOOTH",
"-10.667 165.667 OFFCURVE",
"-5 176.333 OFFCURVE",
"9 183 CURVE SMOOTH",
"19.667 187.667 OFFCURVE",
"33.667 189.333 OFFCURVE",
"51 188 CURVE SMOOTH",
"57.667 187.333 OFFCURVE",
"64.333 185.667 OFFCURVE",
"71 183 CURVE",
"48.333 140.333 OFFCURVE",
"32 108.667 OFFCURVE",
"22 88 CURVE SMOOTH",
"-4.667 36.667 OFFCURVE",
"-32.667 -13.333 OFFCURVE",
"-62 -62 CURVE SMOOTH",
"-111.333 -144.667 OFFCURVE",
"-176 -197 OFFCURVE",
"-236 -197 CURVE SMOOTH",
"-256 -197 OFFCURVE",
"-271.667 -190.667 OFFCURVE",
"-283 -178 CURVE SMOOTH",
"-293 -167.333 OFFCURVE",
"-298 -154 OFFCURVE",
"-298 -138 CURVE SMOOTH",
"-298 -122 OFFCURVE",
"-293.333 -109.333 OFFCURVE",
"-284 -100 CURVE SMOOTH",
"-281.333 -97.333 OFFCURVE",
"-280 -95 OFFCURVE",
"-280 -93 CURVE SMOOTH",
"-280 -90.333 OFFCURVE",
"-281.333 -89 OFFCURVE",
"-284 -89 CURVE SMOOTH",
"-286.667 -89 OFFCURVE",
"-289 -90.333 OFFCURVE",
"-291 -93 CURVE SMOOTH",
"-304.333 -106.333 OFFCURVE",
"-311 -122.333 OFFCURVE",
"-311 -141 CURVE SMOOTH",
"-311 -159.667 OFFCURVE",
"-304.333 -175.333 OFFCURVE",
"-291 -188 CURVE SMOOTH",
"-276.333 -202 OFFCURVE",
"-256.333 -209 OFFCURVE",
"-231 -209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"63.667 16 OFFCURVE",
"47.333 27.667 OFFCURVE",
"36 51 CURVE",
"40 59 OFFCURVE",
"44 67.333 OFFCURVE",
"48 76 CURVE SMOOTH",
"94 171 LINE",
"110.667 158.333 OFFCURVE",
"123.667 142.333 OFFCURVE",
"133 123 CURVE SMOOTH",
"139.667 109 OFFCURVE",
"143 95.333 OFFCURVE",
"143 82 CURVE SMOOTH",
"143 44.667 OFFCURVE",
"115.667 16 OFFCURVE",
"85 16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01285 6 75 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01289 1 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
note = p;
unicode = 0070;
},
{
glyphname = thorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-187 -209 OFFCURVE",
"-148 -197 OFFCURVE",
"-115 -172 CURVE SMOOTH",
"-59 -131 OFFCURVE",
"-6 -30 OFFCURVE",
"31 43 CURVE",
"46 13 OFFCURVE",
"70 -2 OFFCURVE",
"104 -2 CURVE SMOOTH",
"129 -2 OFFCURVE",
"156 5 OFFCURVE",
"187 20 CURVE SMOOTH",
"214 33 OFFCURVE",
"240 49 OFFCURVE",
"263 70 CURVE SMOOTH",
"267 73 OFFCURVE",
"269 77 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 84 OFFCURVE",
"268 85 OFFCURVE",
"265 85 CURVE SMOOTH",
"264 85 OFFCURVE",
"262 84 OFFCURVE",
"259 82 CURVE",
"246 68 OFFCURVE",
"228 55 OFFCURVE",
"206 42 CURVE SMOOTH",
"181 28 OFFCURVE",
"158 18 OFFCURVE",
"136 13 CURVE",
"158 30 OFFCURVE",
"169 54 OFFCURVE",
"169 84 CURVE SMOOTH",
"169 105 OFFCURVE",
"163 125 OFFCURVE",
"151 144 CURVE SMOOTH",
"140 162 OFFCURVE",
"125 181 OFFCURVE",
"109 192 CURVE",
"187 378 OFFCURVE",
"218 415 OFFCURVE",
"243 415 CURVE SMOOTH",
"257 415 OFFCURVE",
"262 406 OFFCURVE",
"261 386 CURVE SMOOTH",
"260 382 OFFCURVE",
"261 379 OFFCURVE",
"262 379 CURVE SMOOTH",
"267 379 OFFCURVE",
"270 386 OFFCURVE",
"270 399 CURVE SMOOTH",
"270 417 OFFCURVE",
"261 426 OFFCURVE",
"243 426 CURVE SMOOTH",
"201 426 OFFCURVE",
"162 390 OFFCURVE",
"80 206 CURVE",
"25 217 OFFCURVE",
"-19 199 OFFCURVE",
"-19 156 CURVE SMOOTH",
"-19 147 OFFCURVE",
"-17 143 OFFCURVE",
"-14 143 CURVE SMOOTH",
"-9 143 OFFCURVE",
"-7 146 OFFCURVE",
"-8 151 CURVE SMOOTH",
"-11 166 OFFCURVE",
"-5 176 OFFCURVE",
"9 183 CURVE SMOOTH",
"20 188 OFFCURVE",
"34 189 OFFCURVE",
"51 188 CURVE SMOOTH",
"58 187 OFFCURVE",
"64 186 OFFCURVE",
"71 183 CURVE",
"48 140 OFFCURVE",
"32 109 OFFCURVE",
"22 88 CURVE SMOOTH",
"-5 37 OFFCURVE",
"-33 -13 OFFCURVE",
"-62 -62 CURVE SMOOTH",
"-111 -145 OFFCURVE",
"-176 -197 OFFCURVE",
"-236 -197 CURVE SMOOTH",
"-256 -197 OFFCURVE",
"-272 -191 OFFCURVE",
"-283 -178 CURVE SMOOTH",
"-293 -167 OFFCURVE",
"-298 -154 OFFCURVE",
"-298 -138 CURVE SMOOTH",
"-298 -122 OFFCURVE",
"-293 -109 OFFCURVE",
"-284 -100 CURVE SMOOTH",
"-281 -97 OFFCURVE",
"-280 -95 OFFCURVE",
"-280 -93 CURVE SMOOTH",
"-280 -90 OFFCURVE",
"-281 -89 OFFCURVE",
"-284 -89 CURVE SMOOTH",
"-287 -89 OFFCURVE",
"-289 -90 OFFCURVE",
"-291 -93 CURVE SMOOTH",
"-304 -106 OFFCURVE",
"-311 -122 OFFCURVE",
"-311 -141 CURVE SMOOTH",
"-311 -160 OFFCURVE",
"-304 -175 OFFCURVE",
"-291 -188 CURVE SMOOTH",
"-276 -202 OFFCURVE",
"-256 -209 OFFCURVE",
"-231 -209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"64 16 OFFCURVE",
"47 28 OFFCURVE",
"36 51 CURVE",
"40 59 OFFCURVE",
"44 67 OFFCURVE",
"48 76 CURVE SMOOTH",
"94 171 LINE",
"111 158 OFFCURVE",
"124 142 OFFCURVE",
"133 123 CURVE SMOOTH",
"140 109 OFFCURVE",
"143 95 OFFCURVE",
"143 82 CURVE SMOOTH",
"143 45 OFFCURVE",
"116 16 OFFCURVE",
"85 16 CURVE SMOOTH"
);
}
);
width = 248;
}
);
unicode = 00FE;
},
{
glyphname = q;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103.667 -321 OFFCURVE",
"139.667 -302.667 OFFCURVE",
"171 -266 CURVE SMOOTH",
"201.667 -230 OFFCURVE",
"217 -190 OFFCURVE",
"217 -146 CURVE SMOOTH",
"217 -127.333 OFFCURVE",
"214 -110 OFFCURVE",
"208 -94 CURVE SMOOTH",
"194 -60 OFFCURVE",
"167.333 -32 OFFCURVE",
"128 -10 CURVE",
"154.667 -7.333 OFFCURVE",
"184 3.667 OFFCURVE",
"216 23 CURVE SMOOTH",
"242.667 38.333 OFFCURVE",
"264.333 55 OFFCURVE",
"281 73 CURVE SMOOTH",
"283 75 OFFCURVE",
"284 77.667 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 83.667 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276.333 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"249 54.333 OFFCURVE",
"220.667 35 OFFCURVE",
"188 21 CURVE SMOOTH",
"158 8.333 OFFCURVE",
"131 2.333 OFFCURVE",
"107 3 CURVE",
"121.667 36.333 OFFCURVE",
"185.667 145.333 OFFCURVE",
"203 168 CURVE",
"200.333 176 OFFCURVE",
"193.333 180 OFFCURVE",
"182 180 CURVE SMOOTH",
"174.667 180 OFFCURVE",
"170 178.333 OFFCURVE",
"168 175 CURVE SMOOTH",
"165 171 LINE",
"159 174.333 OFFCURVE",
"151.667 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130.333 176 OFFCURVE",
"116.667 172.667 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 150.667 OFFCURVE",
"37.667 122.333 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62.333 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"0.667 -1 OFFCURVE",
"16 -1 CURVE SMOOTH",
"27.333 -1 OFFCURVE",
"41.333 5.667 OFFCURVE",
"58 19 CURVE SMOOTH",
"85.333 42.333 OFFCURVE",
"103 58 OFFCURVE",
"111 66 CURVE",
"79 6 LINE",
"76.333 6 OFFCURVE",
"70 8 OFFCURVE",
"70 8 CURVE",
"68 8.667 OFFCURVE",
"66 9 OFFCURVE",
"64 9 CURVE SMOOTH",
"58.667 9 OFFCURVE",
"56 7 OFFCURVE",
"56 3 CURVE SMOOTH",
"56 -3 OFFCURVE",
"60 -7.667 OFFCURVE",
"68 -11 CURVE",
"34 -91 LINE SMOOTH",
"14.667 -137.667 OFFCURVE",
"2.333 -170.667 OFFCURVE",
"-3 -190 CURVE SMOOTH",
"-5.667 -200.667 OFFCURVE",
"-7 -212 OFFCURVE",
"-7 -224 CURVE SMOOTH",
"-7 -250 OFFCURVE",
"-1 -272.333 OFFCURVE",
"11 -291 CURVE SMOOTH",
"23.667 -311 OFFCURVE",
"41 -321 OFFCURVE",
"63 -321 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29.333 -294 OFFCURVE",
"13 -274.667 OFFCURVE",
"13 -236 CURVE SMOOTH",
"13 -219.333 OFFCURVE",
"16 -200.5 OFFCURVE",
"22 -179.5 CURVE SMOOTH",
"28 -158.5 OFFCURVE",
"42.667 -126.333 OFFCURVE",
"66 -83 CURVE SMOOTH",
"88.667 -41.667 OFFCURVE",
"101.333 -21 OFFCURVE",
"104 -21 CURVE SMOOTH",
"118 -21 OFFCURVE",
"134.333 -30.333 OFFCURVE",
"153 -49 CURVE SMOOTH",
"173 -68.333 OFFCURVE",
"185 -88.667 OFFCURVE",
"189 -110 CURVE SMOOTH",
"190.333 -117.333 OFFCURVE",
"191 -125 OFFCURVE",
"191 -133 CURVE SMOOTH",
"191 -211.667 OFFCURVE",
"127.333 -294 OFFCURVE",
"62 -294 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 34.667 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 56.667 OFFCURVE",
"28.667 68.667 OFFCURVE",
"36 82 CURVE SMOOTH",
"54.667 120.667 OFFCURVE",
"118 159.333 OFFCURVE",
"158 158 CURVE",
"141.333 126 OFFCURVE",
"130 106.333 OFFCURVE",
"124 99 CURVE SMOOTH",
"100 75 OFFCURVE",
"80.667 56.667 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44.333 29 OFFCURVE",
"37 29 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01287 7 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 5 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01249 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01270 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 92 122 92 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01249 4 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 6 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01263 82 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 6 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01289 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"159 -16 OFFCURVE",
"173.333 -13 OFFCURVE",
"190 -7 CURVE SMOOTH",
"222.667 5 OFFCURVE",
"262 30.667 OFFCURVE",
"308 70 CURVE SMOOTH",
"312 74 OFFCURVE",
"314 77.667 OFFCURVE",
"314 81 CURVE SMOOTH",
"314 83.667 OFFCURVE",
"313 85 OFFCURVE",
"311 85 CURVE SMOOTH",
"308.333 85 OFFCURVE",
"305 83 OFFCURVE",
"301 79 CURVE SMOOTH",
"284.333 62.333 OFFCURVE",
"262.667 46.333 OFFCURVE",
"236 31 CURVE SMOOTH",
"205.333 13 OFFCURVE",
"180 4 OFFCURVE",
"160 4 CURVE SMOOTH",
"144 4 OFFCURVE",
"136 12.667 OFFCURVE",
"136 30 CURVE SMOOTH",
"136 34.667 OFFCURVE",
"136.667 40 OFFCURVE",
"138 46 CURVE SMOOTH",
"139.333 54 OFFCURVE",
"144.333 67.667 OFFCURVE",
"153 87 CURVE SMOOTH",
"160.333 103.667 OFFCURVE",
"166.333 115.667 OFFCURVE",
"171 123 CURVE SMOOTH",
"174.333 128.333 OFFCURVE",
"176 133.333 OFFCURVE",
"176 138 CURVE SMOOTH",
"176 150.667 OFFCURVE",
"170 157 OFFCURVE",
"158 157 CURVE SMOOTH",
"154.667 157 OFFCURVE",
"149 155.833 OFFCURVE",
"141 153.5 CURVE SMOOTH",
"133 151.167 OFFCURVE",
"126.667 150 OFFCURVE",
"122 150 CURVE SMOOTH",
"108 150 OFFCURVE",
"101.333 156.333 OFFCURVE",
"102 169 CURVE",
"125.333 197 OFFCURVE",
"136.333 219.333 OFFCURVE",
"135 236 CURVE SMOOTH",
"134.333 247.333 OFFCURVE",
"128 253 OFFCURVE",
"116 253 CURVE SMOOTH",
"106 253 OFFCURVE",
"97 248.667 OFFCURVE",
"89 240 CURVE SMOOTH",
"80.333 230 OFFCURVE",
"76 217.333 OFFCURVE",
"76 202 CURVE SMOOTH",
"76 196 OFFCURVE",
"76.667 190 OFFCURVE",
"78 184 CURVE SMOOTH",
"80 174 LINE",
"58.667 134 OFFCURVE",
"33 100.333 OFFCURVE",
"3 73 CURVE SMOOTH",
"-1 69.667 OFFCURVE",
"-3 67 OFFCURVE",
"-3 65 CURVE SMOOTH",
"-3 63 OFFCURVE",
"-1.667 62 OFFCURVE",
"1 62 CURVE SMOOTH",
"4.333 62 OFFCURVE",
"7.667 63.333 OFFCURVE",
"11 66 CURVE SMOOTH",
"46.333 95.333 OFFCURVE",
"72.333 126 OFFCURVE",
"89 158 CURVE",
"89 136.667 OFFCURVE",
"111 117.333 OFFCURVE",
"131 120 CURVE",
"111 84 OFFCURVE",
"101.333 54.333 OFFCURVE",
"102 31 CURVE SMOOTH",
"102.667 -0.333 OFFCURVE",
"117.667 -16 OFFCURVE",
"147 -16 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01248 8 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 48 117 48 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 25 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 25 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 293;
}
);
note = r;
unicode = 0072;
},
{
glyphname = racute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 102, -124}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, -13, 14}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0159;
},
{
glyphname = rcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -78, 39}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0157;
},
{
glyphname = rdblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 43, -138}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0211;
},
{
glyphname = rinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 10, -141}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0213;
},
{
glyphname = s;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"66.667 -6 OFFCURVE",
"76.333 -0.333 OFFCURVE",
"83 11 CURVE",
"101.667 7.667 OFFCURVE",
"121.667 8 OFFCURVE",
"143 12 CURVE SMOOTH",
"175 18 OFFCURVE",
"208.333 37.667 OFFCURVE",
"243 71 CURVE SMOOTH",
"245.667 74.333 OFFCURVE",
"247 77.333 OFFCURVE",
"247 80 CURVE SMOOTH",
"247 83.333 OFFCURVE",
"245.667 85 OFFCURVE",
"243 85 CURVE SMOOTH",
"240.333 85 OFFCURVE",
"238 83.667 OFFCURVE",
"236 81 CURVE SMOOTH",
"210.667 52.333 OFFCURVE",
"180.333 33.667 OFFCURVE",
"145 25 CURVE SMOOTH",
"125 20.333 OFFCURVE",
"105.667 19.667 OFFCURVE",
"87 23 CURVE",
"87.667 26.333 OFFCURVE",
"88 30 OFFCURVE",
"88 34 CURVE SMOOTH",
"86.667 44 OFFCURVE",
"81 57.5 OFFCURVE",
"71 74.5 CURVE SMOOTH",
"61 91.5 OFFCURVE",
"56 105.667 OFFCURVE",
"56 117 CURVE SMOOTH",
"56 123 OFFCURVE",
"57 129.333 OFFCURVE",
"59 136 CURVE SMOOTH",
"75 180.667 OFFCURVE",
"105.667 207 OFFCURVE",
"151 215 CURVE SMOOTH",
"155 215.667 OFFCURVE",
"158.667 216 OFFCURVE",
"162 216 CURVE SMOOTH",
"176 216 OFFCURVE",
"183 211 OFFCURVE",
"183 201 CURVE SMOOTH",
"183 195 OFFCURVE",
"180.667 187.667 OFFCURVE",
"176 179 CURVE SMOOTH",
"174 175.667 OFFCURVE",
"173 173 OFFCURVE",
"173 171 CURVE SMOOTH",
"173 167.667 OFFCURVE",
"174.333 166.333 OFFCURVE",
"177 167 CURVE SMOOTH",
"179.667 168.333 OFFCURVE",
"183 171.333 OFFCURVE",
"187 176 CURVE SMOOTH",
"195.667 188.667 OFFCURVE",
"200 201.667 OFFCURVE",
"200 215 CURVE SMOOTH",
"200 233 OFFCURVE",
"190.667 243.333 OFFCURVE",
"172 246 CURVE SMOOTH",
"156 248 OFFCURVE",
"138.333 245.667 OFFCURVE",
"119 239 CURVE SMOOTH",
"63.667 218.333 OFFCURVE",
"34.333 186 OFFCURVE",
"31 142 CURVE SMOOTH",
"29 120 OFFCURVE",
"35.667 98 OFFCURVE",
"51 76 CURVE SMOOTH",
"57 68 OFFCURVE",
"61.667 58.667 OFFCURVE",
"65 48 CURVE SMOOTH",
"67 41.333 OFFCURVE",
"68 35 OFFCURVE",
"68 29 CURVE",
"48.667 36.333 OFFCURVE",
"33 47.333 OFFCURVE",
"21 62 CURVE SMOOTH",
"20.333 62.667 OFFCURVE",
"19.333 63 OFFCURVE",
"18 63 CURVE SMOOTH",
"13.333 63 OFFCURVE",
"11 60.333 OFFCURVE",
"11 55 CURVE",
"7.667 51.667 OFFCURVE",
"8.333 41.667 OFFCURVE",
"13 25 CURVE SMOOTH",
"17 7.667 OFFCURVE",
"34 -6 OFFCURVE",
"54 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"53.333 11 OFFCURVE",
"57.667 12.667 OFFCURVE",
"61 16 CURVE",
"44.333 21.333 OFFCURVE",
"30.333 29.667 OFFCURVE",
"19 41 CURVE",
"19 23.667 OFFCURVE",
"34.667 11 OFFCURVE",
"48 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01244 7 54 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0125 3 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
note = s;
unicode = 0073;
},
{
glyphname = sacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 102, -112}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015B;
},
{
glyphname = scaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 0, 37}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 0161;
},
{
glyphname = scedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -88, -12}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015F;
},
{
glyphname = scircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015D;
},
{
glyphname = scommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -92, 18}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 0219;
},
{
glyphname = germandbls;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"359 84 OFFCURVE",
"355 82 OFFCURVE",
"352 79 CURVE SMOOTH",
"326 55 OFFCURVE",
"293 36 OFFCURVE",
"262 27 CURVE SMOOTH",
"247 22 OFFCURVE",
"219 19 OFFCURVE",
"195 23 CURVE",
"196 26 OFFCURVE",
"196 30 OFFCURVE",
"196 34 CURVE SMOOTH",
"195 44 OFFCURVE",
"189 58 OFFCURVE",
"179 75 CURVE SMOOTH",
"169 92 OFFCURVE",
"164 106 OFFCURVE",
"164 117 CURVE SMOOTH",
"164 123 OFFCURVE",
"165 129 OFFCURVE",
"167 136 CURVE SMOOTH",
"183 181 OFFCURVE",
"214 207 OFFCURVE",
"260 221 CURVE SMOOTH",
"289 230 OFFCURVE",
"308 228 OFFCURVE",
"317 220 CURVE SMOOTH",
"322 215 OFFCURVE",
"330 215 OFFCURVE",
"334 228 CURVE SMOOTH",
"361 308 OFFCURVE",
"340 430 OFFCURVE",
"256 430 CURVE SMOOTH",
"211 430 OFFCURVE",
"158 394 OFFCURVE",
"130 340 CURVE SMOOTH",
"98 279 OFFCURVE",
"15 87 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-97 -103 OFFCURVE",
"-125 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187 -185 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283 -191 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304 -109 OFFCURVE",
"-295 -100 CURVE",
"-293 -97 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90 OFFCURVE",
"-293 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90 OFFCURVE",
"-302 -93 CURVE",
"-315 -106 OFFCURVE",
"-322 -122 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -160 OFFCURVE",
"-315 -175 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287 -202 OFFCURVE",
"-268 -209 OFFCURVE",
"-243 -209 CURVE SMOOTH",
"-199 -209 OFFCURVE",
"-160 -197 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98 -151 OFFCURVE",
"-72 -120 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"25 57 OFFCURVE",
"121 233 OFFCURVE",
"168 335 CURVE SMOOTH",
"188 380 OFFCURVE",
"226 411 OFFCURVE",
"259 411 CURVE SMOOTH",
"315 411 OFFCURVE",
"338 323 OFFCURVE",
"323 252 CURVE",
"266 287 OFFCURVE",
"144 218 OFFCURVE",
"139 142 CURVE SMOOTH",
"137 120 OFFCURVE",
"144 98 OFFCURVE",
"159 76 CURVE SMOOTH",
"165 68 OFFCURVE",
"170 59 OFFCURVE",
"173 48 CURVE SMOOTH",
"175 41 OFFCURVE",
"176 35 OFFCURVE",
"176 29 CURVE",
"157 36 OFFCURVE",
"141 47 OFFCURVE",
"129 62 CURVE SMOOTH",
"128 63 OFFCURVE",
"127 63 OFFCURVE",
"126 63 CURVE SMOOTH",
"121 63 OFFCURVE",
"119 60 OFFCURVE",
"119 55 CURVE",
"116 52 OFFCURVE",
"116 42 OFFCURVE",
"121 25 CURVE SMOOTH",
"125 8 OFFCURVE",
"142 -6 OFFCURVE",
"162 -6 CURVE SMOOTH",
"175 -6 OFFCURVE",
"184 0 OFFCURVE",
"191 11 CURVE",
"210 8 OFFCURVE",
"230 8 OFFCURVE",
"251 12 CURVE SMOOTH",
"283 18 OFFCURVE",
"324 38 OFFCURVE",
"359 71 CURVE SMOOTH",
"365 77 OFFCURVE",
"367 84 OFFCURVE",
"362 84 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"143 11 OFFCURVE",
"127 24 OFFCURVE",
"127 41 CURVE",
"138 30 OFFCURVE",
"152 21 OFFCURVE",
"169 16 CURVE",
"166 13 OFFCURVE",
"161 11 OFFCURVE",
"156 11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 32 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 32 122 32 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01224 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 2 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01248 54 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01256 54 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = t;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"102 -1.333 OFFCURVE",
"142.333 23 OFFCURVE",
"189 73 CURVE SMOOTH",
"191 75 OFFCURVE",
"192 77.667 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 83.667 OFFCURVE",
"191 85 OFFCURVE",
"189 85 CURVE SMOOTH",
"186.333 85.667 OFFCURVE",
"183 83.667 OFFCURVE",
"179 79 CURVE SMOOTH",
"157.667 56.333 OFFCURVE",
"137.667 39.667 OFFCURVE",
"119 29 CURVE SMOOTH",
"106.333 21.667 OFFCURVE",
"94 18 OFFCURVE",
"82 18 CURVE SMOOTH",
"58.667 18 OFFCURVE",
"47 31.667 OFFCURVE",
"47 59 CURVE SMOOTH",
"47 82.333 OFFCURVE",
"57.333 113.667 OFFCURVE",
"78 153 CURVE",
"136.667 153 OFFCURVE",
"168.667 153.333 OFFCURVE",
"174 154 CURVE SMOOTH",
"188.667 156 OFFCURVE",
"196 160 OFFCURVE",
"196 166 CURVE SMOOTH",
"196 169.333 OFFCURVE",
"193 172 OFFCURVE",
"187 174 CURVE",
"89 174 LINE",
"125 229.333 OFFCURVE",
"151.667 269 OFFCURVE",
"169 293 CURVE SMOOTH",
"170.333 294.333 OFFCURVE",
"171 295.667 OFFCURVE",
"171 297 CURVE SMOOTH",
"171 303 OFFCURVE",
"165 306 OFFCURVE",
"153 306 CURVE SMOOTH",
"139 306 OFFCURVE",
"127.667 302 OFFCURVE",
"119 294 CURVE",
"103.667 270.667 OFFCURVE",
"91.333 251 OFFCURVE",
"82 235 CURVE SMOOTH",
"65.333 205 OFFCURVE",
"54.333 184.667 OFFCURVE",
"49 174 CURVE",
"41.667 174 OFFCURVE",
"35.667 174 OFFCURVE",
"31 174 CURVE SMOOTH",
"13 173 LINE SMOOTH",
"2.333 173 OFFCURVE",
"-2.333 170 OFFCURVE",
"-1 164 CURVE SMOOTH",
"0.333 156.667 OFFCURVE",
"5.667 152.333 OFFCURVE",
"15 151 CURVE SMOOTH",
"12.333 151.667 OFFCURVE",
"20 152.333 OFFCURVE",
"38 153 CURVE",
"24 120.333 OFFCURVE",
"17 91.333 OFFCURVE",
"17 66 CURVE SMOOTH",
"17 58 OFFCURVE",
"17.667 49.667 OFFCURVE",
"19 41 CURVE SMOOTH",
"25 14.333 OFFCURVE",
"41.333 0.667 OFFCURVE",
"68 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 8 43 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 25 117 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01245 43 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01216 4 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01227 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
note = t;
unicode = 0074;
},
{
glyphname = tbar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = hyphen;
transform = "{0.667, 0, 0, 0.8038, -34, 4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = quotesingle;
transform = "{0.8, 0, 0, 0.8, 109, 39}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 213;
}
);
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -70, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0163;
},
{
glyphname = tcommaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -91, 24}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 021B;
},
{
glyphname = u;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"197.333 -3.333 OFFCURVE",
"238.667 21 OFFCURVE",
"288 73 CURVE",
"290.667 75 OFFCURVE",
"292 77.667 OFFCURVE",
"292 81 CURVE SMOOTH",
"292 84.333 OFFCURVE",
"291 86 OFFCURVE",
"289 86 CURVE SMOOTH",
"286.333 86 OFFCURVE",
"283 84 OFFCURVE",
"279 80 CURVE SMOOTH",
"239 37.333 OFFCURVE",
"206 16 OFFCURVE",
"180 16 CURVE SMOOTH",
"163.333 16 OFFCURVE",
"155 26.333 OFFCURVE",
"155 47 CURVE SMOOTH",
"155 73.667 OFFCURVE",
"167 111 OFFCURVE",
"191 159 CURVE",
"192.333 160.333 OFFCURVE",
"193 161.667 OFFCURVE",
"193 163 CURVE SMOOTH",
"193 166.333 OFFCURVE",
"189.667 168 OFFCURVE",
"183 168 CURVE SMOOTH",
"171 168 OFFCURVE",
"163 165 OFFCURVE",
"159 159 CURVE",
"147 127.667 OFFCURVE",
"130.333 97.667 OFFCURVE",
"109 69 CURVE SMOOTH",
"84.333 35.667 OFFCURVE",
"63.333 19 OFFCURVE",
"46 19 CURVE SMOOTH",
"38.667 19 OFFCURVE",
"35 27 OFFCURVE",
"35 43 CURVE SMOOTH",
"35 55.667 OFFCURVE",
"41 74 OFFCURVE",
"53 98 CURVE SMOOTH",
"74 136 LINE",
"76 142 OFFCURVE",
"73 145 OFFCURVE",
"65 145 CURVE SMOOTH",
"51.667 145 OFFCURVE",
"43 141.333 OFFCURVE",
"39 134 CURVE SMOOTH",
"15.667 92 OFFCURVE",
"4 59.333 OFFCURVE",
"4 36 CURVE SMOOTH",
"4 14 OFFCURVE",
"13.667 3 OFFCURVE",
"33 3 CURVE SMOOTH",
"40.333 3 OFFCURVE",
"49 5.333 OFFCURVE",
"59 10 CURVE SMOOTH",
"75.667 18.667 OFFCURVE",
"99 40.667 OFFCURVE",
"129 76 CURVE",
"127 68 OFFCURVE",
"126 60.333 OFFCURVE",
"126 53 CURVE SMOOTH",
"126 37 OFFCURVE",
"130.333 24 OFFCURVE",
"139 14 CURVE SMOOTH",
"147 5.333 OFFCURVE",
"155.333 0.667 OFFCURVE",
"164 0 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01236 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 36 117 36 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0124 1 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01220 24 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = u;
unicode = 0075;
},
{
glyphname = uacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 46, -144}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 24, -205}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016D;
},
{
glyphname = ucircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -49, -155}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udblgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 0, -206}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0215;
},
{
glyphname = udieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 45, -71}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = udotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -49, -459}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE5;
},
{
glyphname = ugrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, 5, -139}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{0.9, 0, 0, 0.9, 27, -209}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 61, -237}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 51, -175}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -67, -443}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 0, -190}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{0.9, 0, 0, 0.9, 36, -193}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -21, -216}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 38, -150}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0171;
},
{
glyphname = uinvertedbreve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 0, -209}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0217;
},
{
glyphname = umacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, -17, -183}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016B;
},
{
glyphname = uogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonek;
transform = "{1, 0, 0, 1, 20, 8}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0173;
},
{
glyphname = uring;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 40, -215}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016F;
},
{
glyphname = utilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -22, -215}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0169;
},
{
glyphname = v;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"85.667 -9.333 OFFCURVE",
"132.333 34 OFFCURVE",
"159 94 CURVE",
"168.333 66 OFFCURVE",
"196 44 OFFCURVE",
"228 44 CURVE SMOOTH",
"250.667 44 OFFCURVE",
"270.667 53.667 OFFCURVE",
"288 73 CURVE SMOOTH",
"291.333 77 OFFCURVE",
"292 80.667 OFFCURVE",
"290 84 CURVE SMOOTH",
"288.667 86.667 OFFCURVE",
"285.667 85.667 OFFCURVE",
"281 81 CURVE SMOOTH",
"264.333 63 OFFCURVE",
"247 54 OFFCURVE",
"229 54 CURVE SMOOTH",
"197 54 OFFCURVE",
"171.333 83.667 OFFCURVE",
"170 113 CURVE",
"189.333 129 OFFCURVE",
"201.333 147.333 OFFCURVE",
"206 168 CURVE SMOOTH",
"207.333 172 OFFCURVE",
"208 175.667 OFFCURVE",
"208 179 CURVE SMOOTH",
"208 193.667 OFFCURVE",
"202.333 201 OFFCURVE",
"191 201 CURVE SMOOTH",
"181 201 OFFCURVE",
"172 193.667 OFFCURVE",
"164 179 CURVE SMOOTH",
"155.333 161 OFFCURVE",
"152 137.333 OFFCURVE",
"154 108 CURVE",
"130 56 OFFCURVE",
"92.667 14 OFFCURVE",
"66 14 CURVE",
"59 15 LINE SMOOTH",
"53.667 16.333 OFFCURVE",
"51 22.333 OFFCURVE",
"51 33 CURVE SMOOTH",
"51 46.333 OFFCURVE",
"54.667 60.333 OFFCURVE",
"62 75 CURVE SMOOTH",
"63.333 78.333 OFFCURVE",
"71 91.333 OFFCURVE",
"85 114 CURVE SMOOTH",
"97 134 OFFCURVE",
"103 145.667 OFFCURVE",
"103 149 CURVE SMOOTH",
"103 155.667 OFFCURVE",
"99 159 OFFCURVE",
"91 159 CURVE SMOOTH",
"83.667 159 OFFCURVE",
"77.667 156 OFFCURVE",
"73 150 CURVE SMOOTH",
"53 123.333 OFFCURVE",
"30.333 98.667 OFFCURVE",
"5 76 CURVE SMOOTH",
"1 72 OFFCURVE",
"-1.333 68.667 OFFCURVE",
"-2 66 CURVE SMOOTH",
"-2 62.667 OFFCURVE",
"-0.333 61 OFFCURVE",
"3 61 CURVE SMOOTH",
"5 61 OFFCURVE",
"7 62.333 OFFCURVE",
"9 65 CURVE",
"33 87 LINE",
"39 93 LINE",
"30.333 76.333 OFFCURVE",
"26 59.333 OFFCURVE",
"26 42 CURVE SMOOTH",
"26 15.333 OFFCURVE",
"35.667 0 OFFCURVE",
"55 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 5 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 33 117 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01212 10 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01244 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 2 233 2 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0125 44 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01212 44 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46.667 -34 OFFCURVE",
"79.667 -10.667 OFFCURVE",
"101 20 CURVE SMOOTH",
"116.333 42 OFFCURVE",
"124.667 53.667 OFFCURVE",
"126 55 CURVE",
"125.333 49 OFFCURVE",
"125 43.333 OFFCURVE",
"125 38 CURVE SMOOTH",
"125 10.667 OFFCURVE",
"134.333 -3 OFFCURVE",
"153 -3 CURVE SMOOTH",
"177 -3 OFFCURVE",
"207.333 26 OFFCURVE",
"226 74 CURVE",
"237.333 56.667 OFFCURVE",
"252.667 48 OFFCURVE",
"272 48 CURVE SMOOTH",
"290 48 OFFCURVE",
"307.667 56.333 OFFCURVE",
"325 73 CURVE SMOOTH",
"329 76.333 OFFCURVE",
"330 79.667 OFFCURVE",
"328 83 CURVE SMOOTH",
"326.667 86.333 OFFCURVE",
"323.333 85.333 OFFCURVE",
"318 80 CURVE SMOOTH",
"304.667 64.667 OFFCURVE",
"291 57 OFFCURVE",
"277 57 CURVE SMOOTH",
"257 57 OFFCURVE",
"240.333 72.667 OFFCURVE",
"235 94 CURVE",
"247 106 OFFCURVE",
"254 122.667 OFFCURVE",
"256 144 CURVE SMOOTH",
"257.333 162.667 OFFCURVE",
"248.667 175 OFFCURVE",
"238 175 CURVE SMOOTH",
"222.667 175 OFFCURVE",
"214.333 161.333 OFFCURVE",
"213 134 CURVE SMOOTH",
"211 115.333 OFFCURVE",
"213.333 98.667 OFFCURVE",
"220 84 CURVE",
"205.333 45.333 OFFCURVE",
"179 16 OFFCURVE",
"163 16 CURVE SMOOTH",
"155 16 OFFCURVE",
"151 22 OFFCURVE",
"151 34 CURVE SMOOTH",
"151 42 OFFCURVE",
"153.333 52.667 OFFCURVE",
"158 66 CURVE SMOOTH",
"163.333 81.333 OFFCURVE",
"171.333 99 OFFCURVE",
"182 119 CURVE",
"182 127 OFFCURVE",
"176.667 131 OFFCURVE",
"166 131 CURVE SMOOTH",
"157.333 131 OFFCURVE",
"151.667 129 OFFCURVE",
"149 125 CURVE",
"133 91.667 OFFCURVE",
"115.667 56.667 OFFCURVE",
"93 26 CURVE SMOOTH",
"69.667 -3.333 OFFCURVE",
"49.333 -18 OFFCURVE",
"32 -18 CURVE SMOOTH",
"23.333 -18 OFFCURVE",
"19 -12.667 OFFCURVE",
"19 -2 CURVE SMOOTH",
"19 10.667 OFFCURVE",
"25 29.667 OFFCURVE",
"37 55 CURVE SMOOTH",
"57 97 OFFCURVE",
"76.667 127.333 OFFCURVE",
"96 146 CURVE",
"97.333 148 OFFCURVE",
"98 150 OFFCURVE",
"98 152 CURVE SMOOTH",
"98 158 OFFCURVE",
"94 161 OFFCURVE",
"86 161 CURVE SMOOTH",
"78 161 OFFCURVE",
"69.667 157 OFFCURVE",
"61 149 CURVE SMOOTH",
"49 138.333 OFFCURVE",
"37.333 124 OFFCURVE",
"26 106 CURVE SMOOTH",
"12.667 84.667 OFFCURVE",
"3.667 64.333 OFFCURVE",
"-1 45 CURVE SMOOTH",
"-4.333 31 OFFCURVE",
"-6 18.667 OFFCURVE",
"-6 8 CURVE SMOOTH",
"-6 -20 OFFCURVE",
"4 -34 OFFCURVE",
"24 -34 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 20 122 20 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01260 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01245 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01247 2 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01269 13 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01215 18 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 308;
}
);
note = w;
unicode = 0077;
},
{
glyphname = wacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 109, -154}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E83;
},
{
glyphname = wcircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -8, -162}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 0175;
},
{
glyphname = wdieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 86, -72}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E85;
},
{
glyphname = wgrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, 32, -142}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E81;
},
{
glyphname = x;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-59.667 -44 OFFCURVE",
"-58 -43 OFFCURVE",
"-56 -41 CURVE SMOOTH",
"-4 14 LINE SMOOTH",
"21.333 40.667 OFFCURVE",
"39.333 58.333 OFFCURVE",
"50 67 CURVE",
"50.667 53 OFFCURVE",
"52 41.333 OFFCURVE",
"54 32 CURVE SMOOTH",
"60 10 OFFCURVE",
"72.667 -1 OFFCURVE",
"92 -1 CURVE SMOOTH",
"110 -1 OFFCURVE",
"133 8.667 OFFCURVE",
"161 28 CURVE SMOOTH",
"182.333 42 OFFCURVE",
"200 56.667 OFFCURVE",
"214 72 CURVE SMOOTH",
"216.667 74.667 OFFCURVE",
"218 77.667 OFFCURVE",
"218 81 CURVE SMOOTH",
"218 83.667 OFFCURVE",
"217 85 OFFCURVE",
"215 85 CURVE SMOOTH",
"213 85 OFFCURVE",
"210 83 OFFCURVE",
"206 79 CURVE SMOOTH",
"164.667 35 OFFCURVE",
"132.333 13 OFFCURVE",
"109 13 CURVE SMOOTH",
"92.333 13 OFFCURVE",
"82.667 23.667 OFFCURVE",
"80 45 CURVE SMOOTH",
"77.333 64.333 OFFCURVE",
"75.667 78 OFFCURVE",
"75 86 CURVE",
"93.667 106 OFFCURVE",
"159.667 154.333 OFFCURVE",
"181 169 CURVE",
"188.333 178.333 OFFCURVE",
"189 183 OFFCURVE",
"183 183 CURVE SMOOTH",
"179.667 183 OFFCURVE",
"160.667 170 OFFCURVE",
"126 144 CURVE SMOOTH",
"76 106 LINE",
"77.333 117.333 OFFCURVE",
"77 128.333 OFFCURVE",
"75 139 CURVE SMOOTH",
"73 149.667 OFFCURVE",
"69.667 155 OFFCURVE",
"65 155 CURVE SMOOTH",
"58.333 155 OFFCURVE",
"28 132.667 OFFCURVE",
"28 126 CURVE SMOOTH",
"28 124.667 OFFCURVE",
"28.333 124 OFFCURVE",
"29 124 CURVE SMOOTH",
"31.667 124 OFFCURVE",
"36 126.333 OFFCURVE",
"42 131 CURVE SMOOTH",
"46 135 OFFCURVE",
"50.333 98.333 OFFCURVE",
"49 85 CURVE",
"36 71 LINE SMOOTH",
"-30.667 3 OFFCURVE",
"-64 -34.333 OFFCURVE",
"-64 -41 CURVE SMOOTH",
"-64 -43 OFFCURVE",
"-63 -44 OFFCURVE",
"-61 -44 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0124 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01220 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 234;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-166.667 -334 OFFCURVE",
"-124.333 -323.333 OFFCURVE",
"-81 -302 CURVE SMOOTH",
"-41 -282.667 OFFCURVE",
"-5.333 -257 OFFCURVE",
"26 -225 CURVE SMOOTH",
"82.667 -167.667 OFFCURVE",
"123.333 -92.667 OFFCURVE",
"148 0 CURVE",
"165.333 2.667 OFFCURVE",
"178.667 4 OFFCURVE",
"188 4 CURVE SMOOTH",
"215.333 4 OFFCURVE",
"229 -2.667 OFFCURVE",
"229 -16 CURVE SMOOTH",
"229 -22.667 OFFCURVE",
"224.667 -30.333 OFFCURVE",
"216 -39 CURVE SMOOTH",
"214.667 -40.333 OFFCURVE",
"214 -42 OFFCURVE",
"214 -44 CURVE SMOOTH",
"214 -46 OFFCURVE",
"215.333 -47 OFFCURVE",
"218 -47 CURVE SMOOTH",
"219.333 -47 OFFCURVE",
"221 -46 OFFCURVE",
"223 -44 CURVE SMOOTH",
"235 -32.667 OFFCURVE",
"241 -21.667 OFFCURVE",
"241 -11 CURVE SMOOTH",
"241 5.667 OFFCURVE",
"225.333 16 OFFCURVE",
"194 20 CURVE SMOOTH",
"182 22 OFFCURVE",
"168.333 21.667 OFFCURVE",
"153 19 CURVE",
"170.333 89.667 OFFCURVE",
"178.667 139.333 OFFCURVE",
"178 168 CURVE SMOOTH",
"178 174.667 OFFCURVE",
"173.333 178 OFFCURVE",
"164 178 CURVE SMOOTH",
"154.667 178 OFFCURVE",
"148.667 174.667 OFFCURVE",
"146 168 CURVE",
"112.667 104.667 OFFCURVE",
"86.667 64 OFFCURVE",
"68 46 CURVE SMOOTH",
"54 31.333 OFFCURVE",
"44 24 OFFCURVE",
"38 24 CURVE SMOOTH",
"32 24 OFFCURVE",
"29 28.667 OFFCURVE",
"29 38 CURVE SMOOTH",
"29 48 OFFCURVE",
"32 60.333 OFFCURVE",
"38 75 CURVE SMOOTH",
"55.333 112.333 OFFCURVE",
"68.667 138.667 OFFCURVE",
"78 154 CURVE",
"79 159 LINE SMOOTH",
"79 161.667 OFFCURVE",
"77.333 163 OFFCURVE",
"74 163 CURVE SMOOTH",
"66 163 OFFCURVE",
"50 154 OFFCURVE",
"46 146 CURVE SMOOTH",
"16 90.667 OFFCURVE",
"1 51.333 OFFCURVE",
"1 28 CURVE SMOOTH",
"1 10.667 OFFCURVE",
"7.667 2 OFFCURVE",
"21 2 CURVE SMOOTH",
"29 2 OFFCURVE",
"38 5.667 OFFCURVE",
"48 13 CURVE SMOOTH",
"80.667 37 OFFCURVE",
"111.667 77 OFFCURVE",
"141 133 CURVE",
"129.667 78.333 OFFCURVE",
"120.667 37.333 OFFCURVE",
"114 10 CURVE",
"-82 -40.667 OFFCURVE",
"-202 -93 OFFCURVE",
"-266 -161 CURVE SMOOTH",
"-294.667 -191.667 OFFCURVE",
"-309 -221.333 OFFCURVE",
"-309 -250 CURVE SMOOTH",
"-309 -299.333 OFFCURVE",
"-269.333 -334 OFFCURVE",
"-208 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-238.667 -318 OFFCURVE",
"-273 -292 OFFCURVE",
"-273 -248 CURVE SMOOTH",
"-273 -221.333 OFFCURVE",
"-261.333 -194.333 OFFCURVE",
"-238 -167 CURVE SMOOTH",
"-210.667 -135 OFFCURVE",
"-171.667 -107.667 OFFCURVE",
"-121 -85 CURVE SMOOTH",
"-85 -69 OFFCURVE",
"-42 -53.333 OFFCURVE",
"8 -38 CURVE SMOOTH",
"31.333 -30 OFFCURVE",
"65.667 -20 OFFCURVE",
"111 -8 CURVE",
"82.333 -108.667 OFFCURVE",
"36.333 -188 OFFCURVE",
"-27 -246 CURVE SMOOTH",
"-81 -294 OFFCURVE",
"-134.667 -318 OFFCURVE",
"-188 -318 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 61 122 61 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01245 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0120 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01211 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01233 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = y;
unicode = 0079;
},
{
glyphname = yacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 48, -131}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 00FD;
},
{
glyphname = ycircumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, -48, -154}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 0177;
},
{
glyphname = ydieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 49, -58}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = ydotbelow;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -91, -500}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, 0, -125}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 22, -224}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF7;
},
{
glyphname = ymacron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, -28, -204}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 0233;
},
{
glyphname = ytilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -23, -169}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF9;
},
{
glyphname = z;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-7.333 -307 OFFCURVE",
"61.333 -275.667 OFFCURVE",
"118 -213 CURVE SMOOTH",
"172.667 -153.667 OFFCURVE",
"203.333 -82.667 OFFCURVE",
"210 0 CURVE",
"227.333 2.667 OFFCURVE",
"241 4 OFFCURVE",
"251 4 CURVE SMOOTH",
"277.667 4 OFFCURVE",
"291 -2.667 OFFCURVE",
"291 -16 CURVE SMOOTH",
"291 -22.667 OFFCURVE",
"287 -30.333 OFFCURVE",
"279 -39 CURVE",
"277 -40.333 OFFCURVE",
"276 -42 OFFCURVE",
"276 -44 CURVE SMOOTH",
"276 -46 OFFCURVE",
"277 -47 OFFCURVE",
"279 -47 CURVE SMOOTH",
"281 -47 OFFCURVE",
"282.667 -46 OFFCURVE",
"284 -44 CURVE",
"296.667 -32.667 OFFCURVE",
"303 -21.667 OFFCURVE",
"303 -11 CURVE SMOOTH",
"303 5.667 OFFCURVE",
"287.667 16 OFFCURVE",
"257 20 CURVE SMOOTH",
"248.333 20.667 OFFCURVE",
"233 19.667 OFFCURVE",
"211 17 CURVE",
"209.667 42.333 OFFCURVE",
"200.333 61.667 OFFCURVE",
"183 75 CURVE SMOOTH",
"171.667 84.333 OFFCURVE",
"160.333 88.667 OFFCURVE",
"149 88 CURVE",
"181 114 LINE SMOOTH",
"201 130.667 OFFCURVE",
"211 148.333 OFFCURVE",
"211 167 CURVE SMOOTH",
"211 189.667 OFFCURVE",
"193 208 OFFCURVE",
"165 208 CURVE SMOOTH",
"139 208 OFFCURVE",
"112.333 194 OFFCURVE",
"85 166 CURVE SMOOTH",
"47.667 124.667 OFFCURVE",
"21 94.667 OFFCURVE",
"5 76 CURVE SMOOTH",
"-0.333 70.667 OFFCURVE",
"-3 66.667 OFFCURVE",
"-3 64 CURVE SMOOTH",
"-3 62.667 OFFCURVE",
"-1.667 62 OFFCURVE",
"1 62 CURVE SMOOTH",
"6.333 62 OFFCURVE",
"22 75.667 OFFCURVE",
"48 103 CURVE SMOOTH",
"96 154 LINE",
"117.333 173.333 OFFCURVE",
"137.333 183 OFFCURVE",
"156 183 CURVE SMOOTH",
"175.333 183 OFFCURVE",
"185 174.667 OFFCURVE",
"185 158 CURVE SMOOTH",
"185 145.333 OFFCURVE",
"178 132.333 OFFCURVE",
"164 119 CURVE SMOOTH",
"154 109.667 OFFCURVE",
"140 100.333 OFFCURVE",
"122 91 CURVE",
"83.333 85 OFFCURVE",
"64 74.333 OFFCURVE",
"64 59 CURVE SMOOTH",
"64 51 OFFCURVE",
"73.333 45.333 OFFCURVE",
"84 48 CURVE SMOOTH",
"100.667 53.333 OFFCURVE",
"113.667 58.333 OFFCURVE",
"123 63 CURVE",
"127 63.667 OFFCURVE",
"131.333 64 OFFCURVE",
"136 64 CURVE SMOOTH",
"150 64 OFFCURVE",
"160.333 57.667 OFFCURVE",
"167 45 CURVE SMOOTH",
"171.667 35 OFFCURVE",
"174 23 OFFCURVE",
"174 9 CURVE",
"86.667 -12.333 OFFCURVE",
"11 -36.667 OFFCURVE",
"-53 -64 CURVE SMOOTH",
"-105 -87.333 OFFCURVE",
"-144.333 -113.667 OFFCURVE",
"-171 -143 CURVE SMOOTH",
"-193 -169 OFFCURVE",
"-204 -195.667 OFFCURVE",
"-204 -223 CURVE SMOOTH",
"-204 -249.667 OFFCURVE",
"-193 -270.333 OFFCURVE",
"-171 -285 CURVE SMOOTH",
"-149.667 -299.667 OFFCURVE",
"-122 -307 OFFCURVE",
"-88 -307 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"-128.667 -291 OFFCURVE",
"-170 -262.667 OFFCURVE",
"-170 -216 CURVE SMOOTH",
"-170 -165.333 OFFCURVE",
"-128.667 -120.333 OFFCURVE",
"-46 -81 CURVE SMOOTH",
"-9.333 -63 OFFCURVE",
"23.667 -49.333 OFFCURVE",
"53 -40 CURVE SMOOTH",
"71 -34 OFFCURVE",
"111.333 -23 OFFCURVE",
"174 -7 CURVE",
"171.333 -81.667 OFFCURVE",
"148.667 -146.333 OFFCURVE",
"106 -201 CURVE SMOOTH",
"60 -261 OFFCURVE",
"1.333 -291 OFFCURVE",
"-70 -291 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01282 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01262 37 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 26 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 37 234 37 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01243 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01266 37 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 82 117 82 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01285 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 298;
}
);
note = z;
unicode = 007A;
},
{
glyphname = zacute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 88, -148}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017A;
},
{
glyphname = zcaron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, -12, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017E;
},
{
glyphname = zdotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 90, -172}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = f;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 154;
}
);
leftMetricsKey = f;
rightMetricsKey = f;
},
{
glyphname = f_f_i;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = f;
},
{
name = i;
transform = "{1, 0, 0, 1, 123, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 294;
}
);
leftMetricsKey = f;
},
{
glyphname = f_f_l;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = f;
},
{
name = l;
transform = "{1, 0, 0, 1, 139, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 300;
}
);
leftMetricsKey = f;
rightMetricsKey = l;
},
{
glyphname = fi;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160.333 -196.667 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98.333 -151.333 OFFCURVE",
"-71.667 -119.667 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"133.667 151.667 OFFCURVE",
"174.667 152.333 OFFCURVE",
"196 153 CURVE",
"179.333 125 OFFCURVE",
"170.333 100.667 OFFCURVE",
"169 80 CURVE SMOOTH",
"165 27.333 OFFCURVE",
"182.333 0.667 OFFCURVE",
"221 0 CURVE SMOOTH",
"254.333 -1.333 OFFCURVE",
"294.667 23 OFFCURVE",
"342 73 CURVE SMOOTH",
"344 75.667 OFFCURVE",
"345 78.333 OFFCURVE",
"345 81 CURVE SMOOTH",
"345 83.667 OFFCURVE",
"344 85.333 OFFCURVE",
"342 86 CURVE",
"339.333 86 OFFCURVE",
"336 83.667 OFFCURVE",
"332 79 CURVE SMOOTH",
"292.667 37 OFFCURVE",
"259.667 16 OFFCURVE",
"233 16 CURVE SMOOTH",
"213 16 OFFCURVE",
"203 29.667 OFFCURVE",
"203 57 CURVE SMOOTH",
"203 63.667 OFFCURVE",
"203.667 70.667 OFFCURVE",
"205 78 CURVE SMOOTH",
"207 89.333 OFFCURVE",
"212.333 103.667 OFFCURVE",
"221 121 CURVE SMOOTH",
"246 164 LINE SMOOTH",
"247.333 166 OFFCURVE",
"248 167.667 OFFCURVE",
"248 169 CURVE SMOOTH",
"248 175 OFFCURVE",
"243 178 OFFCURVE",
"233 178 CURVE SMOOTH",
"225 178 OFFCURVE",
"218.333 176.333 OFFCURVE",
"213 173 CURVE",
"90 174 LINE",
"166 241.333 OFFCURVE",
"215.333 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245.333 358.667 OFFCURVE",
"249 373.667 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418.333 OFFCURVE",
"239.667 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163.333 391.667 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98.333 279 OFFCURVE",
"78.667 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-4 173 OFFCURVE",
"-8.667 170 OFFCURVE",
"-8 164 CURVE SMOOTH",
"-6.667 156.667 OFFCURVE",
"0.667 152.667 OFFCURVE",
"14 152 CURVE SMOOTH",
"41 153 LINE",
"8.333 83 OFFCURVE",
"-29.667 11.333 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-97.667 -103.333 OFFCURVE",
"-125.333 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187.333 -184.667 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283.333 -190.667 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167.333 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304.333 -109.333 OFFCURVE",
"-295 -100 CURVE SMOOTH",
"-293 -97.333 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90.333 OFFCURVE",
"-293.333 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90.333 OFFCURVE",
"-302 -93 CURVE SMOOTH",
"-315.333 -106.333 OFFCURVE",
"-322 -122.333 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -159.667 OFFCURVE",
"-315.333 -175.333 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287.333 -202 OFFCURVE",
"-267.667 -209 OFFCURVE",
"-243 -209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121.667 248 OFFCURVE",
"154 307.667 OFFCURVE",
"184 361 CURVE SMOOTH",
"202.667 393 OFFCURVE",
"216.333 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 385.667 OFFCURVE",
"227 371.333 OFFCURVE",
"219 354 CURVE SMOOTH",
"193.667 298.667 OFFCURVE",
"149.667 241.333 OFFCURVE",
"87 182 CURVE"
);
},
{
closed = 1;
nodes = (
"306.667 250 OFFCURVE",
"316 260.333 OFFCURVE",
"316 281 CURVE SMOOTH",
"316 294.333 OFFCURVE",
"308.333 301 OFFCURVE",
"293 301 CURVE SMOOTH",
"287 301 OFFCURVE",
"281 298.667 OFFCURVE",
"275 294 CURVE SMOOTH",
"267.667 288.667 OFFCURVE",
"264 282 OFFCURVE",
"264 274 CURVE SMOOTH",
"264 262 OFFCURVE",
"276 250 OFFCURVE",
"288 250 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 6 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 8 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 7 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 8 96 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 4 122 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 4 71 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01238 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 96 122 96 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01232 1 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012100 93 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 4 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 2 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 324;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160.333 -196.667 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98.333 -151.333 OFFCURVE",
"-71.667 -119.667 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"127 151.667 OFFCURVE",
"163.667 152.333 OFFCURVE",
"183 153 CURVE",
"181.667 147 OFFCURVE",
"180 141.333 OFFCURVE",
"178 136 CURVE SMOOTH",
"168.667 101.333 OFFCURVE",
"164 74.667 OFFCURVE",
"164 56 CURVE SMOOTH",
"164 19.333 OFFCURVE",
"179.667 0.667 OFFCURVE",
"211 0 CURVE SMOOTH",
"244.333 -1.333 OFFCURVE",
"284.667 23 OFFCURVE",
"332 73 CURVE SMOOTH",
"334.667 75.667 OFFCURVE",
"336 78.333 OFFCURVE",
"336 81 CURVE SMOOTH",
"336 83.667 OFFCURVE",
"334.667 85.333 OFFCURVE",
"332 86 CURVE SMOOTH",
"329.333 86 OFFCURVE",
"326 83.667 OFFCURVE",
"322 79 CURVE SMOOTH",
"300.667 56.333 OFFCURVE",
"281 39.667 OFFCURVE",
"263 29 CURVE SMOOTH",
"217 3 OFFCURVE",
"194 11.333 OFFCURVE",
"194 54 CURVE SMOOTH",
"194 88.667 OFFCURVE",
"203.667 123.667 OFFCURVE",
"223 159 CURVE",
"315 237.667 OFFCURVE",
"370.667 307 OFFCURVE",
"390 367 CURVE SMOOTH",
"394 378.333 OFFCURVE",
"396 388.667 OFFCURVE",
"396 398 CURVE SMOOTH",
"396 420 OFFCURVE",
"386.667 430.667 OFFCURVE",
"368 430 CURVE SMOOTH",
"335.333 428.667 OFFCURVE",
"296.333 386 OFFCURVE",
"251 302 CURVE SMOOTH",
"224.333 253.333 OFFCURVE",
"204 210.333 OFFCURVE",
"190 173 CURVE",
"90 174 LINE",
"166 241.333 OFFCURVE",
"215.333 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245.333 358.667 OFFCURVE",
"249 373.667 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418.333 OFFCURVE",
"239.667 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163.333 391.667 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98.333 279 OFFCURVE",
"78.667 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-4 173 OFFCURVE",
"-8.667 170 OFFCURVE",
"-8 164 CURVE SMOOTH",
"-6.667 156.667 OFFCURVE",
"0.667 152.667 OFFCURVE",
"14 152 CURVE SMOOTH",
"41 153 LINE",
"8.333 83 OFFCURVE",
"-29.667 11.333 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-97.667 -103.333 OFFCURVE",
"-125.333 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187.333 -184.667 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283.333 -190.667 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167.333 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304.333 -109.333 OFFCURVE",
"-295 -100 CURVE SMOOTH",
"-293 -97.333 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90.333 OFFCURVE",
"-293.333 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90.333 OFFCURVE",
"-302 -93 CURVE SMOOTH",
"-315.333 -106.333 OFFCURVE",
"-322 -122.333 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -159.667 OFFCURVE",
"-315.333 -175.333 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287.333 -202 OFFCURVE",
"-267.667 -209 OFFCURVE",
"-243 -209 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121.667 248 OFFCURVE",
"154 307.667 OFFCURVE",
"184 361 CURVE SMOOTH",
"202.667 393 OFFCURVE",
"216.333 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 385.667 OFFCURVE",
"227 371.333 OFFCURVE",
"219 354 CURVE SMOOTH",
"193.667 298.667 OFFCURVE",
"149.667 241.333 OFFCURVE",
"87 182 CURVE"
);
},
{
closed = 1;
nodes = (
"259 248.333 OFFCURVE",
"291.333 314.667 OFFCURVE",
"328 378 CURVE SMOOTH",
"342 402.667 OFFCURVE",
"354.667 415 OFFCURVE",
"366 415 CURVE SMOOTH",
"373.333 415 OFFCURVE",
"377 409.667 OFFCURVE",
"377 399 CURVE SMOOTH",
"377 391.667 OFFCURVE",
"374.667 381.667 OFFCURVE",
"370 369 CURVE SMOOTH",
"358.667 340.333 OFFCURVE",
"338.333 306.667 OFFCURVE",
"309 268 CURVE SMOOTH",
"283.667 235.333 OFFCURVE",
"257.667 205.667 OFFCURVE",
"231 179 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 6 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 7 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 85 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 30 122 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01234 30 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01266 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01291 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01260 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 4 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 314;
}
);
note = fl;
unicode = FB02;
},
{
glyphname = ordfeminine;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"43.667 264 OFFCURVE",
"63.333 279.667 OFFCURVE",
"78 301 CURVE",
"80 278.333 OFFCURVE",
"88.333 266 OFFCURVE",
"103 264 CURVE SMOOTH",
"119.667 262.667 OFFCURVE",
"140.333 274.667 OFFCURVE",
"165 300 CURVE SMOOTH",
"167 302 OFFCURVE",
"167.333 304 OFFCURVE",
"166 306 CURVE SMOOTH",
"165.333 308 OFFCURVE",
"163.667 307.333 OFFCURVE",
"161 304 CURVE SMOOTH",
"141.667 283.333 OFFCURVE",
"125.667 273 OFFCURVE",
"113 273 CURVE SMOOTH",
"100.333 273 OFFCURVE",
"94 281 OFFCURVE",
"94 297 CURVE SMOOTH",
"94 309.667 OFFCURVE",
"98 323 OFFCURVE",
"106 337 CURVE",
"106 337.667 OFFCURVE",
"107.167 338.333 OFFCURVE",
"109.5 339 CURVE SMOOTH",
"111.833 339.667 OFFCURVE",
"113 340.667 OFFCURVE",
"113 342 CURVE SMOOTH",
"113 349.333 OFFCURVE",
"107.333 353 OFFCURVE",
"96 353 CURVE SMOOTH",
"90 353 OFFCURVE",
"83.333 351.333 OFFCURVE",
"76 348 CURVE SMOOTH",
"58.667 340 OFFCURVE",
"43.333 325.667 OFFCURVE",
"30 305 CURVE SMOOTH",
"24 295.667 OFFCURVE",
"21 287 OFFCURVE",
"21 279 CURVE SMOOTH",
"21 269 OFFCURVE",
"25 264 OFFCURVE",
"33 264 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"39 279 OFFCURVE",
"37 282 OFFCURVE",
"37 288 CURVE SMOOTH",
"37 292.667 OFFCURVE",
"39 298.333 OFFCURVE",
"43 305 CURVE SMOOTH",
"55 329.667 OFFCURVE",
"69.667 341.667 OFFCURVE",
"87 341 CURVE",
"83 333.667 OFFCURVE",
"80.333 324.667 OFFCURVE",
"79 314 CURVE",
"75.667 304.667 OFFCURVE",
"68.667 295.333 OFFCURVE",
"58 286 CURVE SMOOTH",
"52 281.333 OFFCURVE",
"47 279 OFFCURVE",
"43 279 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01222 9 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 22 229 22 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0124 9 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 9 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 234;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = ordmasculine;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
transform = "{0.85433, 0, 0, 0.85433, 40, 272}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0123 7 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0121 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0127 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0121 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = pi;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"124.333 -9 OFFCURVE",
"127.667 -8.667 OFFCURVE",
"131 -8 CURVE SMOOTH",
"137.667 -6 OFFCURVE",
"146.667 2.667 OFFCURVE",
"158 18 CURVE SMOOTH",
"169.333 32 OFFCURVE",
"175 42.333 OFFCURVE",
"175 49 CURVE",
"174 50 LINE",
"172.667 50 OFFCURVE",
"171.333 48.667 OFFCURVE",
"170 46 CURVE SMOOTH",
"158 24 OFFCURVE",
"149 10.667 OFFCURVE",
"143 6 CURVE SMOOTH",
"136.333 0 OFFCURVE",
"130 -3 OFFCURVE",
"124 -3 CURVE SMOOTH",
"116.667 -3 OFFCURVE",
"113 5 OFFCURVE",
"113 21 CURVE SMOOTH",
"113 34.333 OFFCURVE",
"115 49 OFFCURVE",
"119 65 CURVE SMOOTH",
"131 108 LINE",
"149 106.667 OFFCURVE",
"164.333 111.667 OFFCURVE",
"177 123 CURVE SMOOTH",
"180.333 126.333 OFFCURVE",
"182 129.333 OFFCURVE",
"182 132 CURVE SMOOTH",
"182 133.333 OFFCURVE",
"181.333 134 OFFCURVE",
"180 134 CURVE",
"165.333 124.667 OFFCURVE",
"153.333 120 OFFCURVE",
"144 120 CURVE SMOOTH",
"135.333 120 OFFCURVE",
"122 123 OFFCURVE",
"104 129 CURVE SMOOTH",
"86.667 134.333 OFFCURVE",
"72.333 137 OFFCURVE",
"63 137 CURVE SMOOTH",
"45 137 OFFCURVE",
"27.667 129 OFFCURVE",
"11 113 CURVE SMOOTH",
"8.333 110.333 OFFCURVE",
"7 107.333 OFFCURVE",
"7 104 CURVE SMOOTH",
"7 103.333 OFFCURVE",
"7.667 103 OFFCURVE",
"9 103 CURVE",
"12 104 LINE",
"24.667 115.333 OFFCURVE",
"40 121 OFFCURVE",
"58 121 CURVE SMOOTH",
"59 121 LINE",
"59 83.667 OFFCURVE",
"57 54 OFFCURVE",
"53 34 CURVE",
"52.333 33.333 OFFCURVE",
"51.667 31.833 OFFCURVE",
"51 29.5 CURVE SMOOTH",
"48 20 LINE SMOOTH",
"45.333 12.667 OFFCURVE",
"44 8 OFFCURVE",
"44 6 CURVE SMOOTH",
"44 5.333 OFFCURVE",
"45.333 4.667 OFFCURVE",
"48 4 CURVE SMOOTH",
"48.667 4 OFFCURVE",
"49.667 4.667 OFFCURVE",
"51 6 CURVE",
"65.667 34.667 OFFCURVE",
"73.333 72.333 OFFCURVE",
"74 119 CURVE",
"92 115.667 OFFCURVE",
"105.333 112.667 OFFCURVE",
"114 110 CURVE",
"105.333 85.333 OFFCURVE",
"101 55.333 OFFCURVE",
"101 20 CURVE SMOOTH",
"101 0.667 OFFCURVE",
"107.667 -9 OFFCURVE",
"121 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0127 6 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 23 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 2 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"195 -28.667 OFFCURVE",
"243.333 -17.333 OFFCURVE",
"296 6 CURVE SMOOTH",
"348 29.333 OFFCURVE",
"393 58.667 OFFCURVE",
"431 94 CURVE SMOOTH",
"481.667 140.667 OFFCURVE",
"513 199.667 OFFCURVE",
"513 249 CURVE SMOOTH",
"513 278.333 OFFCURVE",
"502.333 301.333 OFFCURVE",
"481 318 CURVE SMOOTH",
"457.667 336 OFFCURVE",
"423.667 344.333 OFFCURVE",
"379 343 CURVE SMOOTH",
"332.333 341 OFFCURVE",
"283 326 OFFCURVE",
"231 298 CURVE SMOOTH",
"195.667 278 OFFCURVE",
"176.667 262.333 OFFCURVE",
"174 251 CURVE SMOOTH",
"172 244.333 OFFCURVE",
"174.667 241 OFFCURVE",
"182 241 CURVE SMOOTH",
"184.667 241 OFFCURVE",
"186.667 242 OFFCURVE",
"188 244 CURVE",
"244 292 OFFCURVE",
"306.333 319 OFFCURVE",
"375 325 CURVE SMOOTH",
"445.667 331 OFFCURVE",
"481 309 OFFCURVE",
"481 259 CURVE SMOOTH",
"481 212.333 OFFCURVE",
"445.333 149 OFFCURVE",
"396 105 CURVE SMOOTH",
"358.667 71 OFFCURVE",
"319.333 44 OFFCURVE",
"278 24 CURVE SMOOTH",
"233.333 2 OFFCURVE",
"191 -9 OFFCURVE",
"151 -9 CURVE SMOOTH",
"111.667 -9 OFFCURVE",
"81.667 0.333 OFFCURVE",
"61 19 CURVE SMOOTH",
"43 35.667 OFFCURVE",
"34 58.667 OFFCURVE",
"34 88 CURVE SMOOTH",
"34 148 OFFCURVE",
"74 224 OFFCURVE",
"134 276 CURVE SMOOTH",
"162 301.333 OFFCURVE",
"199.333 322.333 OFFCURVE",
"246 339 CURVE SMOOTH",
"288 354.333 OFFCURVE",
"330.667 364 OFFCURVE",
"374 368 CURVE SMOOTH",
"381.333 368 OFFCURVE",
"385 370.333 OFFCURVE",
"385 375 CURVE SMOOTH",
"385 379 OFFCURVE",
"381.833 381.333 OFFCURVE",
"375.5 382 CURVE SMOOTH",
"369.167 382.667 OFFCURVE",
"362.333 383 OFFCURVE",
"355 383 CURVE SMOOTH",
"315.667 383 OFFCURVE",
"268.333 371.667 OFFCURVE",
"213 349 CURVE SMOOTH",
"161.667 328.333 OFFCURVE",
"121.667 305.667 OFFCURVE",
"93 281 CURVE SMOOTH",
"50.333 245.667 OFFCURVE",
"22.333 201.667 OFFCURVE",
"9 149 CURVE SMOOTH",
"5 133.667 OFFCURVE",
"3 119 OFFCURVE",
"3 105 CURVE SMOOTH",
"3 26.333 OFFCURVE",
"64.333 -25.333 OFFCURVE",
"151 -28 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01227 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 27 117 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 38 122 38 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01254 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01231 3 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 3 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"51.333 -6 OFFCURVE",
"55.667 -4 OFFCURVE",
"57 0 CURVE SMOOTH",
"83 63.333 OFFCURVE",
"117 133.667 OFFCURVE",
"159 211 CURVE SMOOTH",
"196.333 277.667 OFFCURVE",
"228 328.667 OFFCURVE",
"254 364 CURVE",
"254 367 LINE SMOOTH",
"254 376.333 OFFCURVE",
"242.333 388 OFFCURVE",
"229 388 CURVE SMOOTH",
"227 388 OFFCURVE",
"225 387.333 OFFCURVE",
"223 386 CURVE",
"170.333 335.333 OFFCURVE",
"132 298 OFFCURVE",
"108 274 CURVE SMOOTH",
"100 267.333 OFFCURVE",
"96 262 OFFCURVE",
"96 258 CURVE SMOOTH",
"96 255.333 OFFCURVE",
"97 254 OFFCURVE",
"99 254 CURVE SMOOTH",
"101.667 254 OFFCURVE",
"105.333 255.667 OFFCURVE",
"110 259 CURVE SMOOTH",
"116 265 OFFCURVE",
"127 274 OFFCURVE",
"143 286 CURVE SMOOTH",
"157 296.667 OFFCURVE",
"165.333 302.667 OFFCURVE",
"168 304 CURVE",
"151.333 260 OFFCURVE",
"130.333 210.667 OFFCURVE",
"105 156 CURVE SMOOTH",
"82.333 107.333 OFFCURVE",
"59.333 58.667 OFFCURVE",
"36 10 CURVE SMOOTH",
"34.667 7.333 OFFCURVE",
"34 5 OFFCURVE",
"34 3 CURVE SMOOTH",
"34 -3 OFFCURVE",
"37.333 -6 OFFCURVE",
"44 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 229;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"281.333 -25.667 OFFCURVE",
"288.333 -15.333 OFFCURVE",
"289 0 CURVE SMOOTH",
"291 34 OFFCURVE",
"233 51 OFFCURVE",
"115 51 CURVE",
"122.333 59 OFFCURVE",
"150.667 79 OFFCURVE",
"200 111 CURVE SMOOTH",
"226 127.667 OFFCURVE",
"252.333 144 OFFCURVE",
"279 160 CURVE SMOOTH",
"313 182 OFFCURVE",
"339 203.333 OFFCURVE",
"357 224 CURVE SMOOTH",
"381.667 251.333 OFFCURVE",
"394 280.333 OFFCURVE",
"394 311 CURVE SMOOTH",
"394 352.333 OFFCURVE",
"367.333 382 OFFCURVE",
"322 382 CURVE SMOOTH",
"303.333 382 OFFCURVE",
"282.333 377 OFFCURVE",
"259 367 CURVE SMOOTH",
"229 353.667 OFFCURVE",
"202.667 336 OFFCURVE",
"180 314 CURVE SMOOTH",
"155.333 290 OFFCURVE",
"140.333 265 OFFCURVE",
"135 239 CURVE SMOOTH",
"134 234 LINE SMOOTH",
"134 230.667 OFFCURVE",
"135 229 OFFCURVE",
"137 229 CURVE SMOOTH",
"141 229 OFFCURVE",
"143.667 232 OFFCURVE",
"145 238 CURVE SMOOTH",
"152.333 260.667 OFFCURVE",
"168.333 282.667 OFFCURVE",
"193 304 CURVE SMOOTH",
"214.333 323.333 OFFCURVE",
"239 338.667 OFFCURVE",
"267 350 CURVE SMOOTH",
"291.667 360.667 OFFCURVE",
"312.333 366 OFFCURVE",
"329 366 CURVE SMOOTH",
"358.333 366 OFFCURVE",
"373 353.333 OFFCURVE",
"373 328 CURVE SMOOTH",
"373 304.667 OFFCURVE",
"360 276.667 OFFCURVE",
"334 244 CURVE SMOOTH",
"302 203.333 OFFCURVE",
"253.333 161.333 OFFCURVE",
"188 118 CURVE SMOOTH",
"130 80 OFFCURVE",
"81.667 54.333 OFFCURVE",
"43 41 CURVE",
"17.667 41 OFFCURVE",
"-9 17.333 OFFCURVE",
"-9 0 CURVE SMOOTH",
"-9 -6.667 OFFCURVE",
"-4.667 -10 OFFCURVE",
"4 -10 CURVE SMOOTH",
"10 -10 OFFCURVE",
"17.333 -8.333 OFFCURVE",
"26 -5 CURVE SMOOTH",
"94.667 20.333 OFFCURVE",
"147 33.333 OFFCURVE",
"183 34 CURVE SMOOTH",
"223 35.333 OFFCURVE",
"282 17.667 OFFCURVE",
"282 -1 CURVE SMOOTH",
"282 -7.667 OFFCURVE",
"276 -13.667 OFFCURVE",
"264 -19 CURVE SMOOTH",
"260 -21 OFFCURVE",
"258 -23.333 OFFCURVE",
"258 -26 CURVE SMOOTH",
"258 -30 OFFCURVE",
"262.667 -33.667 OFFCURVE",
"268 -31 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01248 7 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01245 2 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 3 10 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 354;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"138.667 -53 OFFCURVE",
"208 -31 OFFCURVE",
"252 1 CURVE SMOOTH",
"288 26.333 OFFCURVE",
"306 54 OFFCURVE",
"306 84 CURVE SMOOTH",
"306 125.333 OFFCURVE",
"264.667 156.333 OFFCURVE",
"198 155 CURVE",
"200 155.667 OFFCURVE",
"211.667 157.667 OFFCURVE",
"233 161 CURVE SMOOTH",
"248.333 163 OFFCURVE",
"260.667 165.667 OFFCURVE",
"270 169 CURVE SMOOTH",
"315.333 183.667 OFFCURVE",
"349.667 202 OFFCURVE",
"373 224 CURVE SMOOTH",
"395 244 OFFCURVE",
"406 265.333 OFFCURVE",
"406 288 CURVE SMOOTH",
"406 338.667 OFFCURVE",
"348.333 378 OFFCURVE",
"263 378 CURVE SMOOTH",
"221 378 OFFCURVE",
"180.333 369.333 OFFCURVE",
"141 352 CURVE SMOOTH",
"91.667 330.667 OFFCURVE",
"66 302.333 OFFCURVE",
"64 267 CURVE SMOOTH",
"63.333 259.667 OFFCURVE",
"65 256 OFFCURVE",
"69 256 CURVE SMOOTH",
"75 256 OFFCURVE",
"78.333 259.333 OFFCURVE",
"79 266 CURVE SMOOTH",
"83 312.667 OFFCURVE",
"145 353.333 OFFCURVE",
"221 364 CURVE SMOOTH",
"265.667 370 OFFCURVE",
"303 364.333 OFFCURVE",
"333 347 CURVE SMOOTH",
"360.333 331 OFFCURVE",
"374 309.667 OFFCURVE",
"374 283 CURVE SMOOTH",
"374 262.333 OFFCURVE",
"364.667 243.333 OFFCURVE",
"346 226 CURVE SMOOTH",
"325.333 206 OFFCURVE",
"295.333 191 OFFCURVE",
"256 181 CURVE SMOOTH",
"211.333 169 OFFCURVE",
"169 163.667 OFFCURVE",
"129 165 CURVE SMOOTH",
"115 165.667 OFFCURVE",
"108 162 OFFCURVE",
"108 154 CURVE SMOOTH",
"108 148.667 OFFCURVE",
"113.333 146 OFFCURVE",
"124 146 CURVE SMOOTH",
"160 148 OFFCURVE",
"193 143.667 OFFCURVE",
"223 133 CURVE SMOOTH",
"257 120.333 OFFCURVE",
"274 103.667 OFFCURVE",
"274 83 CURVE SMOOTH",
"274 65 OFFCURVE",
"260.667 45 OFFCURVE",
"234 23 CURVE SMOOTH",
"194 -9 OFFCURVE",
"128.667 -32 OFFCURVE",
"78 -32 CURVE SMOOTH",
"48.667 -32 OFFCURVE",
"28.667 -25 OFFCURVE",
"18 -11 CURVE SMOOTH",
"12.667 -5 OFFCURVE",
"10 2.333 OFFCURVE",
"10 11 CURVE SMOOTH",
"10 33.046 OFFCURVE",
"51 49.514 OFFCURVE",
"51 58 CURVE SMOOTH",
"51 60.667 OFFCURVE",
"47.667 61.667 OFFCURVE",
"41 61 CURVE SMOOTH",
"10.333 56.333 OFFCURVE",
"-5 40 OFFCURVE",
"-5 12 CURVE SMOOTH",
"-5 2.667 OFFCURVE",
"-3 -6.667 OFFCURVE",
"1 -16 CURVE SMOOTH",
"11 -40.667 OFFCURVE",
"38.667 -53 OFFCURVE",
"84 -53 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01235 6 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 8 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 8 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 27 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 44 122 44 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 58 122 58 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01239 4 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 3 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 48 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 354;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"134 -27 OFFCURVE",
"138.333 -19.667 OFFCURVE",
"143 -11 CURVE SMOOTH",
"166 39 LINE SMOOTH",
"193.333 95 OFFCURVE",
"212.333 133 OFFCURVE",
"223 153 CURVE",
"233 153.5 LINE",
"240 154 LINE SMOOTH",
"242.667 154 OFFCURVE",
"252.333 152.667 OFFCURVE",
"269 150 CURVE SMOOTH",
"285 148 LINE",
"290 146 LINE",
"292 146 OFFCURVE",
"293 147 OFFCURVE",
"293 149 CURVE SMOOTH",
"293 146 LINE",
"298.333 146 OFFCURVE",
"301 149 OFFCURVE",
"301 155 CURVE SMOOTH",
"301 161 OFFCURVE",
"293.333 165.667 OFFCURVE",
"278 169 CURVE SMOOTH",
"245 175 LINE",
"238 178 LINE",
"238 188.667 OFFCURVE",
"334.667 341 OFFCURVE",
"348 353 CURVE",
"348 366 LINE SMOOTH",
"348 390.667 OFFCURVE",
"341.667 403 OFFCURVE",
"329 403 CURVE",
"299 365 OFFCURVE",
"257.333 326 OFFCURVE",
"204 286 CURVE SMOOTH",
"64 188 LINE",
"33 168 LINE SMOOTH",
"17 156.667 OFFCURVE",
"9 148.667 OFFCURVE",
"9 144 CURVE SMOOTH",
"9 134.667 OFFCURVE",
"13.667 130 OFFCURVE",
"23 130 CURVE",
"73 146.667 OFFCURVE",
"126.667 155 OFFCURVE",
"184 155 CURVE SMOOTH",
"188 155 OFFCURVE",
"191 154.667 OFFCURVE",
"193 154 CURVE",
"151 64 LINE SMOOTH",
"129.667 18.667 OFFCURVE",
"119 -8.667 OFFCURVE",
"119 -18 CURVE SMOOTH",
"119 -28 OFFCURVE",
"122.667 -33 OFFCURVE",
"130 -33 CURVE"
);
},
{
closed = 1;
nodes = (
"203.333 180.667 OFFCURVE",
"201.333 181 OFFCURVE",
"198 181 CURVE SMOOTH",
"182.5 182 LINE SMOOTH",
"172.167 182.667 OFFCURVE",
"161 183 OFFCURVE",
"149 183 CURVE SMOOTH",
"96 183 LINE",
"113.333 197 OFFCURVE",
"141.333 218 OFFCURVE",
"180 246 CURVE SMOOTH",
"218.667 274 OFFCURVE",
"254.667 302 OFFCURVE",
"288 330 CURVE",
"240 230 OFFCURVE",
"212 180 OFFCURVE",
"204 180 CURVE"
);
}
);
width = 345;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"150.667 -25 OFFCURVE",
"198 -1.333 OFFCURVE",
"242 46 CURVE SMOOTH",
"283.333 90.667 OFFCURVE",
"304 135 OFFCURVE",
"304 179 CURVE SMOOTH",
"304 231.667 OFFCURVE",
"272.333 258 OFFCURVE",
"209 258 CURVE SMOOTH",
"188.333 258 OFFCURVE",
"163 253 OFFCURVE",
"133 243 CURVE",
"149 274.333 OFFCURVE",
"163 296.667 OFFCURVE",
"175 310 CURVE",
"175 312 OFFCURVE",
"177 313 OFFCURVE",
"181 313 CURVE SMOOTH",
"186 314 LINE",
"191 314 LINE",
"211.667 322.667 OFFCURVE",
"242.333 329 OFFCURVE",
"283 333 CURVE SMOOTH",
"299.667 335 OFFCURVE",
"330.667 337 OFFCURVE",
"376 339 CURVE",
"376 353 LINE",
"362.667 355.667 OFFCURVE",
"348 357 OFFCURVE",
"332 357 CURVE SMOOTH",
"316 357 OFFCURVE",
"291.833 355 OFFCURVE",
"259.5 351 CURVE SMOOTH",
"227.167 347 OFFCURVE",
"203.667 345 OFFCURVE",
"189 345 CURVE SMOOTH",
"188.333 345 OFFCURVE",
"183.833 345.167 OFFCURVE",
"175.5 345.5 CURVE SMOOTH",
"161 346 LINE SMOOTH",
"157.667 346 OFFCURVE",
"151.667 342.333 OFFCURVE",
"143 335 CURVE SMOOTH",
"131.667 325.667 OFFCURVE",
"125.333 320.667 OFFCURVE",
"124 320 CURVE",
"124 308 OFFCURVE",
"131.333 306.667 OFFCURVE",
"138 304 CURVE",
"133.333 290 OFFCURVE",
"121.667 268 OFFCURVE",
"103 238 CURVE",
"95 228 OFFCURVE",
"87.333 217.333 OFFCURVE",
"80 206 CURVE SMOOTH",
"73 195 LINE",
"69 189 LINE",
"67.667 185.667 OFFCURVE",
"67 183 OFFCURVE",
"67 181 CURVE SMOOTH",
"67 171.667 OFFCURVE",
"72.667 167 OFFCURVE",
"84 167 CURVE SMOOTH",
"88 167 OFFCURVE",
"91.333 168 OFFCURVE",
"94 170 CURVE",
"94.667 170 OFFCURVE",
"96 171.333 OFFCURVE",
"98 174 CURVE SMOOTH",
"138 214 OFFCURVE",
"171.667 234 OFFCURVE",
"199 234 CURVE SMOOTH",
"247 234 OFFCURVE",
"266 219 OFFCURVE",
"266 171 CURVE SMOOTH",
"266 121.667 OFFCURVE",
"217.333 46 OFFCURVE",
"168 18 CURVE SMOOTH",
"144.667 4 OFFCURVE",
"120.667 -3 OFFCURVE",
"96 -3 CURVE SMOOTH",
"48 -3 OFFCURVE",
"24 21.333 OFFCURVE",
"24 70 CURVE SMOOTH",
"24 76 OFFCURVE",
"25.667 83.5 OFFCURVE",
"29 92.5 CURVE SMOOTH",
"32.333 101.5 OFFCURVE",
"34 106.667 OFFCURVE",
"34 108 CURVE SMOOTH",
"34 114.667 OFFCURVE",
"31 118 OFFCURVE",
"25 118 CURVE SMOOTH",
"18.333 118 OFFCURVE",
"1 73 OFFCURVE",
"1 65 CURVE SMOOTH",
"1 37.667 OFFCURVE",
"11.667 15.333 OFFCURVE",
"33 -2 CURVE SMOOTH",
"53 -17.333 OFFCURVE",
"75.333 -25 OFFCURVE",
"100 -25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01230 5 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 22 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 30 117 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 37 122 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01232 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 4 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 40 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 344;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"180 -30 OFFCURVE",
"284 63 OFFCURVE",
"284 143 CURVE SMOOTH",
"284 193.667 OFFCURVE",
"249.333 236 OFFCURVE",
"196 236 CURVE SMOOTH",
"184 236 OFFCURVE",
"167.333 230 OFFCURVE",
"146 218 CURVE SMOOTH",
"122.667 204.667 OFFCURVE",
"111 193.333 OFFCURVE",
"111 184 CURVE SMOOTH",
"111 181.333 OFFCURVE",
"112 179.333 OFFCURVE",
"114 178 CURVE",
"115 176 LINE",
"117.667 176 OFFCURVE",
"123 178.333 OFFCURVE",
"131 183 CURVE",
"159 203.667 OFFCURVE",
"182.333 214 OFFCURVE",
"201 214 CURVE SMOOTH",
"233 214 OFFCURVE",
"249 195 OFFCURVE",
"249 157 CURVE SMOOTH",
"249 143 OFFCURVE",
"247 129 OFFCURVE",
"243 115 CURVE SMOOTH",
"231.667 82.333 OFFCURVE",
"213.667 53.667 OFFCURVE",
"189 29 CURVE SMOOTH",
"161.667 3 OFFCURVE",
"134 -10 OFFCURVE",
"106 -10 CURVE SMOOTH",
"86 -10 OFFCURVE",
"71 -1.333 OFFCURVE",
"61 16 CURVE SMOOTH",
"52.333 30 OFFCURVE",
"48 48.333 OFFCURVE",
"48 71 CURVE SMOOTH",
"48 79 OFFCURVE",
"48.667 87 OFFCURVE",
"50 95 CURVE SMOOTH",
"58.667 149 OFFCURVE",
"86.333 204.333 OFFCURVE",
"133 261 CURVE SMOOTH",
"173 309.667 OFFCURVE",
"219.667 352 OFFCURVE",
"273 388 CURVE SMOOTH",
"280.333 393.333 OFFCURVE",
"284.667 398.333 OFFCURVE",
"286 403 CURVE",
"288.667 407.667 OFFCURVE",
"287.667 410 OFFCURVE",
"283 410 CURVE SMOOTH",
"279.667 410 OFFCURVE",
"276.333 409.333 OFFCURVE",
"273 408 CURVE SMOOTH",
"219.667 387.333 OFFCURVE",
"164.333 342.667 OFFCURVE",
"107 274 CURVE SMOOTH",
"47 201.333 OFFCURVE",
"17 138 OFFCURVE",
"17 84 CURVE SMOOTH",
"17 54 OFFCURVE",
"23.333 28.667 OFFCURVE",
"36 8 CURVE SMOOTH",
"51.333 -17.333 OFFCURVE",
"72.667 -30 OFFCURVE",
"100 -30 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01234 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 4 20 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 308;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"42.333 -23 OFFCURVE",
"43.5 -22.667 OFFCURVE",
"44.5 -22 CURVE SMOOTH",
"46 -21 LINE",
"50 -21 LINE",
"56 15.667 OFFCURVE",
"71 52 OFFCURVE",
"95 88 CURVE SMOOTH",
"113 114.667 OFFCURVE",
"140 146.667 OFFCURVE",
"176 184 CURVE SMOOTH",
"256 266 LINE SMOOTH",
"294.667 308 OFFCURVE",
"313 334.667 OFFCURVE",
"311 346 CURVE SMOOTH",
"309 356.667 OFFCURVE",
"300.667 365.667 OFFCURVE",
"286 373 CURVE SMOOTH",
"274.667 379.667 OFFCURVE",
"264.333 383 OFFCURVE",
"255 383 CURVE SMOOTH",
"207 383 OFFCURVE",
"148.333 370 OFFCURVE",
"79 344 CURVE SMOOTH",
"60.333 337.333 OFFCURVE",
"49 318 OFFCURVE",
"49 302 CURVE SMOOTH",
"49 291.333 OFFCURVE",
"53 286 OFFCURVE",
"61 286 CURVE SMOOTH",
"67.667 286 OFFCURVE",
"73.667 288.667 OFFCURVE",
"79 294 CURVE SMOOTH",
"98 309 LINE",
"111.333 317 OFFCURVE",
"131.333 326.333 OFFCURVE",
"158 337 CURVE SMOOTH",
"180 345.667 OFFCURVE",
"195.667 351.333 OFFCURVE",
"205 354 CURVE SMOOTH",
"225.667 358.667 OFFCURVE",
"242 361 OFFCURVE",
"254 361 CURVE SMOOTH",
"265.333 361 OFFCURVE",
"271 358.667 OFFCURVE",
"271 354 CURVE SMOOTH",
"271 342.667 OFFCURVE",
"245.667 308 OFFCURVE",
"195 250 CURVE SMOOTH",
"120.333 165.333 OFFCURVE",
"75 112 OFFCURVE",
"59 90 CURVE SMOOTH",
"34 56 LINE SMOOTH",
"25.333 42.667 OFFCURVE",
"21 30 OFFCURVE",
"21 18 CURVE SMOOTH",
"21 14.667 OFFCURVE",
"21.667 11.333 OFFCURVE",
"23 8 CURVE SMOOTH",
"29 -8 LINE SMOOTH",
"33.667 -18 OFFCURVE",
"37.667 -23 OFFCURVE",
"41 -23 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01245 4 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"112.667 -19 OFFCURVE",
"188 55.333 OFFCURVE",
"188 138 CURVE SMOOTH",
"188 158 OFFCURVE",
"180.333 182 OFFCURVE",
"165 210 CURVE",
"163 216 LINE",
"161 218 LINE",
"166.333 226 OFFCURVE",
"290 314.667 OFFCURVE",
"306 320 CURVE",
"318 299.333 OFFCURVE",
"325.667 287.5 OFFCURVE",
"329 284.5 CURVE SMOOTH",
"332.333 281.5 OFFCURVE",
"335.667 280 OFFCURVE",
"339 280 CURVE SMOOTH",
"345 280 OFFCURVE",
"347.333 286 OFFCURVE",
"346 298 CURVE SMOOTH",
"344.667 307.333 OFFCURVE",
"340.667 320 OFFCURVE",
"334 336 CURVE",
"354 348 OFFCURVE",
"379.667 364.333 OFFCURVE",
"411 385 CURVE SMOOTH",
"416.333 388.333 OFFCURVE",
"419 391.667 OFFCURVE",
"419 395 CURVE SMOOTH",
"419 399 OFFCURVE",
"416 400.333 OFFCURVE",
"410 399 CURVE SMOOTH",
"398.667 395 OFFCURVE",
"370 380.667 OFFCURVE",
"324 356 CURVE",
"307.333 379.333 OFFCURVE",
"279 391 OFFCURVE",
"239 391 CURVE SMOOTH",
"204.333 391 OFFCURVE",
"174.333 382 OFFCURVE",
"149 364 CURVE SMOOTH",
"120.333 344 OFFCURVE",
"106 317 OFFCURVE",
"106 283 CURVE SMOOTH",
"106 263 OFFCURVE",
"111 241.667 OFFCURVE",
"121 219 CURVE",
"87.667 192.333 OFFCURVE",
"63.667 172.333 OFFCURVE",
"49 159 CURVE SMOOTH",
"2.333 115.667 OFFCURVE",
"-21 77.667 OFFCURVE",
"-21 45 CURVE SMOOTH",
"-21 13 OFFCURVE",
"-0.667 -13.667 OFFCURVE",
"34 -15 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"23.667 3 OFFCURVE",
"13 14.667 OFFCURVE",
"13 38 CURVE SMOOTH",
"13 58 OFFCURVE",
"26.667 85.667 OFFCURVE",
"54 121 CURVE SMOOTH",
"80 154.333 OFFCURVE",
"105.333 179 OFFCURVE",
"130 195 CURVE",
"139.333 179 OFFCURVE",
"156 132 OFFCURVE",
"156 124 CURVE SMOOTH",
"156 92 OFFCURVE",
"142.667 63.333 OFFCURVE",
"116 38 CURVE SMOOTH",
"92 14.667 OFFCURVE",
"68.333 3 OFFCURVE",
"45 3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"148.333 249.333 OFFCURVE",
"145.333 256 OFFCURVE",
"144 260 CURVE SMOOTH",
"138.667 272.667 OFFCURVE",
"136 284.667 OFFCURVE",
"136 296 CURVE SMOOTH",
"136 325.333 OFFCURVE",
"154.333 348.333 OFFCURVE",
"191 365 CURVE SMOOTH",
"201 369.667 OFFCURVE",
"214.667 372 OFFCURVE",
"232 372 CURVE SMOOTH",
"264.667 372 OFFCURVE",
"286 361.333 OFFCURVE",
"296 340 CURVE",
"254 312.667 OFFCURVE",
"206.333 279.333 OFFCURVE",
"153 240 CURVE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01259 8 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 8 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 52 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 16 117 16 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 46 117 46 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 59 117 59 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01261 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 4 42 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 323;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"134.333 -51 OFFCURVE",
"138 -47.667 OFFCURVE",
"140 -41 CURVE SMOOTH",
"144 -25 LINE SMOOTH",
"151.333 17 OFFCURVE",
"185 85.333 OFFCURVE",
"245 180 CURVE SMOOTH",
"278.333 232.667 OFFCURVE",
"295 260.333 OFFCURVE",
"295 263 CURVE SMOOTH",
"295 269.667 OFFCURVE",
"280.333 285 OFFCURVE",
"271 285 CURVE SMOOTH",
"269 285 OFFCURVE",
"267 284.333 OFFCURVE",
"265 283 CURVE",
"231 244 LINE SMOOTH",
"216.333 228.667 OFFCURVE",
"204 217 OFFCURVE",
"194 209 CURVE SMOOTH",
"179.333 197.667 OFFCURVE",
"161.667 187 OFFCURVE",
"141 177 CURVE SMOOTH",
"116.333 165 OFFCURVE",
"96.667 159 OFFCURVE",
"82 159 CURVE SMOOTH",
"62.667 159 OFFCURVE",
"53 169.667 OFFCURVE",
"53 191 CURVE SMOOTH",
"53 267 OFFCURVE",
"180 388 OFFCURVE",
"256 388 CURVE SMOOTH",
"286 388 OFFCURVE",
"301 376.333 OFFCURVE",
"301 353 CURVE SMOOTH",
"301 345.667 OFFCURVE",
"299.333 336.667 OFFCURVE",
"296 326 CURVE SMOOTH",
"291 309 LINE",
"291 305.667 OFFCURVE",
"292 304 OFFCURVE",
"294 304 CURVE",
"295 301 LINE",
"295 303 LINE",
"299 300 LINE",
"308.333 304 OFFCURVE",
"321 330.333 OFFCURVE",
"321 353 CURVE SMOOTH",
"321 387.667 OFFCURVE",
"299 405 OFFCURVE",
"255 405 CURVE SMOOTH",
"212.333 405 OFFCURVE",
"163.667 383 OFFCURVE",
"109 339 CURVE SMOOTH",
"52.333 294.333 OFFCURVE",
"22.667 251.333 OFFCURVE",
"20 210 CURVE SMOOTH",
"16.667 162 OFFCURVE",
"33.667 138 OFFCURVE",
"71 138 CURVE SMOOTH",
"91 138 OFFCURVE",
"115.333 145 OFFCURVE",
"144 159 CURVE SMOOTH",
"167.333 170.333 OFFCURVE",
"189 183.667 OFFCURVE",
"209 199 CURVE",
"152.333 87.667 OFFCURVE",
"123 8 OFFCURVE",
"121 -40 CURVE SMOOTH",
"121 -47.333 OFFCURVE",
"123.667 -51 OFFCURVE",
"129 -51 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01214 8 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 7 9 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 14 117 14 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01241 47 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01251 3 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 4 45 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 319;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = zero.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = zero;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 513;
}
);
},
{
glyphname = one.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = one;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 229;
}
);
},
{
glyphname = two.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = two;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
},
{
glyphname = three.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = three;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
},
{
glyphname = four.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = four;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 345;
}
);
},
{
glyphname = five.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = five;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 344;
}
);
},
{
glyphname = six.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = six;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
},
{
glyphname = seven.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = seven;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 310;
}
);
},
{
glyphname = eight.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = eight;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 323;
}
);
},
{
glyphname = nine.lf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = nine;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 319;
}
);
},
{
glyphname = onesuperior;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = one;
transform = "{0.7, 0, 0, 0.7, 0, 144}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 212;
}
);
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = two;
transform = "{0.7, 0, 0, 0.7, 36, 169}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = three;
transform = "{0.7, 0, 0, 0.7, 29, 174}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 362;
}
);
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = four;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 345;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 2074;
},
{
glyphname = fraction;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-4.333 -36 OFFCURVE",
"-0.667 -34.333 OFFCURVE",
"4 -31 CURVE SMOOTH",
"46.667 -1.667 OFFCURVE",
"103.333 57.333 OFFCURVE",
"174 148 CURVE SMOOTH",
"235.546 225.958 OFFCURVE",
"320.314 334.859 OFFCURVE",
"361 379.5 CURVE SMOOTH",
"409 432.167 OFFCURVE",
"447.333 461 OFFCURVE",
"482 465 CURVE SMOOTH",
"486.667 465.667 OFFCURVE",
"491.667 464.333 OFFCURVE",
"497 461 CURVE SMOOTH",
"502.333 457.667 OFFCURVE",
"506.333 456 OFFCURVE",
"509 456 CURVE SMOOTH",
"511.667 456 OFFCURVE",
"513 457.667 OFFCURVE",
"513 461 CURVE SMOOTH",
"513 466.333 OFFCURVE",
"510 470.667 OFFCURVE",
"504 474 CURVE SMOOTH",
"493.333 480 OFFCURVE",
"481.333 483 OFFCURVE",
"468 483 CURVE SMOOTH",
"422.667 483 OFFCURVE",
"379.167 449.833 OFFCURVE",
"338.5 406.5 CURVE SMOOTH",
"303.729 369.449 OFFCURVE",
"256.041 303.335 OFFCURVE",
"227 265 CURVE SMOOTH",
"203 235.667 OFFCURVE",
"179.333 200.333 OFFCURVE",
"154 163 CURVE SMOOTH",
"106.667 93.667 OFFCURVE",
"53.333 31.667 OFFCURVE",
"-6 -23 CURVE SMOOTH",
"-9.333 -26.333 OFFCURVE",
"-11 -29.333 OFFCURVE",
"-11 -32 CURVE SMOOTH",
"-11 -34.667 OFFCURVE",
"-9.667 -36 OFFCURVE",
"-7 -36 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = two;
transform = "{0.7, 0, 0, 0.7, 180, 0}";
},
{
name = one;
transform = "{0.7, 0, 0, 0.7, -14, 162}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 26, 55}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 461;
}
);
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = one;
transform = "{0.7, 0, 0, 0.7, -14, 162}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 26, 55}";
},
{
name = four;
transform = "{0.7, 0, 0, 0.7, 156, -1}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 405;
}
);
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = three;
transform = "{0.7, 0, 0, 0.7, 7, 174}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 139, 55}";
},
{
name = four;
transform = "{0.7, 0, 0, 0.7, 269, -1}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 518;
}
);
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 -19 OFFCURVE",
"118 -7 OFFCURVE",
"118 9 CURVE SMOOTH",
"118 25 OFFCURVE",
"104 38 OFFCURVE",
"88 38 CURVE SMOOTH",
"70.667 38 OFFCURVE",
"58 25 OFFCURVE",
"58 9 CURVE SMOOTH",
"58 -7 OFFCURVE",
"70.667 -19 OFFCURVE",
"88 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 0 117 0 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"21 -97 OFFCURVE",
"28 -94 OFFCURVE",
"38 -88 CURVE SMOOTH",
"58 -75.333 OFFCURVE",
"77.333 -56.333 OFFCURVE",
"96 -31 CURVE SMOOTH",
"113.333 -6.333 OFFCURVE",
"121.333 11.667 OFFCURVE",
"120 23 CURVE SMOOTH",
"118 39.667 OFFCURVE",
"110 48.333 OFFCURVE",
"96 49 CURVE SMOOTH",
"72 49 OFFCURVE",
"58 32.667 OFFCURVE",
"58 18 CURVE SMOOTH",
"58 2 OFFCURVE",
"63.333 -7 OFFCURVE",
"74 -9 CURVE",
"54 -40.333 OFFCURVE",
"38 -62.333 OFFCURVE",
"26 -75 CURVE SMOOTH",
"18 -83.667 OFFCURVE",
"14 -90 OFFCURVE",
"14 -94 CURVE SMOOTH",
"14 -96 OFFCURVE",
"15 -97 OFFCURVE",
"17 -97 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"167.333 110 OFFCURVE",
"180 123 OFFCURVE",
"180 139 CURVE SMOOTH",
"180 155 OFFCURVE",
"167.333 168 OFFCURVE",
"150 168 CURVE SMOOTH",
"134 168 OFFCURVE",
"120 155 OFFCURVE",
"120 139 CURVE SMOOTH",
"120 123 OFFCURVE",
"134 110 OFFCURVE",
"150 110 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 -4 OFFCURVE",
"123 9 OFFCURVE",
"123 25 CURVE SMOOTH",
"123 41 OFFCURVE",
"109 54 OFFCURVE",
"93 54 CURVE SMOOTH",
"75.667 54 OFFCURVE",
"63 41 OFFCURVE",
"63 25 CURVE SMOOTH",
"63 9 OFFCURVE",
"75.667 -4 OFFCURVE",
"93 -4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01221 15 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"21 -97 OFFCURVE",
"28 -94 OFFCURVE",
"38 -88 CURVE SMOOTH",
"58 -75.333 OFFCURVE",
"77.333 -56.333 OFFCURVE",
"96 -31 CURVE SMOOTH",
"113.333 -6.333 OFFCURVE",
"121.333 11.667 OFFCURVE",
"120 23 CURVE SMOOTH",
"118 39.667 OFFCURVE",
"110 48.333 OFFCURVE",
"96 49 CURVE SMOOTH",
"72 49 OFFCURVE",
"58 32.667 OFFCURVE",
"58 18 CURVE SMOOTH",
"58 2 OFFCURVE",
"63.333 -7 OFFCURVE",
"74 -9 CURVE",
"54 -40.333 OFFCURVE",
"38 -62.333 OFFCURVE",
"26 -75 CURVE SMOOTH",
"18 -83.667 OFFCURVE",
"14 -90 OFFCURVE",
"14 -94 CURVE SMOOTH",
"14 -96 OFFCURVE",
"15 -97 OFFCURVE",
"17 -97 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189 130 OFFCURVE",
"203 143 OFFCURVE",
"203 159 CURVE SMOOTH",
"203 173.667 OFFCURVE",
"189 186 OFFCURVE",
"173 186 CURVE SMOOTH",
"155.667 186 OFFCURVE",
"143 173.667 OFFCURVE",
"143 159 CURVE SMOOTH",
"143 143 OFFCURVE",
"155.667 130 OFFCURVE",
"173 130 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"49.667 -9 OFFCURVE",
"62.333 2.333 OFFCURVE",
"65 17 CURVE SMOOTH",
"67.667 31.667 OFFCURVE",
"57.333 43 OFFCURVE",
"44 43 CURVE SMOOTH",
"29.333 43 OFFCURVE",
"15.333 31.667 OFFCURVE",
"14 17 CURVE SMOOTH",
"11.333 2.333 OFFCURVE",
"20.333 -9 OFFCURVE",
"35 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"170.667 -9 OFFCURVE",
"183.333 2.333 OFFCURVE",
"186 17 CURVE SMOOTH",
"188.667 31.667 OFFCURVE",
"179.667 43 OFFCURVE",
"165 43 CURVE SMOOTH",
"150.333 43 OFFCURVE",
"136.333 31.667 OFFCURVE",
"135 17 CURVE SMOOTH",
"132.333 2.333 OFFCURVE",
"142.667 -9 OFFCURVE",
"156 -9 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"299.667 -9 OFFCURVE",
"312.333 2.333 OFFCURVE",
"315 17 CURVE SMOOTH",
"317.667 31.667 OFFCURVE",
"307.333 43 OFFCURVE",
"294 43 CURVE SMOOTH",
"279.333 43 OFFCURVE",
"265.333 31.667 OFFCURVE",
"264 17 CURVE SMOOTH",
"261.333 2.333 OFFCURVE",
"270.333 -9 OFFCURVE",
"285 -9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"139.667 97 OFFCURVE",
"146 102.667 OFFCURVE",
"150 114 CURVE SMOOTH",
"170.667 169.333 OFFCURVE",
"242.333 291.667 OFFCURVE",
"365 481 CURVE SMOOTH",
"365.667 482.333 OFFCURVE",
"364.333 485.5 OFFCURVE",
"361 490.5 CURVE SMOOTH",
"357.667 495.5 OFFCURVE",
"353.333 499.667 OFFCURVE",
"348 503 CURVE SMOOTH",
"340 509 OFFCURVE",
"332.667 512 OFFCURVE",
"326 512 CURVE SMOOTH",
"324 512 OFFCURVE",
"322.333 511.333 OFFCURVE",
"321 510 CURVE",
"267.667 420.667 OFFCURVE",
"147.667 184.667 OFFCURVE",
"121 118 CURVE SMOOTH",
"119.667 114.667 OFFCURVE",
"119 111.667 OFFCURVE",
"119 109 CURVE SMOOTH",
"119 101 OFFCURVE",
"123 97 OFFCURVE",
"131 97 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"104 -19 OFFCURVE",
"118 -7 OFFCURVE",
"118 9 CURVE SMOOTH",
"118 25 OFFCURVE",
"104 38 OFFCURVE",
"88 38 CURVE SMOOTH",
"70.667 38 OFFCURVE",
"58 25 OFFCURVE",
"58 9 CURVE SMOOTH",
"58 -7 OFFCURVE",
"70.667 -19 OFFCURVE",
"88 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01218 8 24 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 18 117 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01227 21 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-44.667 -338 OFFCURVE",
"-42.333 -337 OFFCURVE",
"-41 -335 CURVE SMOOTH",
"12.333 -245.667 OFFCURVE",
"131.333 -9.333 OFFCURVE",
"158 56 CURVE",
"159 65 LINE SMOOTH",
"159 72.333 OFFCURVE",
"155.667 76 OFFCURVE",
"149 76 CURVE SMOOTH",
"140.333 76 OFFCURVE",
"134 70.667 OFFCURVE",
"130 60 CURVE SMOOTH",
"110.667 4 OFFCURVE",
"80.333 -57.333 OFFCURVE",
"39 -124 CURVE SMOOTH",
"-15 -205.333 OFFCURVE",
"-56.333 -266.667 OFFCURVE",
"-85 -308 CURVE",
"-86.333 -308.667 OFFCURVE",
"-85.167 -311.333 OFFCURVE",
"-81.5 -316 CURVE SMOOTH",
"-77.833 -320.667 OFFCURVE",
"-73.667 -325 OFFCURVE",
"-69 -329 CURVE SMOOTH",
"-60.333 -335 OFFCURVE",
"-53.333 -338 OFFCURVE",
"-48 -338 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"209 136 OFFCURVE",
"223 149 OFFCURVE",
"223 165 CURVE SMOOTH",
"223 181 OFFCURVE",
"209 194 OFFCURVE",
"193 194 CURVE SMOOTH",
"175.667 194 OFFCURVE",
"163 181 OFFCURVE",
"163 165 CURVE SMOOTH",
"163 149 OFFCURVE",
"175.667 136 OFFCURVE",
"193 136 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"119 103 OFFCURVE",
"123.667 106.667 OFFCURVE",
"125 114 CURVE SMOOTH",
"128 126 LINE",
"122.667 126 OFFCURVE",
"120 129 OFFCURVE",
"120 135 CURVE SMOOTH",
"120 136 LINE SMOOTH",
"120 157.333 OFFCURVE",
"133.333 180.667 OFFCURVE",
"160 206 CURVE SMOOTH",
"198.667 238.667 OFFCURVE",
"228.333 262.667 OFFCURVE",
"249 278 CURVE SMOOTH",
"290.333 308.667 OFFCURVE",
"320.333 334.333 OFFCURVE",
"339 355 CURVE SMOOTH",
"366.333 385.667 OFFCURVE",
"380 415.333 OFFCURVE",
"380 444 CURVE SMOOTH",
"380 463.333 OFFCURVE",
"371 479.333 OFFCURVE",
"353 492 CURVE SMOOTH",
"338.333 502.667 OFFCURVE",
"322.333 508 OFFCURVE",
"305 508 CURVE SMOOTH",
"257.667 508 OFFCURVE",
"206.333 489.667 OFFCURVE",
"151 453 CURVE SMOOTH",
"107 425 OFFCURVE",
"77 399.333 OFFCURVE",
"61 376 CURVE SMOOTH",
"56.333 369.333 OFFCURVE",
"54 363.667 OFFCURVE",
"54 359 CURVE SMOOTH",
"54 354.333 OFFCURVE",
"57 352 OFFCURVE",
"63 352 CURVE SMOOTH",
"68.333 352 OFFCURVE",
"72.333 354 OFFCURVE",
"75 358 CURVE SMOOTH",
"89.667 378.667 OFFCURVE",
"117.667 402.333 OFFCURVE",
"159 429 CURVE SMOOTH",
"212.333 463 OFFCURVE",
"263 480 OFFCURVE",
"311 480 CURVE SMOOTH",
"331 480 OFFCURVE",
"341 470.333 OFFCURVE",
"341 451 CURVE SMOOTH",
"341 432.333 OFFCURVE",
"328.667 409 OFFCURVE",
"304 381 CURVE",
"266 343.667 OFFCURVE",
"237.333 316.333 OFFCURVE",
"218 299 CURVE SMOOTH",
"175.333 261 OFFCURVE",
"146.333 232.667 OFFCURVE",
"131 214 CURVE SMOOTH",
"103.667 182 OFFCURVE",
"90 154 OFFCURVE",
"90 130 CURVE SMOOTH",
"90 124.667 OFFCURVE",
"91.333 119.333 OFFCURVE",
"94 114 CURVE SMOOTH",
"98.667 106.667 OFFCURVE",
"104.333 103 OFFCURVE",
"111 103 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"100 -19 OFFCURVE",
"114 -7 OFFCURVE",
"114 9 CURVE SMOOTH",
"114 25 OFFCURVE",
"100 38 OFFCURVE",
"84 38 CURVE SMOOTH",
"66.667 38 OFFCURVE",
"54 25 OFFCURVE",
"54 9 CURVE SMOOTH",
"54 -7 OFFCURVE",
"66.667 -19 OFFCURVE",
"84 -19 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01247 8 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 27 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 47 117 47 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 27 122 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01256 50 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 4 29 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"114.667 -334 OFFCURVE",
"165.667 -315.667 OFFCURVE",
"221 -279 CURVE SMOOTH",
"265.667 -251 OFFCURVE",
"295.667 -225.667 OFFCURVE",
"311 -203 CURVE SMOOTH",
"315.667 -196.333 OFFCURVE",
"318 -190.667 OFFCURVE",
"318 -186 CURVE SMOOTH",
"318 -180.667 OFFCURVE",
"315 -178 OFFCURVE",
"309 -178 CURVE SMOOTH",
"303.667 -178 OFFCURVE",
"299.333 -180 OFFCURVE",
"296 -184 CURVE SMOOTH",
"280.667 -206 OFFCURVE",
"253 -229.667 OFFCURVE",
"213 -255 CURVE SMOOTH",
"159.667 -289 OFFCURVE",
"108.667 -306 OFFCURVE",
"60 -306 CURVE SMOOTH",
"40 -306 OFFCURVE",
"30 -296.667 OFFCURVE",
"30 -278 CURVE SMOOTH",
"30 -260 OFFCURVE",
"43 -236.667 OFFCURVE",
"69 -208 CURVE SMOOTH",
"106.333 -170 OFFCURVE",
"135 -142.333 OFFCURVE",
"155 -125 CURVE SMOOTH",
"197 -87 OFFCURVE",
"226 -58.333 OFFCURVE",
"242 -39 CURVE SMOOTH",
"269.333 -7.667 OFFCURVE",
"283 20 OFFCURVE",
"283 44 CURVE SMOOTH",
"283 50 OFFCURVE",
"281.333 55.667 OFFCURVE",
"278 61 CURVE SMOOTH",
"274 69 OFFCURVE",
"268.333 73 OFFCURVE",
"261 73 CURVE SMOOTH",
"253.667 73 OFFCURVE",
"248.667 68.667 OFFCURVE",
"246 60 CURVE",
"246 56.667 OFFCURVE",
"245.333 52.667 OFFCURVE",
"244 48 CURVE",
"248.667 48 OFFCURVE",
"251 45.333 OFFCURVE",
"251 40 CURVE SMOOTH",
"251 38 LINE SMOOTH",
"251 16 OFFCURVE",
"238.333 -7.667 OFFCURVE",
"213 -33 CURVE",
"173.667 -65 OFFCURVE",
"143.667 -88.667 OFFCURVE",
"123 -104 CURVE SMOOTH",
"80.333 -135.333 OFFCURVE",
"50.333 -161 OFFCURVE",
"33 -181 CURVE SMOOTH",
"5 -211 OFFCURVE",
"-9 -240.333 OFFCURVE",
"-9 -269 CURVE SMOOTH",
"-9 -289 OFFCURVE",
"0.333 -305.333 OFFCURVE",
"19 -318 CURVE SMOOTH",
"34.333 -328.667 OFFCURVE",
"50.667 -334 OFFCURVE",
"68 -334 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"305 136 OFFCURVE",
"319 149 OFFCURVE",
"319 165 CURVE SMOOTH",
"319 181 OFFCURVE",
"305 194 OFFCURVE",
"289 194 CURVE SMOOTH",
"271.667 194 OFFCURVE",
"259 181 OFFCURVE",
"259 165 CURVE SMOOTH",
"259 149 OFFCURVE",
"271.667 136 OFFCURVE",
"289 136 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01247 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 8 29 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 29 122 29 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 29 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01257 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01231 20 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 47 117 47 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 3, 193}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 150;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"206.333 13 OFFCURVE",
"238.333 26.333 OFFCURVE",
"265 53 CURVE SMOOTH",
"291 79 OFFCURVE",
"304 110.667 OFFCURVE",
"304 148 CURVE SMOOTH",
"304 185.333 OFFCURVE",
"290.667 217.333 OFFCURVE",
"264 244 CURVE SMOOTH",
"238 270 OFFCURVE",
"206.333 283 OFFCURVE",
"169 283 CURVE SMOOTH",
"131.667 283 OFFCURVE",
"99.667 269.667 OFFCURVE",
"73 243 CURVE SMOOTH",
"47 217 OFFCURVE",
"34 185.333 OFFCURVE",
"34 148 CURVE SMOOTH",
"34 110.667 OFFCURVE",
"47.333 78.667 OFFCURVE",
"74 52 CURVE SMOOTH",
"100 26 OFFCURVE",
"131.667 13 OFFCURVE",
"169 13 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"176.667 132 OFFCURVE",
"184 141.667 OFFCURVE",
"184 151 CURVE SMOOTH",
"184 152.333 OFFCURVE",
"184 153.333 OFFCURVE",
"184 154 CURVE",
"151 220 LINE",
"233 223 LINE SMOOTH",
"247 223.667 OFFCURVE",
"254 228.333 OFFCURVE",
"254 237 CURVE SMOOTH",
"254 241 OFFCURVE",
"251 243 OFFCURVE",
"245 243 CURVE SMOOTH",
"160 243 LINE",
"213 301 LINE SMOOTH",
"219 307.667 OFFCURVE",
"222 314 OFFCURVE",
"222 320 CURVE SMOOTH",
"222 325.333 OFFCURVE",
"220.333 328 OFFCURVE",
"217 328 CURVE SMOOTH",
"214.333 328 OFFCURVE",
"211.667 326.333 OFFCURVE",
"209 323 CURVE SMOOTH",
"136 250 LINE",
"122.667 277.333 OFFCURVE",
"110.333 301.333 OFFCURVE",
"99 322 CURVE SMOOTH",
"95 330.667 OFFCURVE",
"89.667 335 OFFCURVE",
"83 335 CURVE SMOOTH",
"78.333 335 OFFCURVE",
"76 332.667 OFFCURVE",
"76 328 CURVE SMOOTH",
"76 326 OFFCURVE",
"76.667 323.667 OFFCURVE",
"78 321 CURVE SMOOTH",
"114 243 LINE",
"23 243 LINE SMOOTH",
"14.333 243 OFFCURVE",
"10 239.333 OFFCURVE",
"10 232 CURVE SMOOTH",
"10 224 OFFCURVE",
"16.333 215 OFFCURVE",
"23 215 CURVE SMOOTH",
"105 218 LINE",
"43 155 LINE SMOOTH",
"39 151 OFFCURVE",
"37 147.333 OFFCURVE",
"37 144 CURVE SMOOTH",
"37 136.667 OFFCURVE",
"42.333 133 OFFCURVE",
"53 133 CURVE SMOOTH",
"56.333 133 OFFCURVE",
"59 133.667 OFFCURVE",
"61 135 CURVE",
"129 209 LINE",
"147 167 LINE SMOOTH",
"157.667 143.667 OFFCURVE",
"165.333 132 OFFCURVE",
"170 132 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0125 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01225 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01241 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01249 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"61 0 LINE",
"148 143 LINE",
"234 143 LINE",
"149 0 LINE",
"182 0 LINE",
"269 143 LINE",
"369 143 LINE",
"388 173 LINE",
"287 173 LINE",
"339 261 LINE",
"432 261 LINE",
"449 291 LINE",
"357 291 LINE",
"444 435 LINE",
"410 435 LINE",
"323 291 LINE",
"236 291 LINE",
"323 435 LINE",
"289 435 LINE",
"203 291 LINE",
"96 291 LINE",
"78 261 LINE",
"184 261 LINE",
"132 173 LINE",
"34 173 LINE",
"16 143 LINE",
"114 143 LINE",
"28 0 LINE"
);
},
{
closed = 1;
nodes = (
"218 261 LINE",
"305 261 LINE",
"253 173 LINE",
"165 173 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01211 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0124 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 1 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01214 7 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 7 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 466;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"19.667 -25 OFFCURVE",
"23.333 -23.667 OFFCURVE",
"28 -21 CURVE SMOOTH",
"70.667 8.333 OFFCURVE",
"127.333 68.333 OFFCURVE",
"198 159 CURVE SMOOTH",
"259.546 236.958 OFFCURVE",
"344.314 345.859 OFFCURVE",
"385 390.5 CURVE SMOOTH",
"433 443.167 OFFCURVE",
"470 472 OFFCURVE",
"506 476 CURVE SMOOTH",
"510.667 476 OFFCURVE",
"515.667 474.5 OFFCURVE",
"521 471.5 CURVE SMOOTH",
"526.333 468.5 OFFCURVE",
"530.333 467 OFFCURVE",
"533 467 CURVE SMOOTH",
"535.667 467 OFFCURVE",
"537 468.333 OFFCURVE",
"537 471 CURVE SMOOTH",
"537 476.333 OFFCURVE",
"534 480.667 OFFCURVE",
"528 484 CURVE SMOOTH",
"516.667 490.667 OFFCURVE",
"504.667 494 OFFCURVE",
"492 494 CURVE SMOOTH",
"446.667 494 OFFCURVE",
"403.167 461 OFFCURVE",
"362.5 417 CURVE SMOOTH",
"327.713 379.361 OFFCURVE",
"279.417 312.374 OFFCURVE",
"251 276 CURVE SMOOTH",
"227 245.333 OFFCURVE",
"203.333 211.333 OFFCURVE",
"178 174 CURVE SMOOTH",
"130 104 OFFCURVE",
"76.667 42 OFFCURVE",
"18 -12 CURVE SMOOTH",
"14.667 -15.333 OFFCURVE",
"13 -18.333 OFFCURVE",
"13 -21 CURVE SMOOTH",
"13 -23.667 OFFCURVE",
"14.333 -25 OFFCURVE",
"17 -25 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"537 -21 LINE",
"536.333 -19 OFFCURVE",
"534.333 -16 OFFCURVE",
"531 -12 CURVE SMOOTH",
"488.333 32 OFFCURVE",
"443 86.333 OFFCURVE",
"395 151 CURVE SMOOTH",
"271 321 LINE SMOOTH",
"185 436.333 OFFCURVE",
"114 494 OFFCURVE",
"58 494 CURVE SMOOTH",
"33.333 494 OFFCURVE",
"18.333 486.333 OFFCURVE",
"13 471 CURVE",
"17 467 LINE",
"18.333 467 OFFCURVE",
"22.667 468.667 OFFCURVE",
"30 472 CURVE SMOOTH",
"35.333 474.667 OFFCURVE",
"39.667 476 OFFCURVE",
"43 476 CURVE SMOOTH",
"75 476 OFFCURVE",
"125.667 435 OFFCURVE",
"195 353 CURVE SMOOTH",
"257 275.667 OFFCURVE",
"318.667 198 OFFCURVE",
"380 120 CURVE SMOOTH",
"450.667 32.667 OFFCURVE",
"501.667 -15.667 OFFCURVE",
"533 -25 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 3 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = periodcentered;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 150;
}
);
},
{
glyphname = parenleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"94 -84 OFFCURVE",
"97 -80.667 OFFCURVE",
"97 -74 CURVE SMOOTH",
"97 -70.667 OFFCURVE",
"95.667 -67 OFFCURVE",
"93 -63 CURVE SMOOTH",
"80.333 -46.333 OFFCURVE",
"74 7.667 OFFCURVE",
"74 99 CURVE SMOOTH",
"74 183.667 OFFCURVE",
"107 270 OFFCURVE",
"173 358 CURVE SMOOTH",
"235 441.333 OFFCURVE",
"304.333 498.667 OFFCURVE",
"381 530 CURVE",
"381 542 OFFCURVE",
"376 548 OFFCURVE",
"366 548 CURVE SMOOTH",
"356 548 OFFCURVE",
"338.667 540.333 OFFCURVE",
"314 525 CURVE SMOOTH",
"230.667 473.667 OFFCURVE",
"167.333 418.667 OFFCURVE",
"124 360 CURVE SMOOTH",
"66.667 282 OFFCURVE",
"38 191.667 OFFCURVE",
"38 89 CURVE SMOOTH",
"38 65 OFFCURVE",
"40.667 35.667 OFFCURVE",
"46 1 CURVE SMOOTH",
"53.333 -40.333 OFFCURVE",
"61.667 -65.667 OFFCURVE",
"71 -75 CURVE SMOOTH",
"77 -81 OFFCURVE",
"82.667 -84 OFFCURVE",
"88 -84 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0124 8 16 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 4 117 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 331;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"31.667 -88 OFFCURVE",
"49.333 -80.333 OFFCURVE",
"74 -65 CURVE SMOOTH",
"157.333 -13 OFFCURVE",
"220.667 42.333 OFFCURVE",
"264 101 CURVE SMOOTH",
"321.333 179 OFFCURVE",
"350 269.667 OFFCURVE",
"350 373 CURVE SMOOTH",
"350 396.333 OFFCURVE",
"347 425 OFFCURVE",
"341 459 CURVE SMOOTH",
"333 500.333 OFFCURVE",
"324.333 526 OFFCURVE",
"315 536 CURVE SMOOTH",
"309.667 542 OFFCURVE",
"304.333 545 OFFCURVE",
"299 545 CURVE SMOOTH",
"292.333 545 OFFCURVE",
"289 541.667 OFFCURVE",
"289 535 CURVE SMOOTH",
"289 531 OFFCURVE",
"290.667 527 OFFCURVE",
"294 523 CURVE SMOOTH",
"306.667 506.333 OFFCURVE",
"313 452.333 OFFCURVE",
"313 361 CURVE SMOOTH",
"313 276.333 OFFCURVE",
"280 190 OFFCURVE",
"214 102 CURVE SMOOTH",
"152 18.667 OFFCURVE",
"82.667 -38.667 OFFCURVE",
"6 -70 CURVE",
"6 -82 OFFCURVE",
"11 -88 OFFCURVE",
"21 -88 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 12 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 12 122 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 385;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"151 -82 LINE SMOOTH",
"155 -82 OFFCURVE",
"157 -79 OFFCURVE",
"157 -73 CURVE SMOOTH",
"157 -69.667 OFFCURVE",
"155.667 -68 OFFCURVE",
"153 -68 CURVE SMOOTH",
"131.667 -68 OFFCURVE",
"116.333 -65.667 OFFCURVE",
"107 -61 CURVE SMOOTH",
"94.333 -53.667 OFFCURVE",
"88 -41 OFFCURVE",
"88 -23 CURVE SMOOTH",
"88 -13 OFFCURVE",
"89.333 -1.667 OFFCURVE",
"92 11 CURVE SMOOTH",
"104 63 LINE SMOOTH",
"109.333 89 OFFCURVE",
"112 110 OFFCURVE",
"112 126 CURVE SMOOTH",
"112 139.333 OFFCURVE",
"110 149.333 OFFCURVE",
"106 156 CURVE SMOOTH",
"97.333 172.667 OFFCURVE",
"76 184 OFFCURVE",
"42 190 CURVE",
"81.333 197.333 OFFCURVE",
"109 210.667 OFFCURVE",
"125 230 CURVE SMOOTH",
"138.333 246 OFFCURVE",
"150.333 279.667 OFFCURVE",
"161 331 CURVE SMOOTH",
"179.667 428.333 OFFCURVE",
"200 439 OFFCURVE",
"260 439 CURVE SMOOTH",
"264 439 OFFCURVE",
"270 446 OFFCURVE",
"270 450 CURVE SMOOTH",
"270 452.667 OFFCURVE",
"267.667 454 OFFCURVE",
"263 454 CURVE SMOOTH",
"261 454 LINE SMOOTH",
"219.667 454 OFFCURVE",
"189 446.667 OFFCURVE",
"169 432 CURVE SMOOTH",
"153 419.333 OFFCURVE",
"140.333 396.333 OFFCURVE",
"131 363 CURVE",
"114 284 LINE SMOOTH",
"108 252 OFFCURVE",
"97.667 230.333 OFFCURVE",
"83 219 CURVE SMOOTH",
"70.333 209 OFFCURVE",
"47 202.333 OFFCURVE",
"13 199 CURVE",
"8.333 192.333 OFFCURVE",
"6 187.667 OFFCURVE",
"6 185 CURVE SMOOTH",
"6 183 OFFCURVE",
"7 182 OFFCURVE",
"9 182 CURVE SMOOTH",
"27 182 OFFCURVE",
"40.667 180 OFFCURVE",
"50 176 CURVE SMOOTH",
"70 168 OFFCURVE",
"80 152.333 OFFCURVE",
"80 129 CURVE SMOOTH",
"80 120.333 OFFCURVE",
"78.667 109.667 OFFCURVE",
"76 97 CURVE SMOOTH",
"64 47 LINE SMOOTH",
"58 19.667 OFFCURVE",
"55 -2.333 OFFCURVE",
"55 -19 CURVE SMOOTH",
"55 -38.333 OFFCURVE",
"58.667 -52 OFFCURVE",
"66 -60 CURVE SMOOTH",
"79.333 -74.667 OFFCURVE",
"106.667 -82 OFFCURVE",
"148 -82 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 8 35 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 22 117 22 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01241 35 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01259 1 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 231;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"19 -82 LINE SMOOTH",
"60.333 -82 OFFCURVE",
"91 -75 OFFCURVE",
"111 -61 CURVE SMOOTH",
"129.667 -47.667 OFFCURVE",
"145 -25.333 OFFCURVE",
"157 6 CURVE",
"165 34 OFFCURVE",
"173.333 61.667 OFFCURVE",
"182 89 CURVE SMOOTH",
"192 119.667 OFFCURVE",
"204 140.333 OFFCURVE",
"218 151 CURVE SMOOTH",
"237.333 165.667 OFFCURVE",
"262.333 173 OFFCURVE",
"293 173 CURVE",
"299 179.667 OFFCURVE",
"302 184.333 OFFCURVE",
"302 187 CURVE SMOOTH",
"302 189 OFFCURVE",
"300.667 190 OFFCURVE",
"298 190 CURVE SMOOTH",
"266.667 192.667 OFFCURVE",
"246.667 199.667 OFFCURVE",
"238 211 CURVE SMOOTH",
"234 216.333 OFFCURVE",
"232 224 OFFCURVE",
"232 234 CURVE SMOOTH",
"232 247.333 OFFCURVE",
"238.5 274.167 OFFCURVE",
"251.5 314.5 CURVE SMOOTH",
"264.5 354.833 OFFCURVE",
"271 383 OFFCURVE",
"271 399 CURVE SMOOTH",
"271 412.333 OFFCURVE",
"268.333 422.333 OFFCURVE",
"263 429 CURVE SMOOTH",
"251.667 443.667 OFFCURVE",
"224.667 451 OFFCURVE",
"182 451 CURVE SMOOTH",
"179 451 LINE",
"173.667 446.333 OFFCURVE",
"171 442.333 OFFCURVE",
"171 439 CURVE SMOOTH",
"171 437.667 OFFCURVE",
"172.333 437 OFFCURVE",
"175 437 CURVE SMOOTH",
"194.333 437 OFFCURVE",
"208 435 OFFCURVE",
"216 431 CURVE SMOOTH",
"229.333 425.667 OFFCURVE",
"236 415.333 OFFCURVE",
"236 400 CURVE SMOOTH",
"236 388.667 OFFCURVE",
"233.333 374.667 OFFCURVE",
"228 358 CURVE SMOOTH",
"210 296 OFFCURVE",
"201 256.333 OFFCURVE",
"201 239 CURVE SMOOTH",
"201 208.333 OFFCURVE",
"222 189 OFFCURVE",
"264 181 CURVE",
"63.805 143.927 OFFCURVE",
"200.49 -68 OFFCURVE",
"21 -68 CURVE SMOOTH",
"15.667 -68 OFFCURVE",
"13 -71.333 OFFCURVE",
"13 -78 CURVE SMOOTH",
"13 -80.667 OFFCURVE",
"14 -82 OFFCURVE",
"16 -82 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 30 122 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01243 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01224 30 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01246 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 46 117 46 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01219 1 14 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"148 -11 OFFCURVE",
"174 -6 OFFCURVE",
"174 4 CURVE SMOOTH",
"174 13.333 OFFCURVE",
"165.333 18 OFFCURVE",
"148 18 CURVE SMOOTH",
"142.667 18 OFFCURVE",
"135 17.5 OFFCURVE",
"125 16.5 CURVE SMOOTH",
"115 15.5 OFFCURVE",
"107.667 15 OFFCURVE",
"103 15 CURVE SMOOTH",
"75 15 OFFCURVE",
"61 24.333 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 116.333 OFFCURVE",
"211.667 383.333 OFFCURVE",
"273 414 CURVE",
"277 416.667 OFFCURVE",
"287 418 OFFCURVE",
"303 418 CURVE SMOOTH",
"308.333 418 OFFCURVE",
"316 417.5 OFFCURVE",
"326 416.5 CURVE SMOOTH",
"336 415.5 OFFCURVE",
"343.667 415 OFFCURVE",
"349 415 CURVE SMOOTH",
"359 415 OFFCURVE",
"364 418.667 OFFCURVE",
"364 426 CURVE SMOOTH",
"364 441.333 OFFCURVE",
"345.333 449 OFFCURVE",
"308 449 CURVE SMOOTH",
"295 449 LINE SMOOTH",
"276.333 449 OFFCURVE",
"260.667 444.667 OFFCURVE",
"248 436 CURVE SMOOTH",
"238.667 430 OFFCURVE",
"226.667 418.333 OFFCURVE",
"212 401 CURVE SMOOTH",
"171.333 354.333 OFFCURVE",
"131.333 293.667 OFFCURVE",
"92 219 CURVE SMOOTH",
"46.667 132.333 OFFCURVE",
"24 65.333 OFFCURVE",
"24 18 CURVE SMOOTH",
"24 -1.333 OFFCURVE",
"48 -11 OFFCURVE",
"96 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 8 21 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 10 117 10 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01215 4 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 366;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"114.667 -11 OFFCURVE",
"152.667 -1.333 OFFCURVE",
"172 18 CURVE SMOOTH",
"214.667 61.333 OFFCURVE",
"253.667 123.667 OFFCURVE",
"289 205 CURVE SMOOTH",
"325 287.667 OFFCURVE",
"343 359 OFFCURVE",
"343 419 CURVE SMOOTH",
"343 431 OFFCURVE",
"339 439 OFFCURVE",
"331 443 CURVE SMOOTH",
"325.667 446.333 OFFCURVE",
"316.333 448 OFFCURVE",
"303 448 CURVE SMOOTH",
"247.667 448 OFFCURVE",
"217.333 437.667 OFFCURVE",
"212 417 CURVE",
"214 416 LINE",
"221.333 416 OFFCURVE",
"232.667 416.333 OFFCURVE",
"248 417 CURVE SMOOTH",
"283 418 LINE SMOOTH",
"293 418 OFFCURVE",
"300 417.333 OFFCURVE",
"304 416 CURVE",
"305.333 410 OFFCURVE",
"306 403.667 OFFCURVE",
"306 397 CURVE SMOOTH",
"306 353 OFFCURVE",
"288.667 292 OFFCURVE",
"254 214 CURVE SMOOTH",
"221.333 139.333 OFFCURVE",
"189 84 OFFCURVE",
"157 48 CURVE SMOOTH",
"143 32.667 OFFCURVE",
"123.667 23 OFFCURVE",
"99 19 CURVE",
"41 15 LINE",
"23 12.333 OFFCURVE",
"13 4.667 OFFCURVE",
"11 -8 CURVE",
"15.667 -10 OFFCURVE",
"31.333 -11 OFFCURVE",
"58 -11 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01228 4 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 348;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"76 106 OFFCURVE",
"102 108 OFFCURVE",
"123 110 CURVE SMOOTH",
"142 112 OFFCURVE",
"167 114 OFFCURVE",
"200 115 CURVE SMOOTH",
"219 115 OFFCURVE",
"228 117 OFFCURVE",
"228 121 CURVE SMOOTH",
"228 125 OFFCURVE",
"219 127 OFFCURVE",
"200 129 CURVE SMOOTH",
"155 133 OFFCURVE",
"123 135 OFFCURVE",
"103 135 CURVE SMOOTH",
"83 135 OFFCURVE",
"67 134 OFFCURVE",
"56 131 CURVE SMOOTH",
"40 126 OFFCURVE",
"20 116 OFFCURVE",
"20 111 CURVE SMOOTH",
"20 106 OFFCURVE",
"28.667 104.333 OFFCURVE",
"46 105 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 265;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = endash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"72 106.333 OFFCURVE",
"108 108.667 OFFCURVE",
"154 112 CURVE SMOOTH",
"191.333 114.667 OFFCURVE",
"227.667 116.667 OFFCURVE",
"263 118 CURVE SMOOTH",
"281 118 OFFCURVE",
"290 120.667 OFFCURVE",
"290 126 CURVE SMOOTH",
"290 130.667 OFFCURVE",
"281 134 OFFCURVE",
"263 136 CURVE SMOOTH",
"217.667 141.333 OFFCURVE",
"170.667 144 OFFCURVE",
"122 144 CURVE SMOOTH",
"89.333 144 OFFCURVE",
"67.333 142.333 OFFCURVE",
"56 139 CURVE SMOOTH",
"40 132.333 OFFCURVE",
"20 119.667 OFFCURVE",
"20 113 CURVE SMOOTH",
"20 107 OFFCURVE",
"28.667 104.333 OFFCURVE",
"46 105 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"194.667 111 OFFCURVE",
"318 115.333 OFFCURVE",
"416 118 CURVE SMOOTH",
"434.667 118 OFFCURVE",
"444 120.667 OFFCURVE",
"444 126 CURVE SMOOTH",
"444 130.667 OFFCURVE",
"434.667 134 OFFCURVE",
"416 136 CURVE SMOOTH",
"371.333 141.333 OFFCURVE",
"288.333 144 OFFCURVE",
"167 144 CURVE SMOOTH",
"104.333 144 OFFCURVE",
"67.333 142.333 OFFCURVE",
"56 139 CURVE SMOOTH",
"40 132.333 OFFCURVE",
"20 119.667 OFFCURVE",
"20 113 CURVE SMOOTH",
"20 107 OFFCURVE",
"28.667 104.333 OFFCURVE",
"46 105 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0129 4 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 461;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = hyphentwo;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 265;
}
);
unicode = 2010;
},
{
glyphname = underscore;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"30.667 -46 OFFCURVE",
"50.667 -45.333 OFFCURVE",
"76 -44 CURVE SMOOTH",
"106.667 -42.667 OFFCURVE",
"127 -42 OFFCURVE",
"137 -42 CURVE SMOOTH",
"267 -39.333 OFFCURVE",
"385 -38 OFFCURVE",
"491 -38 CURVE",
"496 -33 LINE",
"494.667 -21.667 OFFCURVE",
"488.667 -16 OFFCURVE",
"478 -16 CURVE SMOOTH",
"16 -16 LINE SMOOTH",
"8.667 -16 OFFCURVE",
"5 -20 OFFCURVE",
"5 -28 CURVE SMOOTH",
"5 -40 OFFCURVE",
"8.667 -46 OFFCURVE",
"16 -46 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01211 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 504;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 16, -286}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 218;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quotedblright;
transform = "{1, 0, 0, 1, 16, -484}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 233, 763}";
},
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 314, 763}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01234 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 81, 192}";
},
{
name = quotesingle;
transform = "{1, 0, 0, 1, 0, 192}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 233, 567}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 175;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"85 220 OFFCURVE",
"90 222 OFFCURVE",
"98 227 CURVE SMOOTH",
"113 237 OFFCURVE",
"127 253 OFFCURVE",
"141 275 CURVE SMOOTH",
"154 296 OFFCURVE",
"160 311 OFFCURVE",
"159 321 CURVE SMOOTH",
"157 335 OFFCURVE",
"151 343 OFFCURVE",
"141 343 CURVE SMOOTH",
"122 343 OFFCURVE",
"113 329 OFFCURVE",
"113 317 CURVE SMOOTH",
"113 303 OFFCURVE",
"116 296 OFFCURVE",
"124 296 CURVE",
"113 273 OFFCURVE",
"102 254 OFFCURVE",
"89 238 CURVE SMOOTH",
"83 231 OFFCURVE",
"80 225 OFFCURVE",
"80 221 CURVE SMOOTH",
"80 220 OFFCURVE",
"81 220 OFFCURVE",
"82 220 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 175;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemotleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187.333 164 OFFCURVE",
"203.333 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 192.667 OFFCURVE",
"156.667 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89.333 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
},
{
closed = 1;
nodes = (
"194 15 LINE",
"197 21 LINE",
"198 106 LINE",
"251 144 LINE SMOOTH",
"277.667 163.333 OFFCURVE",
"293.333 177.333 OFFCURVE",
"298 186 CURVE",
"298 190 LINE",
"294 192 LINE SMOOTH",
"292 192.667 OFFCURVE",
"247.667 166 OFFCURVE",
"161 112 CURVE",
"171 62 LINE SMOOTH",
"176.333 36.667 OFFCURVE",
"180.667 21 OFFCURVE",
"184 15 CURVE",
"189 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemotright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27 14 LINE",
"155 94 LINE",
"151.667 110 OFFCURVE",
"148.667 126 OFFCURVE",
"146 142 CURVE SMOOTH",
"142 162 OFFCURVE",
"137.667 177.667 OFFCURVE",
"133 189 CURVE",
"127 192 LINE",
"122 189 LINE",
"119 184 LINE",
"118 99 LINE",
"67 62 LINE SMOOTH",
"33.667 37.333 OFFCURVE",
"17 22.333 OFFCURVE",
"17 17 CURVE",
"18 14 LINE",
"23 13 LINE"
);
},
{
closed = 1;
nodes = (
"118 14 LINE",
"246 94 LINE",
"232 155.333 OFFCURVE",
"224 187 OFFCURVE",
"222 189 CURVE",
"217 192 LINE",
"212 189 LINE",
"210 186.333 OFFCURVE",
"209 178.333 OFFCURVE",
"209 165 CURVE SMOOTH",
"208.333 155.667 OFFCURVE",
"208.333 143 OFFCURVE",
"209 127 CURVE SMOOTH",
"209 108.333 OFFCURVE",
"209 99 OFFCURVE",
"209 99 CURVE",
"156 61 LINE SMOOTH",
"129.333 42.333 OFFCURVE",
"113.333 28.667 OFFCURVE",
"108 20 CURVE",
"108 14 LINE",
"113 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187.333 164 OFFCURVE",
"203.333 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 192.667 OFFCURVE",
"156.667 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89.333 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"73 14 LINE",
"201 94 LINE",
"187 155.333 OFFCURVE",
"179 187 OFFCURVE",
"177 189 CURVE",
"172 192 LINE",
"167 189 LINE",
"165 186.333 OFFCURVE",
"164 178.333 OFFCURVE",
"164 165 CURVE SMOOTH",
"163.333 155.667 OFFCURVE",
"163.333 143 OFFCURVE",
"164 127 CURVE SMOOTH",
"164 108.333 OFFCURVE",
"164 99 OFFCURVE",
"164 99 CURVE",
"111 61 LINE SMOOTH",
"84.333 42.333 OFFCURVE",
"68.333 28.667 OFFCURVE",
"63 20 CURVE",
"63 14 LINE",
"68 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 236;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"39 279 LINE",
"48 300 OFFCURVE",
"57 321 OFFCURVE",
"65 343 CURVE SMOOTH",
"78 375 OFFCURVE",
"84 396 OFFCURVE",
"84 404 CURVE SMOOTH",
"84 414 OFFCURVE",
"79 419 OFFCURVE",
"70 419 CURVE SMOOTH",
"59 419 OFFCURVE",
"47 407 OFFCURVE",
"46 395 CURVE SMOOTH",
"32 279 LINE"
);
},
{
closed = 1;
nodes = (
"135 279 LINE",
"144 300 OFFCURVE",
"153 321 OFFCURVE",
"161 343 CURVE SMOOTH",
"174 375 OFFCURVE",
"180 396 OFFCURVE",
"180 404 CURVE SMOOTH",
"180 414 OFFCURVE",
"175 419 OFFCURVE",
"166 419 CURVE SMOOTH",
"155 419 OFFCURVE",
"143 407 OFFCURVE",
"142 395 CURVE SMOOTH",
"128 279 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"78 217 OFFCURVE",
"101 231 CURVE SMOOTH",
"116 241 OFFCURVE",
"130 257 OFFCURVE",
"144 279 CURVE SMOOTH",
"164 311 OFFCURVE",
"171 347 OFFCURVE",
"144 347 CURVE SMOOTH",
"113 347 OFFCURVE",
"107 300 OFFCURVE",
"127 300 CURVE",
"116 277 OFFCURVE",
"105 258 OFFCURVE",
"92 242 CURVE SMOOTH",
"79 227 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 136;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"80 -46 LINE",
"82 -27 LINE",
"83 241 LINE",
"130 361 LINE SMOOTH",
"155 424 OFFCURVE",
"169 469 OFFCURVE",
"173 494 CURVE",
"173 506 LINE",
"169 513 LINE SMOOTH",
"166 516 OFFCURVE",
"128 431 OFFCURVE",
"50 260 CURVE",
"60 106 LINE SMOOTH",
"64 43 OFFCURVE",
"67 -8 OFFCURVE",
"72 -46 CURVE",
"76 -52 LINE"
);
}
);
width = 223;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"143 502 LINE",
"141 483 LINE",
"140 215 LINE",
"93 95 LINE SMOOTH",
"68 32 OFFCURVE",
"54 -12 OFFCURVE",
"50 -37 CURVE",
"50 -50 LINE",
"54 -56 LINE SMOOTH",
"56 -59 OFFCURVE",
"95 26 OFFCURVE",
"173 196 CURVE",
"163 351 LINE SMOOTH",
"159 414 OFFCURVE",
"156 464 OFFCURVE",
"151 502 CURVE",
"147 509 LINE"
);
}
);
width = 223;
}
);
unicode = 27E9;
},
{
glyphname = Euro;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"184.773 4 OFFCURVE",
"270.955 48.461 OFFCURVE",
"326 96 CURVE SMOOTH",
"328 97.333 OFFCURVE",
"329 99.667 OFFCURVE",
"329 103 CURVE SMOOTH",
"329 107 OFFCURVE",
"326.667 109 OFFCURVE",
"322 109 CURVE SMOOTH",
"321.333 109 OFFCURVE",
"320.5 109 OFFCURVE",
"319.5 109 CURVE SMOOTH",
"316 108 LINE",
"268.014 64.812 OFFCURVE",
"184.199 26 OFFCURVE",
"134 26 CURVE SMOOTH",
"86 26 OFFCURVE",
"54 44.333 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 101.667 OFFCURVE",
"58.333 119.333 OFFCURVE",
"67 140 CURVE",
"97.667 144 OFFCURVE",
"141.333 146 OFFCURVE",
"184 146 CURVE SMOOTH",
"208 146 OFFCURVE",
"232 145.333 OFFCURVE",
"248 144 CURVE SMOOTH",
"252 144 OFFCURVE",
"256 146.667 OFFCURVE",
"256 152 CURVE SMOOTH",
"256 162.667 OFFCURVE",
"228.333 168 OFFCURVE",
"173 168 CURVE SMOOTH",
"143.667 168 OFFCURVE",
"112.333 165.667 OFFCURVE",
"79 163 CURVE",
"88.333 176.333 OFFCURVE",
"98 187.667 OFFCURVE",
"106 197 CURVE",
"126 201 OFFCURVE",
"152.333 203 OFFCURVE",
"179 203 CURVE SMOOTH",
"195 203 OFFCURVE",
"210.833 202.5 OFFCURVE",
"226.5 201.5 CURVE SMOOTH",
"270 199 LINE SMOOTH",
"275.333 199 OFFCURVE",
"278 201.667 OFFCURVE",
"278 207 CURVE SMOOTH",
"278 217.667 OFFCURVE",
"250.333 223 OFFCURVE",
"195 223 CURVE SMOOTH",
"173.667 223 OFFCURVE",
"153.667 222.333 OFFCURVE",
"131 221 CURVE",
"183.634 268.37 OFFCURVE",
"265.31 311 OFFCURVE",
"324 311 CURVE SMOOTH",
"354 311 OFFCURVE",
"369 302.667 OFFCURVE",
"369 286 CURVE SMOOTH",
"369 278.87 OFFCURVE",
"354 239.727 OFFCURVE",
"354 244 CURVE SMOOTH",
"354 244.667 OFFCURVE",
"353.333 245 OFFCURVE",
"352 245 CURVE SMOOTH",
"350.667 245 OFFCURVE",
"350 244.667 OFFCURVE",
"350 244 CURVE SMOOTH",
"350 238.667 OFFCURVE",
"352.667 236 OFFCURVE",
"358 236 CURVE SMOOTH",
"376.016 236 OFFCURVE",
"391 266.675 OFFCURVE",
"391 286 CURVE SMOOTH",
"391 315.333 OFFCURVE",
"370 330 OFFCURVE",
"328 330 CURVE SMOOTH",
"255.201 330 OFFCURVE",
"166.051 277.97 OFFCURVE",
"100 217 CURVE",
"59.839 213.349 OFFCURVE",
"37 213.414 OFFCURVE",
"37 194 CURVE SMOOTH",
"37 192.667 OFFCURVE",
"38 189 OFFCURVE",
"42 189 CURVE SMOOTH",
"43.333 189 OFFCURVE",
"47 189.333 OFFCURVE",
"53 190 CURVE SMOOTH",
"75 193 LINE",
"65.667 181 OFFCURVE",
"56.667 168.667 OFFCURVE",
"50 158 CURVE",
"44 158 LINE",
"29.333 155.333 OFFCURVE",
"15 155 OFFCURVE",
"15 139 CURVE SMOOTH",
"15 133.667 OFFCURVE",
"15.667 133 OFFCURVE",
"21 133 CURVE SMOOTH",
"26.5 133 LINE SMOOTH",
"29.5 133 OFFCURVE",
"32.667 133.333 OFFCURVE",
"36 134 CURVE",
"25.333 112.667 OFFCURVE",
"21 98 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 32.878 OFFCURVE",
"64.92 4 OFFCURVE",
"122 4 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01232 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 373;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = cedi;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE SMOOTH",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 304 OFFCURVE",
"540 283 CURVE SMOOTH",
"526 273 OFFCURVE",
"553 246 OFFCURVE",
"623 357 CURVE SMOOTH",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE",
"-45 96 OFFCURVE",
"45 -32 OFFCURVE",
"237 -32 CURVE SMOOTH",
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"428 4 CURVE SMOOTH",
"487 25 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 74 OFFCURVE",
"562 77 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"562 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"558 86 OFFCURVE",
"556 84 OFFCURVE",
"553 82 CURVE SMOOTH",
"520 51 OFFCURVE",
"402 7 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 -122 OFFCURVE",
"122 -120 OFFCURVE",
"131 -100 CURVE",
"566 569 LINE",
"577 592 OFFCURVE",
"548 589 OFFCURVE",
"539 569 CURVE",
"104 -100 LINE"
);
}
);
width = 600;
}
);
unicode = 20B5;
},
{
glyphname = cent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"83.333 -75.667 OFFCURVE",
"92.333 -75.667 OFFCURVE",
"101 -69 CURVE",
"101 -9 OFFCURVE",
"103.333 51.667 OFFCURVE",
"106 109 CURVE",
"141.333 119.667 OFFCURVE",
"177.333 144.333 OFFCURVE",
"214 183 CURVE SMOOTH",
"216 185 OFFCURVE",
"217 187.667 OFFCURVE",
"217 191 CURVE SMOOTH",
"217 193 OFFCURVE",
"216 194.333 OFFCURVE",
"214 195 CURVE",
"211.333 195 OFFCURVE",
"208 193 OFFCURVE",
"204 189 CURVE SMOOTH",
"176 159 OFFCURVE",
"149 138.667 OFFCURVE",
"123 128 CURVE SMOOTH",
"107 123 LINE",
"114 260 LINE",
"119.333 262 OFFCURVE",
"124.333 263 OFFCURVE",
"129 263 CURVE SMOOTH",
"139 263 OFFCURVE",
"144 259 OFFCURVE",
"144 251 CURVE SMOOTH",
"144 245.667 OFFCURVE",
"141.667 238.667 OFFCURVE",
"137 230 CURVE SMOOTH",
"133.667 224 OFFCURVE",
"134 221 OFFCURVE",
"138 221 CURVE SMOOTH",
"140 221 OFFCURVE",
"141.667 222 OFFCURVE",
"143 224 CURVE SMOOTH",
"146.333 228 OFFCURVE",
"150.333 234.333 OFFCURVE",
"155 243 CURVE SMOOTH",
"160.333 253.667 OFFCURVE",
"163 262.333 OFFCURVE",
"163 269 CURVE SMOOTH",
"163 288.333 OFFCURVE",
"152.333 298 OFFCURVE",
"131 298 CURVE SMOOTH",
"125.667 298 OFFCURVE",
"120.667 297.333 OFFCURVE",
"116 296 CURVE",
"118.667 352 OFFCURVE",
"119.333 397.667 OFFCURVE",
"118 431 CURVE SMOOTH",
"118 466.648 OFFCURVE",
"83 464.582 OFFCURVE",
"83 437 CURVE SMOOTH",
"80 278 LINE",
"70 270 OFFCURVE",
"59.667 260 OFFCURVE",
"49 248 CURVE SMOOTH",
"23 216.667 OFFCURVE",
"10 188 OFFCURVE",
"10 162 CURVE SMOOTH",
"10 122.667 OFFCURVE",
"28.333 103 OFFCURVE",
"65 103 CURVE SMOOTH",
"77 103 LINE",
"74 -69 LINE"
);
},
{
closed = 1;
nodes = (
"49.333 117 OFFCURVE",
"37 129 OFFCURVE",
"37 153 CURVE SMOOTH",
"37 167.667 OFFCURVE",
"42 183.667 OFFCURVE",
"52 201 CURVE SMOOTH",
"59.333 214.333 OFFCURVE",
"68.333 226.333 OFFCURVE",
"79 237 CURVE",
"78 117 LINE",
"74 117 LINE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01254 5 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 7 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 8 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 54 117 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01258 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 193;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{237, -32}";
},
{
name = top;
position = "{520, 467}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE SMOOTH",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 304 OFFCURVE",
"540 283 CURVE SMOOTH",
"526 273 OFFCURVE",
"553 246 OFFCURVE",
"623 357 CURVE SMOOTH",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE",
"-45 96 OFFCURVE",
"45 -32 OFFCURVE",
"237 -32 CURVE SMOOTH",
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"428 4 CURVE SMOOTH",
"487 25 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 74 OFFCURVE",
"562 77 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"562 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"558 86 OFFCURVE",
"556 84 OFFCURVE",
"553 82 CURVE SMOOTH",
"520 51 OFFCURVE",
"402 7 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"128 -122 OFFCURVE",
"156 -120 OFFCURVE",
"165 -100 CURVE",
"600 569 LINE",
"611 592 OFFCURVE",
"582 589 OFFCURVE",
"573 569 CURVE",
"138 -100 LINE"
);
},
{
closed = 1;
nodes = (
"32 -122 OFFCURVE",
"60 -120 OFFCURVE",
"69 -100 CURVE",
"504 569 LINE",
"515 592 OFFCURVE",
"486 589 OFFCURVE",
"477 569 CURVE",
"42 -100 LINE"
);
}
);
width = 600;
}
);
unicode = 20A1;
},
{
glyphname = currency;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{105.982, -53.783}";
},
{
name = top;
position = "{105.982, 196.368}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"193 211 OFFCURVE",
"177 199 OFFCURVE",
"160 187 CURVE",
"153 192 OFFCURVE",
"143 196 OFFCURVE",
"129 196 CURVE SMOOTH",
"112 196 OFFCURVE",
"97 191 OFFCURVE",
"84 183 CURVE",
"62 209 LINE SMOOTH",
"44 228 OFFCURVE",
"26 215 OFFCURVE",
"35 203 CURVE SMOOTH",
"46 189 OFFCURVE",
"55 177 OFFCURVE",
"64 167 CURVE",
"51 152 OFFCURVE",
"43 133 OFFCURVE",
"42 116 CURVE SMOOTH",
"42 111 OFFCURVE",
"42 106 OFFCURVE",
"43 101 CURVE",
"27 88 OFFCURVE",
"8 74 OFFCURVE",
"-12 59 CURVE SMOOTH",
"-25 49 OFFCURVE",
"-15 39 OFFCURVE",
"11 53 CURVE SMOOTH",
"24 60 OFFCURVE",
"38 71 OFFCURVE",
"55 84 CURVE",
"61 80 OFFCURVE",
"69 77 OFFCURVE",
"80 77 CURVE SMOOTH",
"97 77 OFFCURVE",
"113 82 OFFCURVE",
"127 91 CURVE",
"135 81 OFFCURVE",
"145 70 OFFCURVE",
"154 58 CURVE SMOOTH",
"168 40 OFFCURVE",
"183 49 OFFCURVE",
"174 62 CURVE SMOOTH",
"164 78 OFFCURVE",
"154 92 OFFCURVE",
"144 106 CURVE",
"160 122 OFFCURVE",
"170 144 OFFCURVE",
"170 163 CURVE SMOOTH",
"170 167 OFFCURVE",
"170 170 OFFCURVE",
"169 173 CURVE",
"186 187 OFFCURVE",
"203 202 OFFCURVE",
"219 215 CURVE SMOOTH",
"237 229 OFFCURVE",
"229 238 OFFCURVE",
"208 223 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"69 91 OFFCURVE",
"63 103 OFFCURVE",
"63 117 CURVE SMOOTH",
"63 141 OFFCURVE",
"89 183 OFFCURVE",
"121 183 CURVE SMOOTH",
"139 183 OFFCURVE",
"149 172 OFFCURVE",
"149 158 CURVE SMOOTH",
"149 129 OFFCURVE",
"122 91 OFFCURVE",
"85 91 CURVE SMOOTH"
);
}
);
width = 199;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"34 -34 LINE",
"52 -1 LINE",
"91.333 -1 OFFCURVE",
"126.667 9 OFFCURVE",
"158 29 CURVE SMOOTH",
"194 52.333 OFFCURVE",
"212 82.667 OFFCURVE",
"212 120 CURVE SMOOTH",
"212 144 OFFCURVE",
"198 175 OFFCURVE",
"170 213 CURVE",
"243 345 LINE",
"266.333 340.333 OFFCURVE",
"279.667 328 OFFCURVE",
"283 308 CURVE",
"280.333 314.667 OFFCURVE",
"273.667 318 OFFCURVE",
"263 318 CURVE SMOOTH",
"245 318 OFFCURVE",
"235.667 309.333 OFFCURVE",
"235 292 CURVE SMOOTH",
"233.667 276 OFFCURVE",
"247 263 OFFCURVE",
"263 263 CURVE SMOOTH",
"283 263 OFFCURVE",
"297 282.667 OFFCURVE",
"297 304 CURVE SMOOTH",
"297 334 OFFCURVE",
"281.667 352 OFFCURVE",
"251 358 CURVE",
"271 396 LINE",
"251 392 LINE",
"234 359 LINE",
"200.667 359 OFFCURVE",
"171 351.333 OFFCURVE",
"145 336 CURVE SMOOTH",
"113.667 318 OFFCURVE",
"98 293.667 OFFCURVE",
"98 263 CURVE SMOOTH",
"98 241.667 OFFCURVE",
"110.667 215 OFFCURVE",
"136 183 CURVE",
"43 13 LINE",
"15 18.333 OFFCURVE",
"-7.667 30 OFFCURVE",
"-25 48 CURVE",
"-31 48 LINE",
"-37.667 41.333 OFFCURVE",
"-41.333 36.333 OFFCURVE",
"-42 33 CURVE",
"-31.333 18.333 OFFCURVE",
"-5.667 7.333 OFFCURVE",
"35 0 CURVE",
"13 -38 LINE"
);
},
{
closed = 1;
nodes = (
"147 170 LINE",
"164.333 147.333 OFFCURVE",
"173 127 OFFCURVE",
"173 109 CURVE SMOOTH",
"173 81 OFFCURVE",
"160.667 57.333 OFFCURVE",
"136 38 CURVE SMOOTH",
"113.333 20 OFFCURVE",
"87.667 11 OFFCURVE",
"59 11 CURVE"
);
},
{
closed = 1;
nodes = (
"145.5 252 LINE SMOOTH",
"140.5 260.667 OFFCURVE",
"138 269.667 OFFCURVE",
"138 279 CURVE SMOOTH",
"138 298.333 OFFCURVE",
"146.667 315 OFFCURVE",
"164 329 CURVE SMOOTH",
"180.667 341.667 OFFCURVE",
"199 348 OFFCURVE",
"219 348 CURVE SMOOTH",
"219.667 348 OFFCURVE",
"221 348 OFFCURVE",
"223 348 CURVE SMOOTH",
"228 348 LINE",
"160 226 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01249 8 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 8 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01210 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01239 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 49 117 49 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01252 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 53 122 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01255 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0128 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 3 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 3 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01252 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 281;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = dcroat;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, -47, -272}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 20AB;
},
{
glyphname = florin;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-62.751 -231 OFFCURVE",
"-17.845 -135.612 OFFCURVE",
"12 -61 CURVE SMOOTH",
"36.678 0.694 OFFCURVE",
"71.871 89.347 OFFCURVE",
"91 144 CURVE",
"103 148.667 OFFCURVE",
"134.333 151.667 OFFCURVE",
"185 153 CURVE",
"189 156 LINE",
"190.333 156 OFFCURVE",
"191 156.667 OFFCURVE",
"191 158 CURVE SMOOTH",
"191.667 160 OFFCURVE",
"190.5 161.833 OFFCURVE",
"187.5 163.5 CURVE SMOOTH",
"184.5 165.167 OFFCURVE",
"179 166.333 OFFCURVE",
"171 167 CURVE SMOOTH",
"167.667 167.667 OFFCURVE",
"162.833 168 OFFCURVE",
"156.5 168 CURVE SMOOTH",
"135 168 LINE",
"130.333 167.333 OFFCURVE",
"125.333 167.167 OFFCURVE",
"120 167.5 CURVE SMOOTH",
"103 168 LINE",
"126.433 229.513 OFFCURVE",
"179.111 333.926 OFFCURVE",
"238 383 CURVE SMOOTH",
"250.667 393 OFFCURVE",
"262.667 398 OFFCURVE",
"274 398 CURVE SMOOTH",
"297.333 398 OFFCURVE",
"307.333 379.333 OFFCURVE",
"304 342 CURVE SMOOTH",
"303.333 326.667 OFFCURVE",
"304.667 319 OFFCURVE",
"308 319 CURVE SMOOTH",
"313.333 319 OFFCURVE",
"318.667 325.667 OFFCURVE",
"320 335 CURVE",
"322 338.333 OFFCURVE",
"323.167 341.5 OFFCURVE",
"323.5 344.5 CURVE SMOOTH",
"325 353 LINE SMOOTH",
"326.333 370.333 OFFCURVE",
"321.667 383 OFFCURVE",
"311 395 CURVE",
"298.333 405 OFFCURVE",
"284 410 OFFCURVE",
"268 410 CURVE SMOOTH",
"240 410 OFFCURVE",
"210.667 401 OFFCURVE",
"184 369 CURVE SMOOTH",
"136 305 OFFCURVE",
"106.667 236.667 OFFCURVE",
"76 166 CURVE",
"56 162.667 OFFCURVE",
"40.333 159 OFFCURVE",
"29 155 CURVE SMOOTH",
"17.667 151 OFFCURVE",
"11.667 147.333 OFFCURVE",
"11 144 CURVE SMOOTH",
"11 142 OFFCURVE",
"13.667 140.333 OFFCURVE",
"19 139 CURVE SMOOTH",
"22.333 138.333 OFFCURVE",
"27.833 138.5 OFFCURVE",
"35.5 139.5 CURVE SMOOTH",
"63 143 LINE",
"34.417 71.543 OFFCURVE",
"32.046 44.097 OFFCURVE",
"-4 -31 CURVE SMOOTH",
"-42.667 -108.333 OFFCURVE",
"-77.667 -166.333 OFFCURVE",
"-103 -189 CURVE SMOOTH",
"-121.667 -207.667 OFFCURVE",
"-140 -218 OFFCURVE",
"-156 -218 CURVE SMOOTH",
"-169.333 -218 OFFCURVE",
"-178 -205.667 OFFCURVE",
"-182 -187 CURVE",
"-183 -166 LINE SMOOTH",
"-183 -152.667 OFFCURVE",
"-184.667 -146 OFFCURVE",
"-188 -146 CURVE SMOOTH",
"-195.333 -146 OFFCURVE",
"-200.333 -156 OFFCURVE",
"-203 -176 CURVE SMOOTH",
"-203.667 -192.667 OFFCURVE",
"-199 -206 OFFCURVE",
"-189 -216 CURVE SMOOTH",
"-179.667 -226.667 OFFCURVE",
"-167.333 -231 OFFCURVE",
"-150 -231 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01254 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 154;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"869 401 OFFCURVE",
"867 400 OFFCURVE",
"866 399 CURVE SMOOTH",
"861 391 OFFCURVE",
"853 387 OFFCURVE",
"841 387 CURVE SMOOTH",
"838 387 OFFCURVE",
"827 388 OFFCURVE",
"809 391 CURVE SMOOTH",
"794 393 OFFCURVE",
"776 397 OFFCURVE",
"756 403 CURVE SMOOTH",
"703 419 LINE",
"704 421 LINE SMOOTH",
"705 424 OFFCURVE",
"706 426 OFFCURVE",
"706 429 CURVE SMOOTH",
"706 437 OFFCURVE",
"702 441 OFFCURVE",
"693 441 CURVE SMOOTH",
"685 440 OFFCURVE",
"677 436 OFFCURVE",
"670 429 CURVE",
"594 449 OFFCURVE",
"486 465 OFFCURVE",
"407 466 CURVE SMOOTH",
"337 465 OFFCURVE",
"290 460 OFFCURVE",
"249 446 CURVE SMOOTH",
"195 428 OFFCURVE",
"156 405 OFFCURVE",
"131 378 CURVE SMOOTH",
"109 353 OFFCURVE",
"102 330 OFFCURVE",
"111 309 CURVE SMOOTH",
"120 289 OFFCURVE",
"140 279 OFFCURVE",
"171 279 CURVE SMOOTH",
"185 279 OFFCURVE",
"200 281 OFFCURVE",
"216 286 CURVE SMOOTH",
"225 289 OFFCURVE",
"229 292 OFFCURVE",
"229 295 CURVE SMOOTH",
"229 297 OFFCURVE",
"227 298 OFFCURVE",
"223 298 CURVE SMOOTH",
"214 297 LINE",
"201 293 OFFCURVE",
"189 291 OFFCURVE",
"178 291 CURVE SMOOTH",
"153 291 OFFCURVE",
"140 300 OFFCURVE",
"140 318 CURVE SMOOTH",
"140 332 OFFCURVE",
"149 347 OFFCURVE",
"168 363 CURVE SMOOTH",
"272 450 OFFCURVE",
"479 453 OFFCURVE",
"657 413 CURVE",
"645 394 OFFCURVE",
"630 363 OFFCURVE",
"613 319 CURVE SMOOTH",
"595 272 OFFCURVE",
"584 244 OFFCURVE",
"579 236 CURVE",
"530 242 OFFCURVE",
"379 246 OFFCURVE",
"340 226 CURVE SMOOTH",
"333 222 OFFCURVE",
"326 216 OFFCURVE",
"318 207 CURVE SMOOTH",
"309 197 OFFCURVE",
"307 192 OFFCURVE",
"314 192 CURVE SMOOTH",
"317 192 OFFCURVE",
"321 193 OFFCURVE",
"327 194 CURVE",
"366 207 OFFCURVE",
"522 226 OFFCURVE",
"569 219 CURVE",
"552 183 OFFCURVE",
"534 150 OFFCURVE",
"513 121 CURVE",
"506 122 OFFCURVE",
"499 122 OFFCURVE",
"493 122 CURVE SMOOTH",
"473 122 OFFCURVE",
"457 121 OFFCURVE",
"446 118 CURVE SMOOTH",
"430 113 OFFCURVE",
"410 103 OFFCURVE",
"410 98 CURVE SMOOTH",
"410 93 OFFCURVE",
"419 91 OFFCURVE",
"436 92 CURVE SMOOTH",
"494 95 LINE",
"473 70 OFFCURVE",
"450 48 OFFCURVE",
"426 31 CURVE SMOOTH",
"361 -16 OFFCURVE",
"280 -39 OFFCURVE",
"183 -38 CURVE SMOOTH",
"147 -38 OFFCURVE",
"120 -32 OFFCURVE",
"101 -19 CURVE SMOOTH",
"85 -9 OFFCURVE",
"77 4 OFFCURVE",
"77 21 CURVE SMOOTH",
"77 32 OFFCURVE",
"81 44 OFFCURVE",
"89 56 CURVE SMOOTH",
"124 105 OFFCURVE",
"192 129 OFFCURVE",
"295 128 CURVE SMOOTH",
"340 127 OFFCURVE",
"367 124 OFFCURVE",
"374 121 CURVE SMOOTH",
"378 119 OFFCURVE",
"381 118 OFFCURVE",
"384 118 CURVE SMOOTH",
"387 118 OFFCURVE",
"388 119 OFFCURVE",
"388 120 CURVE SMOOTH",
"388 123 OFFCURVE",
"384 127 OFFCURVE",
"375 131 CURVE SMOOTH",
"358 139 OFFCURVE",
"331 143 OFFCURVE",
"294 144 CURVE SMOOTH",
"168 145 OFFCURVE",
"90 118 OFFCURVE",
"60 61 CURVE SMOOTH",
"53 49 OFFCURVE",
"50 37 OFFCURVE",
"50 25 CURVE SMOOTH",
"50 2 OFFCURVE",
"62 -18 OFFCURVE",
"85 -33 CURVE SMOOTH",
"110 -50 OFFCURVE",
"147 -58 OFFCURVE",
"194 -59 CURVE SMOOTH",
"331 -61 OFFCURVE",
"451 -5 OFFCURVE",
"536 99 CURVE",
"590 102 LINE SMOOTH",
"609 102 OFFCURVE",
"618 104 OFFCURVE",
"618 108 CURVE SMOOTH",
"618 112 OFFCURVE",
"609 114 OFFCURVE",
"590 116 CURVE SMOOTH",
"551 119 LINE",
"573 149 OFFCURVE",
"592 182 OFFCURVE",
"608 218 CURVE",
"615 217 OFFCURVE",
"631 215 OFFCURVE",
"654 210 CURVE SMOOTH",
"675 206 OFFCURVE",
"690 204 OFFCURVE",
"699 204 CURVE SMOOTH",
"710 204 OFFCURVE",
"710 207 OFFCURVE",
"699 213 CURVE SMOOTH",
"689 218 OFFCURVE",
"676 221 OFFCURVE",
"659 224 CURVE SMOOTH",
"613 233 LINE",
"694 402 LINE",
"760 383 LINE SMOOTH",
"787 375 OFFCURVE",
"809 373 OFFCURVE",
"828 373 CURVE SMOOTH",
"851 373 OFFCURVE",
"866 380 OFFCURVE",
"875 393 CURVE SMOOTH",
"876 394 OFFCURVE",
"876 395 OFFCURVE",
"876 396 CURVE SMOOTH",
"876 399 OFFCURVE",
"874 401 OFFCURVE",
"870 401 CURVE SMOOTH"
);
}
);
width = 718;
}
);
unicode = 20A3;
},
{
glyphname = guarani;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE SMOOTH",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE",
"593 338 OFFCURVE",
"615 341 OFFCURVE",
"623 357 CURVE",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE",
"-45 96 OFFCURVE",
"45 -32 OFFCURVE",
"237 -32 CURVE SMOOTH",
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"441 24 CURVE SMOOTH",
"515 70 OFFCURVE",
"566 114 OFFCURVE",
"604 171 CURVE SMOOTH",
"620 195 OFFCURVE",
"621 220 OFFCURVE",
"604 201 CURVE SMOOTH",
"563 133 OFFCURVE",
"452 29 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -8 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"94 -122 OFFCURVE",
"122 -120 OFFCURVE",
"131 -100 CURVE",
"566 569 LINE",
"577 592 OFFCURVE",
"548 589 OFFCURVE",
"539 569 CURVE",
"104 -100 LINE"
);
},
{
closed = 1;
nodes = (
"606 187 OFFCURVE",
"624 189 OFFCURVE",
"623 194 CURVE SMOOTH",
"624 212 OFFCURVE",
"613 218 OFFCURVE",
"472 218 CURVE SMOOTH",
"436 218 OFFCURVE",
"378 216 OFFCURVE",
"295 212 CURVE SMOOTH",
"261 210 OFFCURVE",
"245 208 OFFCURVE",
"245 204 CURVE SMOOTH",
"245 200 OFFCURVE",
"261 198 OFFCURVE",
"295 198 CURVE SMOOTH",
"355 197 OFFCURVE",
"401 195 OFFCURVE",
"436 193 CURVE SMOOTH",
"473 191 OFFCURVE",
"521 189 OFFCURVE",
"576 188 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 20B2;
},
{
glyphname = kip;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"173.409 470.009 OFFCURVE",
"146.689 404.1 OFFCURVE",
"117.002 326.657 CURVE SMOOTH",
"72.47 212.965 OFFCURVE",
"41.297 122.34 OFFCURVE",
"23.484 56.432 CURVE",
"20.516 49.841 OFFCURVE",
"19.031 41.602 OFFCURVE",
"19.031 33.363 CURVE SMOOTH",
"19.031 3.705 OFFCURVE",
"27.938 -11.125 OFFCURVE",
"47.235 -11.125 CURVE SMOOTH",
"54.657 -11.125 OFFCURVE",
"62.079 -7.829 OFFCURVE",
"70.985 -2.886 CURVE",
"48 24 OFFCURVE",
"87 164 OFFCURVE",
"121 246 CURVE",
"138 179 OFFCURVE",
"211 28 OFFCURVE",
"278.801 10.295 CURVE SMOOTH",
"307 3 OFFCURVE",
"341 24 OFFCURVE",
"382.709 49.841 CURVE SMOOTH",
"396 58 OFFCURVE",
"403 73 OFFCURVE",
"377 58 CURVE SMOOTH",
"317 19 OFFCURVE",
"277 40 OFFCURVE",
"224 108 CURVE SMOOTH",
"200 139 OFFCURVE",
"150 205 OFFCURVE",
"138 297 CURVE",
"166 373 OFFCURVE",
"210.519 453.532 OFFCURVE",
"244.66 524.383 CURVE",
"250.597 570.52 OFFCURVE",
"213.487 563.929 OFFCURVE",
"197.159 524.383 CURVE"
);
},
{
closed = 1;
nodes = (
"148 286 OFFCURVE",
"160 297 OFFCURVE",
"186 322 CURVE SMOOTH",
"235 370 OFFCURVE",
"276 388 OFFCURVE",
"308 388 CURVE SMOOTH",
"328 388 OFFCURVE",
"350 370 OFFCURVE",
"350 345 CURVE SMOOTH",
"349 332 OFFCURVE",
"350 327 OFFCURVE",
"358 327 CURVE SMOOTH",
"367 327 OFFCURVE",
"375 352 OFFCURVE",
"379 371 CURVE SMOOTH",
"385 403 OFFCURVE",
"367 429 OFFCURVE",
"333 429 CURVE SMOOTH",
"301 429 OFFCURVE",
"261 408 OFFCURVE",
"216 368 CURVE SMOOTH",
"183 337 OFFCURVE",
"149 302 OFFCURVE",
"116 266 CURVE",
"129 264 LINE"
);
},
{
closed = 1;
nodes = (
"204 260 OFFCURVE",
"249 263 OFFCURVE",
"322 263 CURVE SMOOTH",
"336 263 OFFCURVE",
"345 265 OFFCURVE",
"345 270 CURVE SMOOTH",
"345 279 OFFCURVE",
"302 283 OFFCURVE",
"245 283 CURVE SMOOTH",
"59 283 LINE SMOOTH",
"46 283 OFFCURVE",
"37 279 OFFCURVE",
"37 271 CURVE SMOOTH",
"37 259 OFFCURVE",
"46 252 OFFCURVE",
"59 253 CURVE SMOOTH"
);
}
);
width = 431;
}
);
unicode = 20AD;
},
{
glyphname = lira;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"351 13 OFFCURVE",
"305 5 CURVE",
"281 20 OFFCURVE",
"238 53 OFFCURVE",
"186 94 CURVE SMOOTH",
"157 117 OFFCURVE",
"135 133 OFFCURVE",
"118 143 CURVE SMOOTH",
"79 165 OFFCURVE",
"47 167 OFFCURVE",
"24 149 CURVE SMOOTH",
"4 134 OFFCURVE",
"-6 110 OFFCURVE",
"-6 76 CURVE SMOOTH",
"-6 46 OFFCURVE",
"2 21 OFFCURVE",
"18 0 CURVE SMOOTH",
"35 -22 OFFCURVE",
"59 -39 OFFCURVE",
"92 -50 CURVE SMOOTH",
"122 -61 OFFCURVE",
"154 -66 OFFCURVE",
"188 -65 CURVE SMOOTH",
"227 -64 OFFCURVE",
"267 -51 OFFCURVE",
"309 -24 CURVE",
"388 -65 OFFCURVE",
"430 -86 OFFCURVE",
"435 -88 CURVE SMOOTH",
"482 -108 OFFCURVE",
"527 -118 OFFCURVE",
"570 -118 CURVE SMOOTH",
"653 -118 OFFCURVE",
"694 -90 OFFCURVE",
"694 -34 CURVE SMOOTH",
"694 -15 OFFCURVE",
"680 5 OFFCURVE",
"651 27 CURVE SMOOTH",
"650 28 OFFCURVE",
"648 29 OFFCURVE",
"646 29 CURVE SMOOTH",
"644 29 OFFCURVE",
"642 28 OFFCURVE",
"643 25 CURVE SMOOTH",
"644 20 LINE",
"651 12 OFFCURVE",
"657 3 OFFCURVE",
"664 -6 CURVE SMOOTH",
"672 -16 OFFCURVE",
"676 -26 OFFCURVE",
"676 -35 CURVE SMOOTH",
"676 -70 OFFCURVE",
"648 -88 OFFCURVE",
"593 -88 CURVE SMOOTH",
"536 -88 OFFCURVE",
"449 -62 OFFCURVE",
"331 -9 CURVE",
"378 22 OFFCURVE",
"405 82 OFFCURVE",
"451 210 CURVE SMOOTH",
"481 295 OFFCURVE",
"508 363 OFFCURVE",
"531 412 CURVE SMOOTH",
"558 471 OFFCURVE",
"609 534 OFFCURVE",
"656 534 CURVE SMOOTH",
"686 534 OFFCURVE",
"701 508 OFFCURVE",
"701 456 CURVE SMOOTH",
"701 400 OFFCURVE",
"687 333 OFFCURVE",
"659 286 CURVE",
"653 271 OFFCURVE",
"668 273 OFFCURVE",
"683 290 CURVE",
"713 339 OFFCURVE",
"728 395 OFFCURVE",
"728 459 CURVE SMOOTH",
"728 514 OFFCURVE",
"704 549 OFFCURVE",
"662 549 CURVE SMOOTH",
"578 549 OFFCURVE",
"518 495 OFFCURVE",
"482 412 CURVE SMOOTH",
"472 388 OFFCURVE",
"457 346 OFFCURVE",
"438 285 CURVE SMOOTH",
"404 179 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"177 54 OFFCURVE",
"240 8 OFFCURVE",
"275 -13 CURVE",
"242 -34 OFFCURVE",
"205 -44 OFFCURVE",
"163 -44 CURVE SMOOTH",
"134 -44 OFFCURVE",
"108 -39 OFFCURVE",
"85 -29 CURVE SMOOTH",
"36 -8 OFFCURVE",
"11 40 OFFCURVE",
"11 73 CURVE SMOOTH",
"11 102 OFFCURVE",
"25 116 OFFCURVE",
"54 116 CURVE SMOOTH",
"76 116 OFFCURVE",
"108 103 OFFCURVE",
"149 76 CURVE"
);
},
{
closed = 1;
nodes = (
"384.689 190 LINE SMOOTH",
"429.762 193 OFFCURVE",
"473.427 195 OFFCURVE",
"517.091 195 CURVE SMOOTH",
"526.951 195 OFFCURVE",
"532.585 197 OFFCURVE",
"532.585 202 CURVE SMOOTH",
"532.585 211 OFFCURVE",
"503.006 215 OFFCURVE",
"445.256 215 CURVE SMOOTH",
"317.079 215 LINE SMOOTH",
"307.22 215 OFFCURVE",
"301.585 211 OFFCURVE",
"301.585 203 CURVE SMOOTH",
"301.585 191 OFFCURVE",
"307.22 185 OFFCURVE",
"317.079 185 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"384.689 128 LINE SMOOTH",
"429.762 131 OFFCURVE",
"473.427 133 OFFCURVE",
"517.091 133 CURVE SMOOTH",
"526.951 133 OFFCURVE",
"532.585 135 OFFCURVE",
"532.585 140 CURVE SMOOTH",
"532.585 148 OFFCURVE",
"503.006 152 OFFCURVE",
"445.256 152 CURVE SMOOTH",
"317.079 152 LINE SMOOTH",
"307.22 152 OFFCURVE",
"301.585 148 OFFCURVE",
"301.585 140 CURVE SMOOTH",
"301.585 128 OFFCURVE",
"307.22 122 OFFCURVE",
"317.079 122 CURVE"
);
}
);
width = 701;
}
);
unicode = 20A4;
},
{
glyphname = liraTurkish;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"101 152 OFFCURVE",
"203 367 OFFCURVE",
"273 486 CURVE SMOOTH",
"291 518 OFFCURVE",
"308 533 OFFCURVE",
"322 533 CURVE SMOOTH",
"331 533 OFFCURVE",
"336 527 OFFCURVE",
"336 513 CURVE SMOOTH",
"336 496 OFFCURVE",
"355 493 OFFCURVE",
"356 512 CURVE SMOOTH",
"356 540 OFFCURVE",
"347 554 OFFCURVE",
"323 553 CURVE SMOOTH",
"282 551 OFFCURVE",
"232 496 OFFCURVE",
"174 388 CURVE SMOOTH",
"128 305 OFFCURVE",
"97 233 OFFCURVE",
"80 175 CURVE SMOOTH",
"69 130 OFFCURVE",
"62 96 OFFCURVE",
"62 72 CURVE SMOOTH",
"62 24 OFFCURVE",
"83 0 OFFCURVE",
"123 0 CURVE SMOOTH",
"196 0 OFFCURVE",
"287 67 OFFCURVE",
"391 225 CURVE SMOOTH",
"410 251 OFFCURVE",
"398 275 OFFCURVE",
"382 245 CURVE SMOOTH",
"340 168 OFFCURVE",
"226 66 OFFCURVE",
"188 42 CURVE SMOOTH",
"130 4 OFFCURVE",
"101 14 OFFCURVE",
"101 69 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"119 285 LINE SMOOTH",
"162 301 OFFCURVE",
"203 314 OFFCURVE",
"245 326 CURVE SMOOTH",
"255 329 OFFCURVE",
"260 332 OFFCURVE",
"258 337 CURVE SMOOTH",
"256 346 OFFCURVE",
"226 341 OFFCURVE",
"171 325 CURVE SMOOTH",
"47 290 LINE SMOOTH",
"38 287 OFFCURVE",
"34 282 OFFCURVE",
"36 274 CURVE SMOOTH",
"39 263 OFFCURVE",
"46 257 OFFCURVE",
"56 261 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 197 LINE SMOOTH",
"152 212 OFFCURVE",
"193 226 OFFCURVE",
"235 238 CURVE SMOOTH",
"245 241 OFFCURVE",
"250 245 OFFCURVE",
"248 249 CURVE SMOOTH",
"246 257 OFFCURVE",
"217 253 OFFCURVE",
"161 237 CURVE SMOOTH",
"38 202 LINE SMOOTH",
"28 199 OFFCURVE",
"24 193 OFFCURVE",
"26 186 CURVE SMOOTH",
"30 174 OFFCURVE",
"37 170 OFFCURVE",
"46 173 CURVE"
);
}
);
width = 351;
}
);
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"564 92 OFFCURVE",
"593 222 OFFCURVE",
"593 329 CURVE SMOOTH",
"593 483 OFFCURVE",
"526 542 OFFCURVE",
"413 537 CURVE SMOOTH",
"356 535 OFFCURVE",
"295 509 OFFCURVE",
"232 460 CURVE SMOOTH",
"161 405 OFFCURVE",
"110 336 OFFCURVE",
"80 253 CURVE SMOOTH",
"64 207 OFFCURVE",
"55 162 OFFCURVE",
"55 117 CURVE SMOOTH",
"55 68 OFFCURVE",
"74 12 OFFCURVE",
"88 2 CURVE SMOOTH",
"101 -8 OFFCURVE",
"92 6 OFFCURVE",
"92 92 CURVE SMOOTH",
"92 140 OFFCURVE",
"103 189 OFFCURVE",
"124 240 CURVE SMOOTH",
"153 310 OFFCURVE",
"193 370 OFFCURVE",
"243 420 CURVE SMOOTH",
"298 477 OFFCURVE",
"356 510 OFFCURVE",
"414 517 CURVE SMOOTH",
"422 518 OFFCURVE",
"429 518 OFFCURVE",
"437 518 CURVE SMOOTH",
"507 518 OFFCURVE",
"543 474 OFFCURVE",
"558 370 CURVE SMOOTH",
"558 306 OFFCURVE",
"551 239 OFFCURVE",
"536 166 CURVE SMOOTH",
"524 99 OFFCURVE",
"510 47 OFFCURVE",
"491 8 CURVE",
"494 3 OFFCURVE",
"501 0 OFFCURVE",
"506 0 CURVE SMOOTH",
"522 0 OFFCURVE",
"539 12 OFFCURVE",
"544 24 CURVE"
);
},
{
closed = 1;
nodes = (
"289 -39 OFFCURVE",
"316 -30 OFFCURVE",
"316 -14 CURVE",
"451 579 LINE",
"452 598 OFFCURVE",
"424 588 OFFCURVE",
"424 570 CURVE",
"289 -21 LINE"
);
}
);
width = 600;
}
);
unicode = 20BC;
},
{
glyphname = naira;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"130 491 OFFCURVE",
"147 457 OFFCURVE",
"147 411 CURVE SMOOTH",
"147 351 OFFCURVE",
"129 263 OFFCURVE",
"83 150 CURVE SMOOTH",
"39 41 OFFCURVE",
"32 24 OFFCURVE",
"27 9 CURVE SMOOTH",
"23 0 OFFCURVE",
"21 -7 OFFCURVE",
"21 -13 CURVE SMOOTH",
"21 -18 OFFCURVE",
"23 -21 OFFCURVE",
"28 -21 CURVE SMOOTH",
"33 -21 OFFCURVE",
"39 -18 OFFCURVE",
"48 -12 CURVE SMOOTH",
"56 -7 OFFCURVE",
"61 -2 OFFCURVE",
"63 1 CURVE SMOOTH",
"82 36 OFFCURVE",
"96 62 OFFCURVE",
"105 81 CURVE",
"135 128 OFFCURVE",
"165 167 OFFCURVE",
"208 213 CURVE SMOOTH",
"231 237 OFFCURVE",
"267 273 OFFCURVE",
"318 321 CURVE SMOOTH",
"355 356 OFFCURVE",
"392 385 OFFCURVE",
"429 408 CURVE SMOOTH",
"440 415 OFFCURVE",
"449 418 OFFCURVE",
"456 418 CURVE SMOOTH",
"464 418 OFFCURVE",
"468 413 OFFCURVE",
"468 402 CURVE SMOOTH",
"468 396 OFFCURVE",
"466 388 OFFCURVE",
"463 377 CURVE SMOOTH",
"426 276 OFFCURVE",
"395 195 OFFCURVE",
"372 134 CURVE SMOOTH",
"340 47 LINE SMOOTH",
"322 -1 OFFCURVE",
"317 -41 OFFCURVE",
"317 -71 CURVE SMOOTH",
"317 -112 OFFCURVE",
"331 -134 OFFCURVE",
"360 -139 CURVE SMOOTH",
"369 -140 OFFCURVE",
"381 -138 OFFCURVE",
"394 -133 CURVE SMOOTH",
"409 -128 OFFCURVE",
"422 -120 OFFCURVE",
"432 -110 CURVE SMOOTH",
"439 -103 OFFCURVE",
"442 -96 OFFCURVE",
"442 -89 CURVE SMOOTH",
"442 -86 OFFCURVE",
"441 -86 OFFCURVE",
"438 -87 CURVE",
"438 -95 OFFCURVE",
"403 -114 OFFCURVE",
"388 -114 CURVE SMOOTH",
"365 -114 OFFCURVE",
"353 -95 OFFCURVE",
"353 -58 CURVE SMOOTH",
"353 -17 OFFCURVE",
"366 44 OFFCURVE",
"393 123 CURVE SMOOTH",
"409 170 OFFCURVE",
"441 244 OFFCURVE",
"490 344 CURVE SMOOTH",
"505 375 OFFCURVE",
"513 400 OFFCURVE",
"513 421 CURVE SMOOTH",
"513 443 OFFCURVE",
"503 454 OFFCURVE",
"484 454 CURVE SMOOTH",
"477 454 OFFCURVE",
"468 452 OFFCURVE",
"458 449 CURVE SMOOTH",
"441 444 OFFCURVE",
"416 430 OFFCURVE",
"385 408 CURVE SMOOTH",
"311 355 OFFCURVE",
"225 270 OFFCURVE",
"127 154 CURVE",
"161 258 OFFCURVE",
"178 337 OFFCURVE",
"178 390 CURVE SMOOTH",
"178 464 OFFCURVE",
"151 506 OFFCURVE",
"98 518 CURVE SMOOTH",
"82 521 OFFCURVE",
"80 513 OFFCURVE",
"101 504 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"231 280 LINE SMOOTH",
"325 283 OFFCURVE",
"416 285 OFFCURVE",
"505 285 CURVE SMOOTH",
"526 285 OFFCURVE",
"539 287 OFFCURVE",
"539 292 CURVE SMOOTH",
"539 301 OFFCURVE",
"476 305 OFFCURVE",
"358 305 CURVE SMOOTH",
"90 305 LINE SMOOTH",
"71 305 OFFCURVE",
"59 301 OFFCURVE",
"59 293 CURVE SMOOTH",
"59 281 OFFCURVE",
"71 274 OFFCURVE",
"90 275 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"208 186 LINE SMOOTH",
"302 189 OFFCURVE",
"393 191 OFFCURVE",
"482 191 CURVE SMOOTH",
"503 191 OFFCURVE",
"516 193 OFFCURVE",
"516 198 CURVE SMOOTH",
"516 206 OFFCURVE",
"453 210 OFFCURVE",
"335 210 CURVE SMOOTH",
"67 210 LINE SMOOTH",
"48 210 OFFCURVE",
"36 206 OFFCURVE",
"36 198 CURVE SMOOTH",
"36 186 OFFCURVE",
"48 180 OFFCURVE",
"67 180 CURVE"
);
}
);
width = 480;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"94 164 OFFCURVE",
"104 162 OFFCURVE",
"114 160 CURVE",
"87 95 OFFCURVE",
"74 46 OFFCURVE",
"75 12 CURVE SMOOTH",
"79 -34 OFFCURVE",
"107 -64 OFFCURVE",
"155 -61 CURVE SMOOTH",
"158 -61 OFFCURVE",
"160 -59 OFFCURVE",
"160 -56 CURVE SMOOTH",
"160 -50 OFFCURVE",
"157 -48 OFFCURVE",
"150 -50 CURVE SMOOTH",
"143 -52 LINE SMOOTH",
"129 -56 OFFCURVE",
"117 -44 OFFCURVE",
"110 -30 CURVE SMOOTH",
"102 -17 OFFCURVE",
"99 -2 OFFCURVE",
"99 16 CURVE SMOOTH",
"99 42 OFFCURVE",
"115 88 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE SMOOTH",
"298 151 OFFCURVE",
"464 198 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"191 490 LINE",
"121 475 OFFCURVE",
"145 453 OFFCURVE",
"188 461 CURVE",
"218 468 OFFCURVE",
"240 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE SMOOTH",
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"191 242 OFFCURVE",
"269 379 OFFCURVE",
"309 419 CURVE SMOOTH",
"312 423 OFFCURVE",
"313 425 OFFCURVE",
"313 427 CURVE SMOOTH",
"313 433 OFFCURVE",
"308 437 OFFCURVE",
"296 437 CURVE SMOOTH",
"278 437 OFFCURVE",
"266 431 OFFCURVE",
"258 419 CURVE SMOOTH",
"246 403 OFFCURVE",
"174 289 OFFCURVE",
"121 175 CURVE",
"111 178 OFFCURVE",
"101 181 OFFCURVE",
"92 186 CURVE",
"75 194 OFFCURVE",
"62 176 OFFCURVE",
"86 167 CURVE"
);
},
{
closed = 1;
nodes = (
"303 311 LINE SMOOTH",
"415 314 OFFCURVE",
"524 316 OFFCURVE",
"630 316 CURVE SMOOTH",
"655 316 OFFCURVE",
"671 318 OFFCURVE",
"671 323 CURVE SMOOTH",
"671 331 OFFCURVE",
"596 335 OFFCURVE",
"455 335 CURVE SMOOTH",
"135 335 LINE SMOOTH",
"112 335 OFFCURVE",
"98 331 OFFCURVE",
"98 323 CURVE SMOOTH",
"98 311 OFFCURVE",
"112 305 OFFCURVE",
"135 305 CURVE"
);
}
);
width = 641;
}
);
unicode = 20A7;
},
{
glyphname = peso;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"39 164 OFFCURVE",
"49 162 OFFCURVE",
"59 160 CURVE",
"32 95 OFFCURVE",
"19 46 OFFCURVE",
"20 12 CURVE SMOOTH",
"24 -34 OFFCURVE",
"52 -64 OFFCURVE",
"100 -61 CURVE SMOOTH",
"103 -61 OFFCURVE",
"105 -59 OFFCURVE",
"105 -56 CURVE SMOOTH",
"105 -50 OFFCURVE",
"102 -48 OFFCURVE",
"95 -50 CURVE SMOOTH",
"88 -52 LINE SMOOTH",
"74 -56 OFFCURVE",
"62 -44 OFFCURVE",
"55 -30 CURVE SMOOTH",
"47 -17 OFFCURVE",
"44 -2 OFFCURVE",
"44 16 CURVE SMOOTH",
"44 42 OFFCURVE",
"60 88 OFFCURVE",
"92 153 CURVE",
"108 152 OFFCURVE",
"125 151 OFFCURVE",
"142 151 CURVE SMOOTH",
"243 151 OFFCURVE",
"409 198 OFFCURVE",
"492 260 CURVE SMOOTH",
"547 300 OFFCURVE",
"575 344 OFFCURVE",
"575 393 CURVE SMOOTH",
"575 453 OFFCURVE",
"519 490 OFFCURVE",
"408 504 CURVE SMOOTH",
"378 507 OFFCURVE",
"346 509 OFFCURVE",
"313 509 CURVE SMOOTH",
"267 509 OFFCURVE",
"226 506 OFFCURVE",
"191 500 CURVE SMOOTH",
"136 490 LINE",
"66 475 OFFCURVE",
"90 453 OFFCURVE",
"133 461 CURVE",
"163 468 OFFCURVE",
"185 472 OFFCURVE",
"201 475 CURVE SMOOTH",
"235 484 OFFCURVE",
"278 487 OFFCURVE",
"329 487 CURVE SMOOTH",
"357 487 OFFCURVE",
"382 486 OFFCURVE",
"405 484 CURVE SMOOTH",
"493 474 OFFCURVE",
"536 444 OFFCURVE",
"536 396 CURVE SMOOTH",
"536 331 OFFCURVE",
"454 252 OFFCURVE",
"333 205 CURVE SMOOTH",
"267 179 OFFCURVE",
"199 166 OFFCURVE",
"129 166 CURVE SMOOTH",
"119 166 OFFCURVE",
"108 167 OFFCURVE",
"100 168 CURVE",
"136 242 OFFCURVE",
"214 379 OFFCURVE",
"254 419 CURVE SMOOTH",
"257 423 OFFCURVE",
"258 425 OFFCURVE",
"258 427 CURVE SMOOTH",
"258 433 OFFCURVE",
"253 437 OFFCURVE",
"241 437 CURVE SMOOTH",
"223 437 OFFCURVE",
"211 431 OFFCURVE",
"203 419 CURVE SMOOTH",
"191 403 OFFCURVE",
"119 289 OFFCURVE",
"66 175 CURVE",
"56 178 OFFCURVE",
"46 181 OFFCURVE",
"37 186 CURVE",
"20 194 OFFCURVE",
"7 176 OFFCURVE",
"31 167 CURVE"
);
},
{
closed = 1;
nodes = (
"269 356 LINE SMOOTH",
"381 359 OFFCURVE",
"489 361 OFFCURVE",
"596 361 CURVE SMOOTH",
"621 361 OFFCURVE",
"636 363 OFFCURVE",
"636 368 CURVE SMOOTH",
"636 377 OFFCURVE",
"561 381 OFFCURVE",
"420 381 CURVE SMOOTH",
"100 381 LINE SMOOTH",
"78 381 OFFCURVE",
"63 377 OFFCURVE",
"63 369 CURVE SMOOTH",
"63 357 OFFCURVE",
"78 350 OFFCURVE",
"100 351 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"241 262 LINE SMOOTH",
"353 265 OFFCURVE",
"462 267 OFFCURVE",
"568 267 CURVE SMOOTH",
"593 267 OFFCURVE",
"609 269 OFFCURVE",
"609 274 CURVE SMOOTH",
"609 282 OFFCURVE",
"534 286 OFFCURVE",
"393 286 CURVE SMOOTH",
"73 286 LINE SMOOTH",
"50 286 OFFCURVE",
"36 282 OFFCURVE",
"36 274 CURVE SMOOTH",
"36 262 OFFCURVE",
"50 256 OFFCURVE",
"73 256 CURVE"
);
}
);
width = 586;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -16, -49}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"41 162 OFFCURVE",
"88 150 OFFCURVE",
"112 150 CURVE",
"85 85 OFFCURVE",
"74 40 OFFCURVE",
"75 6 CURVE SMOOTH",
"79 -40 OFFCURVE",
"107 -70 OFFCURVE",
"155 -67 CURVE SMOOTH",
"158 -67 OFFCURVE",
"160 -65 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -56 OFFCURVE",
"157 -54 OFFCURVE",
"150 -56 CURVE SMOOTH",
"143 -58 LINE SMOOTH",
"129 -62 OFFCURVE",
"117 -50 OFFCURVE",
"110 -36 CURVE SMOOTH",
"102 -23 OFFCURVE",
"99 -8 OFFCURVE",
"99 10 CURVE SMOOTH",
"99 36 OFFCURVE",
"115 82 OFFCURVE",
"147 147 CURVE",
"163 146 OFFCURVE",
"180 145 OFFCURVE",
"197 145 CURVE SMOOTH",
"298 145 OFFCURVE",
"464 192 OFFCURVE",
"547 254 CURVE SMOOTH",
"602 294 OFFCURVE",
"630 338 OFFCURVE",
"630 387 CURVE SMOOTH",
"630 447 OFFCURVE",
"574 484 OFFCURVE",
"463 498 CURVE SMOOTH",
"433 501 OFFCURVE",
"401 503 OFFCURVE",
"368 503 CURVE SMOOTH",
"322 503 OFFCURVE",
"281 500 OFFCURVE",
"246 494 CURVE SMOOTH",
"191 484 LINE",
"121 469 OFFCURVE",
"145 447 OFFCURVE",
"188 455 CURVE",
"218 462 OFFCURVE",
"240 466 OFFCURVE",
"256 469 CURVE SMOOTH",
"290 478 OFFCURVE",
"333 481 OFFCURVE",
"384 481 CURVE SMOOTH",
"412 481 OFFCURVE",
"437 480 OFFCURVE",
"460 478 CURVE SMOOTH",
"548 468 OFFCURVE",
"591 438 OFFCURVE",
"591 390 CURVE SMOOTH",
"591 325 OFFCURVE",
"509 246 OFFCURVE",
"388 199 CURVE SMOOTH",
"322 173 OFFCURVE",
"254 160 OFFCURVE",
"184 160 CURVE SMOOTH",
"174 160 OFFCURVE",
"163 161 OFFCURVE",
"155 162 CURVE",
"191 236 OFFCURVE",
"269 373 OFFCURVE",
"309 413 CURVE SMOOTH",
"312 417 OFFCURVE",
"313 419 OFFCURVE",
"313 421 CURVE SMOOTH",
"313 427 OFFCURVE",
"308 431 OFFCURVE",
"296 431 CURVE SMOOTH",
"278 431 OFFCURVE",
"266 425 OFFCURVE",
"258 413 CURVE SMOOTH",
"246 397 OFFCURVE",
"172 281 OFFCURVE",
"119 167 CURVE",
"96 167 OFFCURVE",
"43 177 OFFCURVE",
"31 180 CURVE SMOOTH",
"18 183 OFFCURVE",
"9 174 OFFCURVE",
"33 165 CURVE SMOOTH"
);
}
);
width = 600;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"541 502 OFFCURVE",
"478 514 OFFCURVE",
"396 512 CURVE SMOOTH",
"369 511 OFFCURVE",
"339 509 OFFCURVE",
"308 506 CURVE",
"297 489 LINE",
"332 494 OFFCURVE",
"365 498 OFFCURVE",
"396 499 CURVE SMOOTH",
"465 502 OFFCURVE",
"517 493 OFFCURVE",
"554 471 CURVE SMOOTH",
"588 452 OFFCURVE",
"605 424 OFFCURVE",
"605 389 CURVE SMOOTH",
"605 360 OFFCURVE",
"593 330 OFFCURVE",
"568 299 CURVE SMOOTH",
"543 267 OFFCURVE",
"508 239 OFFCURVE",
"463 216 CURVE SMOOTH",
"441 205 OFFCURVE",
"417 194 OFFCURVE",
"391 185 CURVE",
"340 208 OFFCURVE",
"226 251 OFFCURVE",
"125 251 CURVE SMOOTH",
"82 251 OFFCURVE",
"33 246 OFFCURVE",
"33 211 CURVE SMOOTH",
"33 179 OFFCURVE",
"79 141 OFFCURVE",
"171 134 CURVE SMOOTH",
"226 130 OFFCURVE",
"293 137 OFFCURVE",
"344 148 CURVE SMOOTH",
"367 153 LINE",
"476 98 OFFCURVE",
"530 37 OFFCURVE",
"530 -31 CURVE SMOOTH",
"530 -42 OFFCURVE",
"527 -53 OFFCURVE",
"525 -64 CURVE SMOOTH",
"524 -71 LINE SMOOTH",
"523 -76 OFFCURVE",
"526 -78 OFFCURVE",
"529 -78 CURVE SMOOTH",
"534 -78 OFFCURVE",
"538 -73 OFFCURVE",
"541 -64 CURVE SMOOTH",
"546 -44 OFFCURVE",
"549 -25 OFFCURVE",
"549 -6 CURVE SMOOTH",
"549 65 OFFCURVE",
"507 124 OFFCURVE",
"424 169 CURVE",
"443 176 OFFCURVE",
"460 183 OFFCURVE",
"477 190 CURVE SMOOTH",
"531 214 OFFCURVE",
"573 244 OFFCURVE",
"604 279 CURVE SMOOTH",
"633 312 OFFCURVE",
"648 346 OFFCURVE",
"648 379 CURVE SMOOTH",
"648 419 OFFCURVE",
"627 451 OFFCURVE",
"586 476 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"73 188 OFFCURVE",
"66 197 OFFCURVE",
"66 206 CURVE SMOOTH",
"66 219 OFFCURVE",
"80 226 OFFCURVE",
"108 227 CURVE",
"165 227 OFFCURVE",
"252 206 OFFCURVE",
"334 168 CURVE",
"329 167 OFFCURVE",
"324 165 OFFCURVE",
"319 164 CURVE SMOOTH",
"282 155 OFFCURVE",
"161 149 OFFCURVE",
"86 178 CURVE"
);
},
{
closed = 1;
nodes = (
"327 489 LINE SMOOTH",
"439 492 OFFCURVE",
"547 494 OFFCURVE",
"654 494 CURVE SMOOTH",
"679 494 OFFCURVE",
"694 496 OFFCURVE",
"694 501 CURVE SMOOTH",
"694 510 OFFCURVE",
"619 514 OFFCURVE",
"478 514 CURVE SMOOTH",
"158 514 LINE SMOOTH",
"136 514 OFFCURVE",
"121 510 OFFCURVE",
"121 502 CURVE SMOOTH",
"121 490 OFFCURVE",
"136 483 OFFCURVE",
"158 484 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"308 347 LINE SMOOTH",
"420 350 OFFCURVE",
"529 352 OFFCURVE",
"635 352 CURVE SMOOTH",
"660 352 OFFCURVE",
"676 354 OFFCURVE",
"676 359 CURVE SMOOTH",
"676 367 OFFCURVE",
"601 371 OFFCURVE",
"460 371 CURVE SMOOTH",
"140 371 LINE SMOOTH",
"117 371 OFFCURVE",
"103 367 OFFCURVE",
"103 359 CURVE SMOOTH",
"103 347 OFFCURVE",
"117 341 OFFCURVE",
"140 341 CURVE"
);
}
);
width = 604;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"340 -38 OFFCURVE",
"361.667 -34.667 OFFCURVE",
"379 -28 CURVE SMOOTH",
"403 -18.667 OFFCURVE",
"414 -2 OFFCURVE",
"414 18 CURVE SMOOTH",
"414 30 OFFCURVE",
"404.333 41 OFFCURVE",
"391 53 CURVE",
"389.667 53.667 OFFCURVE",
"388.333 54 OFFCURVE",
"387 54 CURVE SMOOTH",
"385 54 OFFCURVE",
"384 53 OFFCURVE",
"384 51 CURVE SMOOTH",
"384 49.667 OFFCURVE",
"387 46.333 OFFCURVE",
"393 41 CURVE SMOOTH",
"399.667 34.333 OFFCURVE",
"400 28.667 OFFCURVE",
"400 22 CURVE SMOOTH",
"400 6.667 OFFCURVE",
"389.333 -4.667 OFFCURVE",
"368 -12 CURVE SMOOTH",
"352 -16.667 OFFCURVE",
"334 -19 OFFCURVE",
"314 -19 CURVE SMOOTH",
"295.333 -19 OFFCURVE",
"273 -16 OFFCURVE",
"247 -10 CURVE SMOOTH",
"219.667 -3.333 OFFCURVE",
"198.333 4.667 OFFCURVE",
"183 14 CURVE",
"196.333 26 OFFCURVE",
"212 46.667 OFFCURVE",
"228 76 CURVE SMOOTH",
"231.333 82.667 OFFCURVE",
"235 91.833 OFFCURVE",
"239 103.5 CURVE SMOOTH",
"243 115.167 OFFCURVE",
"248.667 129.333 OFFCURVE",
"256 146 CURVE",
"353 146 LINE SMOOTH",
"361 146 OFFCURVE",
"369 153 OFFCURVE",
"369 161 CURVE SMOOTH",
"369 163 OFFCURVE",
"367.667 164 OFFCURVE",
"365 164 CURVE SMOOTH",
"260 164 LINE",
"278.667 210.667 OFFCURVE",
"293.667 238.667 OFFCURVE",
"303 256 CURVE SMOOTH",
"325.667 296 OFFCURVE",
"354.667 325.333 OFFCURVE",
"372 328 CURVE SMOOTH",
"388 329.333 OFFCURVE",
"398 322 OFFCURVE",
"394 302 CURVE SMOOTH",
"390 282 OFFCURVE",
"375.667 262.667 OFFCURVE",
"361 248 CURVE SMOOTH",
"355.667 242.667 OFFCURVE",
"349.667 239.333 OFFCURVE",
"347 238 CURVE SMOOTH",
"341 233.333 OFFCURVE",
"337.667 229.333 OFFCURVE",
"337 226 CURVE SMOOTH",
"336.333 224.667 OFFCURVE",
"337 224 OFFCURVE",
"339 224 CURVE SMOOTH",
"340.333 224 OFFCURVE",
"342.667 224.667 OFFCURVE",
"346 226 CURVE SMOOTH",
"379.782 244.19 OFFCURVE",
"414 273.903 OFFCURVE",
"414 304 CURVE SMOOTH",
"414 331.333 OFFCURVE",
"400 345 OFFCURVE",
"372 345 CURVE SMOOTH",
"353.333 345 OFFCURVE",
"332.333 332.667 OFFCURVE",
"309 308 CURVE SMOOTH",
"281.143 277.61 OFFCURVE",
"247.594 198.376 OFFCURVE",
"239 164 CURVE",
"181 164 LINE SMOOTH",
"174.333 164 OFFCURVE",
"168 156.667 OFFCURVE",
"168 150 CURVE SMOOTH",
"168 147.333 OFFCURVE",
"169.667 146 OFFCURVE",
"173 146 CURVE SMOOTH",
"232 146 LINE",
"212 88.667 OFFCURVE",
"193.333 48.333 OFFCURVE",
"172 19 CURVE",
"106.667 55.667 OFFCURVE",
"65 74 OFFCURVE",
"47 74 CURVE SMOOTH",
"33.667 74 OFFCURVE",
"19 69.333 OFFCURVE",
"19 56 CURVE SMOOTH",
"19 36 OFFCURVE",
"30.333 16 OFFCURVE",
"41 4 CURVE SMOOTH",
"55.667 -12 OFFCURVE",
"84.333 -17 OFFCURVE",
"103 -17 CURVE SMOOTH",
"125 -17 OFFCURVE",
"148 -9.333 OFFCURVE",
"172 6 CURVE",
"226.667 -22 OFFCURVE",
"273.333 -38 OFFCURVE",
"316 -38 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"87 -6 OFFCURVE",
"73.333 -0.667 OFFCURVE",
"60 10 CURVE SMOOTH",
"47.333 20.667 OFFCURVE",
"41 33 OFFCURVE",
"41 47 CURVE SMOOTH",
"41 49.667 OFFCURVE",
"43.333 51 OFFCURVE",
"48 51 CURVE SMOOTH",
"58.667 51 OFFCURVE",
"77 46 OFFCURVE",
"103 36 CURVE SMOOTH",
"129 26 OFFCURVE",
"146.667 17.333 OFFCURVE",
"156 10 CURVE",
"140.667 -0.667 OFFCURVE",
"122.333 -6 OFFCURVE",
"101 -6 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012106 5 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 6 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01225 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01297 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 106 22 106 38 106 54 106 70 106 86 106 102 106 118 106 134 106 150 106 166 106 182 106 198 106 214 106 230 106 246 106 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 106 22 106 38 106 54 106 70 106 86 106 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 106 117 106 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01284 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012110 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 421;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"30 350 OFFCURVE",
"12 320 OFFCURVE",
"12 276 CURVE SMOOTH",
"12 238 OFFCURVE",
"30 205 OFFCURVE",
"65 176 CURVE",
"70 173 OFFCURVE",
"75 171 OFFCURVE",
"79 171 CURVE SMOOTH",
"82 171 OFFCURVE",
"84 172 OFFCURVE",
"84 174 CURVE SMOOTH",
"84 177 OFFCURVE",
"81 181 OFFCURVE",
"74 185 CURVE SMOOTH",
"47 201 OFFCURVE",
"33 224 OFFCURVE",
"33 253 CURVE SMOOTH",
"33 316 OFFCURVE",
"99 397 OFFCURVE",
"171 449 CURVE SMOOTH",
"226 490 OFFCURVE",
"270 512 OFFCURVE",
"304 515 CURVE SMOOTH",
"346 519 OFFCURVE",
"359 503 OFFCURVE",
"359 452 CURVE SMOOTH",
"359 417 OFFCURVE",
"350 367 OFFCURVE",
"324 306 CURVE SMOOTH",
"246 124 OFFCURVE",
"211 49 OFFCURVE",
"211 6 CURVE SMOOTH",
"211 -37 OFFCURVE",
"228 -59 OFFCURVE",
"261 -59 CURVE SMOOTH",
"299 -59 OFFCURVE",
"349 -28 OFFCURVE",
"412 35 CURVE SMOOTH",
"452 74 OFFCURVE",
"499 130 OFFCURVE",
"553 201 CURVE",
"548 174 OFFCURVE",
"546 148 OFFCURVE",
"546 123 CURVE SMOOTH",
"546 0 OFFCURVE",
"597 -59 OFFCURVE",
"699 -54 CURVE SMOOTH",
"751 -52 OFFCURVE",
"806 -26 OFFCURVE",
"863 23 CURVE SMOOTH",
"927 78 OFFCURVE",
"973 147 OFFCURVE",
"1000 230 CURVE SMOOTH",
"1015 276 OFFCURVE",
"1023 321 OFFCURVE",
"1023 366 CURVE SMOOTH",
"1023 415 OFFCURVE",
"1013 453 OFFCURVE",
"993 481 CURVE SMOOTH",
"970 516 OFFCURVE",
"933 533 OFFCURVE",
"883 533 CURVE SMOOTH",
"844 533 OFFCURVE",
"807 523 OFFCURVE",
"774 503 CURVE SMOOTH",
"772 502 OFFCURVE",
"771 500 OFFCURVE",
"771 497 CURVE SMOOTH",
"771 493 OFFCURVE",
"773 491 OFFCURVE",
"777 491 CURVE SMOOTH",
"780 491 LINE",
"812 510 OFFCURVE",
"846 520 OFFCURVE",
"883 520 CURVE SMOOTH",
"954 520 OFFCURVE",
"990 477 OFFCURVE",
"990 391 CURVE SMOOTH",
"990 343 OFFCURVE",
"980 294 OFFCURVE",
"961 243 CURVE SMOOTH",
"934 173 OFFCURVE",
"898 113 OFFCURVE",
"853 63 CURVE SMOOTH",
"803 6 OFFCURVE",
"751 -27 OFFCURVE",
"698 -34 CURVE SMOOTH",
"691 -35 OFFCURVE",
"685 -35 OFFCURVE",
"678 -35 CURVE SMOOTH",
"614 -35 OFFCURVE",
"582 9 OFFCURVE",
"582 96 CURVE SMOOTH",
"582 137 OFFCURVE",
"589 181 OFFCURVE",
"604 228 CURVE SMOOTH",
"617 272 OFFCURVE",
"633 306 OFFCURVE",
"652 331 CURVE",
"648 334 OFFCURVE",
"642 336 OFFCURVE",
"635 336 CURVE SMOOTH",
"620 336 OFFCURVE",
"601 328 OFFCURVE",
"597 321 CURVE SMOOTH",
"528 200 OFFCURVE",
"462 110 OFFCURVE",
"398 49 CURVE SMOOTH",
"346 0 OFFCURVE",
"310 -24 OFFCURVE",
"289 -24 CURVE SMOOTH",
"275 -24 OFFCURVE",
"268 -13 OFFCURVE",
"268 8 CURVE SMOOTH",
"268 50 OFFCURVE",
"297 134 OFFCURVE",
"326 204 CURVE SMOOTH",
"360 285 LINE SMOOTH",
"387 348 OFFCURVE",
"400 400 OFFCURVE",
"400 441 CURVE SMOOTH",
"400 503 OFFCURVE",
"373 534 OFFCURVE",
"320 534 CURVE SMOOTH",
"261 534 OFFCURVE",
"225 516 OFFCURVE",
"153 469 CURVE SMOOTH",
"120 448 OFFCURVE",
"93 425 OFFCURVE",
"70 399 CURVE"
);
},
{
closed = 1;
nodes = (
"541 292 LINE SMOOTH",
"706 295 OFFCURVE",
"866 297 OFFCURVE",
"1025 297 CURVE SMOOTH",
"1061 297 OFFCURVE",
"1084 299 OFFCURVE",
"1084 304 CURVE SMOOTH",
"1084 313 OFFCURVE",
"973 317 OFFCURVE",
"764 317 CURVE SMOOTH",
"291 317 LINE SMOOTH",
"258 317 OFFCURVE",
"236 313 OFFCURVE",
"236 305 CURVE SMOOTH",
"236 293 OFFCURVE",
"258 286 OFFCURVE",
"291 287 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"499 198 LINE SMOOTH",
"665 201 OFFCURVE",
"826 203 OFFCURVE",
"983 203 CURVE SMOOTH",
"1020 203 OFFCURVE",
"1044 205 OFFCURVE",
"1044 210 CURVE SMOOTH",
"1044 218 OFFCURVE",
"933 222 OFFCURVE",
"724 222 CURVE SMOOTH",
"251 222 LINE SMOOTH",
"217 222 OFFCURVE",
"196 218 OFFCURVE",
"196 210 CURVE SMOOTH",
"196 198 OFFCURVE",
"217 192 OFFCURVE",
"251 192 CURVE"
);
}
);
width = 1084;
}
);
unicode = 20A9;
},
{
glyphname = yen;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"124.667 6 OFFCURVE",
"155 33 OFFCURVE",
"191 73 CURVE SMOOTH",
"217.667 101 OFFCURVE",
"231.333 120.333 OFFCURVE",
"238 131 CURVE",
"284 131 LINE SMOOTH",
"289.333 131 OFFCURVE",
"300 130.667 OFFCURVE",
"300 140 CURVE SMOOTH",
"300 142 OFFCURVE",
"297.333 143.333 OFFCURVE",
"292 144 CURVE",
"246 144 LINE",
"249.875 147.875 OFFCURVE",
"272.033 177.065 OFFCURVE",
"274 181 CURVE",
"313 181 LINE SMOOTH",
"317 181 OFFCURVE",
"325 181.333 OFFCURVE",
"325 188 CURVE SMOOTH",
"325 194.667 OFFCURVE",
"320.667 194 OFFCURVE",
"314 194 CURVE SMOOTH",
"284 194 LINE",
"307.893 226.581 OFFCURVE",
"346.311 271.562 OFFCURVE",
"383 305.5 CURVE SMOOTH",
"415.869 335.904 OFFCURVE",
"457.235 371 OFFCURVE",
"482 371 CURVE SMOOTH",
"490 371 OFFCURVE",
"493 368.667 OFFCURVE",
"497 366 CURVE SMOOTH",
"505 360 LINE SMOOTH",
"505.667 359.333 OFFCURVE",
"506.667 359 OFFCURVE",
"508 359 CURVE SMOOTH",
"512 359 OFFCURVE",
"512 364 OFFCURVE",
"512 368 CURVE SMOOTH",
"512 382.667 OFFCURVE",
"505.333 385 OFFCURVE",
"496 385 CURVE SMOOTH",
"444.084 385 OFFCURVE",
"412.309 361.882 OFFCURVE",
"346 291 CURVE SMOOTH",
"334.033 279.033 OFFCURVE",
"288.613 224.15 OFFCURVE",
"272 202 CURVE",
"267.278 192.557 OFFCURVE",
"260.24 193.4 OFFCURVE",
"266 203 CURVE",
"283.333 240.333 OFFCURVE",
"287 274.667 OFFCURVE",
"287 288 CURVE SMOOTH",
"287 359.998 OFFCURVE",
"259.607 380.321 OFFCURVE",
"203 369 CURVE SMOOTH",
"141.374 360.596 OFFCURVE",
"50.724 292.607 OFFCURVE",
"76 237 CURVE SMOOTH",
"89.433 207.896 OFFCURVE",
"123.178 200 OFFCURVE",
"136 200 CURVE",
"140 201.333 OFFCURVE",
"141.333 203.667 OFFCURVE",
"140 207 CURVE SMOOTH",
"139.333 209 OFFCURVE",
"137 210.333 OFFCURVE",
"133 211 CURVE SMOOTH",
"125 213.667 OFFCURVE",
"110.333 216.333 OFFCURVE",
"101 235 CURVE",
"77.896 291.477 OFFCURVE",
"137.646 344.941 OFFCURVE",
"192 354 CURVE SMOOTH",
"243.491 363.087 OFFCURVE",
"260 354.44 OFFCURVE",
"260 285 CURVE SMOOTH",
"260 245.753 OFFCURVE",
"252.279 232.906 OFFCURVE",
"240 193 CURVE",
"197 193 LINE SMOOTH",
"193 193 OFFCURVE",
"190.667 192 OFFCURVE",
"190 190 CURVE SMOOTH",
"189 186 LINE SMOOTH",
"189 182 OFFCURVE",
"193.333 181 OFFCURVE",
"196 181 CURVE SMOOTH",
"236 181 LINE",
"230.667 169 OFFCURVE",
"229 164.333 OFFCURVE",
"217 143 CURVE",
"174 143 LINE SMOOTH",
"169.333 143 OFFCURVE",
"166.5 142.167 OFFCURVE",
"165.5 140.5 CURVE SMOOTH",
"164.5 138.833 OFFCURVE",
"164 137.333 OFFCURVE",
"164 136 CURVE SMOOTH",
"164 132 OFFCURVE",
"170 131 OFFCURVE",
"174 131 CURVE SMOOTH",
"211 131 LINE",
"167.382 48.125 OFFCURVE",
"115.562 15 OFFCURVE",
"81 15 CURVE SMOOTH",
"57 15 OFFCURVE",
"41 30.333 OFFCURVE",
"33 53 CURVE SMOOTH",
"29.5 62.5 LINE SMOOTH",
"29.167 63.5 OFFCURVE",
"28.667 64 OFFCURVE",
"28 64 CURVE SMOOTH",
"26.667 64 OFFCURVE",
"24.333 62 OFFCURVE",
"21 58 CURVE SMOOTH",
"17.667 54 OFFCURVE",
"16 48.667 OFFCURVE",
"16 42 CURVE SMOOTH",
"16 20.667 OFFCURVE",
"38 6 OFFCURVE",
"78 6 CURVE SMOOTH"
);
}
);
width = 386;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = bullet;
transform = "{0.6821, 0, 0, 0.6821, 37, 143}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 2219;
},
{
glyphname = commercialMinusSign;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = slash;
},
{
name = period;
transform = "{1.84463, 0, 0, 1.84463, 161, 118}";
},
{
name = period;
transform = "{1.84463, 0, 0, 1.84463, -16, 286}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 487;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = slash;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 343;
}
);
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"176 32 OFFCURVE",
"187.667 37.667 OFFCURVE",
"189 43 CURVE SMOOTH",
"203 128 LINE",
"246.333 130.667 OFFCURVE",
"274 132 OFFCURVE",
"286 132 CURVE SMOOTH",
"294.667 132 OFFCURVE",
"299 134.667 OFFCURVE",
"299 140 CURVE SMOOTH",
"299 146 OFFCURVE",
"295.333 149 OFFCURVE",
"288 149 CURVE SMOOTH",
"207 149 LINE",
"215 195.667 OFFCURVE",
"221.333 227 OFFCURVE",
"226 243 CURVE SMOOTH",
"227.333 249.667 OFFCURVE",
"225.667 253 OFFCURVE",
"221 253 CURVE SMOOTH",
"214.333 253 OFFCURVE",
"210 248.667 OFFCURVE",
"208 240 CURVE SMOOTH",
"186 149 LINE",
"175.333 149 OFFCURVE",
"158.667 149.667 OFFCURVE",
"136 151 CURVE SMOOTH",
"99 151 LINE SMOOTH",
"89.667 151 OFFCURVE",
"85 145.333 OFFCURVE",
"85 134 CURVE SMOOTH",
"85 125.333 OFFCURVE",
"87.333 121 OFFCURVE",
"92 121 CURVE SMOOTH",
"127.333 123.667 OFFCURVE",
"156.667 125.667 OFFCURVE",
"180 127 CURVE",
"159 43 LINE SMOOTH",
"157 35.667 OFFCURVE",
"160 32 OFFCURVE",
"168 32 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 11 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 11 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 265;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"126 219 OFFCURVE",
"146 196 OFFCURVE",
"162 177 CURVE SMOOTH",
"177 159 OFFCURVE",
"197 136 OFFCURVE",
"222 104 CURVE SMOOTH",
"236 86 OFFCURVE",
"251 95 OFFCURVE",
"242 108 CURVE SMOOTH",
"213 155 OFFCURVE",
"181 191 OFFCURVE",
"166 211 CURVE SMOOTH",
"152 230 OFFCURVE",
"139 245 OFFCURVE",
"130 255 CURVE SMOOTH",
"112 274 OFFCURVE",
"94 261 OFFCURVE",
"103 249 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"43 95 OFFCURVE",
"53 85 OFFCURVE",
"79 99 CURVE SMOOTH",
"95 108 OFFCURVE",
"115 124 OFFCURVE",
"139 143 CURVE SMOOTH",
"164 163 OFFCURVE",
"234 215 OFFCURVE",
"287 261 CURVE SMOOTH",
"305 275 OFFCURVE",
"297 284 OFFCURVE",
"276 269 CURVE SMOOTH",
"235 237 OFFCURVE",
"178 195 OFFCURVE",
"153 178 CURVE SMOOTH",
"126 158 OFFCURVE",
"94 134 OFFCURVE",
"56 105 CURVE SMOOTH"
);
}
);
width = 347;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"71 165.333 OFFCURVE",
"96.667 167.667 OFFCURVE",
"118 171 CURVE SMOOTH",
"136.667 174.333 OFFCURVE",
"162.333 176.333 OFFCURVE",
"195 177 CURVE SMOOTH",
"213.667 177.667 OFFCURVE",
"223 180.333 OFFCURVE",
"223 185 CURVE SMOOTH",
"223 190.333 OFFCURVE",
"213.667 194 OFFCURVE",
"195 196 CURVE SMOOTH",
"150.333 201.333 OFFCURVE",
"118 204 OFFCURVE",
"98 204 CURVE SMOOTH",
"78 204 OFFCURVE",
"62.333 202 OFFCURVE",
"51 198 CURVE SMOOTH",
"35 192.667 OFFCURVE",
"15 180 OFFCURVE",
"15 172 CURVE SMOOTH",
"15 166 OFFCURVE",
"23.667 163.333 OFFCURVE",
"41 164 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"107 69 OFFCURVE",
"121 82 OFFCURVE",
"121 98 CURVE SMOOTH",
"121 114 OFFCURVE",
"107 127 OFFCURVE",
"91 127 CURVE SMOOTH",
"73.667 127 OFFCURVE",
"61 114 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 82 OFFCURVE",
"73.667 69 OFFCURVE",
"91 69 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"154 239 OFFCURVE",
"168 252 OFFCURVE",
"168 268 CURVE SMOOTH",
"168 282.667 OFFCURVE",
"154 296 OFFCURVE",
"138 296 CURVE SMOOTH",
"120.667 296 OFFCURVE",
"108 282.667 OFFCURVE",
"108 268 CURVE SMOOTH",
"108 252 OFFCURVE",
"120.667 239 OFFCURVE",
"138 239 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 18 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01221 15 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"151 189 LINE SMOOTH",
"183 192.333 OFFCURVE",
"214.333 194 OFFCURVE",
"245 194 CURVE SMOOTH",
"252.333 194 OFFCURVE",
"256 196.333 OFFCURVE",
"256 201 CURVE SMOOTH",
"256 209.667 OFFCURVE",
"235.333 214 OFFCURVE",
"194 214 CURVE SMOOTH",
"103 214 LINE SMOOTH",
"95.667 214 OFFCURVE",
"92 210 OFFCURVE",
"92 202 CURVE SMOOTH",
"92 190 OFFCURVE",
"95.667 184 OFFCURVE",
"103 184 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"151 127 LINE SMOOTH",
"183 130.333 OFFCURVE",
"214.333 132 OFFCURVE",
"245 132 CURVE SMOOTH",
"252.333 132 OFFCURVE",
"256 134.333 OFFCURVE",
"256 139 CURVE SMOOTH",
"256 147 OFFCURVE",
"235.333 151 OFFCURVE",
"194 151 CURVE SMOOTH",
"103 151 LINE SMOOTH",
"95.667 151 OFFCURVE",
"92 147 OFFCURVE",
"92 139 CURVE SMOOTH",
"92 127 OFFCURVE",
"95.667 121 OFFCURVE",
"103 121 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01224 4 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 4 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 85 OFFCURVE",
"117.667 87.667 OFFCURVE",
"121 93 CURVE SMOOTH",
"147 126 LINE",
"182.333 130 OFFCURVE",
"215 132 OFFCURVE",
"245 132 CURVE SMOOTH",
"252.333 132 OFFCURVE",
"256 134.333 OFFCURVE",
"256 139 CURVE SMOOTH",
"256 145.667 OFFCURVE",
"251.667 149 OFFCURVE",
"243 149 CURVE SMOOTH",
"166 151 LINE",
"200 193 LINE",
"215.333 193.667 OFFCURVE",
"230.333 194 OFFCURVE",
"245 194 CURVE SMOOTH",
"252.333 194 OFFCURVE",
"256 196.333 OFFCURVE",
"256 201 CURVE SMOOTH",
"256 207.667 OFFCURVE",
"251.667 211 OFFCURVE",
"243 211 CURVE SMOOTH",
"214 212 LINE",
"221.333 221.333 OFFCURVE",
"228 230.333 OFFCURVE",
"234 239 CURVE SMOOTH",
"235.333 241 OFFCURVE",
"236 242.667 OFFCURVE",
"236 244 CURVE SMOOTH",
"236 245.333 OFFCURVE",
"235 246 OFFCURVE",
"233 246 CURVE SMOOTH",
"227 246 OFFCURVE",
"222 243.333 OFFCURVE",
"218 238 CURVE SMOOTH",
"212 229.333 OFFCURVE",
"205.667 221 OFFCURVE",
"199 213 CURVE",
"103 214 LINE SMOOTH",
"95.667 214 OFFCURVE",
"92 210 OFFCURVE",
"92 202 CURVE SMOOTH",
"92 194 OFFCURVE",
"97.667 182.667 OFFCURVE",
"103 184 CURVE",
"141 188.667 OFFCURVE",
"168 191.333 OFFCURVE",
"184 192 CURVE",
"150 151 LINE",
"103 151 LINE SMOOTH",
"95.667 151 OFFCURVE",
"92 147 OFFCURVE",
"92 139 CURVE SMOOTH",
"92 131 OFFCURVE",
"97.667 121 OFFCURVE",
"103 121 CURVE SMOOTH",
"129 124 LINE",
"119.667 112.667 OFFCURVE",
"111.333 102.333 OFFCURVE",
"104 93 CURVE",
"103 88 LINE SMOOTH",
"103 86 OFFCURVE",
"104.333 85 OFFCURVE",
"107 85 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 4 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01212 6 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27 14 LINE",
"155 94 LINE",
"151.667 110 OFFCURVE",
"148.667 126 OFFCURVE",
"146 142 CURVE SMOOTH",
"142 162 OFFCURVE",
"137.667 177.667 OFFCURVE",
"133 189 CURVE",
"127 192 LINE",
"122 189 LINE",
"119 184 LINE",
"118 99 LINE",
"67 62 LINE SMOOTH",
"33.667 37.333 OFFCURVE",
"17 22.333 OFFCURVE",
"17 17 CURVE",
"18 14 LINE",
"23 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187.333 164 OFFCURVE",
"203.333 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 192.667 OFFCURVE",
"156.667 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89.333 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"43.667 53 OFFCURVE",
"121 101.667 OFFCURVE",
"133 111 CURVE SMOOTH",
"135.667 113 OFFCURVE",
"137 117.667 OFFCURVE",
"137 125 CURVE SMOOTH",
"137 132.333 OFFCURVE",
"135.667 137.333 OFFCURVE",
"133 140 CURVE SMOOTH",
"119 153.333 OFFCURVE",
"108.333 163 OFFCURVE",
"101 169 CURVE SMOOTH",
"41 225 LINE",
"40 226 LINE",
"38.667 225.333 OFFCURVE",
"38 223 OFFCURVE",
"38 219 CURVE SMOOTH",
"38 215.667 OFFCURVE",
"38.333 212.667 OFFCURVE",
"39 210 CURVE",
"49 196 OFFCURVE",
"58 185 OFFCURVE",
"66 177 CURVE SMOOTH",
"78.667 162.333 OFFCURVE",
"92 147.667 OFFCURVE",
"106 133 CURVE",
"41 69 LINE SMOOTH",
"35.667 63.667 OFFCURVE",
"33 59.667 OFFCURVE",
"33 57 CURVE SMOOTH",
"33 54.333 OFFCURVE",
"34.333 53 OFFCURVE",
"37 53 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131 13 LINE",
"131 26 LINE",
"129 27 LINE",
"11 27 LINE",
"9 26 LINE",
"9 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01229 1 25 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 158;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"131.667 53 OFFCURVE",
"133 54.333 OFFCURVE",
"133 57 CURVE SMOOTH",
"133 59.667 OFFCURVE",
"130 63.667 OFFCURVE",
"124 69 CURVE SMOOTH",
"59 133 LINE",
"74.333 149 OFFCURVE",
"87.667 163.667 OFFCURVE",
"99 177 CURVE",
"105.667 183 OFFCURVE",
"112 189.333 OFFCURVE",
"118 196 CURVE SMOOTH",
"124.667 204.667 OFFCURVE",
"128 212.333 OFFCURVE",
"128 219 CURVE SMOOTH",
"128 223.667 OFFCURVE",
"127.333 226 OFFCURVE",
"126 226 CURVE SMOOTH",
"123.333 226 OFFCURVE",
"41 149.333 OFFCURVE",
"33 140 CURVE SMOOTH",
"30.333 137.333 OFFCURVE",
"29 132.333 OFFCURVE",
"29 125 CURVE SMOOTH",
"29 117.667 OFFCURVE",
"30.333 113 OFFCURVE",
"33 111 CURVE SMOOTH",
"39.667 105.667 OFFCURVE",
"56 95 OFFCURVE",
"82 79 CURVE SMOOTH",
"110 61.667 OFFCURVE",
"125.667 53 OFFCURVE",
"129 53 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"131 13 LINE",
"131 26 LINE",
"129 27 LINE",
"11 27 LINE",
"9 26 LINE",
"9 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01229 1 25 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 158;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"180 63 OFFCURVE",
"191.667 67.667 OFFCURVE",
"193 73 CURVE SMOOTH",
"198.333 107.667 OFFCURVE",
"203 136.333 OFFCURVE",
"207 159 CURVE",
"249.667 161.667 OFFCURVE",
"277.333 163 OFFCURVE",
"290 163 CURVE SMOOTH",
"298.667 163 OFFCURVE",
"303 165.667 OFFCURVE",
"303 171 CURVE SMOOTH",
"303 176.333 OFFCURVE",
"299.333 179 OFFCURVE",
"292 179 CURVE SMOOTH",
"256 179.667 OFFCURVE",
"229 180 OFFCURVE",
"211 180 CURVE",
"229 273 LINE SMOOTH",
"231 280.333 OFFCURVE",
"229.667 284 OFFCURVE",
"225 284 CURVE SMOOTH",
"218.333 284 OFFCURVE",
"214 279.667 OFFCURVE",
"212 271 CURVE SMOOTH",
"190 180 LINE",
"179.333 180 OFFCURVE",
"162.333 180.333 OFFCURVE",
"139 181 CURVE SMOOTH",
"103 182 LINE SMOOTH",
"93.667 182 OFFCURVE",
"89 176 OFFCURVE",
"89 164 CURVE SMOOTH",
"89 155.333 OFFCURVE",
"91.333 151.333 OFFCURVE",
"96 152 CURVE SMOOTH",
"131.333 154.667 OFFCURVE",
"160.667 156.667 OFFCURVE",
"184 158 CURVE",
"163 73 LINE SMOOTH",
"161 66.333 OFFCURVE",
"164 63 OFFCURVE",
"172 63 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"140.333 19.333 OFFCURVE",
"195.333 22 OFFCURVE",
"258 22 CURVE SMOOTH",
"265.333 22 OFFCURVE",
"269 24.333 OFFCURVE",
"269 29 CURVE SMOOTH",
"269 35.667 OFFCURVE",
"264.667 39 OFFCURVE",
"256 39 CURVE SMOOTH",
"231.333 39 OFFCURVE",
"198.333 40 OFFCURVE",
"157 42 CURVE SMOOTH",
"93 44 LINE SMOOTH",
"86.333 44 OFFCURVE",
"83 40 OFFCURVE",
"83 32 CURVE SMOOTH",
"83 24 OFFCURVE",
"87.667 12.667 OFFCURVE",
"93 14 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01244 4 35 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 11 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 11 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"149.333 151 OFFCURVE",
"153 151.667 OFFCURVE",
"157 153 CURVE SMOOTH",
"163.667 155 OFFCURVE",
"171.667 159.667 OFFCURVE",
"181 167 CURVE SMOOTH",
"192.333 175.667 OFFCURVE",
"198 183 OFFCURVE",
"198 189 CURVE",
"196.667 189.667 OFFCURVE",
"196 190.333 OFFCURVE",
"196 191 CURVE",
"185 180 LINE SMOOTH",
"177.667 172.667 OFFCURVE",
"168.333 169 OFFCURVE",
"157 169 CURVE SMOOTH",
"146.333 169 OFFCURVE",
"131.5 173 OFFCURVE",
"112.5 181 CURVE SMOOTH",
"93.5 189 OFFCURVE",
"79 193 OFFCURVE",
"69 193 CURVE SMOOTH",
"53 193 OFFCURVE",
"23 172 OFFCURVE",
"23 156 CURVE SMOOTH",
"23 154.667 OFFCURVE",
"24 154 OFFCURVE",
"26 154 CURVE SMOOTH",
"26.667 154 OFFCURVE",
"29.667 157.333 OFFCURVE",
"35 164 CURVE SMOOTH",
"40.333 170.667 OFFCURVE",
"48.333 174 OFFCURVE",
"59 174 CURVE SMOOTH",
"70.333 174 OFFCURVE",
"85.333 170.167 OFFCURVE",
"104 162.5 CURVE SMOOTH",
"122.667 154.833 OFFCURVE",
"136.667 151 OFFCURVE",
"146 151 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"149.333 91 OFFCURVE",
"153 91.667 OFFCURVE",
"157 93 CURVE SMOOTH",
"163.667 95 OFFCURVE",
"171.667 99.667 OFFCURVE",
"181 107 CURVE SMOOTH",
"192.333 115.667 OFFCURVE",
"198 123 OFFCURVE",
"198 129 CURVE",
"196.667 129.667 OFFCURVE",
"196 130.333 OFFCURVE",
"196 131 CURVE",
"185 120 LINE SMOOTH",
"177.667 112.667 OFFCURVE",
"168.333 109 OFFCURVE",
"157 109 CURVE SMOOTH",
"146.333 109 OFFCURVE",
"131.5 113 OFFCURVE",
"112.5 121 CURVE SMOOTH",
"93.5 129 OFFCURVE",
"79 133 OFFCURVE",
"69 133 CURVE SMOOTH",
"53 133 OFFCURVE",
"23 112 OFFCURVE",
"23 96 CURVE SMOOTH",
"23 94.667 OFFCURVE",
"24 94 OFFCURVE",
"26 94 CURVE SMOOTH",
"26.667 94 OFFCURVE",
"29.667 97.333 OFFCURVE",
"35 104 CURVE SMOOTH",
"40.333 110.667 OFFCURVE",
"48.333 114 OFFCURVE",
"59 114 CURVE SMOOTH",
"70.333 114 OFFCURVE",
"85.333 110.167 OFFCURVE",
"104 102.5 CURVE SMOOTH",
"122.667 94.833 OFFCURVE",
"136.667 91 OFFCURVE",
"146 91 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01218 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"245 257 OFFCURVE",
"265.667 273.667 OFFCURVE",
"283 309 CURVE SMOOTH",
"283.667 310.333 OFFCURVE",
"282 311 OFFCURVE",
"278 311 CURVE",
"273.333 312.333 OFFCURVE",
"270.667 312 OFFCURVE",
"270 310 CURVE SMOOTH",
"262.667 294 OFFCURVE",
"251.333 286.667 OFFCURVE",
"236 288 CURVE SMOOTH",
"227.333 288.667 OFFCURVE",
"214.833 292.333 OFFCURVE",
"198.5 299 CURVE SMOOTH",
"182.167 305.667 OFFCURVE",
"169.333 309.667 OFFCURVE",
"160 311 CURVE SMOOTH",
"138 313 OFFCURVE",
"117.667 297.333 OFFCURVE",
"99 264 CURVE",
"98.333 262 OFFCURVE",
"100.333 261 OFFCURVE",
"105 261 CURVE SMOOTH",
"110.333 260.333 OFFCURVE",
"113 261 OFFCURVE",
"113 263 CURVE",
"121.667 277.667 OFFCURVE",
"132.667 284.333 OFFCURVE",
"146 283 CURVE SMOOTH",
"154 283 OFFCURVE",
"166.333 279.167 OFFCURVE",
"183 271.5 CURVE SMOOTH",
"199.667 263.833 OFFCURVE",
"212.333 259.667 OFFCURVE",
"221 259 CURVE SMOOTH"
);
}
);
width = 304;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"379 9 OFFCURVE",
"384.667 13.667 OFFCURVE",
"386 23 CURVE SMOOTH",
"418 173 LINE",
"63 173 LINE SMOOTH",
"56.333 173 OFFCURVE",
"44 159 OFFCURVE",
"44 151 CURVE SMOOTH",
"44 145.667 OFFCURVE",
"48.333 143 OFFCURVE",
"57 143 CURVE SMOOTH",
"383 143 LINE",
"358 23 LINE SMOOTH",
"356.667 16.333 OFFCURVE",
"362.333 9 OFFCURVE",
"369 9 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 4 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 505;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"250 239 OFFCURVE",
"252.667 240.667 OFFCURVE",
"252 244 CURVE",
"249 249 LINE",
"219.667 273 OFFCURVE",
"196.667 297 OFFCURVE",
"180 321 CURVE",
"176 323 LINE",
"162.667 320.333 OFFCURVE",
"75.333 256.667 OFFCURVE",
"74 246 CURVE",
"78 241 LINE",
"86 243 OFFCURVE",
"114.333 261.333 OFFCURVE",
"163 296 CURVE",
"169.667 286.667 OFFCURVE",
"182.333 275.333 OFFCURVE",
"201 262 CURVE SMOOTH",
"221 246.667 OFFCURVE",
"235.333 239 OFFCURVE",
"244 239 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 231;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104.667 96 OFFCURVE",
"127.667 102.333 OFFCURVE",
"151 115 CURVE SMOOTH",
"158.333 118.333 OFFCURVE",
"179 131.333 OFFCURVE",
"213 154 CURVE SMOOTH",
"216.333 156 OFFCURVE",
"219.667 158.333 OFFCURVE",
"223 161 CURVE SMOOTH",
"233 169 LINE",
"233 128.333 OFFCURVE",
"251.333 108 OFFCURVE",
"288 108 CURVE SMOOTH",
"319.333 108 OFFCURVE",
"352 122.333 OFFCURVE",
"386 151 CURVE SMOOTH",
"422 181.667 OFFCURVE",
"440 212.333 OFFCURVE",
"440 243 CURVE SMOOTH",
"440 257 OFFCURVE",
"436 270 OFFCURVE",
"428 282 CURVE SMOOTH",
"418.667 294.667 OFFCURVE",
"407 301 OFFCURVE",
"393 301 CURVE SMOOTH",
"360.333 301 OFFCURVE",
"315.333 272 OFFCURVE",
"258 214 CURVE",
"256.667 246.667 OFFCURVE",
"247 269 OFFCURVE",
"229 281 CURVE SMOOTH",
"214.333 289.667 OFFCURVE",
"197.667 294 OFFCURVE",
"179 294 CURVE SMOOTH",
"141.667 294 OFFCURVE",
"105.333 279.333 OFFCURVE",
"70 250 CURVE SMOOTH",
"32 219.333 OFFCURVE",
"13 186 OFFCURVE",
"13 150 CURVE SMOOTH",
"13 114 OFFCURVE",
"36 96 OFFCURVE",
"82 96 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"40.667 107 OFFCURVE",
"26 119 OFFCURVE",
"26 143 CURVE SMOOTH",
"26 158.333 OFFCURVE",
"33.667 178.333 OFFCURVE",
"49 203 CURVE SMOOTH",
"61 222.333 OFFCURVE",
"78.333 239.333 OFFCURVE",
"101 254 CURVE SMOOTH",
"124.333 268.667 OFFCURVE",
"147 276 OFFCURVE",
"169 276 CURVE SMOOTH",
"185.667 276 OFFCURVE",
"200 272.333 OFFCURVE",
"212 265 CURVE SMOOTH",
"226.667 255.667 OFFCURVE",
"234 237.667 OFFCURVE",
"234 211 CURVE SMOOTH",
"234 208.333 OFFCURVE",
"234 205.333 OFFCURVE",
"234 202 CURVE SMOOTH",
"234 191 LINE",
"211.333 168.333 OFFCURVE",
"185.667 150 OFFCURVE",
"159 134 CURVE SMOOTH",
"126.333 116 OFFCURVE",
"96.667 107 OFFCURVE",
"70 107 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"274.667 128 OFFCURVE",
"258.667 149 OFFCURVE",
"258 191 CURVE",
"267.333 199.667 OFFCURVE",
"276.5 208.667 OFFCURVE",
"285.5 218 CURVE SMOOTH",
"294.5 227.333 OFFCURVE",
"304 236.333 OFFCURVE",
"314 245 CURVE SMOOTH",
"340.667 269.667 OFFCURVE",
"361.667 282 OFFCURVE",
"377 282 CURVE SMOOTH",
"407.667 282 OFFCURVE",
"423 265.667 OFFCURVE",
"423 233 CURVE SMOOTH",
"423 217 OFFCURVE",
"420 204.333 OFFCURVE",
"414 195 CURVE SMOOTH",
"404 177.667 OFFCURVE",
"388.667 162.333 OFFCURVE",
"368 149 CURVE SMOOTH",
"344.667 135 OFFCURVE",
"324 128 OFFCURVE",
"306 128 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 15 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 15 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01254 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 13 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 3 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01238 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 455;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"57 -78 OFFCURVE",
"70.333 -58.333 OFFCURVE",
"81 -17 CURVE SMOOTH",
"142 204 LINE SMOOTH",
"151.333 240 OFFCURVE",
"164 253 OFFCURVE",
"184 253 CURVE SMOOTH",
"193.333 253 OFFCURVE",
"202.333 250.667 OFFCURVE",
"211 246 CURVE",
"211 261 LINE",
"199.667 265.667 OFFCURVE",
"188.333 268 OFFCURVE",
"177 268 CURVE SMOOTH",
"144.333 268 OFFCURVE",
"122.667 246 OFFCURVE",
"112 202 CURVE SMOOTH",
"60 -16 LINE SMOOTH",
"52 -49.333 OFFCURVE",
"39 -66 OFFCURVE",
"21 -66 CURVE SMOOTH",
"13 -66 OFFCURVE",
"4.667 -64 OFFCURVE",
"-4 -60 CURVE",
"-13 -71 LINE",
"-0.333 -75.667 OFFCURVE",
"11 -78 OFFCURVE",
"21 -78 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01219 2 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 223;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Omega;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"312 -5 OFFCURVE",
"330 2 OFFCURVE",
"342 38 CURVE SMOOTH",
"346 51.333 OFFCURVE",
"339.333 52.333 OFFCURVE",
"334 39 CURVE SMOOTH",
"326 17.667 OFFCURVE",
"314.667 11 OFFCURVE",
"300 11 CURVE SMOOTH",
"292 11 OFFCURVE",
"283.5 12.333 OFFCURVE",
"274.5 15 CURVE SMOOTH",
"265.5 17.667 OFFCURVE",
"256.667 19.667 OFFCURVE",
"248 21 CURVE",
"276 63 LINE SMOOTH",
"286 77.667 OFFCURVE",
"294.667 93 OFFCURVE",
"302 109 CURVE SMOOTH",
"312.667 131.667 OFFCURVE",
"322.333 164.333 OFFCURVE",
"329 191 CURVE SMOOTH",
"334.333 211 OFFCURVE",
"336 230.333 OFFCURVE",
"336 249 CURVE SMOOTH",
"336 302.333 OFFCURVE",
"316 343 OFFCURVE",
"288 367 CURVE SMOOTH",
"268 383 OFFCURVE",
"243.333 391 OFFCURVE",
"218 391 CURVE SMOOTH",
"171.333 391 OFFCURVE",
"123.333 364.333 OFFCURVE",
"94 323 CURVE SMOOTH",
"72.667 291 OFFCURVE",
"65 254 OFFCURVE",
"65 214 CURVE SMOOTH",
"65 141.67 OFFCURVE",
"91.154 71.173 OFFCURVE",
"126 16 CURVE",
"116.091 16 OFFCURVE",
"62.784 34 OFFCURVE",
"42 34 CURVE SMOOTH",
"24.667 34 OFFCURVE",
"14 29.333 OFFCURVE",
"10 16 CURVE SMOOTH",
"4.84 0.521 OFFCURVE",
"21 -9.183 OFFCURVE",
"21 1 CURVE SMOOTH",
"21 5 OFFCURVE",
"21.333 13.667 OFFCURVE",
"28 15 CURVE SMOOTH",
"61.026 22.621 OFFCURVE",
"100.729 -4.597 OFFCURVE",
"136 8 CURVE",
"141.333 12 OFFCURVE",
"143.333 18.333 OFFCURVE",
"138 25 CURVE",
"108.572 72.085 OFFCURVE",
"89 139.979 OFFCURVE",
"89 204 CURVE SMOOTH",
"89 236 OFFCURVE",
"95.333 266.333 OFFCURVE",
"106 289 CURVE SMOOTH",
"130 333 OFFCURVE",
"170.333 354 OFFCURVE",
"209 354 CURVE SMOOTH",
"253.936 354 OFFCURVE",
"291.061 326.581 OFFCURVE",
"304 280 CURVE",
"306.667 265.333 OFFCURVE",
"309 251.333 OFFCURVE",
"309 234 CURVE SMOOTH",
"309 156.352 OFFCURVE",
"268.068 51.762 OFFCURVE",
"221 13 CURVE",
"217 2.333 OFFCURVE",
"222 -8 OFFCURVE",
"230 -4 CURVE",
"230 -3 LINE",
"231 -3 LINE",
"249.806 10.433 OFFCURVE",
"268.469 -5 OFFCURVE",
"296 -5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 355;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = Delta;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"267 -3 LINE",
"277.667 5 OFFCURVE",
"291 18 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 35.333 OFFCURVE",
"290.333 36.667 OFFCURVE",
"289 38 CURVE",
"188 275 LINE",
"186.667 275.667 OFFCURVE",
"185.333 276 OFFCURVE",
"184 276 CURVE SMOOTH",
"180 276 OFFCURVE",
"170.667 266 OFFCURVE",
"168 258 CURVE",
"167 258 LINE",
"50 19 LINE",
"48.667 18.333 OFFCURVE",
"48 16.667 OFFCURVE",
"48 14 CURVE SMOOTH",
"48 7.333 OFFCURVE",
"52.667 -3 OFFCURVE",
"58 -3 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"172 234 LINE",
"261 22 LINE",
"68 22 LINE"
);
}
);
width = 346;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = product;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"185.667 -14 OFFCURVE",
"191 -13 OFFCURVE",
"197 -11 CURVE SMOOTH",
"206.333 -9 OFFCURVE",
"220 3.333 OFFCURVE",
"238 26 CURVE SMOOTH",
"254.667 48.667 OFFCURVE",
"263 64.333 OFFCURVE",
"263 73 CURVE SMOOTH",
"263 73.667 OFFCURVE",
"262.333 74.333 OFFCURVE",
"261 75 CURVE",
"259 75 OFFCURVE",
"257 72.667 OFFCURVE",
"255 68 CURVE SMOOTH",
"237.667 36 OFFCURVE",
"224 16.333 OFFCURVE",
"214 9 CURVE SMOOTH",
"203.333 0.333 OFFCURVE",
"194 -4 OFFCURVE",
"186 -4 CURVE SMOOTH",
"174.667 -4 OFFCURVE",
"169 8 OFFCURVE",
"169 32 CURVE SMOOTH",
"169 50.667 OFFCURVE",
"171.333 72.667 OFFCURVE",
"178 98 CURVE SMOOTH",
"181.913 113.651 OFFCURVE",
"200.607 198.73 OFFCURVE",
"206 223 CURVE",
"233.333 221 OFFCURVE",
"256.333 228.667 OFFCURVE",
"275 246 CURVE SMOOTH",
"280.333 250.667 OFFCURVE",
"283 255 OFFCURVE",
"283 259 CURVE SMOOTH",
"283 261.667 OFFCURVE",
"281.667 263 OFFCURVE",
"279 263 CURVE",
"258.333 248.333 OFFCURVE",
"240.667 241 OFFCURVE",
"226 241 CURVE SMOOTH",
"212.667 241 OFFCURVE",
"192.333 245.333 OFFCURVE",
"165 254 CURVE SMOOTH",
"139 262.667 OFFCURVE",
"118.667 267 OFFCURVE",
"104 267 CURVE SMOOTH",
"77.333 267 OFFCURVE",
"51.333 255 OFFCURVE",
"26 231 CURVE SMOOTH",
"22 226.333 OFFCURVE",
"20 222 OFFCURVE",
"20 218 CURVE SMOOTH",
"20 216 OFFCURVE",
"21 215 OFFCURVE",
"23 215 CURVE",
"28 217 LINE",
"47.333 234.333 OFFCURVE",
"70.333 243 OFFCURVE",
"97 243 CURVE SMOOTH",
"99 243 LINE",
"99 192.701 OFFCURVE",
"84.745 82.598 OFFCURVE",
"79 51 CURVE",
"72 31 LINE SMOOTH",
"68 19.667 OFFCURVE",
"66 12.333 OFFCURVE",
"66 9 CURVE SMOOTH",
"66 7.667 OFFCURVE",
"67.667 7 OFFCURVE",
"71 7 CURVE SMOOTH",
"73 7 OFFCURVE",
"74.667 7.667 OFFCURVE",
"76 9 CURVE",
"98.889 54.778 OFFCURVE",
"121 175.678 OFFCURVE",
"121 241 CURVE",
"134.333 237.667 OFFCURVE",
"146 234.833 OFFCURVE",
"156 232.5 CURVE SMOOTH",
"181 226 LINE",
"166.949 186.658 OFFCURVE",
"151 81.177 OFFCURVE",
"151 30 CURVE SMOOTH",
"151 0.667 OFFCURVE",
"161 -14 OFFCURVE",
"181 -14 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 7 30 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01214 1 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 4 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"232 0 LINE",
"216 19 LINE",
"49 16 LINE",
"176 141 LINE",
"82 257 LINE",
"221 251 LINE",
"232 271 LINE",
"33 271 LINE",
"145 134 LINE",
"13 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0123 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"132.24 19.535 OFFCURVE",
"155.706 60.787 OFFCURVE",
"176 95.5 CURVE SMOOTH",
"217.5 165.5 LINE SMOOTH",
"242.092 206.487 OFFCURVE",
"279.468 268.606 OFFCURVE",
"299 302.5 CURVE SMOOTH",
"326 348 LINE",
"323.333 349.333 OFFCURVE",
"319.333 351 OFFCURVE",
"318 351 CURVE SMOOTH",
"316 351 OFFCURVE",
"314.667 350 OFFCURVE",
"314 348 CURVE",
"264.134 279.138 OFFCURVE",
"167.006 123.811 OFFCURVE",
"131 59 CURVE",
"123.024 74.951 OFFCURVE",
"109.095 146.873 OFFCURVE",
"100 159 CURVE",
"99 158 LINE SMOOTH",
"98.987 157.987 OFFCURVE",
"37 99.401 OFFCURVE",
"37 96 CURVE",
"35.667 93.333 OFFCURVE",
"39.667 89.667 OFFCURVE",
"41 91 CURVE SMOOTH",
"49 96.333 OFFCURVE",
"57.5 103.5 OFFCURVE",
"66.5 112.5 CURVE SMOOTH",
"75.5 121.5 OFFCURVE",
"84 129 OFFCURVE",
"92 135 CURVE SMOOTH",
"93 136 LINE",
"124 8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = mu;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-13.333 -84.333 OFFCURVE",
"-1 -31.333 OFFCURVE",
"11 10 CURVE",
"15.667 5.333 OFFCURVE",
"23 3 OFFCURVE",
"33 3 CURVE SMOOTH",
"40.333 3 OFFCURVE",
"49 5.333 OFFCURVE",
"59 10 CURVE SMOOTH",
"75.667 18 OFFCURVE",
"99 40 OFFCURVE",
"129 76 CURVE",
"126 58 LINE SMOOTH",
"124.667 50 OFFCURVE",
"124 44 OFFCURVE",
"124 40 CURVE",
"120 26.667 OFFCURVE",
"117 10.667 OFFCURVE",
"121 4 CURVE",
"126.233 -22.166 OFFCURVE",
"158.141 -15.134 OFFCURVE",
"153 8 CURVE",
"150.014 13.972 OFFCURVE",
"155.851 60.479 OFFCURVE",
"158 68 CURVE SMOOTH",
"159.333 77.333 OFFCURVE",
"162.167 88.833 OFFCURVE",
"166.5 102.5 CURVE SMOOTH",
"170.833 116.167 OFFCURVE",
"179 135 OFFCURVE",
"191 159 CURVE",
"192.333 160.333 OFFCURVE",
"193 161.667 OFFCURVE",
"193 163 CURVE SMOOTH",
"193 166.333 OFFCURVE",
"189.667 168 OFFCURVE",
"183 168 CURVE SMOOTH",
"171.667 168 OFFCURVE",
"163.667 165 OFFCURVE",
"159 159 CURVE",
"147 128.333 OFFCURVE",
"130.333 98.333 OFFCURVE",
"109 69 CURVE SMOOTH",
"85 35.667 OFFCURVE",
"64 19 OFFCURVE",
"46 19 CURVE SMOOTH",
"38.667 19 OFFCURVE",
"35 27 OFFCURVE",
"35 43 CURVE SMOOTH",
"35 57 OFFCURVE",
"41 75.333 OFFCURVE",
"53 98 CURVE SMOOTH",
"69.685 128.033 OFFCURVE",
"79.686 145 OFFCURVE",
"65 145 CURVE SMOOTH",
"40.163 145 OFFCURVE",
"35.382 126.763 OFFCURVE",
"26 108 CURVE SMOOTH",
"2.407 67.892 OFFCURVE",
"-18.71 -11.839 OFFCURVE",
"-33 -69 CURVE",
"-39 -107.5 LINE SMOOTH",
"-41 -121.167 OFFCURVE",
"-43.333 -135 OFFCURVE",
"-46 -149 CURVE SMOOTH",
"-53.482 -193.891 OFFCURVE",
"-29.356 -196.526 OFFCURVE",
"-24 -151 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01255 2 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01225 23 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"75.46 -24 OFFCURVE",
"112.526 13.302 OFFCURVE",
"137.5 54 CURVE SMOOTH",
"159.536 89.91 OFFCURVE",
"183.548 153.473 OFFCURVE",
"189 188 CURVE SMOOTH",
"195.074 214.322 OFFCURVE",
"201 268.479 OFFCURVE",
"201 302 CURVE SMOOTH",
"201 369.813 OFFCURVE",
"178.073 406 OFFCURVE",
"136 406 CURVE SMOOTH",
"124.667 406 OFFCURVE",
"116.333 404.667 OFFCURVE",
"111 402 CURVE SMOOTH",
"105.667 399.333 OFFCURVE",
"102.333 396 OFFCURVE",
"101 392 CURVE",
"101 388.667 OFFCURVE",
"102.667 387.667 OFFCURVE",
"106 389 CURVE SMOOTH",
"109.333 390.333 OFFCURVE",
"114.333 391 OFFCURVE",
"121 391 CURVE SMOOTH",
"134.333 391 OFFCURVE",
"144.333 380.5 OFFCURVE",
"151 359.5 CURVE SMOOTH",
"157.667 338.5 OFFCURVE",
"161 309.667 OFFCURVE",
"161 273 CURVE SMOOTH",
"161 215.667 OFFCURVE",
"157.667 170.333 OFFCURVE",
"147 133 CURVE",
"138.573 88.055 OFFCURVE",
"89.269 -9 OFFCURVE",
"46 -9 CURVE SMOOTH",
"10.259 -9 OFFCURVE",
"43.126 76.689 OFFCURVE",
"64 108 CURVE SMOOTH",
"85.333 145.333 OFFCURVE",
"113.333 171.667 OFFCURVE",
"136 173 CURVE SMOOTH",
"152.216 175.027 OFFCURVE",
"152.752 188 OFFCURVE",
"135 188 CURVE SMOOTH",
"77.162 188 OFFCURVE",
"28.63 126.89 OFFCURVE",
"14 83 CURVE SMOOTH",
"7.165 64.772 OFFCURVE",
"3 24.038 OFFCURVE",
"3 11 CURVE SMOOTH",
"3 -12.333 OFFCURVE",
"13.667 -24 OFFCURVE",
"35 -24 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 45 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 45 122 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01237 1 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 48 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 210;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"3 -53 LINE",
"388 413 LINE",
"388 416.333 OFFCURVE",
"385.333 418 OFFCURVE",
"380 418 CURVE SMOOTH",
"376 417.333 OFFCURVE",
"373 416.5 OFFCURVE",
"371 415.5 CURVE SMOOTH",
"369 414.5 OFFCURVE",
"352.667 397 OFFCURVE",
"322 363 CURVE SMOOTH",
"290 327 OFFCURVE",
"268.667 305.333 OFFCURVE",
"258 298 CURVE SMOOTH",
"222 269.333 OFFCURVE",
"194 255 OFFCURVE",
"174 255 CURVE SMOOTH",
"162.667 255 OFFCURVE",
"154.333 260 OFFCURVE",
"149 270 CURVE",
"164.333 284 OFFCURVE",
"179 305 OFFCURVE",
"193 333 CURVE SMOOTH",
"208.333 363.667 OFFCURVE",
"216 389.667 OFFCURVE",
"216 411 CURVE SMOOTH",
"216 441 OFFCURVE",
"201 456.667 OFFCURVE",
"171 458 CURVE SMOOTH",
"128.333 458 OFFCURVE",
"77.333 410.333 OFFCURVE",
"52 353 CURVE SMOOTH",
"43.333 331.667 OFFCURVE",
"39 312 OFFCURVE",
"39 294 CURVE SMOOTH",
"39 257.333 OFFCURVE",
"53.667 238.667 OFFCURVE",
"83 238 CURVE SMOOTH",
"99.667 238 OFFCURVE",
"117.667 245 OFFCURVE",
"137 259 CURVE",
"146.333 249 OFFCURVE",
"158.333 244 OFFCURVE",
"173 244 CURVE SMOOTH",
"199.667 244 OFFCURVE",
"233 261.333 OFFCURVE",
"273 296 CURVE",
"144.333 136.667 OFFCURVE",
"46.333 21.667 OFFCURVE",
"-21 -49 CURVE",
"-20 -53 LINE"
);
},
{
closed = 1;
nodes = (
"248 -18.667 OFFCURVE",
"278 1.333 OFFCURVE",
"308 42 CURVE SMOOTH",
"338 81.333 OFFCURVE",
"353 118.333 OFFCURVE",
"353 153 CURVE SMOOTH",
"353 183.667 OFFCURVE",
"337.333 199.667 OFFCURVE",
"306 201 CURVE SMOOTH",
"264.667 202.333 OFFCURVE",
"212 153.333 OFFCURVE",
"188 96 CURVE SMOOTH",
"178.667 75.333 OFFCURVE",
"174 55.667 OFFCURVE",
"174 37 CURVE SMOOTH",
"174 1 OFFCURVE",
"188.667 -17.333 OFFCURVE",
"218 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216.333 -5 OFFCURVE",
"209 4.333 OFFCURVE",
"209 23 CURVE SMOOTH",
"209 42.333 OFFCURVE",
"216.333 67.333 OFFCURVE",
"231 98 CURVE SMOOTH",
"253.667 144.667 OFFCURVE",
"286.333 181 OFFCURVE",
"313 181 CURVE SMOOTH",
"328.333 181 OFFCURVE",
"336 171.667 OFFCURVE",
"336 153 CURVE SMOOTH",
"336 123.667 OFFCURVE",
"312.333 65.333 OFFCURVE",
"295 44 CURVE SMOOTH",
"269 11.333 OFFCURVE",
"247.667 -5 OFFCURVE",
"231 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 252 OFFCURVE",
"74 261 OFFCURVE",
"74 279 CURVE SMOOTH",
"74 298.333 OFFCURVE",
"81 323.333 OFFCURVE",
"95 354 CURVE SMOOTH",
"117.667 400.667 OFFCURVE",
"151.667 437 OFFCURVE",
"177 437 CURVE SMOOTH",
"192.333 437 OFFCURVE",
"200 427.667 OFFCURVE",
"200 409 CURVE SMOOTH",
"200 393.667 OFFCURVE",
"194.667 373.333 OFFCURVE",
"184 348 CURVE SMOOTH",
"176 328 OFFCURVE",
"167.667 312 OFFCURVE",
"159 300 CURVE",
"160.333 302.667 OFFCURVE",
"161 305 OFFCURVE",
"161 307 CURVE SMOOTH",
"161 319.667 OFFCURVE",
"154.667 326 OFFCURVE",
"142 326 CURVE SMOOTH",
"128 326 OFFCURVE",
"121 317 OFFCURVE",
"121 299 CURVE SMOOTH",
"120.333 288.333 OFFCURVE",
"123.333 278 OFFCURVE",
"130 268 CURVE",
"117.333 257.333 OFFCURVE",
"105.667 252 OFFCURVE",
"95 252 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01253 8 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 7 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 43 122 43 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 53 117 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01265 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01217 4 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 389;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"3 -53 LINE",
"388 413 LINE",
"388 416.333 OFFCURVE",
"385.333 418 OFFCURVE",
"380 418 CURVE SMOOTH",
"376 417.333 OFFCURVE",
"373 416.5 OFFCURVE",
"371 415.5 CURVE SMOOTH",
"369 414.5 OFFCURVE",
"352.667 397 OFFCURVE",
"322 363 CURVE SMOOTH",
"290 327 OFFCURVE",
"268.667 305.333 OFFCURVE",
"258 298 CURVE SMOOTH",
"222 269.333 OFFCURVE",
"194 255 OFFCURVE",
"174 255 CURVE SMOOTH",
"162.667 255 OFFCURVE",
"154.333 260 OFFCURVE",
"149 270 CURVE",
"164.333 284 OFFCURVE",
"179 305 OFFCURVE",
"193 333 CURVE SMOOTH",
"208.333 363.667 OFFCURVE",
"216 389.667 OFFCURVE",
"216 411 CURVE SMOOTH",
"216 441 OFFCURVE",
"201 456.667 OFFCURVE",
"171 458 CURVE SMOOTH",
"128.333 458 OFFCURVE",
"77.333 410.333 OFFCURVE",
"52 353 CURVE SMOOTH",
"43.333 331.667 OFFCURVE",
"39 312 OFFCURVE",
"39 294 CURVE SMOOTH",
"39 257.333 OFFCURVE",
"53.667 238.667 OFFCURVE",
"83 238 CURVE SMOOTH",
"99.667 238 OFFCURVE",
"117.667 245 OFFCURVE",
"137 259 CURVE",
"146.333 249 OFFCURVE",
"158.333 244 OFFCURVE",
"173 244 CURVE SMOOTH",
"199.667 244 OFFCURVE",
"233 261.333 OFFCURVE",
"273 296 CURVE",
"144.333 136.667 OFFCURVE",
"46.333 21.667 OFFCURVE",
"-21 -49 CURVE",
"-20 -53 LINE"
);
},
{
closed = 1;
nodes = (
"248 -18.667 OFFCURVE",
"278 1.333 OFFCURVE",
"308 42 CURVE SMOOTH",
"338 81.333 OFFCURVE",
"353 118.333 OFFCURVE",
"353 153 CURVE SMOOTH",
"353 183.667 OFFCURVE",
"337.333 199.667 OFFCURVE",
"306 201 CURVE SMOOTH",
"264.667 202.333 OFFCURVE",
"212 153.333 OFFCURVE",
"188 96 CURVE SMOOTH",
"178.667 75.333 OFFCURVE",
"174 55.667 OFFCURVE",
"174 37 CURVE SMOOTH",
"174 1 OFFCURVE",
"188.667 -17.333 OFFCURVE",
"218 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"216.333 -5 OFFCURVE",
"209 4.333 OFFCURVE",
"209 23 CURVE SMOOTH",
"209 42.333 OFFCURVE",
"216.333 67.333 OFFCURVE",
"231 98 CURVE SMOOTH",
"253.667 144.667 OFFCURVE",
"286.333 181 OFFCURVE",
"313 181 CURVE SMOOTH",
"328.333 181 OFFCURVE",
"336 171.667 OFFCURVE",
"336 153 CURVE SMOOTH",
"336 123.667 OFFCURVE",
"312.333 65.333 OFFCURVE",
"295 44 CURVE SMOOTH",
"269 11.333 OFFCURVE",
"247.667 -5 OFFCURVE",
"231 -5 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"81 252 OFFCURVE",
"74 261 OFFCURVE",
"74 279 CURVE SMOOTH",
"74 298.333 OFFCURVE",
"81 323.333 OFFCURVE",
"95 354 CURVE SMOOTH",
"117.667 400.667 OFFCURVE",
"151.667 437 OFFCURVE",
"177 437 CURVE SMOOTH",
"192.333 437 OFFCURVE",
"200 427.667 OFFCURVE",
"200 409 CURVE SMOOTH",
"200 393.667 OFFCURVE",
"194.667 373.333 OFFCURVE",
"184 348 CURVE SMOOTH",
"176 328 OFFCURVE",
"167.667 312 OFFCURVE",
"159 300 CURVE",
"160.333 302.667 OFFCURVE",
"161 305 OFFCURVE",
"161 307 CURVE SMOOTH",
"161 319.667 OFFCURVE",
"154.667 326 OFFCURVE",
"142 326 CURVE SMOOTH",
"128 326 OFFCURVE",
"121 317 OFFCURVE",
"121 299 CURVE SMOOTH",
"120.333 288.333 OFFCURVE",
"123.333 278 OFFCURVE",
"130 268 CURVE",
"117.333 257.333 OFFCURVE",
"105.667 252 OFFCURVE",
"95 252 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"435.333 -18.667 OFFCURVE",
"465.333 1.333 OFFCURVE",
"496 42 CURVE SMOOTH",
"525.333 81.333 OFFCURVE",
"540 118.333 OFFCURVE",
"540 153 CURVE SMOOTH",
"540 183.667 OFFCURVE",
"524.667 199.667 OFFCURVE",
"494 201 CURVE SMOOTH",
"452.667 202.333 OFFCURVE",
"400.333 153.333 OFFCURVE",
"375 96 CURVE SMOOTH",
"366.333 75.333 OFFCURVE",
"362 55.667 OFFCURVE",
"362 37 CURVE SMOOTH",
"362 1 OFFCURVE",
"376.667 -17.333 OFFCURVE",
"406 -18 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"404.333 -5 OFFCURVE",
"397 4.333 OFFCURVE",
"397 23 CURVE SMOOTH",
"397 42.333 OFFCURVE",
"404 67.333 OFFCURVE",
"418 98 CURVE SMOOTH",
"440.667 144.667 OFFCURVE",
"474.667 181 OFFCURVE",
"500 181 CURVE SMOOTH",
"515.333 181 OFFCURVE",
"523 171.667 OFFCURVE",
"523 153 CURVE SMOOTH",
"523 123.667 OFFCURVE",
"500.333 65.333 OFFCURVE",
"483 44 CURVE SMOOTH",
"457 11.333 OFFCURVE",
"435.667 -5 OFFCURVE",
"419 -5 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01253 8 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 7 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 8 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 7 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 12 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 53 117 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01265 12 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 78 117 78 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 93 122 93 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 93 25 93 41 93 57 93 73 93 89 93 105 93 121 93 137 93 153 93 169 93 185 93 201 93 217 93 233 93 249 93 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 93 25 93 41 93 57 93 73 93 89 93 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01285 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01217 4 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 568;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"192 -6 OFFCURVE",
"202.333 3 OFFCURVE",
"205 11 CURVE",
"206 11 LINE",
"323 221 LINE SMOOTH",
"328.333 231.667 OFFCURVE",
"329.333 241.333 OFFCURVE",
"326 250 CURVE SMOOTH",
"325 252 LINE",
"325 252.667 OFFCURVE",
"324.667 253 OFFCURVE",
"324 253 CURVE",
"223 462 LINE",
"221.667 462.667 OFFCURVE",
"220.333 463 OFFCURVE",
"219 463 CURVE SMOOTH",
"215 463 OFFCURVE",
"205.667 455 OFFCURVE",
"203 447 CURVE",
"202 446 LINE",
"84 237 LINE SMOOTH",
"76 222.333 OFFCURVE",
"80.333 209.333 OFFCURVE",
"83 204 CURVE SMOOTH",
"185 -4 LINE SMOOTH",
"185.667 -5.333 OFFCURVE",
"186.667 -6 OFFCURVE",
"188 -6 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189.75 53.25 OFFCURVE",
"154.179 129.443 OFFCURVE",
"139.5 159.5 CURVE SMOOTH",
"128.951 181.1 OFFCURVE",
"104.166 236.834 OFFCURVE",
"102 239 CURVE",
"207 426 LINE",
"238.671 358.819 OFFCURVE",
"276.877 279.302 OFFCURVE",
"288 256.5 CURVE SMOOTH",
"295.718 240.677 OFFCURVE",
"304.213 221.934 OFFCURVE",
"305 218 CURVE",
"201 32 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01229 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 390;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = apple;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 -7 OFFCURVE",
"120.667 -2 OFFCURVE",
"126 2 CURVE SMOOTH",
"132.667 6 OFFCURVE",
"141 8 OFFCURVE",
"151 8 CURVE SMOOTH",
"161 8 OFFCURVE",
"169.667 6 OFFCURVE",
"177 2 CURVE SMOOTH",
"182.333 -2 OFFCURVE",
"190 -7 OFFCURVE",
"206 -7 CURVE SMOOTH",
"223.333 -7 OFFCURVE",
"235 6 OFFCURVE",
"251 26 CURVE SMOOTH",
"263 39.333 OFFCURVE",
"275.333 59 OFFCURVE",
"282 79 CURVE",
"256.667 89.667 OFFCURVE",
"239.333 113 OFFCURVE",
"238 141 CURVE SMOOTH",
"235.333 178.333 OFFCURVE",
"255.667 200.667 OFFCURVE",
"273 210 CURVE",
"251.519 243.415 OFFCURVE",
"216.12 247.28 OFFCURVE",
"199 243 CURVE",
"165 231 LINE SMOOTH",
"160.333 229.667 OFFCURVE",
"156 229 OFFCURVE",
"152 229 CURVE SMOOTH",
"148 229 OFFCURVE",
"143.333 229.667 OFFCURVE",
"138 231 CURVE SMOOTH",
"104 243 LINE",
"81.563 248.609 OFFCURVE",
"46.373 236.671 OFFCURVE",
"26 200 CURVE SMOOTH",
"16.667 182.667 OFFCURVE",
"13 161.333 OFFCURVE",
"13 140 CURVE SMOOTH",
"13 97.333 OFFCURVE",
"28 54 OFFCURVE",
"52 26 CURVE SMOOTH",
"66.667 6 OFFCURVE",
"79.667 -7 OFFCURVE",
"97 -7 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"165 237.667 OFFCURVE",
"184 242.333 OFFCURVE",
"200 265 CURVE SMOOTH",
"208 277 OFFCURVE",
"212.667 288.167 OFFCURVE",
"214 298.5 CURVE SMOOTH",
"215.333 308.833 OFFCURVE",
"215 315.667 OFFCURVE",
"213 319 CURVE",
"203.574 322.142 OFFCURVE",
"177.647 309.635 OFFCURVE",
"166 291 CURVE SMOOTH",
"152.667 271 OFFCURVE",
"150.333 248.333 OFFCURVE",
"153 239 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = at;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"265 -39 OFFCURVE",
"292.333 -33.333 OFFCURVE",
"319 -20 CURVE SMOOTH",
"348.333 -4 OFFCURVE",
"378.333 21.333 OFFCURVE",
"409 60 CURVE SMOOTH",
"442.333 102 OFFCURVE",
"459 137.667 OFFCURVE",
"459 167 CURVE SMOOTH",
"459 171 OFFCURVE",
"458 173 OFFCURVE",
"456 173 CURVE SMOOTH",
"454.667 173 OFFCURVE",
"453 171.333 OFFCURVE",
"451 168 CURVE",
"423.667 90 OFFCURVE",
"382 37.333 OFFCURVE",
"326 10 CURVE SMOOTH",
"295.333 -4.667 OFFCURVE",
"261.667 -12 OFFCURVE",
"223 -12 CURVE SMOOTH",
"183 -12 OFFCURVE",
"148 -3 OFFCURVE",
"118 15 CURVE SMOOTH",
"60.301 51.543 OFFCURVE",
"62.736 111.03 OFFCURVE",
"95 168.5 CURVE SMOOTH",
"123.784 219.771 OFFCURVE",
"176.704 272.967 OFFCURVE",
"219 292 CURVE SMOOTH",
"248.333 305.333 OFFCURVE",
"277.667 311 OFFCURVE",
"311 311 CURVE SMOOTH",
"341.667 311 OFFCURVE",
"366.667 305 OFFCURVE",
"386 293 CURVE SMOOTH",
"410 279 OFFCURVE",
"422 258 OFFCURVE",
"422 230 CURVE SMOOTH",
"422 203.333 OFFCURVE",
"413.333 176.333 OFFCURVE",
"396 149 CURVE SMOOTH",
"380 121 OFFCURVE",
"359.333 101 OFFCURVE",
"338 89 CURVE SMOOTH",
"328 83.667 OFFCURVE",
"319 81 OFFCURVE",
"311 81 CURVE SMOOTH",
"293 81 OFFCURVE",
"284 95.333 OFFCURVE",
"284 124 CURVE SMOOTH",
"284 135.333 OFFCURVE",
"286 150.333 OFFCURVE",
"290 169 CURVE SMOOTH",
"294 190.333 OFFCURVE",
"300 204.333 OFFCURVE",
"304 211 CURVE",
"309.333 213.667 OFFCURVE",
"313.667 216.667 OFFCURVE",
"315 218 CURVE",
"315 223.333 OFFCURVE",
"310.333 228.333 OFFCURVE",
"301 233 CURVE SMOOTH",
"291.667 237 OFFCURVE",
"284.667 239 OFFCURVE",
"278 239 CURVE SMOOTH",
"274.667 239 OFFCURVE",
"271.167 238.5 OFFCURVE",
"267.5 237.5 CURVE SMOOTH",
"256 235 LINE SMOOTH",
"234 227.667 OFFCURVE",
"211.333 207 OFFCURVE",
"188 173 CURVE SMOOTH",
"166.667 138.333 OFFCURVE",
"155 110 OFFCURVE",
"155 86 CURVE SMOOTH",
"155 70 OFFCURVE",
"162.333 62 OFFCURVE",
"177 62 CURVE SMOOTH",
"199.667 62 OFFCURVE",
"226.667 89.333 OFFCURVE",
"258 144 CURVE",
"256.667 136.667 OFFCURVE",
"256 129.333 OFFCURVE",
"256 122 CURVE SMOOTH",
"256 82 OFFCURVE",
"271 62 OFFCURVE",
"301 62 CURVE SMOOTH",
"325.667 62 OFFCURVE",
"351.333 76.667 OFFCURVE",
"378 106 CURVE SMOOTH",
"402 131.333 OFFCURVE",
"418 157.333 OFFCURVE",
"426 184 CURVE SMOOTH",
"430 199.333 OFFCURVE",
"432 214 OFFCURVE",
"432 228 CURVE SMOOTH",
"432 263.333 OFFCURVE",
"418.667 290.667 OFFCURVE",
"392 310 CURVE SMOOTH",
"368 328.667 OFFCURVE",
"338 338 OFFCURVE",
"302 338 CURVE SMOOTH",
"272.667 338 OFFCURVE",
"245 332 OFFCURVE",
"219 320 CURVE SMOOTH",
"177.667 302 OFFCURVE",
"141.333 274.667 OFFCURVE",
"110 238 CURVE SMOOTH",
"46.476 163.889 OFFCURVE",
"26.141 59.144 OFFCURVE",
"101 3 CURVE SMOOTH",
"134.333 -23.667 OFFCURVE",
"186.333 -39 OFFCURVE",
"233 -39 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"182 84 OFFCURVE",
"179 88.667 OFFCURVE",
"179 98 CURVE SMOOTH",
"179 118 OFFCURVE",
"190.333 143 OFFCURVE",
"213 173 CURVE SMOOTH",
"236.333 203 OFFCURVE",
"257.667 218 OFFCURVE",
"277 218 CURVE SMOOTH",
"279.667 218 OFFCURVE",
"281.667 217.667 OFFCURVE",
"283 217 CURVE",
"273.667 190.333 OFFCURVE",
"260 165.667 OFFCURVE",
"244 139 CURVE SMOOTH",
"222 102.333 OFFCURVE",
"203.333 84 OFFCURVE",
"188 84 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012100 5 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 5 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 69 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 33 122 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 69 122 69 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 69 25 69 41 69 57 69 73 69 89 69 105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 69 25 69 41 69 57 69 73 69 89 69 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 100 117 100 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01285 4 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 4 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 521;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"213.667 -28 OFFCURVE",
"257.667 -12.667 OFFCURVE",
"295 18 CURVE SMOOTH",
"329.667 45.333 OFFCURVE",
"347 75.333 OFFCURVE",
"347 108 CURVE SMOOTH",
"347 128 OFFCURVE",
"339.333 144.333 OFFCURVE",
"324 157 CURVE",
"396 155.667 OFFCURVE",
"466 192.333 OFFCURVE",
"466 235 CURVE SMOOTH",
"466 244.333 OFFCURVE",
"463 253.667 OFFCURVE",
"457 263 CURVE SMOOTH",
"455.667 265 OFFCURVE",
"454 266 OFFCURVE",
"452 266 CURVE SMOOTH",
"446.667 266 OFFCURVE",
"446 263.333 OFFCURVE",
"450 258 CURVE SMOOTH",
"454 252 OFFCURVE",
"456 246 OFFCURVE",
"456 240 CURVE SMOOTH",
"456 222.667 OFFCURVE",
"439.333 207.333 OFFCURVE",
"406 194 CURVE SMOOTH",
"378.667 182.667 OFFCURVE",
"355.667 177 OFFCURVE",
"337 177 CURVE SMOOTH",
"226 177 LINE SMOOTH",
"190.667 177 OFFCURVE",
"162 170.333 OFFCURVE",
"140 157 CURVE SMOOTH",
"120 144.333 OFFCURVE",
"110 128.333 OFFCURVE",
"110 109 CURVE SMOOTH",
"110 79 OFFCURVE",
"132 52 OFFCURVE",
"176 28 CURVE",
"179 28 LINE SMOOTH",
"181 28 OFFCURVE",
"182 29 OFFCURVE",
"182 31 CURVE SMOOTH",
"182 35.667 OFFCURVE",
"180 39 OFFCURVE",
"176 41 CURVE SMOOTH",
"145.333 57.667 OFFCURVE",
"131.667 77 OFFCURVE",
"135 99 CURVE SMOOTH",
"137.667 115.667 OFFCURVE",
"149 129 OFFCURVE",
"169 139 CURVE SMOOTH",
"187 148.333 OFFCURVE",
"208.333 153 OFFCURVE",
"233 153 CURVE SMOOTH",
"255.667 153 OFFCURVE",
"274.667 148.667 OFFCURVE",
"290 140 CURVE SMOOTH",
"307.333 130.667 OFFCURVE",
"315.333 118 OFFCURVE",
"314 102 CURVE SMOOTH",
"313.333 74.667 OFFCURVE",
"299 48.333 OFFCURVE",
"271 23 CURVE SMOOTH",
"239.667 -5.667 OFFCURVE",
"203.667 -20 OFFCURVE",
"163 -20 CURVE SMOOTH",
"132.333 -20 OFFCURVE",
"108.333 -9.667 OFFCURVE",
"91 11 CURVE SMOOTH",
"75.667 29 OFFCURVE",
"68 52.333 OFFCURVE",
"68 81 CURVE SMOOTH",
"68 117.667 OFFCURVE",
"79 150.667 OFFCURVE",
"101 180 CURVE SMOOTH",
"125.667 212.667 OFFCURVE",
"157.333 232 OFFCURVE",
"196 238 CURVE",
"214.667 220 OFFCURVE",
"235.667 211 OFFCURVE",
"259 211 CURVE SMOOTH",
"280.333 211 OFFCURVE",
"291 217 OFFCURVE",
"291 229 CURVE SMOOTH",
"291 241.667 OFFCURVE",
"281 248.667 OFFCURVE",
"261 250 CURVE SMOOTH",
"256.333 250.667 OFFCURVE",
"239 250.333 OFFCURVE",
"209 249 CURVE",
"205.667 256.333 OFFCURVE",
"204 264.667 OFFCURVE",
"204 274 CURVE SMOOTH",
"204 290.667 OFFCURVE",
"209.667 308.667 OFFCURVE",
"221 328 CURVE SMOOTH",
"231 345.333 OFFCURVE",
"242.333 359.667 OFFCURVE",
"255 371 CURVE SMOOTH",
"295 406.333 OFFCURVE",
"335.667 423.667 OFFCURVE",
"377 423 CURVE SMOOTH",
"405 422.333 OFFCURVE",
"419 412.333 OFFCURVE",
"419 393 CURVE SMOOTH",
"419 385 LINE",
"416.333 392.333 OFFCURVE",
"409.333 396 OFFCURVE",
"398 396 CURVE SMOOTH",
"378.667 396.667 OFFCURVE",
"368.667 387.333 OFFCURVE",
"368 368 CURVE SMOOTH",
"368 352 OFFCURVE",
"380.667 338 OFFCURVE",
"398 338 CURVE SMOOTH",
"418 338 OFFCURVE",
"436 360 OFFCURVE",
"436 384 CURVE SMOOTH",
"436 403.333 OFFCURVE",
"427.667 418 OFFCURVE",
"411 428 CURVE SMOOTH",
"397.667 435.333 OFFCURVE",
"381 439 OFFCURVE",
"361 439 CURVE SMOOTH",
"317 440.333 OFFCURVE",
"276 429 OFFCURVE",
"238 405 CURVE SMOOTH",
"194.667 377.667 OFFCURVE",
"172.333 343.667 OFFCURVE",
"171 303 CURVE SMOOTH",
"170.333 281.667 OFFCURVE",
"176 263 OFFCURVE",
"188 247 CURVE",
"132 241 OFFCURVE",
"87 221.667 OFFCURVE",
"53 189 CURVE SMOOTH",
"22.333 159.667 OFFCURVE",
"7 126.333 OFFCURVE",
"7 89 CURVE SMOOTH",
"7 56.333 OFFCURVE",
"20 29.333 OFFCURVE",
"46 8 CURVE SMOOTH",
"74 -16 OFFCURVE",
"113 -28 OFFCURVE",
"163 -28 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"239.667 221 OFFCURVE",
"224.667 227.333 OFFCURVE",
"214 240 CURVE",
"229.333 240.667 OFFCURVE",
"245 240.333 OFFCURVE",
"261 239 CURVE SMOOTH",
"273.667 238.333 OFFCURVE",
"280 235 OFFCURVE",
"280 229 CURVE SMOOTH",
"280 223.667 OFFCURVE",
"273 221 OFFCURVE",
"259 221 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 8 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 8 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 8 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01229 35 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0125 71 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 49 117 49 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01219 21 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012218 35 234 35 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01239 35 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012106 15 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01225 3 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01237 32 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01293 4 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01239 32 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012106 57 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 379;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"7.667 -111 OFFCURVE",
"41.667 -83.667 OFFCURVE",
"79 -29 CURVE SMOOTH",
"105.667 11 OFFCURVE",
"128.333 52.333 OFFCURVE",
"143 95 CURVE SMOOTH",
"169.667 167 OFFCURVE",
"190 219.333 OFFCURVE",
"206 254 CURVE SMOOTH",
"244 331.333 OFFCURVE",
"277 370 OFFCURVE",
"305 370 CURVE SMOOTH",
"311 370 LINE",
"288.333 343.333 OFFCURVE",
"267.667 305.667 OFFCURVE",
"249 255 CURVE SMOOTH",
"234.333 213.667 OFFCURVE",
"221.333 172.667 OFFCURVE",
"208 130 CURVE SMOOTH",
"180 48.667 OFFCURVE",
"155 -2.667 OFFCURVE",
"133 -24 CURVE SMOOTH",
"127.667 -28.667 OFFCURVE",
"124.667 -32 OFFCURVE",
"124 -34 CURVE SMOOTH",
"124 -36 OFFCURVE",
"125.333 -37 OFFCURVE",
"128 -37 CURVE SMOOTH",
"130.667 -37 OFFCURVE",
"133 -36.333 OFFCURVE",
"135 -35 CURVE SMOOTH",
"155 -23.667 OFFCURVE",
"179 15.667 OFFCURVE",
"207 83 CURVE SMOOTH",
"244.5 175 LINE SMOOTH",
"256.833 205.667 OFFCURVE",
"269.667 236 OFFCURVE",
"283 266 CURVE SMOOTH",
"312.333 335.333 OFFCURVE",
"340.333 374.667 OFFCURVE",
"363 388 CURVE SMOOTH",
"367 390.667 OFFCURVE",
"372.333 392.667 OFFCURVE",
"379 394 CURVE",
"385 394 OFFCURVE",
"389 395 OFFCURVE",
"391 397 CURVE",
"388.333 402.333 OFFCURVE",
"381.667 405 OFFCURVE",
"371 405 CURVE SMOOTH",
"352.333 405 OFFCURVE",
"334.667 396.333 OFFCURVE",
"318 379 CURVE",
"312 380.333 OFFCURVE",
"303.667 381 OFFCURVE",
"293 381 CURVE SMOOTH",
"289.667 381 OFFCURVE",
"285.167 381 OFFCURVE",
"279.5 381 CURVE SMOOTH",
"259 380 LINE SMOOTH",
"251.667 379.333 OFFCURVE",
"245.167 379 OFFCURVE",
"239.5 379 CURVE SMOOTH",
"226 379 LINE SMOOTH",
"188 379 OFFCURVE",
"150.667 367 OFFCURVE",
"114 343 CURVE SMOOTH",
"74 316.333 OFFCURVE",
"54 285 OFFCURVE",
"54 249 CURVE SMOOTH",
"54 207 OFFCURVE",
"86 183.333 OFFCURVE",
"150 178 CURVE",
"110 72.5 LINE SMOOTH",
"99.333 44.833 OFFCURVE",
"91 25 OFFCURVE",
"85 13 CURVE SMOOTH",
"47.667 -63 OFFCURVE",
"10.667 -101 OFFCURVE",
"-26 -101 CURVE SMOOTH",
"-29.333 -101 OFFCURVE",
"-31.667 -102.333 OFFCURVE",
"-33 -105 CURVE",
"-32.333 -109 OFFCURVE",
"-29 -111 OFFCURVE",
"-23 -111 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01242 1 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"115 -75 OFFCURVE",
"148.667 -68 OFFCURVE",
"184 -54 CURVE SMOOTH",
"222 -40 OFFCURVE",
"251.667 -21.667 OFFCURVE",
"273 1 CURVE SMOOTH",
"287 15.667 OFFCURVE",
"294 30.667 OFFCURVE",
"294 46 CURVE SMOOTH",
"294 62 OFFCURVE",
"285.667 76 OFFCURVE",
"269 88 CURVE",
"289 96 OFFCURVE",
"313.667 111.667 OFFCURVE",
"331 129 CURVE SMOOTH",
"345 143.667 OFFCURVE",
"352 158.667 OFFCURVE",
"352 174 CURVE SMOOTH",
"352 196 OFFCURVE",
"336.667 214 OFFCURVE",
"306 228 CURVE",
"221 256 LINE SMOOTH",
"191 266 OFFCURVE",
"176 276.667 OFFCURVE",
"176 288 CURVE SMOOTH",
"176 300 OFFCURVE",
"189 312.667 OFFCURVE",
"215 326 CURVE SMOOTH",
"232.333 335.333 OFFCURVE",
"249 342 OFFCURVE",
"269 346 CURVE SMOOTH",
"284.333 350.667 OFFCURVE",
"298.667 353 OFFCURVE",
"312 353 CURVE SMOOTH",
"334.667 353 OFFCURVE",
"346 345.667 OFFCURVE",
"346 331 CURVE SMOOTH",
"346 325 OFFCURVE",
"343.333 318 OFFCURVE",
"338 310 CURVE SMOOTH",
"329 298 LINE",
"329 295.333 OFFCURVE",
"330.667 294 OFFCURVE",
"334 294 CURVE SMOOTH",
"341.333 294 OFFCURVE",
"348 300 OFFCURVE",
"354 312 CURVE SMOOTH",
"360.667 323.333 OFFCURVE",
"364 333.333 OFFCURVE",
"364 342 CURVE SMOOTH",
"364 361.333 OFFCURVE",
"347 371 OFFCURVE",
"313 371 CURVE SMOOTH",
"286.333 371 OFFCURVE",
"256.333 363.333 OFFCURVE",
"223 348 CURVE SMOOTH",
"183.667 330 OFFCURVE",
"164 308.667 OFFCURVE",
"164 284 CURVE SMOOTH",
"164 270.667 OFFCURVE",
"170.667 259.667 OFFCURVE",
"184 251 CURVE SMOOTH",
"193.333 244.333 OFFCURVE",
"204 240 OFFCURVE",
"216 236 CURVE",
"198.667 232.667 OFFCURVE",
"182 227.333 OFFCURVE",
"166 220 CURVE SMOOTH",
"126 202 OFFCURVE",
"106 180.667 OFFCURVE",
"106 156 CURVE SMOOTH",
"106 142.667 OFFCURVE",
"113 131.667 OFFCURVE",
"127 123 CURVE SMOOTH",
"135 117 OFFCURVE",
"146 112 OFFCURVE",
"160 108 CURVE SMOOTH",
"166 105.333 OFFCURVE",
"171.833 103.333 OFFCURVE",
"177.5 102 CURVE SMOOTH",
"195 97 LINE SMOOTH",
"250.333 78.333 OFFCURVE",
"278 57.667 OFFCURVE",
"278 35 CURVE SMOOTH",
"278 29 OFFCURVE",
"276 23 OFFCURVE",
"272 17 CURVE SMOOTH",
"260 -3.667 OFFCURVE",
"231.333 -21.333 OFFCURVE",
"186 -36 CURVE SMOOTH",
"148 -48 OFFCURVE",
"114 -54 OFFCURVE",
"84 -54 CURVE SMOOTH",
"44 -54 OFFCURVE",
"24 -44.333 OFFCURVE",
"24 -25 CURVE SMOOTH",
"24 -3.667 OFFCURVE",
"37 16.333 OFFCURVE",
"63 35 CURVE SMOOTH",
"86.333 52.333 OFFCURVE",
"108 61 OFFCURVE",
"128 61 CURVE SMOOTH",
"130.667 61 OFFCURVE",
"132 60 OFFCURVE",
"132 58 CURVE SMOOTH",
"132 57.333 OFFCURVE",
"131.5 56.167 OFFCURVE",
"130.5 54.5 CURVE SMOOTH",
"128 49 LINE SMOOTH",
"121.333 33.667 OFFCURVE",
"108.333 20.333 OFFCURVE",
"89 9 CURVE SMOOTH",
"82.333 4.333 OFFCURVE",
"79 0.667 OFFCURVE",
"79 -2 CURVE SMOOTH",
"79 -3.333 OFFCURVE",
"80.333 -4 OFFCURVE",
"83 -4 CURVE SMOOTH",
"86.333 -4 OFFCURVE",
"92.333 -1 OFFCURVE",
"101 5 CURVE SMOOTH",
"134.333 25.667 OFFCURVE",
"151 46.667 OFFCURVE",
"151 68 CURVE SMOOTH",
"151 75.333 OFFCURVE",
"145.333 79 OFFCURVE",
"134 79 CURVE SMOOTH",
"110 79 OFFCURVE",
"84 68 OFFCURVE",
"56 46 CURVE SMOOTH",
"26.667 21.333 OFFCURVE",
"12 -4 OFFCURVE",
"12 -30 CURVE SMOOTH",
"12 -60 OFFCURVE",
"35.667 -75 OFFCURVE",
"83 -75 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"252.667 97 OFFCURVE",
"250.667 97.667 OFFCURVE",
"248 99 CURVE SMOOTH",
"244.667 101 OFFCURVE",
"216.667 110.667 OFFCURVE",
"164 128 CURVE SMOOTH",
"133.333 138 OFFCURVE",
"118 148.333 OFFCURVE",
"118 159 CURVE SMOOTH",
"118 171.667 OFFCURVE",
"131.333 184.667 OFFCURVE",
"158 198 CURVE SMOOTH",
"175.333 207.333 OFFCURVE",
"192.333 214 OFFCURVE",
"211 218 CURVE SMOOTH",
"217.667 220 OFFCURVE",
"225.333 221 OFFCURVE",
"234 221 CURVE SMOOTH",
"276.602 221 OFFCURVE",
"335 193.962 OFFCURVE",
"335 163 CURVE SMOOTH",
"335 157 OFFCURVE",
"333 151 OFFCURVE",
"329 145 CURVE",
"321.428 127.331 OFFCURVE",
"270.452 94.65 OFFCURVE",
"254 97 CURVE SMOOTH"
);
}
);
width = 356;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"218.333 2 OFFCURVE",
"270.333 27.333 OFFCURVE",
"319 78 CURVE SMOOTH",
"369 128.667 OFFCURVE",
"390 180.667 OFFCURVE",
"382 234 CURVE SMOOTH",
"378 266.667 OFFCURVE",
"362.667 293 OFFCURVE",
"336 313 CURVE SMOOTH",
"309.333 333.667 OFFCURVE",
"280 344 OFFCURVE",
"248 344 CURVE SMOOTH",
"193.333 344 OFFCURVE",
"141 319 OFFCURVE",
"91 269 CURVE SMOOTH",
"40.333 217 OFFCURVE",
"16.667 164.667 OFFCURVE",
"26 110 CURVE SMOOTH",
"30 77.333 OFFCURVE",
"46 51 OFFCURVE",
"74 31 CURVE SMOOTH",
"100.667 11.667 OFFCURVE",
"130.333 2 OFFCURVE",
"163 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"189.667 71 OFFCURVE",
"214 75.333 OFFCURVE",
"234 90 CURVE",
"243.333 95.333 OFFCURVE",
"258.333 107.333 OFFCURVE",
"265 114 CURVE SMOOTH",
"277 127.333 OFFCURVE",
"269.667 131 OFFCURVE",
"259 123 CURVE SMOOTH",
"235 104.333 OFFCURVE",
"201 92 OFFCURVE",
"181 92 CURVE SMOOTH",
"121.258 92 OFFCURVE",
"127.33 167.884 OFFCURVE",
"155 214 CURVE SMOOTH",
"172.333 239.333 OFFCURVE",
"201 256 OFFCURVE",
"221 256 CURVE SMOOTH",
"238.333 256 OFFCURVE",
"247 246 OFFCURVE",
"231 222 CURVE SMOOTH",
"227.667 218 OFFCURVE",
"228.833 216 OFFCURVE",
"234.5 216 CURVE SMOOTH",
"240.167 216 OFFCURVE",
"246 220 OFFCURVE",
"252 228 CURVE SMOOTH",
"260 236 OFFCURVE",
"264 250.667 OFFCURVE",
"264 256 CURVE SMOOTH",
"264 270.667 OFFCURVE",
"255 278 OFFCURVE",
"237 278 CURVE SMOOTH",
"210.333 278 OFFCURVE",
"181.333 261.333 OFFCURVE",
"150 228 CURVE SMOOTH",
"96.475 168.178 OFFCURVE",
"78.924 71 OFFCURVE",
"167 71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"142.333 17 OFFCURVE",
"116.667 25.333 OFFCURVE",
"94 42 CURVE SMOOTH",
"68.667 60 OFFCURVE",
"54.333 82.333 OFFCURVE",
"51 109 CURVE SMOOTH",
"43 161 OFFCURVE",
"60.333 210.667 OFFCURVE",
"103 258 CURVE SMOOTH",
"143.667 305.333 OFFCURVE",
"190.333 329 OFFCURVE",
"243 329 CURVE SMOOTH",
"272.333 329 OFFCURVE",
"297.667 321 OFFCURVE",
"319 301 CURVE SMOOTH",
"340.333 282.333 OFFCURVE",
"352.667 258.333 OFFCURVE",
"356 229 CURVE SMOOTH",
"364 180.333 OFFCURVE",
"347 132.667 OFFCURVE",
"305 86 CURVE SMOOTH",
"264.333 40 OFFCURVE",
"219.667 17 OFFCURVE",
"171 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 43 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"218.333 2 OFFCURVE",
"270.333 27.333 OFFCURVE",
"319 78 CURVE SMOOTH",
"369 128.667 OFFCURVE",
"390 180.667 OFFCURVE",
"382 234 CURVE SMOOTH",
"378 266.667 OFFCURVE",
"362.667 293 OFFCURVE",
"336 313 CURVE SMOOTH",
"309.333 333.667 OFFCURVE",
"280 344 OFFCURVE",
"248 344 CURVE SMOOTH",
"193.333 344 OFFCURVE",
"141 319 OFFCURVE",
"91 269 CURVE SMOOTH",
"40.333 217 OFFCURVE",
"16.667 164.667 OFFCURVE",
"26 110 CURVE SMOOTH",
"30 77.333 OFFCURVE",
"46 51 OFFCURVE",
"74 31 CURVE SMOOTH",
"100.667 11.667 OFFCURVE",
"130.333 2 OFFCURVE",
"163 2 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"121.788 88.98 OFFCURVE",
"142.071 134.166 OFFCURVE",
"151 155 CURVE",
"167.244 125.761 OFFCURVE",
"195.977 89.528 OFFCURVE",
"238 92 CURVE SMOOTH",
"252.667 93.333 OFFCURVE",
"276 105.667 OFFCURVE",
"280 127 CURVE SMOOTH",
"281.333 136.333 OFFCURVE",
"275.667 130.333 OFFCURVE",
"273 125 CURVE SMOOTH",
"269 115.667 OFFCURVE",
"259 104.333 OFFCURVE",
"243 103 CURVE SMOOTH",
"215 103 OFFCURVE",
"187.466 141.185 OFFCURVE",
"175 163 CURVE",
"235.615 165.635 OFFCURVE",
"313 192.083 OFFCURVE",
"313 243 CURVE SMOOTH",
"313 270.104 OFFCURVE",
"279.069 281.566 OFFCURVE",
"244.5 282.5 CURVE SMOOTH",
"211.48 283.392 OFFCURVE",
"170.218 276.715 OFFCURVE",
"149 272 CURVE SMOOTH",
"130.699 267.425 OFFCURVE",
"128.203 257.045 OFFCURVE",
"146 261 CURVE SMOOTH",
"180.667 270.333 OFFCURVE",
"204 270 OFFCURVE",
"236 270 CURVE",
"296.877 264.466 OFFCURVE",
"310.465 230.725 OFFCURVE",
"258 194 CURVE SMOOTH",
"242.315 182.796 OFFCURVE",
"194.315 173 OFFCURVE",
"176 173 CURVE",
"166.667 171.667 OFFCURVE",
"162.667 179.667 OFFCURVE",
"164 185 CURVE SMOOTH",
"169.413 201.238 OFFCURVE",
"205.929 257.586 OFFCURVE",
"218 260 CURVE SMOOTH",
"220 260.667 OFFCURVE",
"221.833 262.167 OFFCURVE",
"223.5 264.5 CURVE SMOOTH",
"225.167 266.833 OFFCURVE",
"224.667 267.667 OFFCURVE",
"222 267 CURVE SMOOTH",
"204.667 265.667 OFFCURVE",
"188.667 259.333 OFFCURVE",
"182 246 CURVE SMOOTH",
"154 191 LINE",
"151.333 191 OFFCURVE",
"144.333 190 OFFCURVE",
"143 186 CURVE",
"143 184.667 OFFCURVE",
"143.5 183 OFFCURVE",
"144.5 181 CURVE SMOOTH",
"145.5 179 OFFCURVE",
"146 177.333 OFFCURVE",
"146 176 CURVE",
"90 81 LINE SMOOTH",
"83.676 71.515 OFFCURVE",
"103.562 61.083 OFFCURVE",
"111 71 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"142.333 17 OFFCURVE",
"116.667 25.333 OFFCURVE",
"94 42 CURVE SMOOTH",
"68.667 60 OFFCURVE",
"54.333 82.333 OFFCURVE",
"51 109 CURVE SMOOTH",
"43 161 OFFCURVE",
"60.333 210.667 OFFCURVE",
"103 258 CURVE SMOOTH",
"143.667 305.333 OFFCURVE",
"190.333 329 OFFCURVE",
"243 329 CURVE SMOOTH",
"272.333 329 OFFCURVE",
"297.667 321 OFFCURVE",
"319 301 CURVE SMOOTH",
"340.333 282.333 OFFCURVE",
"352.667 258.333 OFFCURVE",
"356 229 CURVE SMOOTH",
"364 180.333 OFFCURVE",
"347 132.667 OFFCURVE",
"305 86 CURVE SMOOTH",
"264.333 40 OFFCURVE",
"219.667 17 OFFCURVE",
"171 17 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"172.667 205 OFFCURVE",
"178.333 208.333 OFFCURVE",
"183 215 CURVE SMOOTH",
"188.333 224.333 OFFCURVE",
"194.667 242.333 OFFCURVE",
"202 269 CURVE SMOOTH",
"209.333 297 OFFCURVE",
"215.333 316 OFFCURVE",
"220 326 CURVE",
"235.333 270 OFFCURVE",
"254 242 OFFCURVE",
"276 242 CURVE SMOOTH",
"296 242 OFFCURVE",
"327.667 270 OFFCURVE",
"371 326 CURVE",
"361.667 280.667 OFFCURVE",
"355 247 OFFCURVE",
"351 223 CURVE",
"351 218 LINE SMOOTH",
"351 214.667 OFFCURVE",
"353.333 213 OFFCURVE",
"358 213 CURVE SMOOTH",
"368 213 OFFCURVE",
"375 216.333 OFFCURVE",
"379 223 CURVE",
"384.333 260.333 OFFCURVE",
"386.667 295.667 OFFCURVE",
"388 329 CURVE SMOOTH",
"388 331 OFFCURVE",
"388.5 333.833 OFFCURVE",
"389.5 337.5 CURVE SMOOTH",
"393 352 LINE SMOOTH",
"395.667 361.333 OFFCURVE",
"396 369 OFFCURVE",
"396 373 CURVE SMOOTH",
"396 384.333 OFFCURVE",
"393.667 390 OFFCURVE",
"389 390 CURVE SMOOTH",
"388.333 390 OFFCURVE",
"373.333 367.667 OFFCURVE",
"344 323 CURVE SMOOTH",
"315.333 277.667 OFFCURVE",
"294.667 255 OFFCURVE",
"282 255 CURVE SMOOTH",
"266.667 255 OFFCURVE",
"255.667 273 OFFCURVE",
"249 309 CURVE SMOOTH",
"246.333 321 OFFCURVE",
"244.167 333.167 OFFCURVE",
"242.5 345.5 CURVE SMOOTH",
"237 382 LINE",
"234.333 391.333 OFFCURVE",
"231.667 396 OFFCURVE",
"229 396 CURVE SMOOTH",
"221 396 OFFCURVE",
"216 388.667 OFFCURVE",
"214 374 CURVE SMOOTH",
"212 358.5 LINE SMOOTH",
"211.333 353.5 OFFCURVE",
"211 348.333 OFFCURVE",
"211 343 CURVE",
"209.667 340.333 OFFCURVE",
"206.667 333 OFFCURVE",
"202 321 CURVE SMOOTH",
"183 271 LINE SMOOTH",
"167 231 OFFCURVE",
"159 210.333 OFFCURVE",
"159 209 CURVE SMOOTH",
"159 206.333 OFFCURVE",
"161.333 205 OFFCURVE",
"166 205 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"50.667 201 OFFCURVE",
"55.333 203 OFFCURVE",
"58 207 CURVE",
"65.333 224.333 OFFCURVE",
"70.667 238.333 OFFCURVE",
"74 249 CURVE SMOOTH",
"77.333 259 OFFCURVE",
"80.5 269.333 OFFCURVE",
"83.5 280 CURVE SMOOTH",
"93 311 LINE SMOOTH",
"102.333 337.667 OFFCURVE",
"110.333 357.667 OFFCURVE",
"117 371 CURVE SMOOTH",
"119.667 376.333 OFFCURVE",
"136.667 380.667 OFFCURVE",
"168 384 CURVE SMOOTH",
"196.667 387.333 OFFCURVE",
"211 391.667 OFFCURVE",
"211 397 CURVE SMOOTH",
"211 400.333 OFFCURVE",
"206.333 402 OFFCURVE",
"197 402 CURVE SMOOTH",
"173 402 OFFCURVE",
"142.333 399.667 OFFCURVE",
"101 397 CURVE SMOOTH",
"47.667 393 OFFCURVE",
"19.667 388.333 OFFCURVE",
"17 383 CURVE",
"18.333 377.667 OFFCURVE",
"23.667 375 OFFCURVE",
"33 375 CURVE SMOOTH",
"37.667 375 OFFCURVE",
"45 375.667 OFFCURVE",
"55 377 CURVE SMOOTH",
"60.333 377.667 OFFCURVE",
"64.833 378 OFFCURVE",
"68.5 378 CURVE SMOOTH",
"78 378 LINE SMOOTH",
"89.333 378 OFFCURVE",
"95 376.333 OFFCURVE",
"95 373 CURVE SMOOTH",
"95 371 OFFCURVE",
"94.5 367.833 OFFCURVE",
"93.5 363.5 CURVE SMOOTH",
"92.5 359.167 OFFCURVE",
"90.667 353.333 OFFCURVE",
"88 346 CURVE SMOOTH",
"57 275 LINE SMOOTH",
"41 236.333 OFFCURVE",
"33 214.333 OFFCURVE",
"33 209 CURVE SMOOTH",
"33 203.667 OFFCURVE",
"36.667 201 OFFCURVE",
"44 201 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\0120 53 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 53 234 53 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01218 53 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 53 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01286 3 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 1 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 410;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103.752 308 OFFCURVE",
"134.182 322.182 OFFCURVE",
"154 342 CURVE SMOOTH",
"170 358 OFFCURVE",
"176 374.667 OFFCURVE",
"176 392 CURVE SMOOTH",
"176 417.163 OFFCURVE",
"164.354 422.765 OFFCURVE",
"142 425 CURVE SMOOTH",
"124.667 426.333 OFFCURVE",
"107.667 424 OFFCURVE",
"93 416 CURVE SMOOTH",
"57.83 399.449 OFFCURVE",
"36.322 371.78 OFFCURVE",
"39 345 CURVE",
"39 322.795 OFFCURVE",
"56.148 308 OFFCURVE",
"79 308 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"74.667 329 OFFCURVE",
"66 335.667 OFFCURVE",
"66 349 CURVE SMOOTH",
"66 358.691 OFFCURVE",
"75.29 380.174 OFFCURVE",
"85 386 CURVE",
"99.031 398.277 OFFCURVE",
"113.18 403 OFFCURVE",
"132 403 CURVE SMOOTH",
"141.333 403 OFFCURVE",
"149 399 OFFCURVE",
"149 387 CURVE SMOOTH",
"149 381.667 OFFCURVE",
"149.333 375 OFFCURVE",
"144 367 CURVE",
"134.174 347.349 OFFCURVE",
"105.051 329 OFFCURVE",
"88 329 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 5 41 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 41 122 41 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01233 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 4 44 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 184, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 136;
}
);
unicode = 2032;
},
{
glyphname = second;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 244, 47}";
},
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 184, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 164;
}
);
unicode = 2033;
},
{
glyphname = bar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"165 -144 LINE",
"165 468 LINE",
"138 468 LINE",
"138 -144 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 5 1 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"138 -144 LINE",
"165 -144 LINE",
"165 120 LINE",
"138 120 LINE"
);
},
{
closed = 1;
nodes = (
"165 468 LINE",
"138 468 LINE",
"138 232 LINE",
"165 232 LINE"
);
}
);
width = 304;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"147.333 -150.667 OFFCURVE",
"156.333 -150.667 OFFCURVE",
"165 -144 CURVE",
"165 -97.335 OFFCURVE",
"167.855 -12.784 OFFCURVE",
"169.5 41.5 CURVE SMOOTH",
"171.5 107.5 OFFCURVE",
"173.333 174.667 OFFCURVE",
"176 236 CURVE",
"191.333 237.333 OFFCURVE",
"209.667 238.333 OFFCURVE",
"231 239 CURVE SMOOTH",
"249 239.667 OFFCURVE",
"258 242.667 OFFCURVE",
"258 248 CURVE SMOOTH",
"258 252.667 OFFCURVE",
"249 256 OFFCURVE",
"231 258 CURVE SMOOTH",
"177 264 LINE",
"179.667 353.333 OFFCURVE",
"181.667 428.667 OFFCURVE",
"179 466 CURVE",
"173.962 491.19 OFFCURVE",
"159.016 483.012 OFFCURVE",
"138 468 CURVE",
"138 266 LINE",
"134 266 LINE SMOOTH",
"114 266 OFFCURVE",
"98.333 264.333 OFFCURVE",
"87 261 CURVE SMOOTH",
"69.667 254.333 OFFCURVE",
"51 242 OFFCURVE",
"51 234 CURVE SMOOTH",
"51 228.667 OFFCURVE",
"59.667 226.333 OFFCURVE",
"77 227 CURVE SMOOTH",
"99.667 227.667 OFFCURVE",
"120 229 OFFCURVE",
"138 231 CURVE",
"138 -144 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0127 5 9 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"147.333 -150.667 OFFCURVE",
"156.333 -150.667 OFFCURVE",
"165 -144 CURVE",
"165 -86.877 OFFCURVE",
"168.8 16.965 OFFCURVE",
"171 83.5 CURVE SMOOTH",
"175 202.5 LINE SMOOTH",
"177.667 280.5 OFFCURVE",
"178.833 349.667 OFFCURVE",
"179.5 403 CURVE SMOOTH",
"179.833 429.667 OFFCURVE",
"179.667 450.667 OFFCURVE",
"179 466 CURVE",
"173.962 491.19 OFFCURVE",
"159.016 483.012 OFFCURVE",
"138 468 CURVE",
"138 -144 LINE"
);
},
{
closed = 1;
nodes = (
"106.333 115.333 OFFCURVE",
"131.667 117.667 OFFCURVE",
"153 121 CURVE SMOOTH",
"171.667 123.667 OFFCURVE",
"197.667 125.333 OFFCURVE",
"231 126 CURVE SMOOTH",
"249 126.667 OFFCURVE",
"258 129.333 OFFCURVE",
"258 134 CURVE SMOOTH",
"258 139.333 OFFCURVE",
"249 143 OFFCURVE",
"231 145 CURVE SMOOTH",
"185.667 150.333 OFFCURVE",
"153.333 153 OFFCURVE",
"134 153 CURVE SMOOTH",
"114 153 OFFCURVE",
"98.333 151.333 OFFCURVE",
"87 148 CURVE SMOOTH",
"69.667 141.333 OFFCURVE",
"51 129 OFFCURVE",
"51 121 CURVE SMOOTH",
"51 115.667 OFFCURVE",
"59.667 113.333 OFFCURVE",
"77 114 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"106.333 275.333 OFFCURVE",
"131.667 277.667 OFFCURVE",
"153 281 CURVE SMOOTH",
"171.667 283.667 OFFCURVE",
"197.667 285.333 OFFCURVE",
"231 286 CURVE SMOOTH",
"249 286.667 OFFCURVE",
"258 289.333 OFFCURVE",
"258 294 CURVE SMOOTH",
"258 299.333 OFFCURVE",
"249 303 OFFCURVE",
"231 305 CURVE SMOOTH",
"185.667 310.333 OFFCURVE",
"153.333 313 OFFCURVE",
"134 313 CURVE SMOOTH",
"114 313 OFFCURVE",
"98.333 311.333 OFFCURVE",
"87 308 CURVE SMOOTH",
"69.667 301.333 OFFCURVE",
"51 289 OFFCURVE",
"51 281 CURVE SMOOTH",
"51 275.667 OFFCURVE",
"59.667 273.333 OFFCURVE",
"77 274 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01212 21 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 12 229 12 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\0125 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01243 4 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 4 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = o;
transform = "{1, 0, 0, 1, 486, 101}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"130 491 OFFCURVE",
"147 457 OFFCURVE",
"147 411 CURVE SMOOTH",
"147 351 OFFCURVE",
"129 263 OFFCURVE",
"83 150 CURVE SMOOTH",
"39 41 OFFCURVE",
"32 24 OFFCURVE",
"27 9 CURVE SMOOTH",
"23 0 OFFCURVE",
"21 -7 OFFCURVE",
"21 -13 CURVE SMOOTH",
"21 -18 OFFCURVE",
"23 -21 OFFCURVE",
"28 -21 CURVE SMOOTH",
"33 -21 OFFCURVE",
"39 -18 OFFCURVE",
"48 -12 CURVE SMOOTH",
"56 -7 OFFCURVE",
"61 -2 OFFCURVE",
"63 1 CURVE SMOOTH",
"82 36 OFFCURVE",
"96 62 OFFCURVE",
"105 81 CURVE",
"135 128 OFFCURVE",
"165 167 OFFCURVE",
"208 213 CURVE SMOOTH",
"231 237 OFFCURVE",
"267 273 OFFCURVE",
"318 321 CURVE SMOOTH",
"355 356 OFFCURVE",
"392 385 OFFCURVE",
"429 408 CURVE SMOOTH",
"440 415 OFFCURVE",
"449 418 OFFCURVE",
"456 418 CURVE SMOOTH",
"464 418 OFFCURVE",
"468 413 OFFCURVE",
"468 402 CURVE SMOOTH",
"468 396 OFFCURVE",
"466 388 OFFCURVE",
"463 377 CURVE SMOOTH",
"426 276 OFFCURVE",
"395 195 OFFCURVE",
"372 134 CURVE SMOOTH",
"340 47 LINE SMOOTH",
"322 -1 OFFCURVE",
"317 -41 OFFCURVE",
"317 -71 CURVE SMOOTH",
"317 -112 OFFCURVE",
"331 -134 OFFCURVE",
"360 -139 CURVE SMOOTH",
"369 -140 OFFCURVE",
"381 -138 OFFCURVE",
"394 -133 CURVE SMOOTH",
"409 -128 OFFCURVE",
"422 -120 OFFCURVE",
"432 -110 CURVE SMOOTH",
"439 -103 OFFCURVE",
"442 -96 OFFCURVE",
"442 -89 CURVE SMOOTH",
"442 -86 OFFCURVE",
"441 -86 OFFCURVE",
"438 -87 CURVE",
"438 -95 OFFCURVE",
"403 -114 OFFCURVE",
"388 -114 CURVE SMOOTH",
"365 -114 OFFCURVE",
"353 -95 OFFCURVE",
"353 -58 CURVE SMOOTH",
"353 -17 OFFCURVE",
"366 44 OFFCURVE",
"393 123 CURVE SMOOTH",
"409 170 OFFCURVE",
"441 244 OFFCURVE",
"490 344 CURVE SMOOTH",
"505 375 OFFCURVE",
"513 400 OFFCURVE",
"513 421 CURVE SMOOTH",
"513 443 OFFCURVE",
"503 454 OFFCURVE",
"484 454 CURVE SMOOTH",
"477 454 OFFCURVE",
"468 452 OFFCURVE",
"458 449 CURVE SMOOTH",
"441 444 OFFCURVE",
"416 430 OFFCURVE",
"385 408 CURVE SMOOTH",
"311 355 OFFCURVE",
"225 270 OFFCURVE",
"127 154 CURVE",
"161 258 OFFCURVE",
"178 337 OFFCURVE",
"178 390 CURVE SMOOTH",
"178 464 OFFCURVE",
"151 506 OFFCURVE",
"98 518 CURVE SMOOTH",
"82 521 OFFCURVE",
"80 513 OFFCURVE",
"101 504 CURVE SMOOTH"
);
}
);
width = 761;
}
);
unicode = 2116;
},
{
glyphname = apostrophemod;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -85, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 74;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 41, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, -30, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 200;
}
);
unicode = 02BA;
},
{
glyphname = primemod;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -85, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 74;
}
);
unicode = 02B9;
},
{
glyphname = dieresiscomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{93, 313}";
},
{
name = top;
position = "{93, 461}";
}
);
components = (
{
name = dieresis;
transform = "{1, 0, 0, 1, 10, 150}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 174;
}
);
unicode = 0308;
},
{
glyphname = dotaccentcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{88, 313}";
},
{
name = top;
position = "{88, 467}";
}
);
components = (
{
name = dotaccent;
transform = "{1, 0, 0, 1, 0, 51}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 170;
}
);
unicode = 0307;
},
{
glyphname = gravecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{121, 313}";
},
{
name = top;
position = "{121, 468}";
}
);
components = (
{
name = grave;
transform = "{1, 0, 0, 1, 0, 51}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 230;
}
);
unicode = 0300;
},
{
glyphname = acutecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{95, 313}";
},
{
name = top;
position = "{95, 466}";
}
);
components = (
{
name = acute;
transform = "{1, 0, 0, 1, 0, 49}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 168;
}
);
unicode = 0301;
},
{
glyphname = hungarumlautcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{109, 313}";
},
{
name = top;
position = "{109, 488}";
}
);
components = (
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 9, 51}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 199;
}
);
unicode = 030B;
},
{
glyphname = caroncomb.alt;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{111, 571}";
}
);
components = (
{
name = caroncomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 343;
}
);
},
{
glyphname = circumflexcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{140, 313}";
},
{
name = top;
position = "{140, 483}";
}
);
components = (
{
name = circumflex;
transform = "{1, 0, 0, 1, -24, 54}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 0302;
},
{
glyphname = caroncomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{101, 438}";
},
{
name = top;
position = "{142, 613}";
}
);
components = (
{
name = caron;
transform = "{1, 0, 0, 1, -41, 163}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 030C;
},
{
glyphname = brevecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{109, 313}";
},
{
name = top;
position = "{109, 466}";
}
);
components = (
{
name = breve;
transform = "{1, 0, 0, 1, 0, 46}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
unicode = 0306;
},
{
glyphname = ringcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{99, 313}";
},
{
name = top;
position = "{99, 485}";
}
);
components = (
{
name = ring;
transform = "{0.69254, 0, 0, 0.76377, 28, 139}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 199;
}
);
unicode = 030A;
},
{
glyphname = tildecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{151, 313}";
},
{
name = top;
position = "{151, 464}";
}
);
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, 0, 42}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 0303;
},
{
glyphname = tildecomb_dotaccentcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{151, 313}";
},
{
name = top;
position = "{151, 531}";
}
);
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 85, 64}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 288;
}
);
},
{
glyphname = tildecomb_macroncomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{154, 313}";
},
{
name = top;
position = "{154, 513}";
}
);
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 17, 68}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 288;
}
);
},
{
glyphname = macroncomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{147, 313}";
},
{
name = top;
position = "{147, 445}";
}
);
components = (
{
name = macron;
transform = "{1, 0, 0, 1, 0, 37}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 0304;
},
{
glyphname = hookabovecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{109, 313}";
},
{
name = top;
position = "{109, 557}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"73 416 OFFCURVE",
"88 416 OFFCURVE",
"96 423 CURVE SMOOTH",
"107 430 OFFCURVE",
"167 485 OFFCURVE",
"167 525 CURVE SMOOTH",
"167 541 OFFCURVE",
"160 556 OFFCURVE",
"129 557 CURVE SMOOTH",
"97 558 OFFCURVE",
"66 531 OFFCURVE",
"58 522 CURVE SMOOTH",
"45 511 OFFCURVE",
"51 502 OFFCURVE",
"66 514 CURVE SMOOTH",
"82 525 OFFCURVE",
"103 535 OFFCURVE",
"118 535 CURVE SMOOTH",
"127 535 OFFCURVE",
"133 531 OFFCURVE",
"133 522 CURVE SMOOTH",
"133 481 OFFCURVE",
"99 448 OFFCURVE",
"82 427 CURVE SMOOTH"
);
}
);
width = 198;
}
);
unicode = 0309;
},
{
glyphname = dblgravecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{126, 481}";
},
{
name = top;
position = "{68, 471}";
}
);
components = (
{
name = gravecomb;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, -53, 111}";
},
{
name = gravecomb;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, -123, 117}";
}
);
hints = (
{
horizontal = 1;
place = "{304.562, 94.542}";
type = Stem;
},
{
place = "{4.55, 127.631}";
type = Stem;
},
{
horizontal = 1;
place = "{307.562, 94.542}";
type = Stem;
},
{
place = "{-88.45, 127.631}";
type = Stem;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 310;
}
);
unicode = 030F;
},
{
glyphname = breveinvertedcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{132, 480}";
},
{
name = top;
position = "{130, 486}";
}
);
components = (
{
name = breve;
transform = "{-0.99939, 0.0349, -0.12233, -0.99634, 278, 823}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 275;
}
);
unicode = 0311;
},
{
glyphname = commaturnedabovecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{97, 313}";
},
{
name = top;
position = "{97, 450}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"139 450 OFFCURVE",
"133 448 OFFCURVE",
"124 444 CURVE SMOOTH",
"107 434 OFFCURVE",
"90 419 OFFCURVE",
"72 399 CURVE SMOOTH",
"51 372 OFFCURVE",
"41 340 OFFCURVE",
"64 335 CURVE SMOOTH",
"79 332 OFFCURVE",
"92 341 OFFCURVE",
"94 357 CURVE SMOOTH",
"95 369 OFFCURVE",
"92 376 OFFCURVE",
"85 379 CURVE",
"95 397 OFFCURVE",
"113 415 OFFCURVE",
"124 425 CURVE SMOOTH",
"131 433 OFFCURVE",
"144 444 OFFCURVE",
"144 447 CURVE SMOOTH",
"144 449 OFFCURVE",
"143 450 OFFCURVE",
"142 450 CURVE SMOOTH"
);
}
);
width = 145;
}
);
unicode = 0312;
},
{
glyphname = horncomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{104, 313}";
},
{
name = topright;
position = "{234, 513}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"184 460 OFFCURVE",
"184 421 OFFCURVE",
"175 407 CURVE SMOOTH",
"163 388 OFFCURVE",
"145 389 OFFCURVE",
"130 403 CURVE SMOOTH",
"125 406 OFFCURVE",
"122 398 OFFCURVE",
"126 394 CURVE SMOOTH",
"146 375 OFFCURVE",
"182 378 OFFCURVE",
"195 396 CURVE SMOOTH",
"214 421 OFFCURVE",
"196 484 OFFCURVE",
"193 494 CURVE SMOOTH",
"190 501 OFFCURVE",
"182 503 OFFCURVE",
"182 490 CURVE SMOOTH"
);
}
);
width = 375;
}
);
unicode = 031B;
},
{
glyphname = dotbelowcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{88, 0}";
},
{
name = bottom;
position = "{88, 368}";
}
);
components = (
{
name = dotaccent;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 170;
}
);
unicode = 0323;
},
{
glyphname = dieresisbelowcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{151, 0}";
},
{
name = bottom;
position = "{151, -166}";
}
);
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 58, -584}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 296;
}
);
unicode = 0324;
},
{
glyphname = commaaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{105, 0}";
},
{
name = bottom;
position = "{105, -187}";
}
);
components = (
{
name = comma;
transform = "{1, 0, 0, 1, 38, -90}";
}
);
hints = (
{
place = "{148, 41}";
type = Stem;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 229;
}
);
note = commaaccent;
unicode = F6C3;
},
{
glyphname = commaaccentcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{105, 0}";
},
{
name = bottom;
position = "{105, -187}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"77 -161 OFFCURVE",
"81 -160 OFFCURVE",
"87 -155 CURVE SMOOTH",
"100 -147 OFFCURVE",
"113 -135 OFFCURVE",
"125 -118 CURVE SMOOTH",
"136 -102 OFFCURVE",
"142 -91 OFFCURVE",
"141 -84 CURVE SMOOTH",
"139 -72 OFFCURVE",
"134 -67 OFFCURVE",
"125 -66 CURVE SMOOTH",
"110 -66 OFFCURVE",
"100 -77 OFFCURVE",
"100 -86 CURVE SMOOTH",
"100 -97 OFFCURVE",
"104 -103 OFFCURVE",
"111 -104 CURVE",
"98 -124 OFFCURVE",
"87 -139 OFFCURVE",
"79 -147 CURVE SMOOTH",
"74 -153 OFFCURVE",
"72 -157 OFFCURVE",
"72 -160 CURVE SMOOTH",
"72 -160 OFFCURVE",
"73 -161 OFFCURVE",
"74 -161 CURVE SMOOTH"
);
}
);
width = 145;
}
);
unicode = 0326;
},
{
glyphname = cedillacomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{108, 0}";
},
{
name = bottom;
position = "{108, -130}";
}
);
components = (
{
name = cedilla;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 238;
}
);
unicode = 0327;
},
{
glyphname = ogonekcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{170, 4}";
}
);
components = (
{
name = ogonek;
transform = "{1, 0, 0, 1, -42, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
unicode = 0328;
},
{
glyphname = brevebelowcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{143, -41}";
},
{
name = bottom;
position = "{139, -132}";
}
);
components = (
{
name = breve;
transform = "{1, 0, 0, 1, 37, -468}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 271;
}
);
unicode = 032E;
},
{
glyphname = macronbelowcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{118, 0}";
},
{
name = bottom;
position = "{118, 216}";
}
);
components = (
{
name = macroncomb;
transform = "{1, 0, 0, 1, -29, -209}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 190;
}
);
unicode = 0331;
},
{
glyphname = strokeshortcomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _center;
position = "{123, 208}";
}
);
components = (
{
name = macronbelowcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 291;
}
);
unicode = 0335;
},
{
glyphname = dieresis;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"50 268 OFFCURVE",
"62 279 OFFCURVE",
"62 294 CURVE SMOOTH",
"62 303 OFFCURVE",
"56 311 OFFCURVE",
"48 311 CURVE SMOOTH",
"34 311 OFFCURVE",
"21 294 OFFCURVE",
"21 281 CURVE SMOOTH",
"21 272 OFFCURVE",
"26 268 OFFCURVE",
"35 268 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"132 268 OFFCURVE",
"144 279 OFFCURVE",
"144 294 CURVE SMOOTH",
"144 303 OFFCURVE",
"138 311 OFFCURVE",
"130 311 CURVE SMOOTH",
"116 311 OFFCURVE",
"103 294 OFFCURVE",
"103 281 CURVE SMOOTH",
"103 272 OFFCURVE",
"108 268 OFFCURVE",
"117 268 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 4 122 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 4 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 174;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = dotaccent;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"95.061 367.583 OFFCURVE",
"109.891 383.6 OFFCURVE",
"109.891 398.95 CURVE SMOOTH",
"109.891 407.625 OFFCURVE",
"103.824 415.634 OFFCURVE",
"95.735 415.634 CURVE SMOOTH",
"82.253 415.634 OFFCURVE",
"66.075 394.278 OFFCURVE",
"66.075 380.931 CURVE SMOOTH",
"66.075 372.255 OFFCURVE",
"70.794 367.583 OFFCURVE",
"79.557 367.583 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\0120 5 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 0 229 0 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0128 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 170;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = grave;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"170.667 336 OFFCURVE",
"173 338.333 OFFCURVE",
"173 343 CURVE SMOOTH",
"173 345.667 OFFCURVE",
"172 347.667 OFFCURVE",
"170 349 CURVE SMOOTH",
"137.333 375 OFFCURVE",
"111 395.333 OFFCURVE",
"91 410 CURVE SMOOTH",
"85.667 414.667 OFFCURVE",
"81 417 OFFCURVE",
"77 417 CURVE SMOOTH",
"71 417 OFFCURVE",
"68 413 OFFCURVE",
"68 405 CURVE SMOOTH",
"68 398.333 OFFCURVE",
"70 393 OFFCURVE",
"74 389 CURVE",
"98 373 OFFCURVE",
"126.667 356 OFFCURVE",
"160 338 CURVE SMOOTH",
"162 336.667 OFFCURVE",
"164 336 OFFCURVE",
"166 336 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 230;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = acute;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"51 336 OFFCURVE",
"53 337 OFFCURVE",
"55 338 CURVE SMOOTH",
"88 356 OFFCURVE",
"117 373 OFFCURVE",
"141 389 CURVE",
"145 393 OFFCURVE",
"147 398 OFFCURVE",
"147 405 CURVE SMOOTH",
"147 413 OFFCURVE",
"144 417 OFFCURVE",
"138 417 CURVE SMOOTH",
"134 417 OFFCURVE",
"129 415 OFFCURVE",
"124 410 CURVE SMOOTH",
"104 395 OFFCURVE",
"78 375 OFFCURVE",
"45 349 CURVE SMOOTH",
"43 348 OFFCURVE",
"42 346 OFFCURVE",
"42 343 CURVE SMOOTH",
"42 338 OFFCURVE",
"44 336 OFFCURVE",
"49 336 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 168;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = hungarumlaut;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"33 338 OFFCURVE",
"42 337 OFFCURVE",
"45 341 CURVE SMOOTH",
"51 351 OFFCURVE",
"85 410 OFFCURVE",
"88 418 CURVE SMOOTH",
"92 428 OFFCURVE",
"88 437 OFFCURVE",
"77 437 CURVE SMOOTH",
"64 437 OFFCURVE",
"59 429 OFFCURVE",
"56 414 CURVE SMOOTH",
"50 387 OFFCURVE",
"45 370 OFFCURVE",
"34 341 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"109 338 OFFCURVE",
"119 337 OFFCURVE",
"121 341 CURVE SMOOTH",
"127 351 OFFCURVE",
"161 410 OFFCURVE",
"165 418 CURVE SMOOTH",
"168 428 OFFCURVE",
"165 437 OFFCURVE",
"153 437 CURVE SMOOTH",
"140 437 OFFCURVE",
"136 429 OFFCURVE",
"132 414 CURVE SMOOTH",
"126 387 OFFCURVE",
"121 370 OFFCURVE",
"110 341 CURVE SMOOTH"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = circumflex;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"245 350 OFFCURVE",
"245 352 OFFCURVE",
"245 353 CURVE SMOOTH",
"221 425 LINE SMOOTH",
"220 427 OFFCURVE",
"211 427 OFFCURVE",
"194 425 CURVE",
"94 353 LINE",
"93 352 LINE",
"93 350 OFFCURVE",
"95 349 OFFCURVE",
"100 350 CURVE SMOOTH",
"105 350 OFFCURVE",
"108 351 OFFCURVE",
"111 353 CURVE",
"200 401 LINE",
"231 353 LINE SMOOTH",
"233 350 OFFCURVE",
"239 349 OFFCURVE",
"243 349 CURVE"
);
}
);
width = 304;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"155 242 OFFCURVE",
"164 242 OFFCURVE",
"180 244 CURVE",
"285 317 LINE",
"286 319 LINE",
"286 320 OFFCURVE",
"284 320 OFFCURVE",
"278 320 CURVE SMOOTH",
"274 320 OFFCURVE",
"270 320 OFFCURVE",
"268 317 CURVE",
"175 268 LINE",
"143 317 LINE",
"141 320 OFFCURVE",
"134 322 OFFCURVE",
"130 320 CURVE SMOOTH",
"128 320 OFFCURVE",
"128 319 OFFCURVE",
"128 317 CURVE SMOOTH",
"154 244 LINE SMOOTH"
);
}
);
width = 304;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"159 374 OFFCURVE",
"175 413 CURVE SMOOTH",
"178 420 OFFCURVE",
"170 421 OFFCURVE",
"168 419 CURVE SMOOTH",
"133 389 OFFCURVE",
"84 366 OFFCURVE",
"62 405 CURVE SMOOTH",
"58 413 OFFCURVE",
"57 417 OFFCURVE",
"55 417 CURVE SMOOTH",
"39 417 OFFCURVE",
"38 384 OFFCURVE",
"58 370 CURVE SMOOTH",
"89 348 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01215 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 209;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = ring;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"127 346 OFFCURVE",
"166 388 OFFCURVE",
"166 423 CURVE SMOOTH",
"166 440 OFFCURVE",
"153 453 OFFCURVE",
"125 453 CURVE SMOOTH",
"75 453 OFFCURVE",
"41 414 OFFCURVE",
"39 381 CURVE SMOOTH",
"38 362 OFFCURVE",
"49 346 OFFCURVE",
"77 346 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"71 364 OFFCURVE",
"66 373 OFFCURVE",
"66 384 CURVE SMOOTH",
"66 403 OFFCURVE",
"88 435 OFFCURVE",
"115 435 CURVE SMOOTH",
"131 435 OFFCURVE",
"139 427 OFFCURVE",
"139 416 CURVE SMOOTH",
"139 393 OFFCURVE",
"116 364 OFFCURVE",
"85 364 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 5 41 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 41 122 41 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01233 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 4 44 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = tilde;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"196.667 375.333 OFFCURVE",
"214.333 389 OFFCURVE",
"229 419 CURVE",
"229 420.333 OFFCURVE",
"227.333 421.333 OFFCURVE",
"224 422 CURVE SMOOTH",
"220.667 422.667 OFFCURVE",
"218.667 422.333 OFFCURVE",
"218 421 CURVE SMOOTH",
"211.333 407 OFFCURVE",
"201.667 400.667 OFFCURVE",
"189 402 CURVE SMOOTH",
"181.667 402.667 OFFCURVE",
"171 405.833 OFFCURVE",
"157 411.5 CURVE SMOOTH",
"143 417.167 OFFCURVE",
"132 420.333 OFFCURVE",
"124 421 CURVE SMOOTH",
"105.333 423 OFFCURVE",
"88.333 409.667 OFFCURVE",
"73 381 CURVE SMOOTH",
"72.333 379.667 OFFCURVE",
"74 379 OFFCURVE",
"78 379 CURVE SMOOTH",
"82 378.333 OFFCURVE",
"84.333 378.667 OFFCURVE",
"85 380 CURVE SMOOTH",
"91.667 392.667 OFFCURVE",
"100.667 398.667 OFFCURVE",
"112 398 CURVE SMOOTH",
"119.333 397.333 OFFCURVE",
"130.167 393.833 OFFCURVE",
"144.5 387.5 CURVE SMOOTH",
"158.833 381.167 OFFCURVE",
"169.333 378 OFFCURVE",
"176 378 CURVE"
);
}
);
width = 304;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"204 388 LINE",
"213 388 OFFCURVE",
"223 402 OFFCURVE",
"217 408 CURVE",
"92 408 LINE",
"80 408 OFFCURVE",
"72 398 OFFCURVE",
"78 388 CURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 4 1 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = macron;
unicode = 00AF;
},
{
glyphname = cedilla;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"78 -130 OFFCURVE",
"95 -130 CURVE SMOOTH",
"190 -129 OFFCURVE",
"191 -35 OFFCURVE",
"124 -35 CURVE SMOOTH",
"117 -35 OFFCURVE",
"111 -36 OFFCURVE",
"105 -37 CURVE",
"151 8 LINE",
"153.667 11.333 OFFCURVE",
"151 14 OFFCURVE",
"143 16 CURVE",
"72 -48 LINE",
"67 -54 OFFCURVE",
"68 -66 OFFCURVE",
"80 -62 CURVE SMOOTH",
"90 -55 OFFCURVE",
"100 -49 OFFCURVE",
"116 -49 CURVE SMOOTH",
"128 -48 OFFCURVE",
"145 -54 OFFCURVE",
"145 -73 CURVE SMOOTH",
"145 -115 OFFCURVE",
"88 -130 OFFCURVE",
"60 -108 CURVE SMOOTH",
"53 -103 OFFCURVE",
"50 -100 OFFCURVE",
"49 -100 CURVE SMOOTH",
"46 -100 OFFCURVE",
"45 -101 OFFCURVE",
"45 -103 CURVE SMOOTH",
"45 -122 OFFCURVE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01223 15 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01243 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01240 23 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 238;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = ogonek;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"136 -114 OFFCURVE",
"151 -111 OFFCURVE",
"172 -105 CURVE SMOOTH",
"197 -97 OFFCURVE",
"211 -90 OFFCURVE",
"212 -84 CURVE SMOOTH",
"213 -79 OFFCURVE",
"211 -77 OFFCURVE",
"206 -77 CURVE",
"206 -77 OFFCURVE",
"163 -94 OFFCURVE",
"146 -94 CURVE SMOOTH",
"124 -94 OFFCURVE",
"118 -84 OFFCURVE",
"122 -64 CURVE SMOOTH",
"127 -44 OFFCURVE",
"147 -15 OFFCURVE",
"159 -2 CURVE SMOOTH",
"165 5 OFFCURVE",
"158 4 OFFCURVE",
"153 4 CURVE",
"144 4 OFFCURVE",
"132 -9 OFFCURVE",
"116 -33 CURVE SMOOTH",
"103 -54 OFFCURVE",
"94 -71 OFFCURVE",
"91 -84 CURVE SMOOTH",
"87 -104 OFFCURVE",
"99 -114 OFFCURVE",
"127 -114 CURVE SMOOTH"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01213 7 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01215 3 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 209;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = brevecomb_acutecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{116, 313}";
},
{
name = top;
position = "{116, 552}";
}
);
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 42, 86}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
},
{
glyphname = brevecomb_gravecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{109, 313}";
},
{
name = top;
position = "{109, 541}";
}
);
components = (
{
name = brevecomb;
},
{
name = acute;
transform = "{-0.90091, 0, 0, 0.90688, 181, 163}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
},
{
glyphname = brevecomb_hookabovecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{109, 313}";
},
{
name = top;
position = "{109, 516}";
}
);
components = (
{
name = breve;
},
{
name = hookabovecomb;
transform = "{0.84758, 0, 0, 0.80219, 20, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
},
{
glyphname = brevecomb_tildecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{116, 313}";
},
{
name = top;
position = "{116, 521}";
}
);
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{0.88754, 0, 0, 1, -15, 57}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 209;
}
);
},
{
glyphname = circumflexcomb_acutecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{184, 313}";
},
{
name = top;
position = "{184, 545}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 167, 79}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
},
{
glyphname = circumflexcomb_gravecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{168, 313}";
},
{
name = top;
position = "{168, 534}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 109, 66}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
},
{
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{173, 313}";
},
{
name = top;
position = "{173, 562}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{0.84758, 0, 0, 0.80219, 150, 115}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
},
{
glyphname = circumflexcomb_tildecomb;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{162, 313}";
},
{
name = top;
position = "{162, 545}";
}
);
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 40, 81}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
},
{
glyphname = robbie;
lastChange = "2021-05-20 05:56:00 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"252 -119 LINE",
"252 -113 LINE",
"254 -113 LINE",
"254 -111 LINE",
"258 -111 LINE",
"258 -110 LINE",
"261 -110 LINE",
"264 -107 LINE",
"263.333 -106.333 OFFCURVE",
"263 -105.333 OFFCURVE",
"263 -104 CURVE",
"264.333 -102.667 OFFCURVE",
"265.333 -102 OFFCURVE",
"266 -102 CURVE",
"266.667 -101.333 OFFCURVE",
"267.667 -101 OFFCURVE",
"269 -101 CURVE",
"269 -100.333 OFFCURVE",
"269.667 -100 OFFCURVE",
"271 -100 CURVE",
"273 -99 LINE",
"271.667 -99 OFFCURVE",
"271 -98.667 OFFCURVE",
"271 -98 CURVE",
"275 -98 OFFCURVE",
"277.667 -97.333 OFFCURVE",
"279 -96 CURVE SMOOTH",
"284 -92 LINE",
"284 -91.333 OFFCURVE",
"284.333 -90.667 OFFCURVE",
"285 -90 CURVE SMOOTH",
"286 -88 LINE SMOOTH",
"287.333 -86.667 OFFCURVE",
"288 -85.333 OFFCURVE",
"288 -84 CURVE",
"289 -84 LINE",
"289 -82 OFFCURVE",
"289 -81 OFFCURVE",
"289 -81 CURVE",
"290 -79 LINE",
"292 -77 OFFCURVE",
"293 -76.667 OFFCURVE",
"293 -78 CURVE",
"294 -79 LINE",
"294 -74 LINE",
"297 -74 LINE",
"297 -73 LINE SMOOTH",
"297 -73.667 OFFCURVE",
"297.333 -73.667 OFFCURVE",
"298 -73 CURVE",
"298 -72 LINE",
"298 -71 LINE",
"298 -69 LINE",
"301 -69 LINE",
"302.333 -67 OFFCURVE",
"303 -66 OFFCURVE",
"303 -66 CURVE",
"304 -64 LINE",
"307 -64 LINE SMOOTH",
"307.667 -64 OFFCURVE",
"308 -63.667 OFFCURVE",
"308 -63 CURVE SMOOTH",
"308 -61.667 OFFCURVE",
"307.667 -61 OFFCURVE",
"307 -61 CURVE SMOOTH",
"308.333 -61 OFFCURVE",
"309.333 -60.667 OFFCURVE",
"310 -60 CURVE SMOOTH",
"310.667 -59.333 OFFCURVE",
"311.667 -59 OFFCURVE",
"313 -59 CURVE",
"313 -58.333 OFFCURVE",
"313.333 -58 OFFCURVE",
"314 -58 CURVE",
"314 -57.333 OFFCURVE",
"314 -56.667 OFFCURVE",
"314 -56 CURVE",
"316 -56 LINE",
"316 -54 OFFCURVE",
"317 -52.333 OFFCURVE",
"319 -51 CURVE",
"324 -50 LINE",
"324 -48 OFFCURVE",
"323.667 -47 OFFCURVE",
"323 -47 CURVE",
"323 -46.333 OFFCURVE",
"323.333 -46 OFFCURVE",
"324 -46 CURVE SMOOTH",
"326 -46 LINE",
"326 -43.333 OFFCURVE",
"325.333 -42 OFFCURVE",
"324 -42 CURVE",
"324 -41.333 OFFCURVE",
"323 -40 OFFCURVE",
"321 -38 CURVE",
"318.333 -38 OFFCURVE",
"317.667 -38.333 OFFCURVE",
"319 -39 CURVE",
"319 -40.333 OFFCURVE",
"318 -41.333 OFFCURVE",
"316 -42 CURVE",
"301 -42 LINE",
"299.667 -41.333 OFFCURVE",
"298.667 -40.333 OFFCURVE",
"298 -39 CURVE",
"294 -36 LINE",
"294 -34 LINE",
"293 -36 LINE",
"291 -34 LINE",
"290 -33 LINE",
"266 -33 LINE",
"264 -29 LINE",
"262 -29 LINE SMOOTH",
"261.333 -29 OFFCURVE",
"261 -28.667 OFFCURVE",
"261 -28 CURVE",
"258 -28 LINE",
"258 -27 LINE",
"256.667 -25.667 OFFCURVE",
"255 -25.667 OFFCURVE",
"253 -27 CURVE",
"250.333 -27.667 OFFCURVE",
"248.667 -28 OFFCURVE",
"248 -28 CURVE SMOOTH",
"243 -27 LINE",
"238 -27 LINE",
"238 -24 LINE",
"235.333 -23.333 OFFCURVE",
"233.667 -23.667 OFFCURVE",
"233 -25 CURVE",
"231.667 -25.667 OFFCURVE",
"231 -25.333 OFFCURVE",
"231 -24 CURVE",
"221 -16 LINE",
"221 -14 LINE",
"219.667 -15.333 OFFCURVE",
"218.667 -15 OFFCURVE",
"218 -13 CURVE SMOOTH",
"218 -11.667 OFFCURVE",
"217.333 -11 OFFCURVE",
"216 -11 CURVE",
"216 -3 LINE SMOOTH",
"216 -0.333 OFFCURVE",
"216.333 1.667 OFFCURVE",
"217 3 CURVE",
"217 4.333 OFFCURVE",
"216.667 5.667 OFFCURVE",
"216 7 CURVE SMOOTH",
"214 10 LINE",
"212 10 OFFCURVE",
"210.667 9.667 OFFCURVE",
"210 9 CURVE",
"204 9 LINE",
"202 9 LINE SMOOTH",
"201.333 9 OFFCURVE",
"201.333 9.333 OFFCURVE",
"202 10 CURVE",
"201 10 LINE",
"201 11.333 OFFCURVE",
"200.333 12.333 OFFCURVE",
"199 13 CURVE SMOOTH",
"198.333 13.667 OFFCURVE",
"198 15 OFFCURVE",
"198 17 CURVE",
"201 17 LINE",
"201 47 LINE",
"198 49 LINE",
"200 51.667 OFFCURVE",
"201 53 OFFCURVE",
"201 53 CURVE",
"202 55 LINE",
"202 56 LINE",
"206 56 LINE",
"206 59 LINE",
"209.333 59 OFFCURVE",
"211 58 OFFCURVE",
"211 56 CURVE",
"213 57.333 OFFCURVE",
"214 58.333 OFFCURVE",
"214 59 CURVE",
"216 63 LINE",
"216 67 LINE",
"218 67 LINE SMOOTH",
"217.333 67 OFFCURVE",
"217.667 67.333 OFFCURVE",
"219 68 CURVE",
"219 70 LINE",
"225 70 OFFCURVE",
"229.333 68.667 OFFCURVE",
"232 66 CURVE SMOOTH",
"234.667 63.333 OFFCURVE",
"237 60 OFFCURVE",
"239 56 CURVE",
"244 56 LINE",
"246 55.333 OFFCURVE",
"249 55 OFFCURVE",
"253 55 CURVE SMOOTH",
"260 55 LINE",
"264 56 LINE",
"264 59 LINE",
"262 60 LINE",
"247 60 LINE",
"247 61.333 OFFCURVE",
"246.333 63 OFFCURVE",
"245 65 CURVE SMOOTH",
"243 68 LINE",
"243 78 LINE",
"244 80 LINE",
"245.333 80 OFFCURVE",
"246.333 80.333 OFFCURVE",
"247 81 CURVE",
"247 82 LINE",
"258 82 LINE",
"258 81 LINE",
"262 81 LINE",
"264 77 LINE",
"267 73 LINE",
"289 73 LINE",
"290 74 LINE",
"290 74 OFFCURVE",
"291 74 OFFCURVE",
"293 74 CURVE SMOOTH",
"297 74 LINE SMOOTH",
"297.667 74 OFFCURVE",
"298 74.667 OFFCURVE",
"298 76 CURVE",
"298.667 76.667 OFFCURVE",
"299.667 76.667 OFFCURVE",
"301 76 CURVE",
"303 74 LINE",
"307 74 LINE SMOOTH",
"307.667 74 OFFCURVE",
"308 73.667 OFFCURVE",
"308 73 CURVE",
"316 73 LINE",
"316 70 LINE",
"321 70 LINE",
"321 68 LINE",
"326 68 LINE",
"326 67 LINE",
"334 67 LINE",
"334 63 LINE SMOOTH",
"334 63.667 OFFCURVE",
"334.667 64 OFFCURVE",
"336 64 CURVE SMOOTH",
"339 64 LINE",
"339 63.333 OFFCURVE",
"339.333 63 OFFCURVE",
"340 63 CURVE SMOOTH",
"341 63 LINE",
"342.333 61.667 OFFCURVE",
"344 61 OFFCURVE",
"346 61 CURVE",
"348 62.333 OFFCURVE",
"349.333 62 OFFCURVE",
"350 60 CURVE",
"352 59.333 OFFCURVE",
"353 58 OFFCURVE",
"353 56 CURVE",
"354.333 56 OFFCURVE",
"355.333 56.667 OFFCURVE",
"356 58 CURVE",
"358 58 OFFCURVE",
"359.667 57.333 OFFCURVE",
"361 56 CURVE",
"361.667 57.333 OFFCURVE",
"362 58 OFFCURVE",
"362 58 CURVE",
"363 60 LINE",
"365 60 OFFCURVE",
"365.667 60.333 OFFCURVE",
"365 61 CURVE",
"364.333 61 OFFCURVE",
"364.667 62 OFFCURVE",
"366 64 CURVE",
"368 63 LINE",
"368 68 LINE",
"371 68 LINE",
"370 70 LINE",
"370.667 70 OFFCURVE",
"370.333 70.667 OFFCURVE",
"369 72 CURVE SMOOTH",
"368.333 72.667 OFFCURVE",
"368 73 OFFCURVE",
"368 73 CURVE",
"368 74 LINE",
"370 75.333 OFFCURVE",
"371 76 OFFCURVE",
"371 76 CURVE",
"372 78 LINE",
"373 78 LINE SMOOTH",
"375 78 OFFCURVE",
"376 79 OFFCURVE",
"376 81 CURVE",
"384 81 LINE",
"384 78 LINE",
"387 78 LINE",
"387 78 OFFCURVE",
"387.333 77.333 OFFCURVE",
"388 76 CURVE SMOOTH",
"389 74 LINE",
"397 74 LINE SMOOTH",
"401.667 74.667 OFFCURVE",
"404 75.333 OFFCURVE",
"404 76 CURVE",
"406 78 LINE",
"407.333 78.667 OFFCURVE",
"408 79.667 OFFCURVE",
"408 81 CURVE",
"408.667 82.333 OFFCURVE",
"408.667 83.667 OFFCURVE",
"408 85 CURVE",
"408 90 LINE",
"386 90 LINE",
"386 92.667 OFFCURVE",
"385 94 OFFCURVE",
"383 94 CURVE SMOOTH",
"381.667 94 OFFCURVE",
"381 95.667 OFFCURVE",
"381 99 CURVE",
"377.667 99 OFFCURVE",
"376 100 OFFCURVE",
"376 102 CURVE",
"373 105 LINE",
"372.333 105 OFFCURVE",
"372 105.333 OFFCURVE",
"372 106 CURVE",
"368 109 LINE",
"367 111 LINE",
"366 111 LINE",
"366 113 LINE",
"364 114 LINE",
"363.333 113.333 OFFCURVE",
"363 113.333 OFFCURVE",
"363 114 CURVE",
"361.667 114 OFFCURVE",
"361 115 OFFCURVE",
"361 117 CURVE SMOOTH",
"361 117.667 OFFCURVE",
"360.833 118.167 OFFCURVE",
"360.5 118.5 CURVE SMOOTH",
"360 120 LINE",
"358 121.333 OFFCURVE",
"357.333 122 OFFCURVE",
"358 122 CURVE",
"357.333 122.667 OFFCURVE",
"356 123 OFFCURVE",
"354 123 CURVE",
"354 124 LINE SMOOTH",
"354 126.667 OFFCURVE",
"354 126.667 OFFCURVE",
"350 128 CURVE",
"349.333 131.333 OFFCURVE",
"347 134 OFFCURVE",
"343 136 CURVE",
"343 137.333 OFFCURVE",
"342.333 137.333 OFFCURVE",
"341 136 CURVE SMOOTH",
"339.667 134.667 OFFCURVE",
"338.667 134 OFFCURVE",
"338 134 CURVE",
"338 124 LINE",
"341 123 LINE",
"341 120 LINE",
"343 118 LINE SMOOTH",
"343.667 117.333 OFFCURVE",
"344 115.667 OFFCURVE",
"344 113 CURVE",
"348 113 LINE",
"348 82 LINE",
"345.333 81.333 OFFCURVE",
"344 80 OFFCURVE",
"344 78 CURVE",
"330 78 LINE",
"330 76 LINE",
"327.333 76 OFFCURVE",
"325 76.333 OFFCURVE",
"323 77 CURVE SMOOTH",
"321 77.667 OFFCURVE",
"318.667 77.333 OFFCURVE",
"316 76 CURVE",
"312 76 LINE",
"311 78 LINE",
"309 79.333 OFFCURVE",
"307.667 79.333 OFFCURVE",
"307 78 CURVE SMOOTH",
"306.333 76.667 OFFCURVE",
"305.333 76 OFFCURVE",
"304 76 CURVE SMOOTH",
"297 76 LINE",
"296.333 76.667 OFFCURVE",
"295.667 77.167 OFFCURVE",
"295 77.5 CURVE SMOOTH",
"293 79 LINE",
"291 79.667 OFFCURVE",
"290 80.667 OFFCURVE",
"290 82 CURVE SMOOTH",
"290 86 LINE",
"294 86 OFFCURVE",
"296.667 86.667 OFFCURVE",
"298 88 CURVE",
"300 88.667 OFFCURVE",
"303 88.667 OFFCURVE",
"307 88 CURVE",
"308 89 LINE SMOOTH",
"307.333 88.333 OFFCURVE",
"307 88.667 OFFCURVE",
"307 90 CURVE",
"311 90 LINE",
"313 96 LINE",
"315 96.667 OFFCURVE",
"317.667 97 OFFCURVE",
"321 97 CURVE",
"322 98 LINE",
"323 98 LINE",
"323 98 OFFCURVE",
"323.333 97.667 OFFCURVE",
"324 97 CURVE",
"326 99 LINE",
"325.333 99.667 OFFCURVE",
"325.667 100.333 OFFCURVE",
"327 101 CURVE",
"327 109 LINE",
"326 109 LINE",
"326 111 LINE",
"324 111 LINE",
"324 113 LINE",
"322 113 OFFCURVE",
"319.667 112.667 OFFCURVE",
"317 112 CURVE SMOOTH",
"312 111 LINE",
"293 111 LINE",
"290 113 LINE",
"288 113 LINE",
"288 114 LINE",
"284 114 LINE",
"284 118 LINE",
"281 118 LINE",
"281 119 LINE",
"275 119 LINE",
"275 120 LINE",
"270 120 LINE",
"267 119 LINE",
"254 119 LINE",
"252 120 LINE",
"251 120 LINE",
"251 132 LINE SMOOTH",
"251 136 OFFCURVE",
"250 139.333 OFFCURVE",
"248 142 CURVE",
"246.667 142 OFFCURVE",
"245.667 141.667 OFFCURVE",
"245 141 CURVE SMOOTH",
"244.333 140.333 OFFCURVE",
"244 140.667 OFFCURVE",
"244 142 CURVE",
"242 141 LINE",
"242.667 141.667 OFFCURVE",
"243 141.667 OFFCURVE",
"243 141 CURVE",
"238.333 139 OFFCURVE",
"235.667 137 OFFCURVE",
"235 135 CURVE",
"231 129 LINE",
"228 129 LINE",
"228 128 LINE",
"224 128 LINE",
"221 127 LINE",
"218.333 127.667 OFFCURVE",
"214 126.667 OFFCURVE",
"208 124 CURVE SMOOTH",
"202 122 OFFCURVE",
"197 122 OFFCURVE",
"193 124 CURVE SMOOTH",
"189 126 LINE",
"187 128 LINE",
"184 128 LINE",
"182 128 LINE",
"181.333 127.333 OFFCURVE",
"180.333 127 OFFCURVE",
"179 127 CURVE SMOOTH",
"177.667 127 OFFCURVE",
"176.667 127.333 OFFCURVE",
"176 128 CURVE",
"173 128 LINE",
"171 128 LINE",
"169 131 LINE SMOOTH",
"167.667 132.333 OFFCURVE",
"166.333 133.333 OFFCURVE",
"165 134 CURVE",
"164 141 LINE SMOOTH",
"163.333 143 OFFCURVE",
"162.833 144.667 OFFCURVE",
"162.5 146 CURVE SMOOTH",
"161 151 LINE",
"161 152.333 OFFCURVE",
"160.833 153.667 OFFCURVE",
"160.5 155 CURVE SMOOTH",
"160 159 LINE SMOOTH",
"159.333 161.667 OFFCURVE",
"159.667 163.667 OFFCURVE",
"161 165 CURVE",
"161 166 LINE",
"163 166 LINE",
"164 166 LINE SMOOTH",
"168.667 166 OFFCURVE",
"171.667 167 OFFCURVE",
"173 169 CURVE",
"173.667 172.333 OFFCURVE",
"173.667 174.667 OFFCURVE",
"173 176 CURVE",
"171 177 LINE SMOOTH",
"170.333 177.667 OFFCURVE",
"169.333 178 OFFCURVE",
"168 178 CURVE",
"164 180 LINE",
"161 180 LINE",
"161 181 LINE SMOOTH",
"161 180.333 OFFCURVE",
"160.667 180 OFFCURVE",
"160 180 CURVE",
"160 181.333 OFFCURVE",
"159.333 182.333 OFFCURVE",
"158 183 CURVE SMOOTH",
"157.333 183.667 OFFCURVE",
"157 185 OFFCURVE",
"157 187 CURVE SMOOTH",
"157 190.333 OFFCURVE",
"157.667 192.667 OFFCURVE",
"159 194 CURVE",
"161 194 OFFCURVE",
"163 196 OFFCURVE",
"165 200 CURVE",
"168.333 200 OFFCURVE",
"170 199.667 OFFCURVE",
"170 199 CURVE",
"170.667 199 OFFCURVE",
"172 200 OFFCURVE",
"174 202 CURVE",
"183 202 LINE",
"183.667 201.333 OFFCURVE",
"184.667 199.667 OFFCURVE",
"186 197 CURVE SMOOTH",
"188 192 LINE",
"201 192 LINE",
"201.667 190 OFFCURVE",
"201.667 189 OFFCURVE",
"201 189 CURVE",
"202 187 LINE",
"204 187 LINE",
"204 185 LINE SMOOTH",
"204 184.333 OFFCURVE",
"204.667 183.667 OFFCURVE",
"206 183 CURVE",
"208 183 LINE",
"208 182.333 OFFCURVE",
"208.333 182 OFFCURVE",
"209 182 CURVE",
"210 180 LINE",
"219 180 LINE SMOOTH",
"220.333 180 OFFCURVE",
"221 179.667 OFFCURVE",
"221 179 CURVE",
"224 179 LINE",
"224 178 LINE",
"224 176 LINE",
"224.667 176 OFFCURVE",
"225 175.333 OFFCURVE",
"225 174 CURVE",
"229 174 LINE",
"229 173 LINE",
"241 173 LINE",
"241 174 LINE",
"245 178 LINE",
"245.667 178 OFFCURVE",
"246.667 178.667 OFFCURVE",
"248 180 CURVE",
"275 180 LINE",
"282 181 LINE",
"283.333 182.333 OFFCURVE",
"284 183.667 OFFCURVE",
"284 185 CURVE",
"285.333 186.333 OFFCURVE",
"286 188.333 OFFCURVE",
"286 191 CURVE",
"288 196 LINE",
"288.667 194.667 OFFCURVE",
"290 195.333 OFFCURVE",
"292 198 CURVE SMOOTH",
"293.333 200 OFFCURVE",
"294 201.667 OFFCURVE",
"294 203 CURVE SMOOTH",
"294 207 OFFCURVE",
"292 211.333 OFFCURVE",
"288 216 CURVE SMOOTH",
"286 218 OFFCURVE",
"284.333 219.833 OFFCURVE",
"283 221.5 CURVE SMOOTH",
"279 226 LINE",
"275 226 LINE",
"272 229 LINE",
"258 230.333 OFFCURVE",
"238.667 230.333 OFFCURVE",
"214 229 CURVE",
"214 228.333 OFFCURVE",
"212.667 228 OFFCURVE",
"210 228 CURVE SMOOTH",
"207.333 228 OFFCURVE",
"205.667 227.667 OFFCURVE",
"205 227 CURVE",
"205 226 LINE",
"204 226 LINE",
"194 226 LINE",
"194 228 OFFCURVE",
"193.667 229 OFFCURVE",
"193 229 CURVE",
"193 230 LINE",
"193 248 LINE",
"194 248 LINE",
"194 249 LINE",
"198 249 LINE",
"198 250.333 OFFCURVE",
"198.333 251 OFFCURVE",
"199 251 CURVE",
"200.333 252.333 OFFCURVE",
"200.667 253 OFFCURVE",
"202 253 CURVE",
"203.333 255 OFFCURVE",
"203.667 257 OFFCURVE",
"203 259 CURVE SMOOTH",
"201.667 261 OFFCURVE",
"202 262.333 OFFCURVE",
"204 263 CURVE",
"203 270 LINE",
"201.667 272.667 OFFCURVE",
"201 274.667 OFFCURVE",
"201 276 CURVE",
"198 276 LINE",
"198 283 LINE",
"197 283 LINE SMOOTH",
"196.333 283 OFFCURVE",
"196 283.333 OFFCURVE",
"196 284 CURVE SMOOTH",
"196 294 LINE",
"194 294 LINE",
"194 298 LINE",
"190 298 OFFCURVE",
"188.333 298 OFFCURVE",
"189 298 CURVE",
"187 293 LINE",
"184 290 LINE",
"184 286 LINE SMOOTH",
"184 285.333 OFFCURVE",
"184 285 OFFCURVE",
"184 285 CURVE",
"183 283 LINE",
"180.333 283 OFFCURVE",
"179 282.333 OFFCURVE",
"179 281 CURVE",
"173.667 281 OFFCURVE",
"171 281.667 OFFCURVE",
"171 283 CURVE",
"169.667 283 OFFCURVE",
"167.667 284 OFFCURVE",
"165 286 CURVE",
"165 290 LINE",
"164 293 LINE",
"164 306 LINE",
"165 306 LINE SMOOTH",
"167 306.667 OFFCURVE",
"167.333 307.667 OFFCURVE",
"166 309 CURVE SMOOTH",
"164.667 310.333 OFFCURVE",
"164 311.667 OFFCURVE",
"164 313 CURVE",
"163 313 LINE SMOOTH",
"161.667 313 OFFCURVE",
"161 312.667 OFFCURVE",
"161 312 CURVE",
"156 318 LINE",
"154.667 318.667 OFFCURVE",
"154.333 319.333 OFFCURVE",
"155 320 CURVE SMOOTH",
"155.667 320.667 OFFCURVE",
"156 321.667 OFFCURVE",
"156 323 CURVE",
"159 324 LINE",
"159.667 325.333 OFFCURVE",
"160.333 326 OFFCURVE",
"161 326 CURVE SMOOTH",
"162.333 326 OFFCURVE",
"163 325.333 OFFCURVE",
"163 324 CURVE",
"163.667 323.333 OFFCURVE",
"164.333 323 OFFCURVE",
"165 323 CURVE SMOOTH",
"171 324 LINE SMOOTH",
"173 324.667 OFFCURVE",
"174 325.333 OFFCURVE",
"174 326 CURVE SMOOTH",
"174 324.667 OFFCURVE",
"174.333 324 OFFCURVE",
"175 324 CURVE",
"175.667 323.333 OFFCURVE",
"176.667 323 OFFCURVE",
"178 323 CURVE",
"179 326 LINE",
"179 326 OFFCURVE",
"180 326 OFFCURVE",
"182 326 CURVE",
"183 323 LINE",
"183.667 323 OFFCURVE",
"184.167 323.167 OFFCURVE",
"184.5 323.5 CURVE SMOOTH",
"186 324 LINE",
"186 325 LINE",
"188 327 LINE",
"191.333 328.333 OFFCURVE",
"192.333 329.667 OFFCURVE",
"191 331 CURVE",
"189.667 331 OFFCURVE",
"190.333 332.667 OFFCURVE",
"193 336 CURVE",
"193 338 OFFCURVE",
"193.333 339 OFFCURVE",
"194 339 CURVE",
"196 343 LINE",
"216 343 LINE",
"216 344 LINE",
"219 344 LINE",
"219 346 LINE",
"222.333 347.333 OFFCURVE",
"224.667 349 OFFCURVE",
"226 351 CURVE",
"228 352.333 OFFCURVE",
"230.333 353 OFFCURVE",
"233 353 CURVE",
"233 357 LINE",
"233.667 355 OFFCURVE",
"235.333 354 OFFCURVE",
"238 354 CURVE",
"238 357 LINE",
"240 357.667 OFFCURVE",
"241 359 OFFCURVE",
"241 361 CURVE",
"247 364 LINE",
"252 364 LINE",
"252 361 LINE",
"252.667 361 OFFCURVE",
"253.333 360 OFFCURVE",
"254 358 CURVE",
"266 358 LINE",
"266 362 LINE",
"266.667 360 OFFCURVE",
"267.667 359.667 OFFCURVE",
"269 361 CURVE",
"270 364 LINE",
"274 364 LINE SMOOTH",
"272 364 OFFCURVE",
"271.667 364.667 OFFCURVE",
"273 366 CURVE",
"273 367.333 OFFCURVE",
"273.667 368 OFFCURVE",
"275 368 CURVE",
"278.333 370 OFFCURVE",
"281.667 371 OFFCURVE",
"285 371 CURVE",
"287 371.667 OFFCURVE",
"291.333 372 OFFCURVE",
"298 372 CURVE",
"298 369 LINE",
"301 368 LINE",
"303 368 LINE",
"303 364.667 OFFCURVE",
"304.333 361.667 OFFCURVE",
"307 359 CURVE",
"307 358.333 OFFCURVE",
"306.333 358 OFFCURVE",
"305 358 CURVE",
"304 354 LINE",
"307 354 LINE",
"307 350 LINE",
"308 350 LINE",
"308 349 LINE",
"316 349 LINE",
"316 346 LINE",
"318 346 LINE",
"319.333 345.333 OFFCURVE",
"320 344.333 OFFCURVE",
"320 343 CURVE",
"321 343 LINE",
"321 341 LINE",
"323 341 OFFCURVE",
"324.833 341 OFFCURVE",
"326.5 341 CURVE SMOOTH",
"334 340 LINE SMOOTH",
"338 339.333 OFFCURVE",
"341 339.667 OFFCURVE",
"343 341 CURVE",
"343.667 341 OFFCURVE",
"344 341.333 OFFCURVE",
"344 342 CURVE SMOOTH",
"344 343 LINE",
"349 343 LINE",
"349 344 LINE",
"351.667 344 OFFCURVE",
"352.667 344.333 OFFCURVE",
"352 345 CURVE",
"352 345.667 OFFCURVE",
"352.667 346 OFFCURVE",
"354 346 CURVE",
"356.667 347.333 OFFCURVE",
"359 347.333 OFFCURVE",
"361 346 CURVE SMOOTH",
"362.333 345.333 OFFCURVE",
"363 344.667 OFFCURVE",
"363 344 CURVE",
"365 343.333 OFFCURVE",
"365.667 343.333 OFFCURVE",
"365 344 CURVE SMOOTH",
"364.333 345.333 OFFCURVE",
"364.667 345.333 OFFCURVE",
"366 344 CURVE SMOOTH",
"367.333 343.333 OFFCURVE",
"368.333 341.667 OFFCURVE",
"369 339 CURVE",
"373 335 LINE",
"376 335 LINE",
"376 334 LINE",
"384 334 LINE",
"386 331 LINE",
"386.667 331 OFFCURVE",
"386.667 330.667 OFFCURVE",
"386 330 CURVE SMOOTH",
"387 331 LINE",
"387 329.667 OFFCURVE",
"386.667 329.333 OFFCURVE",
"386 330 CURVE SMOOTH",
"389 327 LINE",
"390.333 326.333 OFFCURVE",
"391 325 OFFCURVE",
"391 323 CURVE",
"397 323 LINE",
"399 323.667 OFFCURVE",
"400.333 324.667 OFFCURVE",
"401 326 CURVE",
"401 324 OFFCURVE",
"401.333 322.667 OFFCURVE",
"402 322 CURVE SMOOTH",
"403 321 LINE",
"403 318 LINE",
"404 318 LINE",
"404 311 LINE",
"408 311 LINE",
"408 306 LINE",
"409 306 LINE",
"409 304 LINE",
"410 304 LINE",
"410 303 LINE",
"414 303 LINE",
"414 303 OFFCURVE",
"414.667 302.333 OFFCURVE",
"416 301 CURVE SMOOTH",
"417 299 LINE",
"418 299 LINE",
"418 297 LINE",
"421 297 LINE",
"421 290 LINE SMOOTH",
"421 288.667 OFFCURVE",
"421 288 OFFCURVE",
"421 288 CURVE",
"422 286 LINE",
"422 266 LINE",
"421 266 LINE",
"421 262 LINE",
"418 260 LINE",
"418 257 LINE",
"417.333 257 OFFCURVE",
"417 256.667 OFFCURVE",
"417 256 CURVE",
"415 254 OFFCURVE",
"414 250 OFFCURVE",
"414 244 CURVE SMOOTH",
"414 166 LINE",
"413 166 LINE SMOOTH",
"411.667 166 OFFCURVE",
"411 165.667 OFFCURVE",
"411 165 CURVE",
"412.333 164.333 OFFCURVE",
"413 163 OFFCURVE",
"413 161 CURVE",
"409 161 LINE",
"409 158 LINE SMOOTH",
"409 156.667 OFFCURVE",
"408.667 156 OFFCURVE",
"408 156 CURVE",
"406 154 OFFCURVE",
"405.333 153 OFFCURVE",
"406 153 CURVE",
"407.333 152.333 OFFCURVE",
"408 151.667 OFFCURVE",
"408 151 CURVE",
"405 151 LINE SMOOTH",
"404.333 151 OFFCURVE",
"404 150.667 OFFCURVE",
"404 150 CURVE",
"403 148 LINE",
"403.667 146.667 OFFCURVE",
"405.333 146 OFFCURVE",
"408 146 CURVE",
"404 142 LINE",
"408 142 LINE",
"408 141 LINE",
"408 139 LINE",
"409 139 LINE",
"409 140.333 OFFCURVE",
"409.333 140 OFFCURVE",
"410 138 CURVE",
"410.667 138.667 OFFCURVE",
"411 139 OFFCURVE",
"411 139 CURVE",
"413 142 LINE",
"416 142 LINE",
"418 143 LINE",
"418 148 LINE",
"418 148 OFFCURVE",
"418.333 148.333 OFFCURVE",
"419 149 CURVE SMOOTH",
"421 150 LINE",
"421 153 LINE",
"421 156 LINE",
"421.667 156.667 OFFCURVE",
"422 158.333 OFFCURVE",
"422 161 CURVE",
"424 161 LINE",
"424 170 LINE SMOOTH",
"424 172.667 OFFCURVE",
"425.333 175.667 OFFCURVE",
"428 179 CURVE",
"431 179 LINE",
"431 181 OFFCURVE",
"432 183.667 OFFCURVE",
"434 187 CURVE",
"434 188 LINE",
"432 188 LINE",
"432 194 LINE",
"431 194 LINE",
"431 234 LINE",
"431 236 LINE",
"431.667 235.333 OFFCURVE",
"432 235.667 OFFCURVE",
"432 237 CURVE",
"432.667 237.667 OFFCURVE",
"432.667 239 OFFCURVE",
"432 241 CURVE SMOOTH",
"431.333 242.333 OFFCURVE",
"431 243.5 OFFCURVE",
"431 244.5 CURVE SMOOTH",
"431 247 LINE",
"430.333 248.333 OFFCURVE",
"430 250.333 OFFCURVE",
"430 253 CURVE SMOOTH",
"430 254.333 OFFCURVE",
"430.667 255.333 OFFCURVE",
"432 256 CURVE",
"432 260 LINE",
"435 260 LINE",
"435 260.667 OFFCURVE",
"434.667 261 OFFCURVE",
"434 261 CURVE SMOOTH",
"435.333 261 OFFCURVE",
"436 261.333 OFFCURVE",
"436 262 CURVE SMOOTH",
"436 271 LINE",
"440 271 LINE",
"440 284 LINE",
"440 295.5 LINE SMOOTH",
"440 299.167 OFFCURVE",
"439.667 302.667 OFFCURVE",
"439 306 CURVE SMOOTH",
"438.333 312.667 OFFCURVE",
"436.667 317.667 OFFCURVE",
"434 321 CURVE",
"434 323 LINE",
"428 329 LINE",
"428 343 LINE",
"429 345 LINE",
"429 345.667 OFFCURVE",
"429.667 346 OFFCURVE",
"431 346 CURVE",
"431 357 LINE",
"432 357 LINE",
"432.667 357.667 OFFCURVE",
"433 359.667 OFFCURVE",
"433 363 CURVE",
"432.333 365 OFFCURVE",
"431.833 366.5 OFFCURVE",
"431.5 367.5 CURVE SMOOTH",
"431 370 LINE SMOOTH",
"431 370.667 OFFCURVE",
"430 372 OFFCURVE",
"428 374 CURVE SMOOTH",
"426.667 375.333 OFFCURVE",
"426 376.333 OFFCURVE",
"426 377 CURVE",
"424 381 LINE",
"422 385 LINE",
"422 387.667 OFFCURVE",
"420.667 390.333 OFFCURVE",
"418 393 CURVE",
"417 398 LINE SMOOTH",
"416.333 400 OFFCURVE",
"415.333 401.667 OFFCURVE",
"414 403 CURVE",
"413.333 405 OFFCURVE",
"411.667 406.333 OFFCURVE",
"409 407 CURVE",
"408.333 407.667 OFFCURVE",
"407.333 408.167 OFFCURVE",
"406 408.5 CURVE SMOOTH",
"403 410 LINE",
"401.667 410 OFFCURVE",
"401 411 OFFCURVE",
"401 413 CURVE SMOOTH",
"401 416 LINE",
"399.667 416.667 OFFCURVE",
"398.5 417.167 OFFCURVE",
"397.5 417.5 CURVE SMOOTH",
"394 419 LINE SMOOTH",
"392 419.667 OFFCURVE",
"390.333 421 OFFCURVE",
"389 423 CURVE",
"389 431 LINE",
"389 432 LINE",
"388.333 432.667 OFFCURVE",
"387.667 433 OFFCURVE",
"387 433 CURVE SMOOTH",
"376 436 LINE",
"372.667 436 OFFCURVE",
"369.333 437 OFFCURVE",
"366 439 CURVE",
"366 441 LINE",
"364 441.667 OFFCURVE",
"361.667 443 OFFCURVE",
"359 445 CURVE SMOOTH",
"357.667 445.667 OFFCURVE",
"356.333 446.333 OFFCURVE",
"355 447 CURVE SMOOTH",
"350 449 LINE",
"331 449 LINE",
"328 452 LINE",
"326 454 LINE",
"324 456.5 LINE SMOOTH",
"323.333 457.5 OFFCURVE",
"322 458.333 OFFCURVE",
"320 459 CURVE",
"317.333 461.667 OFFCURVE",
"315 463 OFFCURVE",
"313 463 CURVE SMOOTH",
"303 463 LINE",
"301 462.333 OFFCURVE",
"299.333 461.833 OFFCURVE",
"298 461.5 CURVE SMOOTH",
"294 460 LINE SMOOTH",
"293.333 460 OFFCURVE",
"292.333 459.667 OFFCURVE",
"291 459 CURVE",
"289 459 LINE",
"287.667 458.333 OFFCURVE",
"286 458 OFFCURVE",
"284 458 CURVE",
"283.333 458.667 OFFCURVE",
"281.667 459 OFFCURVE",
"279 459 CURVE",
"278.333 457.667 OFFCURVE",
"276.333 457 OFFCURVE",
"273 457 CURVE",
"271.667 456.333 OFFCURVE",
"269.667 456 OFFCURVE",
"267 456 CURVE SMOOTH",
"266.333 456 OFFCURVE",
"265.333 456.667 OFFCURVE",
"264 458 CURVE",
"264 458 OFFCURVE",
"263.833 458.167 OFFCURVE",
"263.5 458.5 CURVE SMOOTH",
"262 460 LINE SMOOTH",
"261.333 460.667 OFFCURVE",
"260.333 461.167 OFFCURVE",
"259 461.5 CURVE SMOOTH",
"256 463 LINE",
"254 463 OFFCURVE",
"252.667 463.333 OFFCURVE",
"252 464 CURVE",
"246.667 465.333 OFFCURVE",
"241.333 464.667 OFFCURVE",
"236 462 CURVE SMOOTH",
"230.667 458.667 OFFCURVE",
"227 456 OFFCURVE",
"225 454 CURVE",
"223.667 454 OFFCURVE",
"221.333 453.333 OFFCURVE",
"220 452 CURVE SMOOTH",
"217 449 LINE",
"188 449 LINE",
"188 446 LINE",
"186 446 LINE",
"185.333 445.333 OFFCURVE",
"184.333 445 OFFCURVE",
"183 445 CURVE",
"181 443.667 OFFCURVE",
"180 442.333 OFFCURVE",
"180 441 CURVE",
"178 439 LINE",
"175.333 438.333 OFFCURVE",
"173.667 438 OFFCURVE",
"173 438 CURVE",
"171 436 LINE",
"169.667 436 OFFCURVE",
"169 435 OFFCURVE",
"169 433 CURVE SMOOTH",
"169 430 LINE",
"167 429 LINE SMOOTH",
"166.333 428.333 OFFCURVE",
"166 428 OFFCURVE",
"166 428 CURVE",
"165 428 LINE",
"165 426.667 OFFCURVE",
"164.667 425.333 OFFCURVE",
"164 424 CURVE",
"164 422 LINE SMOOTH",
"164 420 OFFCURVE",
"163.333 419 OFFCURVE",
"162 419 CURVE",
"160.667 418.333 OFFCURVE",
"160 417.333 OFFCURVE",
"160 416 CURVE SMOOTH",
"160 414 LINE",
"157 413 LINE",
"156.333 413.667 OFFCURVE",
"156 413.667 OFFCURVE",
"156 413 CURVE",
"152 410.333 OFFCURVE",
"149.333 408.667 OFFCURVE",
"148 406 CURVE",
"146.667 405.333 OFFCURVE",
"145.333 404.333 OFFCURVE",
"144 403 CURVE SMOOTH",
"141 400 LINE",
"141 399.333 OFFCURVE",
"140.333 398.667 OFFCURVE",
"139 398 CURVE",
"137 395 LINE",
"133 395 LINE",
"133 395 OFFCURVE",
"133 394.333 OFFCURVE",
"133 393 CURVE",
"131.5 391 LINE SMOOTH",
"131.167 390.333 OFFCURVE",
"130.333 389.667 OFFCURVE",
"129 389 CURVE",
"128.333 387.667 OFFCURVE",
"126.667 387 OFFCURVE",
"124 387 CURVE",
"123 386 LINE",
"120 387 LINE",
"118 387 LINE",
"118 385 LINE",
"111 379 LINE",
"105 373 LINE",
"105 372 LINE",
"102 369 LINE",
"100.667 368.333 OFFCURVE",
"100 367.333 OFFCURVE",
"100 366 CURVE SMOOTH",
"100 364 LINE",
"98 363.333 OFFCURVE",
"97 362.333 OFFCURVE",
"97 361 CURVE",
"94 358 LINE",
"94 339 LINE",
"90 331 LINE SMOOTH",
"88.667 329 OFFCURVE",
"88 326.333 OFFCURVE",
"88 323 CURVE SMOOTH",
"88 308 LINE SMOOTH",
"88 300 OFFCURVE",
"88.667 292.667 OFFCURVE",
"90 286 CURVE SMOOTH",
"91.333 279.333 OFFCURVE",
"93.333 273.667 OFFCURVE",
"96 267 CURVE",
"96 261 LINE",
"94.667 259.667 OFFCURVE",
"94 258 OFFCURVE",
"94 256 CURVE SMOOTH",
"94 238 LINE",
"99 238 LINE",
"104 237 LINE",
"104 234 LINE",
"104.667 233.333 OFFCURVE",
"105.667 233 OFFCURVE",
"107 233 CURVE",
"107.667 232.333 OFFCURVE",
"108 231.333 OFFCURVE",
"108 230 CURVE",
"111 230 LINE",
"111 223 LINE",
"114 223 LINE",
"114 219 LINE",
"116.667 219 OFFCURVE",
"118 219 OFFCURVE",
"118 219 CURVE",
"120 215 LINE",
"120 214 LINE",
"123 214 LINE",
"123 198 LINE",
"120 198 LINE",
"120 194 LINE",
"118 194 LINE",
"118 192 LINE",
"113 192 LINE",
"113 191.333 OFFCURVE",
"112.333 190.333 OFFCURVE",
"111 189 CURVE SMOOTH",
"109.667 188.333 OFFCURVE",
"109 188.333 OFFCURVE",
"109 189 CURVE",
"108 189 LINE",
"108 184 LINE",
"118 184 LINE",
"118 187 LINE",
"128 187 LINE",
"128 185 OFFCURVE",
"128.667 184 OFFCURVE",
"130 184 CURVE",
"131 183 LINE SMOOTH",
"132.333 181.667 OFFCURVE",
"132.333 180 OFFCURVE",
"131 178 CURVE",
"131 175.5 LINE SMOOTH",
"131 174.5 OFFCURVE",
"130.667 173.667 OFFCURVE",
"130 173 CURVE",
"129 169.5 LINE SMOOTH",
"129 168.5 OFFCURVE",
"129 167.667 OFFCURVE",
"129 167 CURVE SMOOTH",
"128 164 LINE",
"127 164 LINE",
"127 156 LINE",
"128 156 LINE",
"130 152.667 OFFCURVE",
"131 151.333 OFFCURVE",
"131 152 CURVE SMOOTH",
"131 152.667 OFFCURVE",
"131.667 152.333 OFFCURVE",
"133 151 CURVE",
"132.333 151 OFFCURVE",
"132 149.333 OFFCURVE",
"132 146 CURVE SMOOTH",
"132 144 OFFCURVE",
"132.333 142.333 OFFCURVE",
"133 141 CURVE",
"131.667 139 OFFCURVE",
"130 138 OFFCURVE",
"128 138 CURVE",
"128 134 LINE",
"127 134 LINE",
"127 131 LINE",
"127.667 132.333 OFFCURVE",
"126.667 131.667 OFFCURVE",
"124 129 CURVE",
"124 124 LINE",
"123.333 124 OFFCURVE",
"122.333 124.667 OFFCURVE",
"121 126 CURVE",
"119.667 126 OFFCURVE",
"119 125.333 OFFCURVE",
"119 124 CURVE",
"118 124 LINE",
"118 128 LINE",
"116 129 LINE",
"115.333 127.667 OFFCURVE",
"114.667 127.667 OFFCURVE",
"114 129 CURVE",
"111 129 LINE",
"111 127.667 OFFCURVE",
"110.667 127 OFFCURVE",
"110 127 CURVE",
"109.333 126.333 OFFCURVE",
"109 125 OFFCURVE",
"109 123 CURVE",
"105 123 LINE",
"105 113 LINE",
"108 113 LINE",
"109 114 LINE",
"109 115.333 OFFCURVE",
"109.667 116 OFFCURVE",
"111 116 CURVE",
"114 114 LINE",
"118 113 LINE",
"118 106 LINE",
"119 106 LINE",
"119 101 LINE",
"118 101 LINE",
"118 88 LINE",
"118 83 LINE",
"118.667 82.333 OFFCURVE",
"119.333 80.667 OFFCURVE",
"120 78 CURVE",
"120 68 LINE",
"120.667 65.333 OFFCURVE",
"121.5 62.5 OFFCURVE",
"122.5 59.5 CURVE SMOOTH",
"125 51 LINE SMOOTH",
"126.333 45 OFFCURVE",
"127 38 OFFCURVE",
"127 30 CURVE SMOOTH",
"127 17 LINE",
"126.333 16.333 OFFCURVE",
"125.667 15.333 OFFCURVE",
"125 14 CURVE SMOOTH",
"123 10 LINE SMOOTH",
"121 7.333 OFFCURVE",
"119.667 5 OFFCURVE",
"119 3 CURVE SMOOTH",
"118.333 0.333 OFFCURVE",
"118 -2 OFFCURVE",
"118 -4 CURVE",
"115 -9 LINE",
"115 -34 LINE",
"115.667 -35.333 OFFCURVE",
"117.667 -36.667 OFFCURVE",
"121 -38 CURVE",
"127 -42 LINE",
"127 -46 LINE SMOOTH",
"127 -47.333 OFFCURVE",
"127.333 -48.667 OFFCURVE",
"128 -50 CURVE",
"130 -51.333 OFFCURVE",
"131 -52.667 OFFCURVE",
"131 -54 CURVE",
"132.333 -55.333 OFFCURVE",
"133.333 -57 OFFCURVE",
"134 -59 CURVE",
"150 -59 LINE",
"150 -61 LINE",
"152.5 -63 LINE SMOOTH",
"153.5 -63.667 OFFCURVE",
"154.333 -64.333 OFFCURVE",
"155 -65 CURVE SMOOTH",
"160 -69 LINE",
"160 -71 LINE",
"161 -71 LINE",
"161 -73 LINE",
"167 -78 LINE SMOOTH",
"168.333 -78.667 OFFCURVE",
"169.667 -80.333 OFFCURVE",
"171 -83 CURVE",
"171 -94 LINE",
"173 -94 LINE",
"173 -96 LINE",
"175 -96 OFFCURVE",
"177 -96 OFFCURVE",
"179 -96 CURVE SMOOTH",
"186 -95 LINE SMOOTH",
"191.333 -95 OFFCURVE",
"194.667 -96 OFFCURVE",
"196 -98 CURVE",
"196 -100 OFFCURVE",
"196.333 -101 OFFCURVE",
"197 -101 CURVE",
"197 -102.333 OFFCURVE",
"197.333 -103 OFFCURVE",
"198 -103 CURVE",
"198 -107 LINE",
"196.667 -109.667 OFFCURVE",
"196.333 -111.667 OFFCURVE",
"197 -113 CURVE SMOOTH",
"197.667 -115 OFFCURVE",
"197.333 -116.333 OFFCURVE",
"196 -117 CURVE",
"196 -119 LINE"
);
},
{
closed = 1;
nodes = (
"100 128 LINE",
"100.667 129.333 OFFCURVE",
"101 131 OFFCURVE",
"101 133 CURVE SMOOTH",
"101 133.667 OFFCURVE",
"100.667 134 OFFCURVE",
"100 134 CURVE",
"98.667 135.333 OFFCURVE",
"97.333 137.333 OFFCURVE",
"96 140 CURVE",
"96 148 LINE",
"94 148 LINE",
"94 153 LINE",
"92 153 LINE",
"92 155 OFFCURVE",
"91.667 156 OFFCURVE",
"91 156 CURVE",
"91 157.333 OFFCURVE",
"90 159 OFFCURVE",
"88 161 CURVE",
"84 161 LINE",
"84 159 LINE",
"82 159 LINE",
"82 155.667 OFFCURVE",
"82.333 153.333 OFFCURVE",
"83 152 CURVE",
"83 146 LINE",
"83.667 145.333 OFFCURVE",
"84 144.333 OFFCURVE",
"84 143 CURVE",
"88 143 LINE",
"86.667 142.333 OFFCURVE",
"86 140.667 OFFCURVE",
"86 138 CURVE",
"88 138 LINE",
"90 134.667 OFFCURVE",
"91.667 133 OFFCURVE",
"93 133 CURVE",
"93.667 131.667 OFFCURVE",
"94 130 OFFCURVE",
"94 128 CURVE"
);
},
{
closed = 1;
nodes = (
"108.667 143.667 OFFCURVE",
"109 144 OFFCURVE",
"109 144 CURVE",
"110 144 LINE SMOOTH",
"110.667 144 OFFCURVE",
"111 144.333 OFFCURVE",
"111 145 CURVE",
"111.667 145.667 OFFCURVE",
"113 146 OFFCURVE",
"115 146 CURVE",
"115 148 LINE",
"111 148 LINE",
"109 151 LINE SMOOTH",
"108.333 152.333 OFFCURVE",
"107 153 OFFCURVE",
"105 153 CURVE",
"105 148 LINE",
"105.667 147.333 OFFCURVE",
"106.167 146.5 OFFCURVE",
"106.5 145.5 CURVE SMOOTH",
"108 143 LINE"
);
},
{
closed = 1;
nodes = (
"258.667 12 OFFCURVE",
"260.333 13 OFFCURVE",
"261 13 CURVE",
"261.667 13.667 OFFCURVE",
"263.333 13.667 OFFCURVE",
"266 13 CURVE",
"266 17 LINE",
"268 17 OFFCURVE",
"269 17.333 OFFCURVE",
"269 18 CURVE",
"270 18 LINE SMOOTH",
"270.667 18 OFFCURVE",
"271 17.667 OFFCURVE",
"271 17 CURVE",
"273 17.667 OFFCURVE",
"274 19 OFFCURVE",
"274 21 CURVE",
"284 21 LINE",
"284 22 LINE",
"289 22 LINE",
"289 23 LINE",
"290 24 LINE",
"290 26.667 OFFCURVE",
"288.333 29.333 OFFCURVE",
"285 32 CURVE",
"285 33 LINE",
"284 33 LINE",
"283 36 LINE",
"282.333 36 OFFCURVE",
"281.833 36 OFFCURVE",
"281.5 36 CURVE",
"281 37 LINE",
"279 37 LINE",
"278 36 LINE",
"271 36 LINE",
"270 33 LINE",
"261 33 LINE",
"261 36 LINE",
"258 36 LINE SMOOTH",
"254.667 36 OFFCURVE",
"253 35.667 OFFCURVE",
"253 35 CURVE SMOOTH",
"253 33.667 OFFCURVE",
"252.667 33 OFFCURVE",
"252 33 CURVE SMOOTH",
"248 33 LINE SMOOTH",
"247.333 33 OFFCURVE",
"247 32.667 OFFCURVE",
"247 32 CURVE",
"241 32 LINE SMOOTH",
"239 32 OFFCURVE",
"238 32.333 OFFCURVE",
"238 33 CURVE",
"233.333 33 OFFCURVE",
"230.333 32.667 OFFCURVE",
"229 32 CURVE",
"229 26 LINE",
"228.333 24.667 OFFCURVE",
"229 24 OFFCURVE",
"231 24 CURVE",
"231 22 LINE SMOOTH",
"231 21.333 OFFCURVE",
"231.667 21 OFFCURVE",
"233 21 CURVE SMOOTH",
"234 21 LINE",
"241 21 LINE",
"241 19 OFFCURVE",
"241.667 17.667 OFFCURVE",
"243 17 CURVE",
"243 17.667 OFFCURVE",
"244.333 18 OFFCURVE",
"247 18 CURVE",
"247 17.333 OFFCURVE",
"247.333 17 OFFCURVE",
"248 17 CURVE",
"248.667 15.667 OFFCURVE",
"250.333 14.667 OFFCURVE",
"253 14 CURVE",
"256 10 LINE"
);
},
{
closed = 1;
nodes = (
"96 171 LINE",
"96 173 LINE",
"99 174.5 LINE SMOOTH",
"99.667 174.833 OFFCURVE",
"99.667 175 OFFCURVE",
"99 175 CURVE",
"99 175.667 OFFCURVE",
"99.667 175.333 OFFCURVE",
"101 174 CURVE",
"101 183 LINE",
"100.333 184.333 OFFCURVE",
"100 187.333 OFFCURVE",
"100 192 CURVE",
"98 192 LINE",
"98.667 192.667 OFFCURVE",
"98 193.333 OFFCURVE",
"96 194 CURVE",
"96 198 LINE",
"94 198 LINE",
"94 202 LINE",
"92 202 LINE",
"92 210 LINE",
"86 210 LINE",
"86 200 LINE",
"88 200 LINE",
"88 196 LINE",
"92 196 LINE",
"91.333 195.333 OFFCURVE",
"91 194.333 OFFCURVE",
"91 193 CURVE SMOOTH",
"91 188 LINE",
"94 188 LINE",
"94 183.333 OFFCURVE",
"92 180.333 OFFCURVE",
"88 179 CURVE",
"88 176.333 OFFCURVE",
"88.333 175 OFFCURVE",
"89 175 CURVE",
"89.667 174.333 OFFCURVE",
"90.167 173.667 OFFCURVE",
"90.5 173 CURVE SMOOTH",
"92 171 LINE"
);
},
{
closed = 1;
nodes = (
"111 203 LINE",
"114 206 LINE",
"114 206.667 OFFCURVE",
"113.333 207 OFFCURVE",
"112 207 CURVE",
"109 210 LINE",
"109 203 LINE"
);
},
{
closed = 1;
nodes = (
"285 44 LINE SMOOTH",
"287.667 44 OFFCURVE",
"289.333 44.333 OFFCURVE",
"290 45 CURVE",
"295.5 45 LINE SMOOTH",
"297.167 45 OFFCURVE",
"298.667 45.333 OFFCURVE",
"300 46 CURVE",
"302.667 46 OFFCURVE",
"305 47 OFFCURVE",
"307 49 CURVE",
"307.667 49 OFFCURVE",
"306.667 50.333 OFFCURVE",
"304 53 CURVE",
"284 53 LINE",
"284 49 LINE",
"281 50 LINE",
"281 49.333 OFFCURVE",
"280.333 49.667 OFFCURVE",
"279 51 CURVE",
"277 51 LINE",
"277 46 LINE",
"278.333 44.667 OFFCURVE",
"279.667 44 OFFCURVE",
"281 44 CURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"339.333 -26.667 OFFCURVE",
"340.333 -26 OFFCURVE",
"341 -24 CURVE",
"343 -23 LINE",
"349 -23 LINE",
"349 -20 LINE",
"353 -20 LINE",
"353 -17.333 OFFCURVE",
"353.333 -15.333 OFFCURVE",
"354 -14 CURVE",
"353 -11 LINE",
"353 -7.667 OFFCURVE",
"352.667 -5.333 OFFCURVE",
"352 -4 CURVE",
"352 -1.333 OFFCURVE",
"352.667 0.333 OFFCURVE",
"354 1 CURVE SMOOTH",
"355.333 2.333 OFFCURVE",
"356.667 2.667 OFFCURVE",
"358 2 CURVE",
"358 1.333 OFFCURVE",
"359 1.667 OFFCURVE",
"361 3 CURVE",
"361 7 LINE",
"362.333 7.667 OFFCURVE",
"363 9 OFFCURVE",
"363 11 CURVE SMOOTH",
"363 12.333 OFFCURVE",
"363.333 13.333 OFFCURVE",
"364 14 CURVE",
"364.667 14 OFFCURVE",
"365.333 14.333 OFFCURVE",
"366 15 CURVE SMOOTH",
"367 16 LINE",
"367 16 OFFCURVE",
"367.333 16.333 OFFCURVE",
"368 17 CURVE SMOOTH",
"374 21 LINE",
"375.333 23 OFFCURVE",
"377.333 24.667 OFFCURVE",
"380 26 CURVE",
"380.667 27.333 OFFCURVE",
"382 28 OFFCURVE",
"384 28 CURVE",
"387 30 LINE",
"387 33 LINE",
"389 33 LINE",
"390 35 LINE",
"389.333 35.667 OFFCURVE",
"389.667 36.333 OFFCURVE",
"391 37 CURVE",
"391 41 LINE",
"389 44 LINE",
"385.667 46 OFFCURVE",
"384 46 OFFCURVE",
"384 44 CURVE",
"382 43.333 OFFCURVE",
"380.333 42.333 OFFCURVE",
"379 41 CURVE SMOOTH",
"378.333 40.333 OFFCURVE",
"378 39.333 OFFCURVE",
"378 38 CURVE",
"377.333 38 OFFCURVE",
"377 37.667 OFFCURVE",
"377 37 CURVE SMOOTH",
"377 36.333 OFFCURVE",
"376.667 35.667 OFFCURVE",
"376 35 CURVE SMOOTH",
"373 33 LINE",
"368 33 LINE",
"368 32 LINE",
"364 32 LINE",
"364 31 LINE SMOOTH",
"364 30.333 OFFCURVE",
"363.667 30 OFFCURVE",
"363 30 CURVE SMOOTH",
"361.667 30 OFFCURVE",
"361 29.333 OFFCURVE",
"361 28 CURVE",
"358 28 LINE",
"358 24 LINE",
"357 24 LINE",
"357 21 LINE SMOOTH",
"357 19 OFFCURVE",
"356.667 18 OFFCURVE",
"356 18 CURVE SMOOTH",
"354 18 LINE",
"354 16.667 OFFCURVE",
"354.667 15.667 OFFCURVE",
"356 15 CURVE",
"356 14.333 OFFCURVE",
"355.333 14 OFFCURVE",
"354 14 CURVE",
"354 13.333 OFFCURVE",
"353.667 13 OFFCURVE",
"353 13 CURVE",
"353 4 LINE",
"351 4 LINE SMOOTH",
"350.333 4 OFFCURVE",
"350 3.667 OFFCURVE",
"350 3 CURVE",
"353 1 LINE",
"351.667 0.333 OFFCURVE",
"350 -1.333 OFFCURVE",
"348 -4 CURVE SMOOTH",
"343 -9 LINE",
"343 -10.333 OFFCURVE",
"342.667 -11 OFFCURVE",
"342 -11 CURVE SMOOTH",
"341 -11 LINE",
"341 -13 LINE",
"339 -13 LINE",
"339 -14 LINE",
"335 -14 LINE",
"337 -16 OFFCURVE",
"337.333 -17.667 OFFCURVE",
"336 -19 CURVE SMOOTH",
"334.667 -20.333 OFFCURVE",
"334 -21.667 OFFCURVE",
"334 -23 CURVE SMOOTH",
"334 -23.667 OFFCURVE",
"334.333 -24 OFFCURVE",
"335 -24 CURVE",
"335.667 -25.333 OFFCURVE",
"336.667 -26 OFFCURVE",
"338 -26 CURVE"
);
},
{
closed = 1;
nodes = (
"357 164 LINE",
"358 164 LINE",
"357 165 LINE",
"361 165 LINE",
"361 166.333 OFFCURVE",
"362.667 168.333 OFFCURVE",
"366 171 CURVE",
"366 173 LINE",
"368 173 LINE",
"371 174 LINE",
"371 177 LINE",
"371.667 177.667 OFFCURVE",
"372.333 178 OFFCURVE",
"373 178 CURVE",
"373 180 LINE",
"380.333 180 OFFCURVE",
"385 180.333 OFFCURVE",
"387 181 CURVE",
"389.667 181 OFFCURVE",
"392 183 OFFCURVE",
"394 187 CURVE",
"394.667 187.667 OFFCURVE",
"394.333 188 OFFCURVE",
"393 188 CURVE",
"391.667 188.667 OFFCURVE",
"392 190 OFFCURVE",
"394 192 CURVE",
"394.667 192 OFFCURVE",
"395 192.667 OFFCURVE",
"395 194 CURVE",
"396.333 195.333 OFFCURVE",
"396.667 196 OFFCURVE",
"396 196 CURVE",
"398 198 LINE",
"398 201 LINE",
"396.667 202.333 OFFCURVE",
"395.667 203 OFFCURVE",
"395 203 CURVE SMOOTH",
"394 203 LINE",
"394 206 LINE",
"389 206 LINE",
"389 209 LINE",
"388.333 208.333 OFFCURVE",
"387.333 208.667 OFFCURVE",
"386 210 CURVE SMOOTH",
"384.667 210.667 OFFCURVE",
"384 212 OFFCURVE",
"384 214 CURVE",
"382.667 214 OFFCURVE",
"380.667 213.333 OFFCURVE",
"378 212 CURVE",
"376.667 210.667 OFFCURVE",
"374.667 210.333 OFFCURVE",
"372 211 CURVE",
"371 214 LINE",
"366 214 LINE",
"366 214 OFFCURVE",
"366 214.167 OFFCURVE",
"366 214.5 CURVE",
"365 216 LINE",
"364.333 216 OFFCURVE",
"364 216.167 OFFCURVE",
"364 216.5 CURVE SMOOTH",
"364 218 LINE",
"363.333 218 OFFCURVE",
"363 218.167 OFFCURVE",
"363 218.5 CURVE",
"353 219 LINE",
"353 221 LINE",
"350 223 LINE",
"343 221 LINE",
"343 219 LINE",
"335 219 LINE",
"334 218 LINE",
"334.667 217.333 OFFCURVE",
"334.667 217 OFFCURVE",
"334 217 CURVE",
"334 214 LINE",
"332.667 214 OFFCURVE",
"330.667 213.667 OFFCURVE",
"328 213 CURVE SMOOTH",
"324 211 LINE",
"324 210 LINE",
"321 207 LINE",
"320 207 LINE",
"320 206.333 OFFCURVE",
"320.333 206 OFFCURVE",
"321 206 CURVE",
"320 203 LINE",
"319 203 LINE",
"319 202.333 OFFCURVE",
"318.667 202 OFFCURVE",
"318 202 CURVE",
"318 200 LINE SMOOTH",
"318 198.667 OFFCURVE",
"317.333 198 OFFCURVE",
"316 198 CURVE",
"316 196.667 OFFCURVE",
"316.333 195.333 OFFCURVE",
"317 194 CURVE SMOOTH",
"317.667 192.667 OFFCURVE",
"317.333 191 OFFCURVE",
"316 189 CURVE",
"321 184 LINE SMOOTH",
"323 182 OFFCURVE",
"322.667 179.667 OFFCURVE",
"320 177 CURVE",
"321 175 LINE",
"320.333 174.333 OFFCURVE",
"320.333 174 OFFCURVE",
"321 174 CURVE",
"321 173 LINE",
"338 173 LINE SMOOTH",
"338.667 173 OFFCURVE",
"339 172.667 OFFCURVE",
"339 172 CURVE",
"340.333 171.333 OFFCURVE",
"341.667 171 OFFCURVE",
"343 171 CURVE",
"343 168.333 OFFCURVE",
"344 167 OFFCURVE",
"346 167 CURVE",
"349 164 LINE"
);
}
);
width = 490;
}
);
note = robbie;
}
);
instances = (
{
customParameters = (
{
name = postscriptFullName;
value = PassionsConflictPro;
},
{
name = postscriptFontName;
value = PassionsConflictPro;
}
);
instanceInterpolations = {
"0CF23081-C341-41E4-8FF8-6B151438961F" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"0CF23081-C341-41E4-8FF8-6B151438961F" = {
C = {
D = 76.875;
};
F = {
e = -11.25;
o = -11.25;
r = -7.5;
};
P = {
a = -78.125;
e = -28.75;
g = -58.125;
i = 15;
l = 20;
o = -33.75;
r = -19.375;
u = -73.125;
v = -63.125;
w = -97.5;
x = -58.125;
y = -43.75;
z = -68.125;
};
T = {
h = 112.5;
};
h = {
a = -10;
r = -13.75;
};
y = {
d = -43.75;
};
};
};
manufacturer = "Robert E. Leuschke";
manufacturerURL = www.typesetit.com;
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 2;
}
