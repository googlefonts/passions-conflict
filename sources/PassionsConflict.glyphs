{
.appVersion = "1357";
DisplayStrings = (
"lc_to_lc\012\012aa\012af\012ag\012aj\012au\012av\012aw\012ax\012ay\012az\012bb\012bf\012bj\012bs\012bv\012bw\012bx\012by\012bz\012cf\012cg\012ci\012cj\012cl\012cn\012co\012cp\012cs\012ct\012cu\012cv\012cx\012cz\012fa\012ff\012fg\012fi\012fj\012fl\012fn\012fo\012fp\012fs\012ft\012fu\012fv\012fx\012fz\012ga\012gf\012gg\012gi\012gj\012gl\012gn\012go\012gp\012gs\012gt\012gu\012gv\012gx\012gz\012ia\012if\012ig\012ii\012ij\012il\012in\012io\012ip\012is\012it\012iu\012iv\012ix\012iz\012ja\012jf\012jg\012ji\012jj\012jl\012jn\012jo\012jp\012js\012jt\012ju\012jv\012jx\012jz\012ka\012kf\012kg\012ki\012kj\012kl\012kn\012ko\012kp\012ks\012kt\012ku\012kv\012kx\012kz\012la\012lf\012lg\012li\012lj\012ll\012ln\012lo\012lp\012ls\012lt\012lu\012lv\012lx\012lz\012na\012nf\012ng\012ni\012nj\012nl\012nn\012no\012np\012ns\012nt\012nu\012nv\012nx\012nz\012oa\012of\012og\012oi\012oj\012ol\012on\012oo\012op\012os\012ot\012ou\012ov\012ox\012oz\012qa\012qf\012qg\012qi\012qj\012ql\012qn\012qo\012qp\012qs\012qt\012qu\012qv\012qx\012qz\012ra\012rf\012rg\012ri\012rj\012rl\012rn\012ro\012rp\012rs\012rt\012ru\012rv\012rx\012rz\012sa\012sf\012sg\012si\012sj\012sl\012sn\012so\012sp\012ss\012st\012su\012sv\012sx\012sz\012ta\012tf\012tg\012ti\012tj\012tl\012tn\012to\012tp\012ts\012tt\012tu\012tv\012tx\012tz\012va\012vf\012vg\012vi\012vj\012vl\012vn\012vo\012vp\012vs\012vt\012vu\012vv\012vx\012vz\012xa\012xf\012xg\012xi\012xj\012xl\012xn\012xo\012xp\012xs\012xt\012xu\012xv\012xx\012xz\012za\012zf\012zg\012zi\012zj\012zl\012zn\012zo\012zp\012zs\012zt\012zu\012zv\012zx\012zz\012",
"AC\012AG\012AJ\012AO\012AQ\012AS\012AT\012AU\012AV\012AW\012AX\012AY\012AZ\012BA\012BT\012BU\012BV\012BW\012BX\012BY\012CC\012CG\012DA\012DJ\012DT\012DU\012DV\012DW\012DX\012DY\012DZ\012EJ\012EV\012EW\012EX\012EY\012FA\012FC\012FG\012FJ\012FO\012FQ\012FU\012FV\012FW\012FY\012GV\012GW\012GX\012GY\012JA\012JC\012JG\012JM\012JO\012JQ\012JS\012JU\012JY\012JZ\012KA\012KC\012KG\012KO\012KQ\012KS\012KT\012KU\012KV\012KW\012KX\012KY\012LC\012LG\012LJ\012LO\012LQ\012LT\012LU\012LV\012LW\012LX\012LY\012LZ\012OA\012OJ\012OS\012OT\012OU\012OV\012OW\012OX\012OY\012OZ\012PA\012PJ\012PS\012PU\012PV\012PW\012PX\012PY\012PZ\012QA\012QJ\012RA\012RC\012RG\012RJ\012RO\012RQ\012RT\012RU\012RV\012RW\012RX\012RY\012SA\012SM\012ST\012SU\012SV\012SW\012SY\012SZ\012TA\012TC\012TG\012TJ\012TO\012TQ\012TS\012TU\012TV\012TW\012TY\012UA\012UC\012UG\012UO\012UQ\012UT\012VA\012VC\012VG\012VJ\012VM\012VO\012VQ\012VS\012VT\012VU\012VV\012VW\012VX\012VY\012WA\012WC\012WG\012WJ\012WM\012WO\012WQ\012WS\012WT\012WU\012WV\012WW\012WX\012WY\012XA\012XC\012XG\012XO\012XQ\012XU\012YA\012YC\012YG\012YJ\012YM\012YO\012YQ\012YS\012YX\012YZ\012ZA\012ZC\012ZG\012ZO\012ZQAC\012AG\012AJ\012AO\012AQ\012AS\012AT\012AU\012AV\012AW\012AX\012AY\012AZ\012BA\012BT\012BU\012BV\012BW\012BX\012BY\012CC\012CG\012DA\012DJ\012DT\012DU\012DV\012DW\012DX\012DY\012DZ\012EJ\012EV\012EW\012EX\012EY\012FA\012FC\012FG\012FJ\012FO\012FQ\012FU\012FV\012FW\012FY\012GV\012GW\012GX\012GY\012JA\012JC\012JG\012JM\012JO\012JQ\012JS\012JU\012JY\012JZ\012KA\012KC\012KG\012KO\012KQ\012KS\012KT\012KU\012KV\012KW\012KX\012KY\012LC\012LG\012LJ\012LO\012LQ\012LT\012LU\012LV\012LW\012LX\012LY\012LZ\012OA\012OJ\012OS\012OT\012OU\012OV\012OW\012OX\012OY\012OZ\012PA\012PJ\012PS\012PU\012PV\012PW\012PX\012PY\012PZ\012QA\012QJ\012RA\012RC\012RG\012RJ\012RO\012RQ\012RT\012RU\012RV\012RW\012RX\012RY\012SA\012SM\012ST\012SU\012SV\012SW\012SY\012SZ\012TA\012TC\012TG\012TJ\012TO\012TQ\012TS\012TU\012TV\012TW\012TY\012UA\012UC\012UG\012UO\012UQ\012UT\012VA\012VC\012VG\012VJ\012VM\012VO\012VQ\012VS\012VT\012VU\012VV\012VW\012VX\012VY\012WA\012WC\012WG\012WJ\012WM\012WO\012WQ\012WS\012WT\012WU\012WV\012WW\012WX\012WY\012XA\012XC\012XG\012XO\012XQ\012XU\012YA\012YC\012YG\012YJ\012YM\012YO\012YQ\012YS\012YX\012YZ\012ZA\012ZC\012ZG\012ZO\012ZQ",
"b.\012b,\012e.\012e,\012f.\012f,\012¿f\012f?\012f!\012g.\012g,\012j.\012j,\012k/endash \012o.\012o,\012p.\012p,\012q.\012r.\012r,\012r-\012s.\012s,\012s-\012t-\012v.\012v,\012w.\012w,\012y.\012y,\012y-y\012A-A\012D.\012D,\012F.\012F,\012F;\012F:\012F-\012J.\012J,\012J;\012J:\012J-J\012K-\012-M\012O.\012O,\012P.\012P,\012P-\012R-\012T.\012T,\012T;\012T:\012T-T\012U.\012U,\012U-\012V.\012V,\012V;\012V:\012V-V\012¡V\012W.\012W,\012W;\012W:\012W-W\012X-X\012Y.\012Y,\012Y;\012Y:\012Y-Y\012-Z\012\012",
"Ac\012Ad\012Ae\012Ag\012Ao\012Aq\012As\012At\012Au\012Av\012Aw\012Ay\012Bv\012Bw\012Bx\012By\012Bz\012Ca\012Cc\012Cd\012Ce\012Co\012Cv\012Cw\012Cy\012Ev\012Ew\012Ex\012Ey\012Ez\012Fa\012Fc\012Fd\012Fe\012Ff\012Fg\012Fm\012Fn\012Fo\012Fq\012Fs\012Ft\012Fu\012Fv\012Fw\012Fx\012Fy\012Fz\012Ja\012Jc\012Jd\012Je\012Jg\012Jo\012Jq\012Ka\012Kc\012Kd\012Ke\012Kg\012Ko\012Kq\012Ks\012Kt\012Ku\012Kv\012Kw\012Ky\012Lc\012Ld\012Le\012Lg\012Lf\012Lo\012Lq\012Lt\012Lu\012Lv\012Lw\012Lx\012Pa\012Pc\012Pd\012Pe\012Pg\012Po\012Pq\012Ps\012Pt\012Pu\012Pv\012Pw\012Px\012Py\012Pz\012Qj\012Ra\012Rc\012Rd\012Re\012Rg\012Ro\012Rq\012Rt\012Ru\012Rv\012Rw\012Rx\012Ry\012Sv\012Sw\012Sx\012Sy\012Ta\012Tc\012Td\012Te\012Tg\012Tn\012To\012Tq\012Ts\012Tu\012Tv\012Tw\012Tx\012Ty\012Tz\012Ua\012Uc\012Ud\012Ue\012Ug\012Uo\012Uq\012Uv\012Uw\012Ux\012Uy\012Uz\012Va\012Vc\012Vd\012Ve\012Vg\012Vn\012Vo\012Vp\012Vq\012Vr\012Vs\012Vu\012Vv\012Vw\012Vx\012Vy\012Vz\012Wa\012Wc\012Wd\012We\012Wg\012Wn\012Wo\012Wp\012Wq\012Wr\012Ws\012Wu\012Wv\012Ww\012Wx\012Wy\012Wz\012Xc\012Xd\012Xe\012Xg\012Xo\012Xq\012Xu\012Xv\012Xw\012Xy\012Ya\012Yc\012Yd\012Ye\012Yg\012Yn\012Yo\012Yq\012Ys\012Yt\012Yu\012Yv\012Yw\012Yx\012Yy\012Yz\012Zv\012Zw\012Zy\012",
"Resolution/space 217/space A/space (III)/space vom/space 10.12.1948Da/space die/space Anerkennung/space angeborenen/space Würde/space gleichen/space unveräußerlichen/space Mitglieder/space Gemeinschaft/space Freiheit,/space Nichtanerkennung/space Verachtung/space zu/space Barbarei/space Gewissen/space Empörung/space Rede/hyphentwo/space Streben/space Herrschaft/space Tyrannei/space Unterdrückung/space Charta/space Person/space Lebensbedingungen/space Zusammenarbeit/space jeder/space Organe/space begegnen.Jeder/space Überzeugung,/space werden;/space Kulthandlungen/space Ämtern/space Existenz/space resolución/space que/space intrínseca/space más/space régimen/space común/space enseñanza/space izzet-hörmitini/space aylan'ghanliqi,/space ijtima/quoteright iy/space qilidu:hemme/space Yora/space ¿Un/space huatiromanmun?Ascantanrifin/space senenhas\"honra/space IQUl,/space JONÍ/space Él/space barbàrie/space consciència/space creença,Considerant/space rebel·lió/space autònom,/space països/space TUÁKAR/space AÚJMATISAMUJúna/space pu]ustinrin,/space thë/space wã/space/itilde h/itilde/space maõpë,Enaha/space r/etilde/space popehe/Itilde h/itilde/space TOTIHITAWË/space Ã/space owëmayõ/utilde/space taomi.Considerînd/space c/abreve/space recunoa/scommaaccent terea/space demnit/abreve/tcommaaccent ii/space GENERAL/Abreve/space DECLARA/Tcommaaccent IE/space împrejur/abreve ri.În/space Birle/scedilla mi/scedilla/space Asambleyas/idotless n/idotless n/space merkeziBas/idotless lêr/space/Idotaccent lerlemä/space Deklara/tcedilla lyas/idotless n/idotless/space kay/idotless ll/idotless/idotless nnan.Aylä/emdash tegnì/space dùthchannan,Do/space/eng ga/space SE:KEDE/Eng GA/space nte/macronbelowcomb 'e/macronbelowcomb/space Xiskuamana,/space dyant_'e/macronbelowcomb/space se/tildecomb n/space ye.[Missing]Ned/space p/oe ga,/space lume,Considerând/space/endash/space WALINKAÑAPATAKI/space E'~mbi/space ber/scaron ,/space/ccaron a/ccaron ipa/space d/zcaron enengere/space bipa/cacute ape/space/quotedblleft raica/space qali./quotedblright Ni/space fa'ati'am/amacron/space t/umacron tu'u-mana-'ore/space h/omacron '/emacron/space fa'at/imacron t/imacron ra'a/space ai.3-'E/space 360/space rukutina¿;¡ju/space/dcaron ekesi/space/quoteleft bukulu/eng .KWEJA/space ADI/Dcaron e/dcaron ekarikin/space ju/ygrave u/space &/space kamanz/schwa ga/space Övertügen,/space nateûre/space égåls,/space s-ôtes/space vre°ymint/space secretario.general@gmail.cominterlingua.comUling/space GWIRIOÙ/space k/space k/space nüxü/tildecomb/acutecomb/space/Itilde X/Etilde Rü/space qa/ytilde a/ytilde ateeta/space nai>>ctaxa/space/Schwa B/Idotaccent LOV09.12.11B/schwa/space l/schwa yo/gbreve/schwa t/schwa/space Ç/schwa von/space po'ñoc/dieresiscomb h/space iñapytl/apostrophemod yre/space manu/sacute enqe/space fam/ecaron lia/space aspir/racute cia/space tr/aogonek den/space r/ncaron del/space teritor/uhungarumlaut qesqiri,/space ma/zacute utipen/space na/sacute/abreve rd/ohungarumlaut l/space publ/gcommaaccent ko/space prandipen.Âaj/space proced/uring ra.Sarkas,/space d´fhiacha/space/iogonek/space/zcaron moni/uogonek/space gimin/edotaccent s/space s/aogonek/zcaron in/eogonek ,/space asmenyb/edotaccent ./Iogonek gyvendindamas/space visuomen/edotaccent je./Scaron ios/space Òmma/space naçon.Ês/space/Gcircumflex enerala/space/ccircumflex iuj/space efektivi/gcircumflex o/space kontra/ubreve/space/Ccircumflex arto/space/Scircumflex tatoj-Membroj/space pa/scircumflex oj/space poseda/jcircumflex oj,/space tjuta!Tjinguru/space Ó/space KU`OTENESEKILONDEKESU/space/Dcroat a/dotbelowcomb i/space/dcroat ô/gravecomb ng/space H/ohorn/dotbelowcomb p/space th/uhorn/acutecomb c/space phâ/hookabovecomb m/space j/space nudeji.N/space Åtta/space éyaltai{ab/space Enyi/nacute/space ba/caroncomb si/acutecomb/space ata/circumflexcomb/space assaturusengnge.Það/space þetta/space réttlætis/space lýst,/space 5IGELE/space UNIVERSÈLE/space DREÛTS/space tutup;BA/Scedilla/space ASSAMBLEÝAADAM/space HUKUKLARYNY/Ncaron/space Ïa/space/lcaron ných/space te/scaron i/tcaron/space SHROMA/Zcaron DENIEtúto/space/Ccaron o/space tia;/backslash ui./space le^/space bekjentgjøre/space VERDENSERKLÆRING/space i%anique/space raryijnty£ryanityaniy/space rirva½arvurva/space «/space »/space/lslash a/space promesi./Lslash a/space t/dagger/space =/space OP/Cacute OJ/space usirhelèli.À/space bjóðarAÐALFUNDURINHesa/space teirra.Øll/space/quoteleft/Omacron lelo/space N/Amacron/space K/Imacron VILA/space n/dotaccentcomb wet/space gban/macroncomb gba,/space/Gcommaaccent ener/amacron l/amacron/space pie/ncommaaccent/emacron musi/space locek/lcommaaccent iem/space at/scaron/kcommaaccent ir/imacron bas/space p/rcaron irozené/space aji/lslash ts/oogonek h/space wón/ydieresis uú/space dea/tbar ala/scaron/space g/hbar all-maskil,/space tal-pa/cdotaccent i/space/zdotaccent -/zdotaccent ebli/hbar/space/gdotaccent abu/space tal-/Gdotaccent nus/space tieg/hbar u./Hbar add/space/odotbelow/space b/udotbelow/space p/udotbelow gh/idotbelow/space ZI/Odotbelow gbak/odotbelow/space ya./Udotbelow m/udotbelow/space enupa,/ellipsis )/space pruckamakir+t/space godno/sacute/cacute .ZWA/Zdotaccent YWSZY,/space/florin e",
"/commaaccentcomb",
"ó/obreve ô/ocircumflexacute/ocircumflexdotbelow/ocircumflexgrave/ocircumflexhookabove/ocircumflextilde/odblgrave ö/odieresismacron/dotaccentcomb/odotaccentmacron/odotbelow ò/ohookabove/ohorn/ohornacute/ohorndotbelow/ohorngrave/ohornhookabove/ohorntilde/ohungarumlaut/oinvertedbreve/omacron/oogonek ø/oslashacute õ/otildemacron",
"/Odieresismacron/dotaccentcomb.case/Odotaccentmacron"
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehookabove Abrevetilde Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhookabove Acircumflextilde Adblgrave Adieresis Adotbelow Agrave Ahookabove Ainvertedbreve Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D DZcaron Eth Dcaron Dcroat Dzcaron E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhookabove Ecircumflextilde Edblgrave Edieresis Edotaccent Edotbelow Egrave Ehookabove Einvertedbreve Emacron Eogonek Etilde F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex I Iacute Ibreve Icircumflex Idblgrave Idieresis Idotaccent Idotbelow Igrave Ihookabove Iinvertedbreve Imacron Iogonek Itilde J Jcircumflex K Kcommaaccent L LJ Lacute Lcaron Lcommaaccent Ldot Lj Lslash M N NJ Nacute Ncaron Ncommaaccent Eng Nj Ntilde O Oacute Obreve Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhookabove Ocircumflextilde Odblgrave Odieresis Odieresismacron Odotaccentmacron Odotbelow Ograve Ohookabove Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhookabove Ohorntilde Ohungarumlaut Oinvertedbreve Omacron Oogonek Oslash Oslashacute Otilde Otildemacron OE P Thorn Q R Racute Rcaron Rcommaaccent Rdblgrave Rinvertedbreve S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls Schwa T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucircumflex Udblgrave Udieresis Udotbelow Ugrave Uhookabove Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhookabove Uhorntilde Uhungarumlaut Uinvertedbreve Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhookabove Ymacron Ytilde Z Zacute Zcaron Zdotaccent";
name = Uppercase;
}
);
copyright = "Copyright 2004 The Hurricane Project Authors (https://github.com/googlefonts/passions-conflict)";
customParameters = (
{
name = licenseURL;
value = "https://scripts.sil.org/OFL";
},
{
name = license;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL";
},
{
name = vendorID;
value = GOOG;
},
{
name = "Disable Subroutines";
value = 1;
},
{
name = glyphOrder;
value = (
.notdef,
CR,
NULL,
space,
nbspace
);
},
{
name = fsType;
value = (
);
},
{
name = "Use Typo Metrics";
value = 1;
},
{
name = Axes;
value = (
{
Name = Weight;
Tag = wght;
}
);
}
);
date = "2021-09-02 21:24:22 +0000";
designer = "Robert E. Leuschke";
designerURL = www.typesetit.com;
familyName = "Passions Conflict";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;\012\012languagesystem latn dflt;\012languagesystem latn AZE;\012languagesystem latn CRT;\012languagesystem latn KAZ;\012languagesystem latn TAT;\012languagesystem latn TRK;\012languagesystem latn ROM;\012languagesystem latn MOL;\012languagesystem latn CAT;\012";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;\012feature sups;\012feature frac;\012feature ordn;\012feature case;\012";
name = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {\012	@CombiningTopAccents = [acutecomb brevecomb breveinvertedcomb caroncomb circumflexcomb commaturnedabovecomb dblgravecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];\012	@CombiningNonTopAccents = [brevebelowcomb cedillacomb dieresisbelowcomb dotbelowcomb macronbelowcomb ogonekcomb horncomb strokeshortcomb];\012	sub [i j]' @CombiningTopAccents by [idotless jdotless];\012	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];\012	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb caroncomb.alt circumflexcomb caroncomb brevecomb ringcomb tildecomb tildecomb_dotaccentcomb tildecomb_macroncomb macroncomb hookabovecomb dblgravecomb breveinvertedcomb commaturnedabovecomb horncomb cedillacomb ogonekcomb brevecomb_acutecomb brevecomb_gravecomb brevecomb_hookabovecomb brevecomb_tildecomb circumflexcomb_acutecomb circumflexcomb_gravecomb circumflexcomb_hookabovecomb circumflexcomb_tildecomb];\012	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case caroncomb.alt.case circumflexcomb.case caroncomb.case brevecomb.case ringcomb.case tildecomb.case tildecomb_dotaccentcomb.case tildecomb_macroncomb.case macroncomb.case hookabovecomb.case dblgravecomb.case breveinvertedcomb.case commaturnedabovecomb.case horncomb.case cedillacomb.case ogonekcomb.case brevecomb_acutecomb.case brevecomb_gravecomb.case brevecomb_hookabovecomb.case brevecomb_tildecomb.case circumflexcomb_acutecomb.case circumflexcomb_gravecomb.case circumflexcomb_hookabovecomb.case circumflexcomb_tildecomb.case];\012	sub @Markscomb @Markscomb' by @MarkscombCase;\012	sub @Uppercase @Markscomb' by @MarkscombCase;\012} ccmp_Other_1;\012\012lookup ccmp_Other_2 {\012	sub @Markscomb' @MarkscombCase by @MarkscombCase;\012	sub @MarkscombCase @Markscomb' by @MarkscombCase;\012} ccmp_Other_2;\012\012lookup ccmp_Other_3 {\012	lookupflag 0;\012	sub tildecomb dotaccentcomb by tildecomb_dotaccentcomb;\012	sub tildecomb.case dotaccentcomb.case by tildecomb_dotaccentcomb.case;\012	sub tildecomb macroncomb by tildecomb_macroncomb;\012	sub tildecomb.case macroncomb.case by tildecomb_macroncomb.case;\012} ccmp_Other_3;\012\012lookup ccmp_latn_1 {\012	lookupflag 0;\012	sub brevecomb acutecomb by brevecomb_acutecomb;\012	sub brevecomb.case acutecomb.case by brevecomb_acutecomb.case;\012	sub brevecomb gravecomb by brevecomb_gravecomb;\012	sub brevecomb.case gravecomb.case by brevecomb_gravecomb.case;\012	sub brevecomb hookabovecomb by brevecomb_hookabovecomb;\012	sub brevecomb.case hookabovecomb.case by brevecomb_hookabovecomb.case;\012	sub brevecomb tildecomb by brevecomb_tildecomb;\012	sub brevecomb.case tildecomb.case by brevecomb_tildecomb.case;\012	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;\012	sub circumflexcomb.case acutecomb.case by circumflexcomb_acutecomb.case;\012	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;\012	sub circumflexcomb.case gravecomb.case by circumflexcomb_gravecomb.case;\012	sub circumflexcomb hookabovecomb by circumflexcomb_hookabovecomb;\012	sub circumflexcomb.case hookabovecomb.case by circumflexcomb_hookabovecomb.case;\012	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;\012	sub circumflexcomb.case tildecomb.case by circumflexcomb_tildecomb.case;\012} ccmp_latn_1;\012\012script latn;\012lookup ccmp_latn_1;\012";
name = ccmp;
},
{
automatic = 1;
code = "lookup locl_latn_0 {\012	script latn;\012	language AZE;\012	sub i by idotaccent;\012	language CRT;\012	sub i by idotaccent;\012	language KAZ;\012	sub i by idotaccent;\012	language TAT;\012	sub i by idotaccent;\012	language TRK;\012	sub i by idotaccent;\012} locl_latn_0;\012\012lookup locl_latn_1 {\012	script latn;\012	language ROM;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012	language MOL;\012	sub Scedilla by Scommaaccent;\012	sub scedilla by scommaaccent;\012	sub Tcedilla by Tcommaaccent;\012	sub tcedilla by tcommaaccent;\012} locl_latn_1;\012\012lookup locl_latn_2 {\012	script latn;\012	language CAT;\012	sub l periodcentered' l by periodcentered.loclCAT;\012	sub L periodcentered' L by periodcentered.loclCAT;\012} locl_latn_2;\012";
name = locl;
},
{
automatic = 1;
code = "sub one by onesuperior;\012sub two by twosuperior;\012sub three by threesuperior;\012sub four by foursuperior;\012";
name = sups;
},
{
automatic = 1;
code = "sub one slash four by onequarter;\012sub one slash two by onehalf;\012sub three slash four by threequarters;\012";
name = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;\012sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;\012sub N o period by numero;\012";
name = ordn;
},
{
automatic = 1;
code = "sub dieresiscomb by dieresiscomb.case;\012sub dotaccentcomb by dotaccentcomb.case;\012sub gravecomb by gravecomb.case;\012sub acutecomb by acutecomb.case;\012sub hungarumlautcomb by hungarumlautcomb.case;\012sub caroncomb.alt by caroncomb.alt.case;\012sub circumflexcomb by circumflexcomb.case;\012sub caroncomb by caroncomb.case;\012sub brevecomb by brevecomb.case;\012sub ringcomb by ringcomb.case;\012sub tildecomb by tildecomb.case;\012sub tildecomb_dotaccentcomb by tildecomb_dotaccentcomb.case;\012sub tildecomb_macroncomb by tildecomb_macroncomb.case;\012sub macroncomb by macroncomb.case;\012sub hookabovecomb by hookabovecomb.case;\012sub dblgravecomb by dblgravecomb.case;\012sub breveinvertedcomb by breveinvertedcomb.case;\012sub commaturnedabovecomb by commaturnedabovecomb.case;\012sub horncomb by horncomb.case;\012sub cedillacomb by cedillacomb.case;\012sub ogonekcomb by ogonekcomb.case;\012sub brevecomb_acutecomb by brevecomb_acutecomb.case;\012sub brevecomb_gravecomb by brevecomb_gravecomb.case;\012sub brevecomb_hookabovecomb by brevecomb_hookabovecomb.case;\012sub brevecomb_tildecomb by brevecomb_tildecomb.case;\012sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;\012sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;\012sub circumflexcomb_hookabovecomb by circumflexcomb_hookabovecomb.case;\012sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;\012";
name = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;\012sub f f i by f_f_i;\012sub f f l by f_f_l;\012sub f f by f_f;\012sub f i by fi;\012sub f l by fl;\012";
name = liga;
}
);
fontMaster = (
{
alignmentZones = (
"{475, 15}",
"{425, 16}",
"{170, 15}",
"{0, -16}",
"{-320, -15}"
);
ascender = 425;
capHeight = 475;
customParameters = (
{
name = typoAscender;
value = 830;
},
{
name = typoDescender;
value = -320;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaAscender;
value = 830;
},
{
name = hheaDescender;
value = -320;
},
{
name = hheaLineGap;
value = 0;
},
{
name = winAscent;
value = 771;
},
{
name = winDescent;
value = 350;
},
{
name = strikeoutPosition;
value = 156;
},
{
name = strikeoutSize;
value = 31;
},
{
name = "Prep Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0121 4 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0125 4 2 \012CALL[ ]	/* CallFunction */\012SVTCA[1]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0125 128 98 76 55 33 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0126 250 205 151 112 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0127 204 181 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0128 110 98 76 55 33 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 8 values pushed */\0121 240 181 151 112 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0122 220 181 151 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0123 197 149 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 8 values pushed */\0124 167 149 121 90 59 0 8 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 4 7 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHW[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\0129 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SCVTCI[ ]	/* SetCVTCutIn */\012PUSHW[ ]	/* 2 values pushed */\0129 3 \012SDS[ ]	/* SetDeltaShiftInGState */\012SDB[ ]	/* SetDeltaBaseInGState */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0121 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012MD[0]	/* MeasureDistance */\012ABS[ ]	/* Absolute */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[00]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012ROUND[01]	/* Round */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012MSIRP[0]	/* MoveStackIndirRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012ROUND[10]	/* Round */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012EIF[ ]	/* EndIf */\012MDAP[1]	/* MoveDirectAbsPt */\012MIRP[11101]	/* MoveIndirectRelPt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012128 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\012192 \012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROUND[01]	/* Round */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012RDTG[ ]	/* RoundDownToGrid */\012ROUND[01]	/* Round */\012RTG[ ]	/* RoundToGrid */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0126 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\012128 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012192 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012256 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012320 \012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MINDEX[ ]	/* MoveXToTopStack */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHW[ ]	/* 1 value pushed */\012384 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHW[ ]	/* 1 value pushed */\012384 \012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHW[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012WCVTP[ ]	/* WriteCVTInPixels */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
20,
23,
25,
28,
33,
43,
22,
27,
50,
0,
0,
-514,
21,
321,
13,
888,
103
);
}
);
descender = -320;
guideLines = (
{
name = "lc top";
position = "{-265, 350}";
},
{
name = "lc bottom";
position = "{-59, 211}";
}
);
horizontalStems = (
15,
24
);
id = "0CF23081-C341-41E4-8FF8-6B151438961F";
verticalStems = (
30,
34,
38,
47
);
weightValue = 400;
widthValue = 5;
xHeight = 170;
}
);
glyphs = (
{
glyphname = .notdef;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"62 -5 LINE",
"453 -5 LINE",
"464 7 LINE",
"464 575 LINE",
"453 587 LINE",
"62 587 LINE",
"50 575 LINE",
"50 7 LINE",
"62 -5 LINE"
);
},
{
closed = 1;
nodes = (
"168 117 LINE",
"157 139 LINE",
"240 292 LINE",
"157 443 LINE",
"168 465 LINE",
"251 314 LINE",
"336 466 LINE",
"349 443 LINE",
"263 290 LINE",
"349 139 LINE",
"336 117 LINE",
"251 267 LINE",
"168 117 LINE"
);
},
{
closed = 1;
nodes = (
"76 21 LINE",
"76 561 LINE",
"440 561 LINE",
"440 21 LINE",
"76 21 LINE"
);
},
{
closed = 1;
nodes = (
"97 40 LINE",
"417 40 LINE",
"417 538 LINE",
"97 538 LINE",
"97 40 LINE"
);
}
);
width = 514;
}
);
note = .notdef;
},
{
glyphname = CR;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
note = CR;
unicode = 000D;
},
{
glyphname = NULL;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 0;
}
);
note = NULL;
},
{
glyphname = space;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
note = space;
unicode = 0020;
},
{
glyphname = nbspace;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 313;
}
);
widthMetricsKey = space;
unicode = 00A0;
},
{
glyphname = A;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{318, 0}";
},
{
name = ogonek;
position = "{553, -15}";
},
{
name = top;
position = "{557, 549}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-74 -110 OFFCURVE",
"-21 -91 OFFCURVE",
"46 -52 CURVE",
"68 -62 OFFCURVE",
"94 -68 OFFCURVE",
"123 -71 CURVE SMOOTH",
"130 -72 OFFCURVE",
"134 -71 OFFCURVE",
"134 -68 CURVE SMOOTH",
"134 -66 OFFCURVE",
"132 -65 OFFCURVE",
"127 -64 CURVE SMOOTH",
"98 -61 OFFCURVE",
"75 -55 OFFCURVE",
"56 -46 CURVE",
"93 -24 OFFCURVE",
"146 19 OFFCURVE",
"214 83 CURVE",
"241 62 OFFCURVE",
"275 51 OFFCURVE",
"316 51 CURVE SMOOTH",
"345 51 OFFCURVE",
"366 58 OFFCURVE",
"381 73 CURVE SMOOTH",
"382 74 OFFCURVE",
"382 76 OFFCURVE",
"381 78 CURVE",
"379 80 OFFCURVE",
"377 80 OFFCURVE",
"376 78 CURVE",
"363 65 OFFCURVE",
"343 58 OFFCURVE",
"316 58 CURVE SMOOTH",
"277 58 OFFCURVE",
"246 68 OFFCURVE",
"221 89 CURVE",
"304 168 LINE",
"373 171 OFFCURVE",
"426 173 OFFCURVE",
"461 174 CURVE",
"453 137 OFFCURVE",
"449 105 OFFCURVE",
"449 79 CURVE SMOOTH",
"449 66 OFFCURVE",
"450 55 OFFCURVE",
"452 46 CURVE SMOOTH",
"461 0 OFFCURVE",
"482 -23 OFFCURVE",
"514 -23 CURVE SMOOTH",
"536 -23 OFFCURVE",
"562 -12 OFFCURVE",
"591 11 CURVE SMOOTH",
"616 29 OFFCURVE",
"637 50 OFFCURVE",
"656 74 CURVE",
"657 76 OFFCURVE",
"658 78 OFFCURVE",
"658 81 CURVE SMOOTH",
"658 84 OFFCURVE",
"657 86 OFFCURVE",
"654 86 CURVE SMOOTH",
"652 86 OFFCURVE",
"648 83 OFFCURVE",
"643 78 CURVE SMOOTH",
"618 51 OFFCURVE",
"602 33 OFFCURVE",
"593 25 CURVE SMOOTH",
"568 2 OFFCURVE",
"547 -9 OFFCURVE",
"531 -9 CURVE SMOOTH",
"512 -9 OFFCURVE",
"498 6 OFFCURVE",
"491 36 CURVE SMOOTH",
"488 51 OFFCURVE",
"486 68 OFFCURVE",
"486 89 CURVE SMOOTH",
"486 114 OFFCURVE",
"489 143 OFFCURVE",
"494 178 CURVE",
"557 188 OFFCURVE",
"587 215 OFFCURVE",
"585 260 CURVE",
"584 263 OFFCURVE",
"583 265 OFFCURVE",
"580 265 CURVE SMOOTH",
"576 265 OFFCURVE",
"574 263 OFFCURVE",
"574 258 CURVE SMOOTH",
"574 223 OFFCURVE",
"548 202 OFFCURVE",
"496 194 CURVE",
"519 306 OFFCURVE",
"537 387 OFFCURVE",
"549 436 CURVE SMOOTH",
"550 442 OFFCURVE",
"550 446 OFFCURVE",
"548 449 CURVE",
"562 476 OFFCURVE",
"569 497 OFFCURVE",
"569 514 CURVE SMOOTH",
"569 539 OFFCURVE",
"553 552 OFFCURVE",
"522 553 CURVE SMOOTH",
"515 553 OFFCURVE",
"512 551 OFFCURVE",
"512 548 CURVE SMOOTH",
"512 545 OFFCURVE",
"514 544 OFFCURVE",
"518 544 CURVE SMOOTH",
"534 543 OFFCURVE",
"542 536 OFFCURVE",
"542 521 CURVE SMOOTH",
"542 490 OFFCURVE",
"507 430 OFFCURVE",
"437 343 CURVE SMOOTH",
"386 280 OFFCURVE",
"339 226 OFFCURVE",
"294 182 CURVE",
"255 178 LINE",
"326 249 OFFCURVE",
"376 315 OFFCURVE",
"405 378 CURVE SMOOTH",
"418 407 OFFCURVE",
"425 433 OFFCURVE",
"425 456 CURVE SMOOTH",
"425 509 OFFCURVE",
"392 541 OFFCURVE",
"347 541 CURVE SMOOTH",
"315 541 OFFCURVE",
"284 527 OFFCURVE",
"254 500 CURVE SMOOTH",
"219 469 OFFCURVE",
"190 423 OFFCURVE",
"169 364 CURVE SMOOTH",
"156 329 OFFCURVE",
"149 290 OFFCURVE",
"149 249 CURVE SMOOTH",
"149 218 OFFCURVE",
"153 189 OFFCURVE",
"162 163 CURVE",
"94 147 OFFCURVE",
"43 119 OFFCURVE",
"9 78 CURVE SMOOTH",
"-7 58 OFFCURVE",
"-15 38 OFFCURVE",
"-15 19 CURVE SMOOTH",
"-15 -9 OFFCURVE",
"1 -31 OFFCURVE",
"34 -46 CURVE",
"-23 -81 OFFCURVE",
"-70 -98 OFFCURVE",
"-107 -98 CURVE SMOOTH",
"-123 -98 OFFCURVE",
"-131 -93 OFFCURVE",
"-131 -83 CURVE SMOOTH",
"-131 -78 OFFCURVE",
"-129 -71 OFFCURVE",
"-125 -62 CURVE",
"-130 -64 OFFCURVE",
"-133 -68 OFFCURVE",
"-135 -74 CURVE",
"-139 -81 OFFCURVE",
"-141 -86 OFFCURVE",
"-141 -91 CURVE SMOOTH",
"-141 -102 OFFCURVE",
"-132 -107 OFFCURVE",
"-114 -108 CURVE",
"-114 -108 LINE"
);
},
{
closed = 1;
nodes = (
"25 -25 OFFCURVE",
"15 -9 OFFCURVE",
"15 9 CURVE SMOOTH",
"15 36 OFFCURVE",
"34 63 OFFCURVE",
"73 90 CURVE SMOOTH",
"103 111 OFFCURVE",
"136 127 OFFCURVE",
"172 139 CURVE",
"175 132 OFFCURVE",
"178 126 OFFCURVE",
"182 120 CURVE",
"147 90 OFFCURVE",
"117 67 OFFCURVE",
"90 50 CURVE",
"89 49 OFFCURVE",
"88 48 OFFCURVE",
"89 46 CURVE",
"89 44 OFFCURVE",
"90 43 OFFCURVE",
"92 43 CURVE SMOOTH",
"99 43 OFFCURVE",
"128 65 OFFCURVE",
"179 108 CURVE SMOOTH",
"186 114 LINE",
"191 107 OFFCURVE",
"197 100 OFFCURVE",
"203 94 CURVE",
"134 27 OFFCURVE",
"81 -17 OFFCURVE",
"45 -40 CURVE",
"45 -40 LINE"
);
},
{
closed = 1;
nodes = (
"182 142 LINE",
"193 146 OFFCURVE",
"205 149 OFFCURVE",
"217 152 CURVE",
"208 143 OFFCURVE",
"199 135 OFFCURVE",
"190 127 CURVE",
"190 127 LINE"
);
},
{
closed = 1;
nodes = (
"204 106 OFFCURVE",
"199 113 OFFCURVE",
"194 120 CURVE",
"232 156 LINE",
"276 164 LINE",
"247 136 OFFCURVE",
"225 115 OFFCURVE",
"209 100 CURVE",
"209 100 LINE"
);
},
{
closed = 1;
nodes = (
"167 189 OFFCURVE",
"163 214 OFFCURVE",
"163 243 CURVE SMOOTH",
"163 285 OFFCURVE",
"170 325 OFFCURVE",
"184 363 CURVE SMOOTH",
"205 420 OFFCURVE",
"231 463 OFFCURVE",
"263 494 CURVE SMOOTH",
"292 521 OFFCURVE",
"320 534 OFFCURVE",
"348 534 CURVE SMOOTH",
"385 534 OFFCURVE",
"413 505 OFFCURVE",
"413 460 CURVE SMOOTH",
"413 436 OFFCURVE",
"406 410 OFFCURVE",
"392 381 CURVE SMOOTH",
"360 314 OFFCURVE",
"310 246 OFFCURVE",
"242 176 CURVE",
"215 173 OFFCURVE",
"193 169 OFFCURVE",
"174 166 CURVE",
"174 166 LINE"
);
},
{
closed = 1;
nodes = (
"378 237 OFFCURVE",
"416 273 OFFCURVE",
"435 294 CURVE SMOOTH",
"471 332 OFFCURVE",
"503 373 OFFCURVE",
"531 418 CURVE",
"498 309 LINE SMOOTH",
"484 262 OFFCURVE",
"472 222 OFFCURVE",
"464 190 CURVE",
"453 189 OFFCURVE",
"429 189 OFFCURVE",
"394 188 CURVE SMOOTH",
"364 188 OFFCURVE",
"340 187 OFFCURVE",
"323 184 CURVE",
"323 184 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012148 8 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 6 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 6 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012118 8 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 5 94 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 25 122 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01245 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 94 122 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012108 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012132 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012136 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 148 22 148 38 148 54 148 70 148 86 148 102 148 118 148 134 148 150 148 166 148 182 148 198 148 214 148 230 148 246 148 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 148 22 148 38 148 54 148 70 148 86 148 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 148 117 148 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012161 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012165 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012171 69 102 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012180 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012138 4 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01288 29 138 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 636;
}
);
leftKerningGroup = A;
note = A;
rightKerningGroup = A;
unicode = 0041;
},
{
glyphname = Aacute;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 529, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Abreve;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0102;
},
{
glyphname = Abreveacute;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_acutecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAE;
},
{
glyphname = Abrevedotbelow;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 276, 0}";
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB6;
},
{
glyphname = Abrevegrave;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_gravecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB0;
},
{
glyphname = Abrevehookabove;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB2;
},
{
glyphname = Abrevetilde;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = brevecomb_tildecomb.case;
transform = "{1, 0, 0, 1, 520, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EB4;
},
{
glyphname = Acircumflex;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Acircumflexacute;
lastChange = "2021-10-05 04:27:51 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA4;
},
{
glyphname = Acircumflexdotbelow;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 276, 0}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAC;
},
{
glyphname = Acircumflexgrave;
lastChange = "2021-10-05 04:27:51 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA6;
},
{
glyphname = Acircumflexhookabove;
lastChange = "2021-10-05 04:27:51 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA8;
},
{
glyphname = Acircumflextilde;
lastChange = "2021-10-05 04:27:51 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 481, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EAA;
},
{
glyphname = Adblgrave;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 447, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0200;
},
{
glyphname = Adieresis;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 513, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Adotbelow;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 276, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA0;
},
{
glyphname = Agrave;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 480, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Ahookabove;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 532, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 1EA2;
},
{
glyphname = Ainvertedbreve;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 501, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0202;
},
{
glyphname = Amacron;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 489, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0100;
},
{
glyphname = Aogonek;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 463, -19}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 0104;
},
{
glyphname = Aring;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 539, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Aringacute;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 539, 379}";
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 571, 477}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
unicode = 01FA;
},
{
glyphname = Atilde;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = A;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 485, 379}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 636;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = AE;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{455, 0}";
},
{
name = top;
position = "{664, 525}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-69 -108 OFFCURVE",
"-18 -89 OFFCURVE",
"46 -52 CURVE",
"68 -62 OFFCURVE",
"94 -68 OFFCURVE",
"123 -71 CURVE SMOOTH",
"130 -72 OFFCURVE",
"134 -71 OFFCURVE",
"134 -68 CURVE SMOOTH",
"134 -66 OFFCURVE",
"132 -65 OFFCURVE",
"127 -64 CURVE SMOOTH",
"98 -61 OFFCURVE",
"75 -55 OFFCURVE",
"56 -46 CURVE",
"88 -27 OFFCURVE",
"129 5 OFFCURVE",
"180 51 CURVE SMOOTH",
"192 62 OFFCURVE",
"203 73 OFFCURVE",
"215 83 CURVE",
"241 62 OFFCURVE",
"275 51 OFFCURVE",
"316 51 CURVE SMOOTH",
"345 51 OFFCURVE",
"366 58 OFFCURVE",
"381 73 CURVE SMOOTH",
"382 74 OFFCURVE",
"382 76 OFFCURVE",
"381 78 CURVE",
"379 80 OFFCURVE",
"377 80 OFFCURVE",
"376 78 CURVE",
"363 65 OFFCURVE",
"343 58 OFFCURVE",
"316 58 CURVE SMOOTH",
"277 58 OFFCURVE",
"246 68 OFFCURVE",
"221 89 CURVE",
"249 116 OFFCURVE",
"276 142 OFFCURVE",
"304 168 CURVE",
"373 171 OFFCURVE",
"426 173 OFFCURVE",
"461 174 CURVE",
"461 171 LINE",
"432 143 OFFCURVE",
"418 112 OFFCURVE",
"418 81 CURVE SMOOTH",
"418 42 OFFCURVE",
"439 12 OFFCURVE",
"481 -11 CURVE SMOOTH",
"514 -29 OFFCURVE",
"554 -38 OFFCURVE",
"601 -38 CURVE SMOOTH",
"620 -38 OFFCURVE",
"639 -36 OFFCURVE",
"659 -34 CURVE SMOOTH",
"722 -27 OFFCURVE",
"777 -9 OFFCURVE",
"822 19 CURVE SMOOTH",
"874 51 OFFCURVE",
"900 89 OFFCURVE",
"900 131 CURVE SMOOTH",
"900 134 OFFCURVE",
"899 136 OFFCURVE",
"898 136 CURVE SMOOTH",
"895 136 OFFCURVE",
"893 133 OFFCURVE",
"893 128 CURVE SMOOTH",
"890 94 OFFCURVE",
"865 63 OFFCURVE",
"819 35 CURVE SMOOTH",
"776 9 OFFCURVE",
"725 -8 OFFCURVE",
"668 -16 CURVE SMOOTH",
"650 -19 OFFCURVE",
"633 -20 OFFCURVE",
"618 -20 CURVE SMOOTH",
"569 -20 OFFCURVE",
"529 -9 OFFCURVE",
"500 12 CURVE SMOOTH",
"473 32 OFFCURVE",
"459 57 OFFCURVE",
"459 87 CURVE SMOOTH",
"459 116 OFFCURVE",
"472 143 OFFCURVE",
"498 168 CURVE SMOOTH",
"527 195 OFFCURVE",
"568 216 OFFCURVE",
"621 229 CURVE SMOOTH",
"678 244 OFFCURVE",
"733 251 OFFCURVE",
"784 249 CURVE SMOOTH",
"800 248 OFFCURVE",
"808 253 OFFCURVE",
"808 262 CURVE SMOOTH",
"808 270 OFFCURVE",
"802 274 OFFCURVE",
"792 274 CURVE SMOOTH",
"788 274 LINE SMOOTH",
"745 274 OFFCURVE",
"707 277 OFFCURVE",
"672 289 CURVE SMOOTH",
"635 301 OFFCURVE",
"616 318 OFFCURVE",
"616 340 CURVE SMOOTH",
"616 390 OFFCURVE",
"672 439 OFFCURVE",
"741 461 CURVE SMOOTH",
"778 472 OFFCURVE",
"810 478 OFFCURVE",
"836 478 CURVE SMOOTH",
"863 478 OFFCURVE",
"884 472 OFFCURVE",
"898 460 CURVE SMOOTH",
"909 451 OFFCURVE",
"914 438 OFFCURVE",
"914 423 CURVE SMOOTH",
"914 398 OFFCURVE",
"873 387 OFFCURVE",
"873 376 CURVE SMOOTH",
"873 373 OFFCURVE",
"877 372 OFFCURVE",
"884 373 CURVE SMOOTH",
"920 378 OFFCURVE",
"943 403 OFFCURVE",
"943 428 CURVE SMOOTH",
"943 445 OFFCURVE",
"935 460 OFFCURVE",
"918 472 CURVE SMOOTH",
"899 485 OFFCURVE",
"872 492 OFFCURVE",
"838 492 CURVE SMOOTH",
"810 492 OFFCURVE",
"778 487 OFFCURVE",
"742 478 CURVE SMOOTH",
"699 466 OFFCURVE",
"663 449 OFFCURVE",
"634 428 CURVE SMOOTH",
"597 403 OFFCURVE",
"577 376 OFFCURVE",
"577 345 CURVE SMOOTH",
"577 303 OFFCURVE",
"632 269 OFFCURVE",
"694 270 CURVE",
"639 259 OFFCURVE",
"609 252 OFFCURVE",
"604 251 CURVE SMOOTH",
"562 238 OFFCURVE",
"526 221 OFFCURVE",
"498 202 CURVE",
"520 310 OFFCURVE",
"537 388 OFFCURVE",
"549 436 CURVE SMOOTH",
"550 442 OFFCURVE",
"550 446 OFFCURVE",
"548 449 CURVE",
"562 476 OFFCURVE",
"569 497 OFFCURVE",
"569 514 CURVE SMOOTH",
"569 539 OFFCURVE",
"553 552 OFFCURVE",
"522 553 CURVE SMOOTH",
"515 553 OFFCURVE",
"512 551 OFFCURVE",
"512 548 CURVE SMOOTH",
"512 545 OFFCURVE",
"514 544 OFFCURVE",
"518 544 CURVE SMOOTH",
"534 543 OFFCURVE",
"542 536 OFFCURVE",
"542 521 CURVE SMOOTH",
"542 490 OFFCURVE",
"507 430 OFFCURVE",
"437 343 CURVE SMOOTH",
"386 280 OFFCURVE",
"339 226 OFFCURVE",
"294 182 CURVE",
"280 180 OFFCURVE",
"266 179 OFFCURVE",
"254 177 CURVE",
"262 186 LINE SMOOTH",
"339 273 OFFCURVE",
"386 338 OFFCURVE",
"405 378 CURVE SMOOTH",
"418 407 OFFCURVE",
"425 433 OFFCURVE",
"425 456 CURVE SMOOTH",
"425 509 OFFCURVE",
"392 541 OFFCURVE",
"347 541 CURVE SMOOTH",
"315 541 OFFCURVE",
"284 527 OFFCURVE",
"254 500 CURVE SMOOTH",
"219 469 OFFCURVE",
"190 423 OFFCURVE",
"169 364 CURVE SMOOTH",
"156 329 OFFCURVE",
"149 290 OFFCURVE",
"149 249 CURVE SMOOTH",
"149 217 OFFCURVE",
"153 188 OFFCURVE",
"162 163 CURVE",
"154 161 OFFCURVE",
"146 160 OFFCURVE",
"140 158 CURVE SMOOTH",
"83 141 OFFCURVE",
"39 115 OFFCURVE",
"9 78 CURVE SMOOTH",
"-7 58 OFFCURVE",
"-15 38 OFFCURVE",
"-15 19 CURVE SMOOTH",
"-15 -9 OFFCURVE",
"1 -31 OFFCURVE",
"34 -46 CURVE",
"-22 -80 OFFCURVE",
"-69 -98 OFFCURVE",
"-106 -98 CURVE SMOOTH",
"-123 -98 OFFCURVE",
"-131 -93 OFFCURVE",
"-131 -83 CURVE SMOOTH",
"-131 -78 OFFCURVE",
"-129 -71 OFFCURVE",
"-125 -62 CURVE",
"-130 -64 OFFCURVE",
"-133 -68 OFFCURVE",
"-135 -74 CURVE",
"-139 -81 OFFCURVE",
"-141 -86 OFFCURVE",
"-141 -91 CURVE SMOOTH",
"-141 -103 OFFCURVE",
"-130 -108 OFFCURVE",
"-108 -108 CURVE",
"-108 -108 LINE"
);
},
{
closed = 1;
nodes = (
"25 -25 OFFCURVE",
"15 -9 OFFCURVE",
"15 9 CURVE SMOOTH",
"15 46 OFFCURVE",
"50 83 OFFCURVE",
"119 118 CURVE SMOOTH",
"134 126 OFFCURVE",
"152 133 OFFCURVE",
"172 139 CURVE",
"175 132 OFFCURVE",
"178 126 OFFCURVE",
"182 120 CURVE",
"147 91 OFFCURVE",
"117 67 OFFCURVE",
"90 50 CURVE",
"89 49 OFFCURVE",
"88 48 OFFCURVE",
"89 46 CURVE",
"89 44 OFFCURVE",
"90 43 OFFCURVE",
"92 43 CURVE SMOOTH",
"112 43 OFFCURVE",
"144 65 OFFCURVE",
"190 109 CURVE",
"194 104 OFFCURVE",
"198 99 OFFCURVE",
"203 94 CURVE",
"160 53 LINE SMOOTH",
"113 8 OFFCURVE",
"74 -22 OFFCURVE",
"45 -40 CURVE",
"45 -40 LINE"
);
},
{
closed = 1;
nodes = (
"190 127 LINE",
"187 132 OFFCURVE",
"184 137 OFFCURVE",
"182 142 CURVE",
"193 146 OFFCURVE",
"205 149 OFFCURVE",
"218 152 CURVE",
"190 127 LINE"
);
},
{
closed = 1;
nodes = (
"209 100 LINE",
"205 105 OFFCURVE",
"201 110 OFFCURVE",
"197 116 CURVE",
"209 128 OFFCURVE",
"221 141 OFFCURVE",
"235 156 CURVE",
"248 159 OFFCURVE",
"262 162 OFFCURVE",
"276 164 CURVE",
"209 100 LINE"
);
},
{
closed = 1;
nodes = (
"166 188 OFFCURVE",
"163 214 OFFCURVE",
"163 243 CURVE SMOOTH",
"163 285 OFFCURVE",
"170 325 OFFCURVE",
"184 363 CURVE SMOOTH",
"205 420 OFFCURVE",
"231 463 OFFCURVE",
"263 494 CURVE SMOOTH",
"292 521 OFFCURVE",
"320 534 OFFCURVE",
"348 534 CURVE SMOOTH",
"385 534 OFFCURVE",
"413 505 OFFCURVE",
"413 460 CURVE SMOOTH",
"413 436 OFFCURVE",
"406 410 OFFCURVE",
"392 381 CURVE SMOOTH",
"358 310 OFFCURVE",
"309 242 OFFCURVE",
"242 175 CURVE",
"215 172 OFFCURVE",
"192 168 OFFCURVE",
"173 165 CURVE",
"173 165 LINE"
);
},
{
closed = 1;
nodes = (
"378 237 OFFCURVE",
"416 273 OFFCURVE",
"435 294 CURVE SMOOTH",
"471 332 OFFCURVE",
"503 373 OFFCURVE",
"531 418 CURVE",
"498 309 LINE SMOOTH",
"484 262 OFFCURVE",
"472 222 OFFCURVE",
"464 190 CURVE",
"453 189 OFFCURVE",
"429 189 OFFCURVE",
"394 188 CURVE SMOOTH",
"364 188 OFFCURVE",
"340 187 OFFCURVE",
"323 184 CURVE",
"323 184 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012129 8 80 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01223 6 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012194 8 143 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 5 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 5 171 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0128 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 23 22 23 38 23 54 23 70 23 86 23 102 23 118 23 134 23 150 23 166 23 182 23 198 23 214 23 230 23 246 23 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012194 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01256 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01278 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 90 122 90 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012104 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012117 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012125 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 129 22 129 38 129 54 129 70 129 86 129 102 129 118 129 134 129 150 129 166 129 182 129 198 129 214 129 230 129 246 129 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 129 22 129 38 129 54 129 70 129 86 129 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 129 117 129 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 143 122 143 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 143 25 143 41 143 57 143 73 143 89 143 105 143 121 143 137 143 153 143 169 143 185 143 201 143 217 143 233 143 249 143 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 143 25 143 41 143 57 143 73 143 89 143 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012149 80 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 171 122 171 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 171 25 171 41 171 57 171 73 171 89 171 105 171 121 171 137 171 153 171 169 171 185 171 201 171 217 171 233 171 249 171 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 171 25 171 41 171 57 171 73 171 89 171 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012209 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 909;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = AEacute;
lastChange = "2021-10-05 04:26:08 +0000";
layers = (
{
components = (
{
name = AE;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 636, 355}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 909;
}
);
unicode = 01FC;
},
{
glyphname = B;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-9 -102 OFFCURVE",
"-7 -102 OFFCURVE",
"-6 -100 CURVE SMOOTH",
"45 -9 LINE",
"80 -38 OFFCURVE",
"127 -53 OFFCURVE",
"186 -53 CURVE SMOOTH",
"257 -53 OFFCURVE",
"323 -41 OFFCURVE",
"382 -18 CURVE SMOOTH",
"439 5 OFFCURVE",
"481 33 OFFCURVE",
"509 68 CURVE SMOOTH",
"534 97 OFFCURVE",
"546 126 OFFCURVE",
"546 153 CURVE SMOOTH",
"546 185 OFFCURVE",
"529 212 OFFCURVE",
"496 233 CURVE SMOOTH",
"465 252 OFFCURVE",
"426 262 OFFCURVE",
"380 262 CURVE SMOOTH",
"370 262 OFFCURVE",
"360 262 OFFCURVE",
"350 261 CURVE SMOOTH",
"343 261 LINE",
"400 280 OFFCURVE",
"448 306 OFFCURVE",
"486 339 CURVE SMOOTH",
"519 368 OFFCURVE",
"536 394 OFFCURVE",
"536 419 CURVE SMOOTH",
"536 438 OFFCURVE",
"526 453 OFFCURVE",
"506 463 CURVE SMOOTH",
"488 473 OFFCURVE",
"465 477 OFFCURVE",
"436 477 CURVE SMOOTH",
"409 477 OFFCURVE",
"377 474 OFFCURVE",
"339 469 CURVE SMOOTH",
"259 456 LINE",
"204 446 LINE",
"191 486 OFFCURVE",
"163 506 OFFCURVE",
"122 506 CURVE SMOOTH",
"85 506 OFFCURVE",
"50 485 OFFCURVE",
"41 456 CURVE SMOOTH",
"39 451 OFFCURVE",
"38 447 OFFCURVE",
"38 443 CURVE SMOOTH",
"38 432 OFFCURVE",
"43 422 OFFCURVE",
"54 415 CURVE SMOOTH",
"66 408 OFFCURVE",
"82 404 OFFCURVE",
"103 404 CURVE SMOOTH",
"123 404 OFFCURVE",
"154 410 OFFCURVE",
"196 419 CURVE",
"201 366 OFFCURVE",
"175 277 OFFCURVE",
"116 152 CURVE",
"48 120 OFFCURVE",
"14 85 OFFCURVE",
"14 48 CURVE SMOOTH",
"14 29 OFFCURVE",
"22 12 OFFCURVE",
"38 -3 CURVE",
"24 -30 OFFCURVE",
"7 -61 OFFCURVE",
"-13 -96 CURVE",
"-14 -99 OFFCURVE",
"-13 -100 OFFCURVE",
"-11 -101 CURVE",
"-11 -101 LINE"
);
},
{
closed = 1;
nodes = (
"48 28 OFFCURVE",
"46 36 OFFCURVE",
"46 44 CURVE SMOOTH",
"46 73 OFFCURVE",
"65 99 OFFCURVE",
"103 123 CURVE",
"88 92 OFFCURVE",
"71 58 OFFCURVE",
"51 21 CURVE",
"51 21 LINE"
);
},
{
closed = 1;
nodes = (
"116 -39 OFFCURVE",
"77 -22 OFFCURVE",
"56 11 CURVE",
"83 61 OFFCURVE",
"105 102 OFFCURVE",
"121 134 CURVE",
"134 141 OFFCURVE",
"146 145 OFFCURVE",
"159 148 CURVE",
"154 131 OFFCURVE",
"152 115 OFFCURVE",
"152 102 CURVE SMOOTH",
"152 59 OFFCURVE",
"176 32 OFFCURVE",
"219 35 CURVE",
"222 36 OFFCURVE",
"224 37 OFFCURVE",
"224 39 CURVE SMOOTH",
"224 44 OFFCURVE",
"221 45 OFFCURVE",
"216 44 CURVE SMOOTH",
"209 43 LINE SMOOTH",
"197 43 OFFCURVE",
"188 49 OFFCURVE",
"181 61 CURVE SMOOTH",
"175 70 OFFCURVE",
"172 82 OFFCURVE",
"172 96 CURVE SMOOTH",
"172 110 OFFCURVE",
"175 130 OFFCURVE",
"184 154 CURVE",
"204 157 OFFCURVE",
"225 158 OFFCURVE",
"248 158 CURVE SMOOTH",
"307 158 OFFCURVE",
"349 150 OFFCURVE",
"375 133 CURVE",
"378 132 OFFCURVE",
"382 131 OFFCURVE",
"385 131 CURVE SMOOTH",
"389 131 OFFCURVE",
"390 133 OFFCURVE",
"388 137 CURVE SMOOTH",
"372 163 OFFCURVE",
"327 176 OFFCURVE",
"254 176 CURVE SMOOTH",
"233 176 OFFCURVE",
"212 174 OFFCURVE",
"191 171 CURVE",
"208 212 OFFCURVE",
"234 260 OFFCURVE",
"269 314 CURVE SMOOTH",
"299 361 OFFCURVE",
"321 391 OFFCURVE",
"334 404 CURVE SMOOTH",
"337 407 OFFCURVE",
"338 409 OFFCURVE",
"338 411 CURVE SMOOTH",
"338 416 OFFCURVE",
"333 418 OFFCURVE",
"322 418 CURVE SMOOTH",
"308 418 OFFCURVE",
"298 413 OFFCURVE",
"291 404 CURVE SMOOTH",
"229 317 OFFCURVE",
"187 238 OFFCURVE",
"164 167 CURVE",
"153 165 OFFCURVE",
"143 162 OFFCURVE",
"134 159 CURVE",
"173 238 OFFCURVE",
"198 303 OFFCURVE",
"207 354 CURVE SMOOTH",
"210 371 OFFCURVE",
"211 386 OFFCURVE",
"211 400 CURVE SMOOTH",
"211 408 OFFCURVE",
"211 416 OFFCURVE",
"210 423 CURVE",
"314 448 LINE SMOOTH",
"355 457 OFFCURVE",
"391 461 OFFCURVE",
"420 461 CURVE SMOOTH",
"473 461 OFFCURVE",
"499 448 OFFCURVE",
"499 423 CURVE SMOOTH",
"499 403 OFFCURVE",
"484 378 OFFCURVE",
"454 349 CURVE SMOOTH",
"417 312 OFFCURVE",
"376 286 OFFCURVE",
"330 271 CURVE",
"327 272 OFFCURVE",
"323 273 OFFCURVE",
"319 273 CURVE SMOOTH",
"316 273 OFFCURVE",
"312 273 OFFCURVE",
"308 272 CURVE",
"291 271 OFFCURVE",
"277 253 OFFCURVE",
"277 242 CURVE SMOOTH",
"277 237 OFFCURVE",
"279 236 OFFCURVE",
"284 237 CURVE SMOOTH",
"307 243 OFFCURVE",
"331 246 OFFCURVE",
"356 246 CURVE SMOOTH",
"398 246 OFFCURVE",
"434 238 OFFCURVE",
"464 223 CURVE SMOOTH",
"496 206 OFFCURVE",
"512 183 OFFCURVE",
"512 155 CURVE SMOOTH",
"512 132 OFFCURVE",
"501 107 OFFCURVE",
"478 80 CURVE SMOOTH",
"451 47 OFFCURVE",
"412 19 OFFCURVE",
"361 -3 CURVE SMOOTH",
"304 -27 OFFCURVE",
"242 -39 OFFCURVE",
"175 -39 CURVE",
"175 -39 LINE"
);
},
{
closed = 1;
nodes = (
"75 432 OFFCURVE",
"59 438 OFFCURVE",
"59 453 CURVE SMOOTH",
"59 456 OFFCURVE",
"60 459 OFFCURVE",
"62 462 CURVE",
"73 487 OFFCURVE",
"93 499 OFFCURVE",
"121 499 CURVE SMOOTH",
"156 499 OFFCURVE",
"179 481 OFFCURVE",
"191 444 CURVE",
"154 438 OFFCURVE",
"127 435 OFFCURVE",
"108 434 CURVE",
"108 434 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 7 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012139 8 88 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012123 113 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0126 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 88 122 88 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01271 88 139 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\012151 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01214 123 6 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 57 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012145 113 151 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012154 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012135 2 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01265 1 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012128 119 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01232 54 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012147 2 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012119 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01210 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01240 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01259 54 32 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012147 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012145 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 591;
}
);
leftKerningGroup = H;
note = B;
rightKerningGroup = B;
unicode = 0042;
},
{
glyphname = C;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{256, -28}";
},
{
name = top;
position = "{509, 485}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"428 4 CURVE SMOOTH",
"487 25 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 74 OFFCURVE",
"562 77 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"562 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"558 86 OFFCURVE",
"556 85 OFFCURVE",
"553 82 CURVE SMOOTH",
"520 51 OFFCURVE",
"475 29 OFFCURVE",
"418 14 CURVE SMOOTH",
"387 7 OFFCURVE",
"346 1 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH",
"23 163 OFFCURVE",
"33 196 OFFCURVE",
"54 231 CURVE",
"79 222 OFFCURVE",
"106 217 OFFCURVE",
"136 217 CURVE SMOOTH",
"177 217 OFFCURVE",
"212 227 OFFCURVE",
"220 243 CURVE",
"222 245 OFFCURVE",
"220 249 OFFCURVE",
"216 249 CURVE SMOOTH",
"215 249 OFFCURVE",
"214 248 OFFCURVE",
"214 247 CURVE",
"207 233 OFFCURVE",
"184 226 OFFCURVE",
"147 226 CURVE SMOOTH",
"116 226 OFFCURVE",
"88 232 OFFCURVE",
"61 243 CURVE",
"68 254 OFFCURVE",
"75 264 OFFCURVE",
"84 274 CURVE",
"131 336 OFFCURVE",
"196 385 OFFCURVE",
"278 421 CURVE",
"313 408 OFFCURVE",
"346 389 OFFCURVE",
"379 366 CURVE SMOOTH",
"395 355 OFFCURVE",
"411 340 OFFCURVE",
"428 322 CURVE SMOOTH",
"452 295 OFFCURVE",
"464 272 OFFCURVE",
"464 253 CURVE SMOOTH",
"464 246 OFFCURVE",
"462 240 OFFCURVE",
"459 234 CURVE",
"455 231 OFFCURVE",
"454 229 OFFCURVE",
"454 226 CURVE SMOOTH",
"454 225 OFFCURVE",
"455 224 OFFCURVE",
"456 224 CURVE SMOOTH",
"458 224 OFFCURVE",
"461 225 OFFCURVE",
"464 226 CURVE",
"465 227 LINE",
"544 264 OFFCURVE",
"596 308 OFFCURVE",
"623 357 CURVE SMOOTH",
"632 373 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"418 498 OFFCURVE",
"335 479 OFFCURVE",
"252 440 CURVE",
"215 452 OFFCURVE",
"179 458 OFFCURVE",
"145 458 CURVE SMOOTH",
"100 458 OFFCURVE",
"61 447 OFFCURVE",
"29 423 CURVE SMOOTH",
"-3 400 OFFCURVE",
"-19 369 OFFCURVE",
"-19 332 CURVE SMOOTH",
"-19 293 OFFCURVE",
"-2 264 OFFCURVE",
"31 244 CURVE",
"13 208 OFFCURVE",
"4 174 OFFCURVE",
"4 142 CURVE SMOOTH",
"4 42 OFFCURVE",
"91 -32 OFFCURVE",
"237 -32 CURVE",
"237 -32 LINE"
);
},
{
closed = 1;
nodes = (
"6 275 OFFCURVE",
"-9 302 OFFCURVE",
"-9 335 CURVE SMOOTH",
"-9 367 OFFCURVE",
"6 394 OFFCURVE",
"36 414 CURVE SMOOTH",
"68 435 OFFCURVE",
"106 446 OFFCURVE",
"149 446 CURVE SMOOTH",
"178 446 OFFCURVE",
"208 442 OFFCURVE",
"238 434 CURVE",
"165 397 OFFCURVE",
"108 352 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"45 270 OFFCURVE",
"37 256 CURVE",
"37 256 LINE"
);
},
{
closed = 1;
nodes = (
"476 247 OFFCURVE",
"476 251 OFFCURVE",
"476 254 CURVE SMOOTH",
"476 272 OFFCURVE",
"465 294 OFFCURVE",
"442 320 CURVE SMOOTH",
"425 339 OFFCURVE",
"405 357 OFFCURVE",
"384 372 CURVE SMOOTH",
"353 394 OFFCURVE",
"322 412 OFFCURVE",
"289 426 CURVE",
"356 453 OFFCURVE",
"420 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 304 OFFCURVE",
"540 283 CURVE SMOOTH",
"526 273 OFFCURVE",
"504 260 OFFCURVE",
"475 244 CURVE",
"475 244 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012106 5 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01271 4 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 4 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 541;
}
);
leftKerningGroup = O;
note = C;
rightKerningGroup = C;
unicode = 0043;
},
{
glyphname = Cacute;
lastChange = "2021-10-05 04:26:12 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 481, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 0106;
},
{
glyphname = Ccaron;
lastChange = "2021-10-05 04:26:12 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 481, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 010C;
},
{
glyphname = Ccedilla;
lastChange = "2021-10-05 04:26:12 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 168, -28}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Ccircumflex;
lastChange = "2021-10-05 04:26:12 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 433, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 0108;
},
{
glyphname = Cdotaccent;
lastChange = "2021-10-05 04:26:12 +0000";
layers = (
{
components = (
{
name = C;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 506, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 541;
}
);
unicode = 010A;
},
{
glyphname = D;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{371, 0}";
},
{
name = center;
position = "{167, 238}";
},
{
name = top;
position = "{506, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"458 -88 OFFCURVE",
"488 -77 OFFCURVE",
"511 -56 CURVE SMOOTH",
"532 -36 OFFCURVE",
"543 -11 OFFCURVE",
"543 19 CURVE SMOOTH",
"543 30 OFFCURVE",
"541 42 OFFCURVE",
"538 53 CURVE",
"587 76 OFFCURVE",
"631 103 OFFCURVE",
"668 135 CURVE SMOOTH",
"721 182 OFFCURVE",
"755 243 OFFCURVE",
"755 302 CURVE SMOOTH",
"755 357 OFFCURVE",
"728 400 OFFCURVE",
"673 432 CURVE SMOOTH",
"626 459 OFFCURVE",
"562 472 OFFCURVE",
"481 472 CURVE SMOOTH",
"429 472 OFFCURVE",
"371 466 OFFCURVE",
"306 455 CURVE SMOOTH",
"265 448 OFFCURVE",
"226 442 OFFCURVE",
"189 439 CURVE",
"179 484 OFFCURVE",
"153 506 OFFCURVE",
"112 506 CURVE SMOOTH",
"68 506 OFFCURVE",
"29 476 OFFCURVE",
"29 444 CURVE SMOOTH",
"29 417 OFFCURVE",
"59 403 OFFCURVE",
"118 403 CURVE SMOOTH",
"135 403 OFFCURVE",
"156 404 OFFCURVE",
"179 407 CURVE",
"183 352 OFFCURVE",
"169 283 OFFCURVE",
"138 200 CURVE",
"58 177 OFFCURVE",
"2 125 OFFCURVE",
"2 77 CURVE SMOOTH",
"2 51 OFFCURVE",
"17 30 OFFCURVE",
"48 14 CURVE",
"41 1 OFFCURVE",
"33 -13 OFFCURVE",
"24 -26 CURVE",
"23 -29 OFFCURVE",
"24 -30 OFFCURVE",
"26 -31 CURVE SMOOTH",
"28 -32 OFFCURVE",
"30 -32 OFFCURVE",
"31 -30 CURVE SMOOTH",
"40 -17 OFFCURVE",
"48 -4 OFFCURVE",
"56 9 CURVE",
"95 -8 OFFCURVE",
"148 -17 OFFCURVE",
"217 -17 CURVE SMOOTH",
"325 -17 OFFCURVE",
"428 4 OFFCURVE",
"525 47 CURVE",
"528 36 OFFCURVE",
"530 25 OFFCURVE",
"530 14 CURVE SMOOTH",
"530 -42 OFFCURVE",
"487 -81 OFFCURVE",
"415 -81 CURVE SMOOTH",
"398 -81 OFFCURVE",
"382 -77 OFFCURVE",
"367 -68 CURVE SMOOTH",
"352 -60 OFFCURVE",
"344 -51 OFFCURVE",
"341 -41 CURVE SMOOTH",
"340 -39 OFFCURVE",
"338 -38 OFFCURVE",
"336 -39 CURVE SMOOTH",
"333 -40 OFFCURVE",
"332 -41 OFFCURVE",
"333 -44 CURVE SMOOTH",
"341 -67 OFFCURVE",
"379 -89 OFFCURVE",
"419 -89 CURVE",
"419 -89 LINE"
);
},
{
closed = 1;
nodes = (
"40 42 OFFCURVE",
"31 55 OFFCURVE",
"31 71 CURVE SMOOTH",
"31 103 OFFCURVE",
"68 140 OFFCURVE",
"123 164 CURVE",
"105 121 OFFCURVE",
"83 76 OFFCURVE",
"58 31 CURVE",
"58 31 LINE"
);
},
{
closed = 1;
nodes = (
"143 3 OFFCURVE",
"97 11 OFFCURVE",
"66 26 CURVE",
"94 74 OFFCURVE",
"118 122 OFFCURVE",
"138 170 CURVE",
"148 173 OFFCURVE",
"158 176 OFFCURVE",
"168 179 CURVE",
"157 148 OFFCURVE",
"152 122 OFFCURVE",
"152 101 CURVE SMOOTH",
"152 59 OFFCURVE",
"176 32 OFFCURVE",
"219 35 CURVE",
"222 36 OFFCURVE",
"224 37 OFFCURVE",
"224 39 CURVE SMOOTH",
"224 44 OFFCURVE",
"221 45 OFFCURVE",
"216 44 CURVE SMOOTH",
"209 43 LINE SMOOTH",
"197 41 OFFCURVE",
"188 49 OFFCURVE",
"181 61 CURVE SMOOTH",
"175 70 OFFCURVE",
"172 82 OFFCURVE",
"172 96 CURVE SMOOTH",
"172 116 OFFCURVE",
"180 146 OFFCURVE",
"198 186 CURVE",
"217 189 OFFCURVE",
"238 191 OFFCURVE",
"261 191 CURVE SMOOTH",
"334 191 OFFCURVE",
"410 170 OFFCURVE",
"451 141 CURVE SMOOTH",
"479 122 OFFCURVE",
"500 99 OFFCURVE",
"513 74 CURVE",
"415 27 OFFCURVE",
"312 3 OFFCURVE",
"204 3 CURVE",
"204 3 LINE"
);
},
{
closed = 1;
nodes = (
"69 436 OFFCURVE",
"58 445 OFFCURVE",
"58 460 CURVE SMOOTH",
"58 479 OFFCURVE",
"79 494 OFFCURVE",
"114 494 CURVE SMOOTH",
"145 494 OFFCURVE",
"166 475 OFFCURVE",
"175 438 CURVE",
"138 434 OFFCURVE",
"109 433 OFFCURVE",
"90 434 CURVE",
"90 434 LINE"
);
},
{
closed = 1;
nodes = (
"512 109 OFFCURVE",
"490 133 OFFCURVE",
"459 154 CURVE SMOOTH",
"433 171 OFFCURVE",
"401 186 OFFCURVE",
"363 197 CURVE SMOOTH",
"322 208 OFFCURVE",
"281 214 OFFCURVE",
"241 214 CURVE SMOOTH",
"231 214 OFFCURVE",
"221 214 OFFCURVE",
"211 213 CURVE",
"230 251 OFFCURVE",
"253 291 OFFCURVE",
"282 333 CURVE SMOOTH",
"306 370 OFFCURVE",
"323 394 OFFCURVE",
"334 404 CURVE SMOOTH",
"337 407 OFFCURVE",
"338 409 OFFCURVE",
"338 411 CURVE SMOOTH",
"338 416 OFFCURVE",
"333 418 OFFCURVE",
"322 418 CURVE SMOOTH",
"308 418 OFFCURVE",
"298 413 OFFCURVE",
"291 404 CURVE SMOOTH",
"243 337 OFFCURVE",
"206 272 OFFCURVE",
"180 209 CURVE",
"171 208 OFFCURVE",
"161 207 OFFCURVE",
"152 204 CURVE",
"180 277 OFFCURVE",
"194 338 OFFCURVE",
"194 389 CURVE SMOOTH",
"194 396 OFFCURVE",
"193 402 OFFCURVE",
"193 408 CURVE",
"230 413 OFFCURVE",
"271 421 OFFCURVE",
"318 431 CURVE SMOOTH",
"389 447 OFFCURVE",
"448 455 OFFCURVE",
"497 455 CURVE SMOOTH",
"629 455 OFFCURVE",
"719 400 OFFCURVE",
"719 312 CURVE SMOOTH",
"719 257 OFFCURVE",
"684 195 OFFCURVE",
"631 150 CURVE SMOOTH",
"600 124 OFFCURVE",
"566 101 OFFCURVE",
"527 81 CURVE",
"527 81 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01235 8 108 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 7 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012131 6 50 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 6 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01267 8 124 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 13 22 13 38 13 54 13 70 13 86 13 102 13 118 13 134 13 150 13 166 13 182 13 198 13 214 13 230 13 246 13 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01228 26 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01232 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 35 117 35 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01244 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 131 22 131 38 131 54 131 70 131 86 131 102 131 118 131 134 131 150 131 166 131 182 131 198 131 214 131 230 131 246 131 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012131 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012111 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 124 122 124 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 105 124 121 124 137 124 153 124 169 124 185 124 201 124 217 124 233 124 249 124 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 124 25 124 41 124 57 124 73 124 89 124 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012133 108 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0122 78 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 3 127 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01257 52 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012113 4 9 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01252 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01296 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012133 9 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 741;
}
);
leftKerningGroup = H;
note = D;
rightKerningGroup = O;
unicode = 0044;
},
{
glyphname = DZcaron;
lastChange = "2021-10-05 03:20:36 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = Zcaron;
transform = "{1, 0, 0, 1, 741, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1225;
}
);
unicode = 01C4;
},
{
glyphname = Eth;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = hyphen;
transform = "{1, 0, 0, 1, 45, -15}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 00D0;
},
{
glyphname = Dcaron;
lastChange = "2021-10-05 04:26:43 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 478, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 010E;
},
{
glyphname = Dcroat;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = Eth;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 741;
}
);
unicode = 0110;
},
{
glyphname = Dzcaron;
lastChange = "2021-10-05 03:20:36 +0000";
layers = (
{
components = (
{
name = D;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 741, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1039;
}
);
unicode = 01C5;
},
{
glyphname = E;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{174, -39}";
},
{
name = ogonek;
position = "{384, 6}";
},
{
name = top;
position = "{415, 485}";
},
{
name = topleft;
position = "{20, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"209 -38 OFFCURVE",
"227 -37 OFFCURVE",
"246 -34 CURVE SMOOTH",
"309 -27 OFFCURVE",
"364 -9 OFFCURVE",
"409 19 CURVE SMOOTH",
"461 51 OFFCURVE",
"487 89 OFFCURVE",
"487 131 CURVE SMOOTH",
"487 134 OFFCURVE",
"486 136 OFFCURVE",
"484 136 CURVE SMOOTH",
"481 136 OFFCURVE",
"480 133 OFFCURVE",
"479 128 CURVE SMOOTH",
"476 94 OFFCURVE",
"452 63 OFFCURVE",
"406 35 CURVE SMOOTH",
"363 9 OFFCURVE",
"312 -8 OFFCURVE",
"254 -16 CURVE SMOOTH",
"237 -19 OFFCURVE",
"221 -20 OFFCURVE",
"204 -20 CURVE SMOOTH",
"155 -20 OFFCURVE",
"116 -9 OFFCURVE",
"87 12 CURVE SMOOTH",
"60 32 OFFCURVE",
"46 57 OFFCURVE",
"46 87 CURVE SMOOTH",
"46 101 OFFCURVE",
"50 115 OFFCURVE",
"57 129 CURVE",
"74 116 OFFCURVE",
"96 109 OFFCURVE",
"123 109 CURVE SMOOTH",
"142 109 OFFCURVE",
"162 112 OFFCURVE",
"181 119 CURVE SMOOTH",
"194 124 OFFCURVE",
"208 132 OFFCURVE",
"223 143 CURVE SMOOTH",
"240 157 OFFCURVE",
"249 170 OFFCURVE",
"249 183 CURVE SMOOTH",
"249 187 OFFCURVE",
"248 191 OFFCURVE",
"246 195 CURVE SMOOTH",
"245 197 OFFCURVE",
"244 198 OFFCURVE",
"243 198 CURVE",
"241 197 OFFCURVE",
"241 195 OFFCURVE",
"242 193 CURVE SMOOTH",
"243 190 OFFCURVE",
"244 187 OFFCURVE",
"244 184 CURVE SMOOTH",
"244 173 OFFCURVE",
"235 162 OFFCURVE",
"217 149 CURVE SMOOTH",
"186 128 OFFCURVE",
"164 124 OFFCURVE",
"139 124 CURVE SMOOTH",
"109 124 OFFCURVE",
"85 132 OFFCURVE",
"68 148 CURVE",
"95 185 OFFCURVE",
"142 212 OFFCURVE",
"208 229 CURVE SMOOTH",
"265 244 OFFCURVE",
"320 251 OFFCURVE",
"371 249 CURVE SMOOTH",
"387 248 OFFCURVE",
"395 253 OFFCURVE",
"395 262 CURVE SMOOTH",
"395 270 OFFCURVE",
"389 274 OFFCURVE",
"377 274 CURVE SMOOTH",
"374 274 LINE SMOOTH",
"332 274 OFFCURVE",
"294 277 OFFCURVE",
"259 289 CURVE SMOOTH",
"222 301 OFFCURVE",
"203 319 OFFCURVE",
"203 341 CURVE SMOOTH",
"203 357 OFFCURVE",
"209 374 OFFCURVE",
"221 390 CURVE",
"257 405 OFFCURVE",
"292 416 OFFCURVE",
"325 421 CURVE SMOOTH",
"340 424 OFFCURVE",
"361 425 OFFCURVE",
"388 425 CURVE SMOOTH",
"449 425 OFFCURVE",
"479 415 OFFCURVE",
"479 396 CURVE SMOOTH",
"479 389 OFFCURVE",
"476 385 OFFCURVE",
"469 382 CURVE",
"463 382 OFFCURVE",
"460 380 OFFCURVE",
"460 376 CURVE SMOOTH",
"460 374 OFFCURVE",
"462 373 OFFCURVE",
"465 373 CURVE SMOOTH",
"471 373 LINE",
"508 378 OFFCURVE",
"530 403 OFFCURVE",
"530 428 CURVE SMOOTH",
"530 445 OFFCURVE",
"521 460 OFFCURVE",
"504 472 CURVE SMOOTH",
"485 485 OFFCURVE",
"459 492 OFFCURVE",
"425 492 CURVE SMOOTH",
"397 492 OFFCURVE",
"365 487 OFFCURVE",
"329 478 CURVE SMOOTH",
"249 455 OFFCURVE",
"197 422 OFFCURVE",
"174 379 CURVE",
"77 327 OFFCURVE",
"29 264 OFFCURVE",
"29 189 CURVE SMOOTH",
"29 178 OFFCURVE",
"31 167 OFFCURVE",
"36 158 CURVE",
"15 133 OFFCURVE",
"5 107 OFFCURVE",
"5 82 CURVE SMOOTH",
"5 44 OFFCURVE",
"24 15 OFFCURVE",
"61 -7 CURVE SMOOTH",
"94 -28 OFFCURVE",
"138 -38 OFFCURVE",
"191 -38 CURVE",
"191 -38 LINE"
);
},
{
closed = 1;
nodes = (
"47 182 OFFCURVE",
"45 191 OFFCURVE",
"45 202 CURVE SMOOTH",
"45 263 OFFCURVE",
"86 317 OFFCURVE",
"168 364 CURVE",
"165 358 OFFCURVE",
"164 351 OFFCURVE",
"164 345 CURVE SMOOTH",
"164 303 OFFCURVE",
"219 269 OFFCURVE",
"281 270 CURVE",
"226 259 OFFCURVE",
"196 252 OFFCURVE",
"191 251 CURVE SMOOTH",
"130 232 OFFCURVE",
"83 206 OFFCURVE",
"50 173 CURVE",
"50 173 LINE"
);
},
{
closed = 1;
nodes = (
"484 388 OFFCURVE",
"486 392 OFFCURVE",
"486 396 CURVE SMOOTH",
"486 422 OFFCURVE",
"450 435 OFFCURVE",
"379 435 CURVE SMOOTH",
"356 435 OFFCURVE",
"337 434 OFFCURVE",
"324 432 CURVE SMOOTH",
"295 427 OFFCURVE",
"266 419 OFFCURVE",
"237 408 CURVE",
"285 456 OFFCURVE",
"371 478 OFFCURVE",
"423 478 CURVE SMOOTH",
"450 478 OFFCURVE",
"471 472 OFFCURVE",
"484 460 CURVE SMOOTH",
"495 451 OFFCURVE",
"501 438 OFFCURVE",
"501 423 CURVE SMOOTH",
"501 403 OFFCURVE",
"494 390 OFFCURVE",
"481 384 CURVE",
"481 384 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 7 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 8 66 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 66 122 66 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 105 66 121 66 137 66 153 66 169 66 185 66 201 66 217 66 233 66 249 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 66 25 66 41 66 57 66 73 66 89 66 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0120 66 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0129 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01221 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01226 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01299 44 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012126 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012115 3 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01288 1 107 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 4 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 496;
}
);
leftKerningGroup = H;
note = E;
rightKerningGroup = E;
unicode = 0045;
},
{
glyphname = Eacute;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 387, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ebreve;
lastChange = "2021-10-05 05:01:25 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 378, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0114;
},
{
glyphname = Ecaron;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 387, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 011A;
},
{
glyphname = Ecircumflex;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Ecircumflexacute;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBE;
},
{
glyphname = Ecircumflexdotbelow;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 132, -39}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC6;
},
{
glyphname = Ecircumflexgrave;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC0;
},
{
glyphname = Ecircumflexhookabove;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC2;
},
{
glyphname = Ecircumflextilde;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 339, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EC4;
},
{
glyphname = Edblgrave;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 305, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0204;
},
{
glyphname = Edieresis;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 371, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Edotaccent;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 412, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0116;
},
{
glyphname = Edotbelow;
lastChange = "2021-10-05 04:27:25 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 132, -39}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EB8;
},
{
glyphname = Egrave;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 338, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Ehookabove;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 390, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBA;
},
{
glyphname = Einvertedbreve;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 359, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0206;
},
{
glyphname = Emacron;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 347, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0112;
},
{
glyphname = Eogonek;
lastChange = "2021-10-05 04:27:25 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 294, 2}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 0118;
},
{
glyphname = Etilde;
lastChange = "2021-10-05 05:01:28 +0000";
layers = (
{
components = (
{
name = E;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 343, 315}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 496;
}
);
unicode = 1EBC;
},
{
glyphname = F;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"327 -62 OFFCURVE",
"479 39 OFFCURVE",
"558 218 CURVE",
"565 217 OFFCURVE",
"581 215 OFFCURVE",
"604 210 CURVE SMOOTH",
"625 206 OFFCURVE",
"640 204 OFFCURVE",
"649 204 CURVE SMOOTH",
"654 204 OFFCURVE",
"657 205 OFFCURVE",
"657 206 CURVE SMOOTH",
"657 208 OFFCURVE",
"654 210 OFFCURVE",
"649 213 CURVE SMOOTH",
"639 218 OFFCURVE",
"626 222 OFFCURVE",
"609 224 CURVE SMOOTH",
"563 233 LINE",
"644 402 LINE",
"710 383 LINE SMOOTH",
"737 376 OFFCURVE",
"759 373 OFFCURVE",
"778 373 CURVE SMOOTH",
"801 373 OFFCURVE",
"816 380 OFFCURVE",
"825 393 CURVE SMOOTH",
"826 394 OFFCURVE",
"826 395 OFFCURVE",
"826 396 CURVE SMOOTH",
"826 399 OFFCURVE",
"824 401 OFFCURVE",
"820 401 CURVE SMOOTH",
"819 401 OFFCURVE",
"817 400 OFFCURVE",
"816 399 CURVE SMOOTH",
"811 391 OFFCURVE",
"803 387 OFFCURVE",
"791 387 CURVE SMOOTH",
"788 387 OFFCURVE",
"777 388 OFFCURVE",
"759 391 CURVE SMOOTH",
"744 393 OFFCURVE",
"726 397 OFFCURVE",
"706 403 CURVE SMOOTH",
"653 419 LINE",
"654 421 LINE SMOOTH",
"655 424 OFFCURVE",
"656 426 OFFCURVE",
"656 429 CURVE SMOOTH",
"656 437 OFFCURVE",
"652 441 OFFCURVE",
"643 441 CURVE SMOOTH",
"635 440 OFFCURVE",
"627 436 OFFCURVE",
"620 429 CURVE",
"594 436 OFFCURVE",
"567 442 OFFCURVE",
"539 447 CURVE",
"538 482 OFFCURVE",
"528 510 OFFCURVE",
"509 530 CURVE SMOOTH",
"492 548 OFFCURVE",
"472 557 OFFCURVE",
"448 557 CURVE SMOOTH",
"425 557 OFFCURVE",
"403 549 OFFCURVE",
"384 534 CURVE SMOOTH",
"363 517 OFFCURVE",
"349 495 OFFCURVE",
"340 466 CURVE",
"284 465 OFFCURVE",
"237 459 OFFCURVE",
"199 446 CURVE SMOOTH",
"145 428 OFFCURVE",
"106 405 OFFCURVE",
"81 378 CURVE SMOOTH",
"65 360 OFFCURVE",
"57 343 OFFCURVE",
"57 327 CURVE SMOOTH",
"57 321 OFFCURVE",
"59 315 OFFCURVE",
"61 309 CURVE SMOOTH",
"70 289 OFFCURVE",
"90 279 OFFCURVE",
"121 279 CURVE SMOOTH",
"135 279 OFFCURVE",
"150 281 OFFCURVE",
"166 286 CURVE SMOOTH",
"175 289 OFFCURVE",
"179 292 OFFCURVE",
"179 295 CURVE SMOOTH",
"179 297 OFFCURVE",
"177 298 OFFCURVE",
"173 298 CURVE SMOOTH",
"164 297 LINE",
"151 293 OFFCURVE",
"139 291 OFFCURVE",
"128 291 CURVE SMOOTH",
"103 291 OFFCURVE",
"90 300 OFFCURVE",
"90 318 CURVE SMOOTH",
"90 332 OFFCURVE",
"99 347 OFFCURVE",
"118 363 CURVE SMOOTH",
"162 400 OFFCURVE",
"241 428 OFFCURVE",
"334 436 CURVE",
"333 431 OFFCURVE",
"333 425 OFFCURVE",
"333 419 CURVE SMOOTH",
"333 392 OFFCURVE",
"340 365 OFFCURVE",
"354 339 CURVE SMOOTH",
"369 312 OFFCURVE",
"390 290 OFFCURVE",
"418 271 CURVE",
"420 268 OFFCURVE",
"423 269 OFFCURVE",
"423 273 CURVE SMOOTH",
"423 274 OFFCURVE",
"422 275 OFFCURVE",
"421 276 CURVE SMOOTH",
"373 309 OFFCURVE",
"349 355 OFFCURVE",
"349 413 CURVE SMOOTH",
"349 421 OFFCURVE",
"350 429 OFFCURVE",
"351 438 CURVE",
"366 439 OFFCURVE",
"381 439 OFFCURVE",
"396 439 CURVE SMOOTH",
"437 439 OFFCURVE",
"480 436 OFFCURVE",
"524 429 CURVE",
"523 372 OFFCURVE",
"506 309 OFFCURVE",
"473 240 CURVE",
"453 241 OFFCURVE",
"434 241 OFFCURVE",
"416 241 CURVE SMOOTH",
"351 241 OFFCURVE",
"309 236 OFFCURVE",
"290 226 CURVE SMOOTH",
"283 222 OFFCURVE",
"276 216 OFFCURVE",
"268 207 CURVE SMOOTH",
"263 201 OFFCURVE",
"260 197 OFFCURVE",
"260 195 CURVE SMOOTH",
"260 193 OFFCURVE",
"261 192 OFFCURVE",
"264 192 CURVE SMOOTH",
"267 192 OFFCURVE",
"271 193 OFFCURVE",
"277 194 CURVE",
"305 203 OFFCURVE",
"398 217 OFFCURVE",
"463 221 CURVE",
"428 154 OFFCURVE",
"385 100 OFFCURVE",
"336 59 CURVE SMOOTH",
"281 13 OFFCURVE",
"223 -9 OFFCURVE",
"164 -8 CURVE SMOOTH",
"162 -8 OFFCURVE",
"160 -9 OFFCURVE",
"160 -12 CURVE SMOOTH",
"160 -14 OFFCURVE",
"161 -14 OFFCURVE",
"163 -15 CURVE",
"226 -18 OFFCURVE",
"288 4 OFFCURVE",
"347 52 CURVE SMOOTH",
"400 95 OFFCURVE",
"444 151 OFFCURVE",
"481 221 CURVE",
"498 222 OFFCURVE",
"510 221 OFFCURVE",
"519 219 CURVE",
"480 135 OFFCURVE",
"433 72 OFFCURVE",
"376 31 CURVE SMOOTH",
"312 -15 OFFCURVE",
"234 -38 OFFCURVE",
"141 -38 CURVE SMOOTH",
"101 -38 OFFCURVE",
"71 -33 OFFCURVE",
"51 -19 CURVE SMOOTH",
"35 -9 OFFCURVE",
"27 4 OFFCURVE",
"27 21 CURVE SMOOTH",
"27 32 OFFCURVE",
"31 44 OFFCURVE",
"39 56 CURVE SMOOTH",
"73 104 OFFCURVE",
"139 128 OFFCURVE",
"237 128 CURVE SMOOTH",
"287 128 OFFCURVE",
"316 125 OFFCURVE",
"324 121 CURVE SMOOTH",
"328 119 OFFCURVE",
"331 118 OFFCURVE",
"334 118 CURVE SMOOTH",
"337 118 OFFCURVE",
"338 119 OFFCURVE",
"338 120 CURVE SMOOTH",
"338 123 OFFCURVE",
"334 127 OFFCURVE",
"325 131 CURVE SMOOTH",
"307 140 OFFCURVE",
"277 144 OFFCURVE",
"235 144 CURVE SMOOTH",
"114 144 OFFCURVE",
"39 116 OFFCURVE",
"10 61 CURVE SMOOTH",
"3 49 OFFCURVE",
"0 37 OFFCURVE",
"0 25 CURVE SMOOTH",
"0 2 OFFCURVE",
"12 -18 OFFCURVE",
"35 -33 CURVE SMOOTH",
"60 -50 OFFCURVE",
"97 -58 OFFCURVE",
"144 -59 CURVE",
"144 -59 LINE"
);
},
{
closed = 1;
nodes = (
"517 237 OFFCURVE",
"504 238 OFFCURVE",
"489 239 CURVE",
"522 306 OFFCURVE",
"539 369 OFFCURVE",
"540 426 CURVE",
"563 423 OFFCURVE",
"585 418 OFFCURVE",
"607 413 CURVE",
"595 394 OFFCURVE",
"580 363 OFFCURVE",
"563 319 CURVE SMOOTH",
"545 272 OFFCURVE",
"534 244 OFFCURVE",
"529 236 CURVE",
"529 236 LINE"
);
},
{
closed = 1;
nodes = (
"465 460 OFFCURVE",
"410 465 OFFCURVE",
"357 466 CURVE",
"365 493 OFFCURVE",
"378 515 OFFCURVE",
"395 530 CURVE SMOOTH",
"411 544 OFFCURVE",
"429 551 OFFCURVE",
"448 551 CURVE SMOOTH",
"468 551 OFFCURVE",
"485 543 OFFCURVE",
"499 526 CURVE SMOOTH",
"514 507 OFFCURVE",
"523 482 OFFCURVE",
"524 450 CURVE",
"524 450 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01277 5 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012118 7 128 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 7 114 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 77 117 77 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01299 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 118 22 118 38 118 54 118 70 118 86 118 102 118 118 118 134 118 150 118 166 118 182 118 198 118 214 118 230 118 246 118 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012124 59 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012173 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012137 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012143 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01248 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012106 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012159 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012159 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01281 4 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01263 2 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012159 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 116 233 116 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 116 24 116 40 116 56 116 72 116 88 116 104 116 120 116 136 116 152 116 168 116 184 116 200 116 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0128 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01216 48 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01287 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012124 48 159 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 668;
}
);
leftKerningGroup = H;
note = F;
rightKerningGroup = F;
unicode = 0046;
},
{
glyphname = G;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{227, -40}";
},
{
name = top;
position = "{540, 494}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"309 -41 OFFCURVE",
"385 -21 OFFCURVE",
"458 18 CURVE SMOOTH",
"533 59 OFFCURVE",
"570 104 OFFCURVE",
"570 153 CURVE SMOOTH",
"570 172 OFFCURVE",
"564 187 OFFCURVE",
"553 198 CURVE",
"590 195 OFFCURVE",
"626 189 OFFCURVE",
"661 178 CURVE",
"662 187 OFFCURVE",
"662 193 OFFCURVE",
"661 195 CURVE",
"660 200 OFFCURVE",
"656 203 OFFCURVE",
"649 206 CURVE SMOOTH",
"624 217 OFFCURVE",
"581 223 OFFCURVE",
"521 223 CURVE SMOOTH",
"488 223 OFFCURVE",
"452 221 OFFCURVE",
"413 218 CURVE SMOOTH",
"316 210 OFFCURVE",
"254 200 OFFCURVE",
"226 189 CURVE SMOOTH",
"217 185 OFFCURVE",
"205 161 OFFCURVE",
"209 148 CURVE",
"236 153 OFFCURVE",
"272 160 OFFCURVE",
"319 171 CURVE SMOOTH",
"360 180 OFFCURVE",
"393 187 OFFCURVE",
"417 190 CURVE SMOOTH",
"453 195 OFFCURVE",
"491 198 OFFCURVE",
"532 198 CURVE",
"533 190 OFFCURVE",
"533 183 OFFCURVE",
"533 175 CURVE SMOOTH",
"533 120 OFFCURVE",
"507 73 OFFCURVE",
"454 37 CURVE SMOOTH",
"400 0 OFFCURVE",
"335 -18 OFFCURVE",
"258 -18 CURVE SMOOTH",
"200 -18 OFFCURVE",
"152 -7 OFFCURVE",
"115 16 CURVE SMOOTH",
"74 41 OFFCURVE",
"53 75 OFFCURVE",
"53 118 CURVE SMOOTH",
"53 180 OFFCURVE",
"78 238 OFFCURVE",
"129 293 CURVE",
"156 282 OFFCURVE",
"186 276 OFFCURVE",
"221 276 CURVE SMOOTH",
"264 276 OFFCURVE",
"301 286 OFFCURVE",
"308 301 CURVE SMOOTH",
"309 303 OFFCURVE",
"309 305 OFFCURVE",
"307 306 CURVE",
"305 308 OFFCURVE",
"303 308 OFFCURVE",
"302 305 CURVE",
"295 292 OFFCURVE",
"272 285 OFFCURVE",
"234 285 CURVE SMOOTH",
"199 285 OFFCURVE",
"168 291 OFFCURVE",
"140 304 CURVE",
"194 359 OFFCURVE",
"262 399 OFFCURVE",
"344 425 CURVE SMOOTH",
"373 434 OFFCURVE",
"407 442 OFFCURVE",
"446 449 CURVE",
"455 444 OFFCURVE",
"464 438 OFFCURVE",
"473 431 CURVE SMOOTH",
"492 418 OFFCURVE",
"509 401 OFFCURVE",
"526 380 CURVE SMOOTH",
"546 354 OFFCURVE",
"556 332 OFFCURVE",
"556 314 CURVE SMOOTH",
"556 307 OFFCURVE",
"554 300 OFFCURVE",
"550 294 CURVE",
"547 291 OFFCURVE",
"545 289 OFFCURVE",
"545 287 CURVE SMOOTH",
"545 286 LINE SMOOTH",
"545 283 OFFCURVE",
"550 284 OFFCURVE",
"559 288 CURVE",
"587 297 OFFCURVE",
"612 310 OFFCURVE",
"633 327 CURVE SMOOTH",
"660 348 OFFCURVE",
"674 369 OFFCURVE",
"674 391 CURVE SMOOTH",
"674 412 OFFCURVE",
"666 433 OFFCURVE",
"649 454 CURVE SMOOTH",
"628 481 OFFCURVE",
"592 494 OFFCURVE",
"540 494 CURVE SMOOTH",
"505 494 OFFCURVE",
"464 488 OFFCURVE",
"416 476 CURVE",
"356 505 OFFCURVE",
"298 519 OFFCURVE",
"242 519 CURVE SMOOTH",
"195 519 OFFCURVE",
"153 508 OFFCURVE",
"116 483 CURVE SMOOTH",
"79 458 OFFCURVE",
"60 427 OFFCURVE",
"60 391 CURVE SMOOTH",
"60 358 OFFCURVE",
"73 331 OFFCURVE",
"99 311 CURVE",
"48 256 OFFCURVE",
"23 196 OFFCURVE",
"23 131 CURVE SMOOTH",
"23 72 OFFCURVE",
"43 28 OFFCURVE",
"84 -1 CURVE SMOOTH",
"120 -28 OFFCURVE",
"168 -41 OFFCURVE",
"228 -41 CURVE",
"228 -41 LINE"
);
},
{
closed = 1;
nodes = (
"87 341 OFFCURVE",
"76 364 OFFCURVE",
"76 392 CURVE SMOOTH",
"76 425 OFFCURVE",
"95 453 OFFCURVE",
"132 476 CURVE SMOOTH",
"166 496 OFFCURVE",
"201 506 OFFCURVE",
"238 506 CURVE SMOOTH",
"298 506 OFFCURVE",
"353 495 OFFCURVE",
"402 473 CURVE",
"383 468 OFFCURVE",
"362 461 OFFCURVE",
"339 454 CURVE SMOOTH",
"244 423 OFFCURVE",
"168 380 OFFCURVE",
"111 323 CURVE",
"111 323 LINE"
);
},
{
closed = 1;
nodes = (
"565 308 OFFCURVE",
"566 313 OFFCURVE",
"566 319 CURVE SMOOTH",
"566 337 OFFCURVE",
"558 358 OFFCURVE",
"541 381 CURVE SMOOTH",
"526 402 OFFCURVE",
"509 420 OFFCURVE",
"488 434 CURVE SMOOTH",
"460 452 LINE",
"495 458 OFFCURVE",
"526 461 OFFCURVE",
"553 461 CURVE SMOOTH",
"616 461 OFFCURVE",
"647 444 OFFCURVE",
"647 410 CURVE SMOOTH",
"647 395 OFFCURVE",
"637 375 OFFCURVE",
"616 350 CURVE SMOOTH",
"597 327 OFFCURVE",
"580 312 OFFCURVE",
"564 303 CURVE",
"564 303 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 8 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 106 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 6 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01228 5 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01212 38 94 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 16 122 16 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 105 16 121 16 137 16 153 16 169 16 185 16 201 16 217 16 233 16 249 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 16 25 16 41 16 57 16 73 16 89 16 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01220 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01248 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01292 102 28 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012119 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01267 4 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012110 1 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012114 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01284 4 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 18 114 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 644;
}
);
leftKerningGroup = O;
note = G;
rightKerningGroup = G;
unicode = 0047;
},
{
glyphname = Gbreve;
lastChange = "2021-10-05 04:40:37 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 503, 324}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 011E;
},
{
glyphname = Gcaron;
lastChange = "2021-10-05 04:40:41 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 512, 324}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 01E6;
},
{
glyphname = Gcircumflex;
lastChange = "2021-10-05 04:40:41 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 464, 324}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 011C;
},
{
glyphname = Gcommaaccent;
lastChange = "2021-10-05 04:28:32 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 158, -40}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 0122;
},
{
glyphname = Gdotaccent;
lastChange = "2021-10-05 04:40:42 +0000";
layers = (
{
components = (
{
name = G;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 537, 324}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 644;
}
);
unicode = 0120;
},
{
glyphname = H;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{438, 0}";
},
{
name = center;
position = "{438, 238}";
},
{
name = top;
position = "{734, 475}";
},
{
name = topleft;
position = "{20, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"254 -68 OFFCURVE",
"325 -45 OFFCURVE",
"388 0 CURVE SMOOTH",
"423 25 OFFCURVE",
"454 54 OFFCURVE",
"483 86 CURVE",
"508 87 OFFCURVE",
"532 96 OFFCURVE",
"554 113 CURVE SMOOTH",
"574 129 OFFCURVE",
"588 147 OFFCURVE",
"595 168 CURVE SMOOTH",
"596 171 OFFCURVE",
"594 173 OFFCURVE",
"591 173 CURVE SMOOTH",
"590 173 OFFCURVE",
"589 172 OFFCURVE",
"588 170 CURVE SMOOTH",
"581 152 OFFCURVE",
"569 136 OFFCURVE",
"552 121 CURVE SMOOTH",
"533 106 OFFCURVE",
"512 97 OFFCURVE",
"489 94 CURVE",
"526 137 OFFCURVE",
"557 186 OFFCURVE",
"584 243 CURVE",
"612 240 OFFCURVE",
"654 231 OFFCURVE",
"709 216 CURVE",
"690 154 OFFCURVE",
"681 103 OFFCURVE",
"681 63 CURVE SMOOTH",
"681 44 OFFCURVE",
"684 28 OFFCURVE",
"696 13 CURVE SMOOTH",
"706 -2 OFFCURVE",
"719 -9 OFFCURVE",
"734 -9 CURVE SMOOTH",
"745 -9 OFFCURVE",
"756 -5 OFFCURVE",
"768 3 CURVE",
"771 6 OFFCURVE",
"773 9 OFFCURVE",
"773 12 CURVE SMOOTH",
"773 15 OFFCURVE",
"772 16 OFFCURVE",
"770 16 CURVE SMOOTH",
"769 16 OFFCURVE",
"767 15 OFFCURVE",
"764 13 CURVE SMOOTH",
"754 6 OFFCURVE",
"745 2 OFFCURVE",
"738 2 CURVE SMOOTH",
"718 2 OFFCURVE",
"708 21 OFFCURVE",
"708 60 CURVE SMOOTH",
"708 73 LINE",
"712 110 OFFCURVE",
"723 155 OFFCURVE",
"741 208 CURVE",
"783 195 OFFCURVE",
"804 180 OFFCURVE",
"804 164 CURVE SMOOTH",
"804 159 OFFCURVE",
"802 155 OFFCURVE",
"798 150 CURVE SMOOTH",
"794 145 OFFCURVE",
"792 141 OFFCURVE",
"792 139 CURVE SMOOTH",
"792 137 OFFCURVE",
"793 136 OFFCURVE",
"794 136 CURVE SMOOTH",
"797 136 OFFCURVE",
"801 138 OFFCURVE",
"804 142 CURVE SMOOTH",
"813 151 OFFCURVE",
"818 161 OFFCURVE",
"818 170 CURVE SMOOTH",
"818 192 OFFCURVE",
"795 212 OFFCURVE",
"748 229 CURVE",
"769 284 LINE SMOOTH",
"786 329 OFFCURVE",
"813 375 OFFCURVE",
"846 424 CURVE SMOOTH",
"893 493 OFFCURVE",
"936 528 OFFCURVE",
"973 528 CURVE SMOOTH",
"988 528 OFFCURVE",
"1003 521 OFFCURVE",
"1016 508 CURVE SMOOTH",
"1021 503 OFFCURVE",
"1024 501 OFFCURVE",
"1026 501 CURVE SMOOTH",
"1028 501 OFFCURVE",
"1029 502 OFFCURVE",
"1029 505 CURVE SMOOTH",
"1029 512 OFFCURVE",
"1026 518 OFFCURVE",
"1020 521 CURVE SMOOTH",
"999 534 OFFCURVE",
"978 541 OFFCURVE",
"956 541 CURVE SMOOTH",
"907 541 OFFCURVE",
"860 509 OFFCURVE",
"814 444 CURVE SMOOTH",
"775 390 OFFCURVE",
"743 322 OFFCURVE",
"716 239 CURVE",
"669 253 OFFCURVE",
"629 263 OFFCURVE",
"596 268 CURVE",
"616 315 OFFCURVE",
"625 361 OFFCURVE",
"623 406 CURVE SMOOTH",
"622 431 OFFCURVE",
"609 444 OFFCURVE",
"584 444 CURVE SMOOTH",
"563 444 OFFCURVE",
"542 438 OFFCURVE",
"521 425 CURVE",
"510 471 OFFCURVE",
"485 499 OFFCURVE",
"445 510 CURVE SMOOTH",
"435 512 OFFCURVE",
"426 514 OFFCURVE",
"416 514 CURVE SMOOTH",
"389 514 OFFCURVE",
"362 504 OFFCURVE",
"335 484 CURVE SMOOTH",
"290 450 OFFCURVE",
"266 399 OFFCURVE",
"266 333 CURVE SMOOTH",
"266 310 OFFCURVE",
"269 287 OFFCURVE",
"276 264 CURVE",
"248 260 OFFCURVE",
"222 254 OFFCURVE",
"198 246 CURVE SMOOTH",
"136 228 OFFCURVE",
"87 200 OFFCURVE",
"51 163 CURVE SMOOTH",
"18 128 OFFCURVE",
"1 92 OFFCURVE",
"1 54 CURVE SMOOTH",
"1 39 OFFCURVE",
"4 25 OFFCURVE",
"9 11 CURVE SMOOTH",
"30 -38 OFFCURVE",
"96 -68 OFFCURVE",
"177 -68 CURVE",
"177 -68 LINE"
);
},
{
closed = 1;
nodes = (
"104 -54 OFFCURVE",
"51 -26 OFFCURVE",
"36 19 CURVE SMOOTH",
"34 27 OFFCURVE",
"33 35 OFFCURVE",
"33 44 CURVE SMOOTH",
"33 77 OFFCURVE",
"49 110 OFFCURVE",
"80 142 CURVE SMOOTH",
"113 175 OFFCURVE",
"159 201 OFFCURVE",
"216 219 CURVE SMOOTH",
"237 226 OFFCURVE",
"260 231 OFFCURVE",
"285 236 CURVE",
"310 174 OFFCURVE",
"348 130 OFFCURVE",
"401 104 CURVE",
"330 19 OFFCURVE",
"249 -24 OFFCURVE",
"156 -24 CURVE SMOOTH",
"152 -24 OFFCURVE",
"145 -22 OFFCURVE",
"135 -19 CURVE SMOOTH",
"122 -15 OFFCURVE",
"113 -10 OFFCURVE",
"108 -4 CURVE",
"107 -2 OFFCURVE",
"105 -2 OFFCURVE",
"103 -3 CURVE",
"102 -5 OFFCURVE",
"102 -7 OFFCURVE",
"103 -9 CURVE",
"109 -16 OFFCURVE",
"119 -21 OFFCURVE",
"133 -26 CURVE SMOOTH",
"144 -29 OFFCURVE",
"151 -31 OFFCURVE",
"156 -31 CURVE SMOOTH",
"251 -31 OFFCURVE",
"336 13 OFFCURVE",
"410 100 CURVE",
"421 95 OFFCURVE",
"433 92 OFFCURVE",
"444 89 CURVE",
"423 65 OFFCURVE",
"400 43 OFFCURVE",
"375 23 CURVE SMOOTH",
"313 -28 OFFCURVE",
"245 -54 OFFCURVE",
"172 -54 CURVE",
"172 -54 LINE"
);
},
{
closed = 1;
nodes = (
"357 135 OFFCURVE",
"321 178 OFFCURVE",
"299 239 CURVE",
"356 248 OFFCURVE",
"417 252 OFFCURVE",
"484 251 CURVE",
"465 199 OFFCURVE",
"439 152 OFFCURVE",
"406 111 CURVE",
"406 111 LINE"
);
},
{
closed = 1;
nodes = (
"438 98 OFFCURVE",
"427 101 OFFCURVE",
"416 106 CURVE",
"451 149 OFFCURVE",
"478 197 OFFCURVE",
"498 250 CURVE",
"544 248 LINE",
"517 189 OFFCURVE",
"485 138 OFFCURVE",
"449 96 CURVE",
"449 96 LINE"
);
},
{
closed = 1;
nodes = (
"285 289 OFFCURVE",
"283 311 OFFCURVE",
"283 333 CURVE SMOOTH",
"283 389 OFFCURVE",
"301 434 OFFCURVE",
"334 468 CURVE SMOOTH",
"361 493 OFFCURVE",
"390 506 OFFCURVE",
"421 506 CURVE SMOOTH",
"446 506 OFFCURVE",
"467 496 OFFCURVE",
"484 477 CURVE SMOOTH",
"502 455 OFFCURVE",
"511 424 OFFCURVE",
"511 385 CURVE SMOOTH",
"511 352 OFFCURVE",
"505 315 OFFCURVE",
"493 276 CURVE",
"474 277 OFFCURVE",
"455 277 OFFCURVE",
"437 277 CURVE SMOOTH",
"385 277 OFFCURVE",
"337 274 OFFCURVE",
"291 267 CURVE",
"291 267 LINE"
);
},
{
closed = 1;
nodes = (
"507 275 LINE",
"511 288 OFFCURVE",
"515 302 OFFCURVE",
"518 316 CURVE SMOOTH",
"523 340 OFFCURVE",
"526 362 OFFCURVE",
"526 383 CURVE SMOOTH",
"526 395 OFFCURVE",
"525 406 OFFCURVE",
"523 417 CURVE",
"534 423 OFFCURVE",
"543 426 OFFCURVE",
"551 426 CURVE SMOOTH",
"570 426 OFFCURVE",
"578 414 OFFCURVE",
"578 389 CURVE SMOOTH",
"578 352 OFFCURVE",
"570 312 OFFCURVE",
"554 271 CURVE",
"554 271 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012134 8 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01257 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01298 5 114 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01283 6 92 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 2 234 2 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01222 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01253 2 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 114 122 114 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 105 114 121 114 137 114 153 114 169 114 185 114 201 114 217 114 233 114 249 114 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 114 25 114 41 114 57 114 73 114 89 114 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012120 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 102 134 118 134 134 134 150 134 166 134 182 134 198 134 214 134 230 134 246 134 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 134 22 134 38 134 54 134 70 134 86 134 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 134 117 134 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012143 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012163 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012169 2 57 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012173 39 83 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012139 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 3 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 163 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012169 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012169 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012163 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012171 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 876;
}
);
leftKerningGroup = H;
note = H;
rightKerningGroup = H;
unicode = 0048;
},
{
glyphname = Hbar;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = emdash;
transform = "{0.89888, 0, 0, 0.62431, 447, 260}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 876;
}
);
unicode = 0126;
},
{
glyphname = Hcircumflex;
lastChange = "2021-10-05 04:28:48 +0000";
layers = (
{
components = (
{
name = H;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 663, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 876;
}
);
unicode = 0124;
},
{
glyphname = I;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{108, -87}";
},
{
name = ogonek;
position = "{146, -81}";
},
{
name = top;
position = "{428, 497}";
},
{
name = topleft;
position = "{20, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"167 -87 OFFCURVE",
"208 -72 OFFCURVE",
"249 -41 CURVE SMOOTH",
"296 -7 OFFCURVE",
"337 42 OFFCURVE",
"373 107 CURVE",
"400 113 OFFCURVE",
"425 126 OFFCURVE",
"446 146 CURVE SMOOTH",
"467 164 OFFCURVE",
"480 184 OFFCURVE",
"486 205 CURVE",
"488 208 OFFCURVE",
"486 209 OFFCURVE",
"482 209 CURVE SMOOTH",
"480 209 OFFCURVE",
"479 208 OFFCURVE",
"478 206 CURVE",
"473 187 OFFCURVE",
"461 170 OFFCURVE",
"443 153 CURVE SMOOTH",
"424 135 OFFCURVE",
"402 123 OFFCURVE",
"378 116 CURVE",
"395 147 OFFCURVE",
"410 182 OFFCURVE",
"424 219 CURVE SMOOTH",
"451 292 OFFCURVE",
"464 353 OFFCURVE",
"464 401 CURVE SMOOTH",
"464 441 OFFCURVE",
"454 471 OFFCURVE",
"435 490 CURVE SMOOTH",
"428 497 OFFCURVE",
"419 501 OFFCURVE",
"410 501 CURVE SMOOTH",
"399 501 OFFCURVE",
"386 496 OFFCURVE",
"373 485 CURVE",
"357 511 OFFCURVE",
"334 524 OFFCURVE",
"304 524 CURVE SMOOTH",
"269 524 OFFCURVE",
"236 508 OFFCURVE",
"207 476 CURVE SMOOTH",
"171 437 OFFCURVE",
"153 386 OFFCURVE",
"153 325 CURVE SMOOTH",
"153 279 OFFCURVE",
"163 237 OFFCURVE",
"182 199 CURVE SMOOTH",
"206 152 OFFCURVE",
"242 122 OFFCURVE",
"289 109 CURVE",
"237 25 OFFCURVE",
"172 -32 OFFCURVE",
"93 -62 CURVE",
"57 -50 OFFCURVE",
"39 -18 OFFCURVE",
"39 33 CURVE SMOOTH",
"39 46 OFFCURVE",
"40 61 OFFCURVE",
"43 77 CURVE SMOOTH",
"55 144 OFFCURVE",
"88 201 OFFCURVE",
"143 249 CURVE SMOOTH",
"146 252 OFFCURVE",
"148 255 OFFCURVE",
"148 257 CURVE SMOOTH",
"148 260 OFFCURVE",
"146 261 OFFCURVE",
"141 261 CURVE SMOOTH",
"140 261 OFFCURVE",
"139 261 OFFCURVE",
"138 260 CURVE SMOOTH",
"70 203 OFFCURVE",
"30 141 OFFCURVE",
"17 76 CURVE SMOOTH",
"14 62 OFFCURVE",
"13 49 OFFCURVE",
"13 36 CURVE SMOOTH",
"13 -14 OFFCURVE",
"31 -50 OFFCURVE",
"66 -71 CURVE",
"41 -77 LINE SMOOTH",
"30 -80 OFFCURVE",
"-3 -72 OFFCURVE",
"-16 -67 CURVE",
"-19 -67 OFFCURVE",
"-20 -68 OFFCURVE",
"-20 -71 CURVE SMOOTH",
"-20 -72 OFFCURVE",
"-20 -73 OFFCURVE",
"-19 -74 CURVE",
"-12 -78 OFFCURVE",
"-2 -81 OFFCURVE",
"11 -84 CURVE",
"24 -85 OFFCURVE",
"35 -85 OFFCURVE",
"43 -84 CURVE SMOOTH",
"54 -82 OFFCURVE",
"64 -79 OFFCURVE",
"75 -76 CURVE",
"90 -83 OFFCURVE",
"108 -87 OFFCURVE",
"127 -87 CURVE",
"127 -87 LINE"
);
},
{
closed = 1;
nodes = (
"116 -66 OFFCURVE",
"110 -65 OFFCURVE",
"105 -64 CURVE",
"182 -33 OFFCURVE",
"246 24 OFFCURVE",
"299 107 CURVE",
"309 105 OFFCURVE",
"320 104 OFFCURVE",
"331 103 CURVE",
"320 83 OFFCURVE",
"309 65 OFFCURVE",
"298 48 CURVE SMOOTH",
"273 13 OFFCURVE",
"244 -15 OFFCURVE",
"211 -36 CURVE SMOOTH",
"180 -56 OFFCURVE",
"150 -66 OFFCURVE",
"121 -66 CURVE",
"121 -66 LINE"
);
},
{
closed = 1;
nodes = (
"251 127 OFFCURVE",
"218 154 OFFCURVE",
"196 195 CURVE SMOOTH",
"176 232 OFFCURVE",
"166 276 OFFCURVE",
"166 326 CURVE SMOOTH",
"166 371 OFFCURVE",
"177 412 OFFCURVE",
"199 450 CURVE SMOOTH",
"226 495 OFFCURVE",
"260 517 OFFCURVE",
"302 517 CURVE SMOOTH",
"329 517 OFFCURVE",
"350 504 OFFCURVE",
"364 478 CURVE",
"319 434 OFFCURVE",
"276 341 OFFCURVE",
"276 284 CURVE SMOOTH",
"276 253 OFFCURVE",
"287 238 OFFCURVE",
"308 238 CURVE SMOOTH",
"320 238 OFFCURVE",
"326 240 OFFCURVE",
"326 244 CURVE SMOOTH",
"326 245 OFFCURVE",
"325 246 OFFCURVE",
"324 246 CURVE",
"327 245 OFFCURVE",
"323 245 OFFCURVE",
"314 245 CURVE SMOOTH",
"309 245 OFFCURVE",
"305 248 OFFCURVE",
"302 255 CURVE SMOOTH",
"299 261 OFFCURVE",
"297 270 OFFCURVE",
"297 281 CURVE SMOOTH",
"297 308 OFFCURVE",
"304 341 OFFCURVE",
"319 380 CURVE SMOOTH",
"334 421 OFFCURVE",
"350 450 OFFCURVE",
"369 468 CURVE",
"376 449 OFFCURVE",
"380 425 OFFCURVE",
"380 398 CURVE SMOOTH",
"380 354 OFFCURVE",
"371 305 OFFCURVE",
"354 251 CURVE SMOOTH",
"339 202 OFFCURVE",
"319 157 OFFCURVE",
"294 116 CURVE",
"294 116 LINE"
);
},
{
closed = 1;
nodes = (
"323 111 OFFCURVE",
"313 112 OFFCURVE",
"303 114 CURVE",
"346 184 OFFCURVE",
"374 260 OFFCURVE",
"387 341 CURVE SMOOTH",
"390 362 OFFCURVE",
"392 381 OFFCURVE",
"392 399 CURVE SMOOTH",
"392 429 OFFCURVE",
"387 454 OFFCURVE",
"378 475 CURVE",
"379 476 LINE SMOOTH",
"385 482 OFFCURVE",
"392 483 OFFCURVE",
"397 483 CURVE SMOOTH",
"403 483 OFFCURVE",
"408 481 OFFCURVE",
"411 476 CURVE SMOOTH",
"421 461 OFFCURVE",
"426 440 OFFCURVE",
"426 413 CURVE SMOOTH",
"426 366 OFFCURVE",
"412 305 OFFCURVE",
"385 229 CURVE SMOOTH",
"369 184 OFFCURVE",
"352 144 OFFCURVE",
"334 111 CURVE",
"334 111 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012120 5 106 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 128 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01267 32 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 27 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 4 229 4 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01215 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 32 234 32 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01251 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01253 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01271 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012104 106 67 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 120 117 120 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012124 128 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01255 4 87 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01293 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012104 87 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
leftKerningGroup = H;
note = I;
rightKerningGroup = H;
unicode = 0049;
},
{
glyphname = Iacute;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 400, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Ibreve;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 391, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012C;
},
{
glyphname = Icircumflex;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 352, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idblgrave;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 318, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0208;
},
{
glyphname = Idieresis;
lastChange = "2021-10-05 04:29:21 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 384, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Idotaccent;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 425, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0130;
},
{
glyphname = Idotbelow;
lastChange = "2021-10-05 04:29:13 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 66, -87}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 1ECA;
},
{
glyphname = Igrave;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 351, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Ihookabove;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 403, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 1EC8;
},
{
glyphname = Iinvertedbreve;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 372, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 020A;
},
{
glyphname = Imacron;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 360, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012A;
},
{
glyphname = Iogonek;
lastChange = "2021-10-05 04:41:01 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 56, -85}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 012E;
},
{
glyphname = Itilde;
lastChange = "2021-10-05 04:29:26 +0000";
layers = (
{
components = (
{
name = I;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 356, 327}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0128;
},
{
glyphname = J;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{223, 0}";
},
{
name = top;
position = "{460, 513}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"65 -186 OFFCURVE",
"109 -175 OFFCURVE",
"154 -153 CURVE SMOOTH",
"197 -134 OFFCURVE",
"235 -108 OFFCURVE",
"270 -76 CURVE SMOOTH",
"337 -15 OFFCURVE",
"388 62 OFFCURVE",
"421 153 CURVE SMOOTH",
"452 236 OFFCURVE",
"473 328 OFFCURVE",
"483 429 CURVE",
"522 427 OFFCURVE",
"545 420 OFFCURVE",
"551 408 CURVE SMOOTH",
"552 405 OFFCURVE",
"554 404 OFFCURVE",
"557 404 CURVE SMOOTH",
"560 404 OFFCURVE",
"562 406 OFFCURVE",
"562 409 CURVE SMOOTH",
"562 410 OFFCURVE",
"562 412 OFFCURVE",
"561 413 CURVE",
"551 434 OFFCURVE",
"526 447 OFFCURVE",
"485 453 CURVE",
"487 473 OFFCURVE",
"488 490 OFFCURVE",
"488 503 CURVE SMOOTH",
"487 510 OFFCURVE",
"484 514 OFFCURVE",
"477 514 CURVE SMOOTH",
"466 514 OFFCURVE",
"451 503 OFFCURVE",
"451 496 CURVE SMOOTH",
"451 484 OFFCURVE",
"450 471 OFFCURVE",
"449 456 CURVE",
"428 457 OFFCURVE",
"405 456 OFFCURVE",
"380 453 CURVE",
"364 499 OFFCURVE",
"336 522 OFFCURVE",
"294 522 CURVE SMOOTH",
"236 522 OFFCURVE",
"174 459 OFFCURVE",
"174 388 CURVE SMOOTH",
"174 384 LINE",
"137 359 OFFCURVE",
"119 333 OFFCURVE",
"119 305 CURVE SMOOTH",
"119 285 OFFCURVE",
"127 269 OFFCURVE",
"143 259 CURVE SMOOTH",
"150 255 OFFCURVE",
"154 256 OFFCURVE",
"154 261 CURVE SMOOTH",
"154 262 OFFCURVE",
"153 264 OFFCURVE",
"150 266 CURVE SMOOTH",
"141 272 OFFCURVE",
"135 284 OFFCURVE",
"135 301 CURVE SMOOTH",
"135 321 OFFCURVE",
"148 340 OFFCURVE",
"173 358 CURVE",
"175 327 OFFCURVE",
"185 298 OFFCURVE",
"203 273 CURVE SMOOTH",
"222 245 OFFCURVE",
"247 224 OFFCURVE",
"280 211 CURVE",
"282 209 OFFCURVE",
"286 211 OFFCURVE",
"286 215 CURVE SMOOTH",
"286 216 OFFCURVE",
"285 217 OFFCURVE",
"283 218 CURVE SMOOTH",
"251 231 OFFCURVE",
"227 252 OFFCURVE",
"211 281 CURVE SMOOTH",
"196 307 OFFCURVE",
"189 336 OFFCURVE",
"189 368 CURVE",
"235 394 OFFCURVE",
"297 412 OFFCURVE",
"374 423 CURVE",
"377 406 OFFCURVE",
"378 389 OFFCURVE",
"378 370 CURVE SMOOTH",
"378 323 OFFCURVE",
"370 271 OFFCURVE",
"352 212 CURVE SMOOTH",
"327 126 OFFCURVE",
"290 52 OFFCURVE",
"243 -9 CURVE SMOOTH",
"190 -78 OFFCURVE",
"131 -117 OFFCURVE",
"68 -126 CURVE",
"64 -129 LINE",
"64 -133 LINE",
"65 -134 OFFCURVE",
"66 -134 OFFCURVE",
"68 -134 CURVE SMOOTH",
"129 -127 OFFCURVE",
"185 -95 OFFCURVE",
"238 -36 CURVE SMOOTH",
"285 15 OFFCURVE",
"322 80 OFFCURVE",
"351 158 CURVE SMOOTH",
"379 233 OFFCURVE",
"393 302 OFFCURVE",
"393 367 CURVE SMOOTH",
"393 388 OFFCURVE",
"391 408 OFFCURVE",
"388 425 CURVE",
"409 428 OFFCURVE",
"428 429 OFFCURVE",
"447 429 CURVE",
"436 335 OFFCURVE",
"415 245 OFFCURVE",
"383 159 CURVE SMOOTH",
"344 52 OFFCURVE",
"288 -32 OFFCURVE",
"216 -93 CURVE SMOOTH",
"156 -143 OFFCURVE",
"99 -168 OFFCURVE",
"44 -168 CURVE SMOOTH",
"-2 -168 OFFCURVE",
"-31 -145 OFFCURVE",
"-31 -107 CURVE SMOOTH",
"-31 -60 OFFCURVE",
"1 -15 OFFCURVE",
"62 28 CURVE SMOOTH",
"109 61 OFFCURVE",
"168 89 OFFCURVE",
"237 112 CURVE SMOOTH",
"245 115 OFFCURVE",
"249 117 OFFCURVE",
"249 119 CURVE SMOOTH",
"249 121 OFFCURVE",
"247 122 OFFCURVE",
"243 122 CURVE SMOOTH",
"240 122 OFFCURVE",
"236 122 OFFCURVE",
"233 121 CURVE SMOOTH",
"153 94 OFFCURVE",
"87 64 OFFCURVE",
"36 31 CURVE SMOOTH",
"-34 -15 OFFCURVE",
"-69 -63 OFFCURVE",
"-69 -112 CURVE SMOOTH",
"-69 -156 OFFCURVE",
"-33 -186 OFFCURVE",
"24 -186 CURVE",
"24 -186 LINE"
);
},
{
closed = 1;
nodes = (
"198 432 OFFCURVE",
"211 461 OFFCURVE",
"232 484 CURVE SMOOTH",
"251 504 OFFCURVE",
"271 514 OFFCURVE",
"294 514 CURVE SMOOTH",
"330 514 OFFCURVE",
"354 494 OFFCURVE",
"368 452 CURVE",
"331 446 LINE SMOOTH",
"280 438 OFFCURVE",
"233 420 OFFCURVE",
"192 396 CURVE",
"192 396 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01280 7 92 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 80 22 80 38 80 54 80 70 80 86 80 102 80 118 80 134 80 150 80 166 80 182 80 198 80 214 80 230 80 246 80 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01250 3 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012117 22 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012117 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 446;
}
);
leftKerningGroup = J;
note = J;
rightKerningGroup = J;
unicode = 004A;
},
{
glyphname = Jcircumflex;
lastChange = "2021-10-05 04:30:12 +0000";
layers = (
{
components = (
{
name = J;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 384, 343}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 446;
}
);
unicode = 0134;
},
{
glyphname = K;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{381, 0}";
},
{
name = top;
position = "{381, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"709 -53 OFFCURVE",
"713 -49 OFFCURVE",
"716 -40 CURVE SMOOTH",
"721 -21 OFFCURVE",
"724 -2 OFFCURVE",
"724 16 CURVE SMOOTH",
"724 84 OFFCURVE",
"686 140 OFFCURVE",
"609 185 CURVE SMOOTH",
"555 216 OFFCURVE",
"486 241 OFFCURVE",
"402 258 CURVE",
"478 290 OFFCURVE",
"542 327 OFFCURVE",
"594 369 CURVE SMOOTH",
"652 416 OFFCURVE",
"685 461 OFFCURVE",
"692 504 CURVE SMOOTH",
"693 510 LINE SMOOTH",
"693 515 OFFCURVE",
"692 517 OFFCURVE",
"689 517 CURVE SMOOTH",
"686 517 OFFCURVE",
"682 512 OFFCURVE",
"679 503 CURVE SMOOTH",
"655 431 OFFCURVE",
"517 329 OFFCURVE",
"362 265 CURVE",
"344 268 LINE",
"400 375 OFFCURVE",
"433 437 OFFCURVE",
"443 453 CURVE",
"446 456 OFFCURVE",
"447 460 OFFCURVE",
"447 464 CURVE SMOOTH",
"447 471 OFFCURVE",
"442 474 OFFCURVE",
"433 474 CURVE SMOOTH",
"414 474 OFFCURVE",
"399 466 OFFCURVE",
"388 451 CURVE",
"369 411 LINE",
"309 273 LINE",
"269 276 LINE",
"292 338 OFFCURVE",
"304 390 OFFCURVE",
"304 433 CURVE SMOOTH",
"304 472 OFFCURVE",
"295 502 OFFCURVE",
"277 524 CURVE SMOOTH",
"261 545 OFFCURVE",
"240 555 OFFCURVE",
"215 555 CURVE SMOOTH",
"184 555 OFFCURVE",
"157 540 OFFCURVE",
"134 511 CURVE SMOOTH",
"106 476 OFFCURVE",
"91 429 OFFCURVE",
"91 369 CURVE SMOOTH",
"91 339 OFFCURVE",
"96 307 OFFCURVE",
"106 272 CURVE",
"55 263 OFFCURVE",
"29 248 OFFCURVE",
"29 227 CURVE SMOOTH",
"29 206 OFFCURVE",
"60 189 OFFCURVE",
"103 186 CURVE",
"139 187 LINE",
"150 165 OFFCURVE",
"163 146 OFFCURVE",
"177 129 CURVE",
"158 105 OFFCURVE",
"137 84 OFFCURVE",
"114 65 CURVE",
"113 63 LINE",
"113 60 OFFCURVE",
"115 58 OFFCURVE",
"118 58 CURVE SMOOTH",
"121 58 OFFCURVE",
"132 68 OFFCURVE",
"151 87 CURVE SMOOTH",
"166 102 OFFCURVE",
"176 113 OFFCURVE",
"183 122 CURVE",
"192 111 OFFCURVE",
"201 102 OFFCURVE",
"211 94 CURVE",
"173 41 OFFCURVE",
"138 17 OFFCURVE",
"107 17 CURVE SMOOTH",
"71 17 OFFCURVE",
"42 44 OFFCURVE",
"42 74 CURVE SMOOTH",
"42 77 OFFCURVE",
"43 82 OFFCURVE",
"44 87 CURVE SMOOTH",
"45 92 OFFCURVE",
"46 95 OFFCURVE",
"46 97 CURVE SMOOTH",
"46 101 OFFCURVE",
"44 103 OFFCURVE",
"41 103 CURVE SMOOTH",
"35 103 OFFCURVE",
"31 100 OFFCURVE",
"30 93 CURVE SMOOTH",
"29 88 OFFCURVE",
"29 83 OFFCURVE",
"29 78 CURVE SMOOTH",
"29 30 OFFCURVE",
"65 -3 OFFCURVE",
"111 -3 CURVE SMOOTH",
"148 -3 OFFCURVE",
"188 24 OFFCURVE",
"231 79 CURVE",
"264 58 OFFCURVE",
"300 47 OFFCURVE",
"339 47 CURVE SMOOTH",
"368 47 OFFCURVE",
"387 54 OFFCURVE",
"397 68 CURVE SMOOTH",
"398 70 OFFCURVE",
"398 72 OFFCURVE",
"395 74 CURVE SMOOTH",
"393 75 OFFCURVE",
"391 75 OFFCURVE",
"390 74 CURVE SMOOTH",
"381 61 OFFCURVE",
"363 54 OFFCURVE",
"337 54 CURVE SMOOTH",
"300 54 OFFCURVE",
"266 65 OFFCURVE",
"235 86 CURVE",
"261 120 OFFCURVE",
"290 167 OFFCURVE",
"323 228 CURVE",
"345 236 LINE",
"443 218 OFFCURVE",
"524 190 OFFCURVE",
"589 153 CURVE SMOOTH",
"667 108 OFFCURVE",
"706 57 OFFCURVE",
"706 -1 CURVE SMOOTH",
"706 -14 OFFCURVE",
"704 -26 OFFCURVE",
"700 -39 CURVE",
"699 -46 LINE SMOOTH",
"699 -51 OFFCURVE",
"701 -53 OFFCURVE",
"704 -53 CURVE",
"704 -53 LINE"
);
},
{
closed = 1;
nodes = (
"81 210 OFFCURVE",
"71 215 OFFCURVE",
"71 226 CURVE SMOOTH",
"71 237 OFFCURVE",
"85 248 OFFCURVE",
"106 251 CURVE",
"111 253 LINE",
"116 238 OFFCURVE",
"122 223 OFFCURVE",
"128 209 CURVE",
"118 208 OFFCURVE",
"109 208 OFFCURVE",
"100 209 CURVE",
"100 209 LINE"
);
},
{
closed = 1;
nodes = (
"171 151 OFFCURVE",
"160 169 OFFCURVE",
"151 188 CURVE",
"173 190 OFFCURVE",
"197 194 OFFCURVE",
"222 199 CURVE",
"210 176 OFFCURVE",
"197 155 OFFCURVE",
"183 136 CURVE",
"183 136 LINE"
);
},
{
closed = 1;
nodes = (
"206 109 OFFCURVE",
"197 118 OFFCURVE",
"188 129 CURVE",
"205 151 OFFCURVE",
"221 175 OFFCURVE",
"236 202 CURVE",
"281 214 LINE",
"258 167 OFFCURVE",
"237 129 OFFCURVE",
"216 100 CURVE",
"216 100 LINE"
);
},
{
closed = 1;
nodes = (
"134 224 OFFCURVE",
"129 239 OFFCURVE",
"124 254 CURVE",
"140 256 OFFCURVE",
"159 256 OFFCURVE",
"179 256 CURVE SMOOTH",
"200 256 OFFCURVE",
"222 256 OFFCURVE",
"247 254 CURVE",
"243 244 OFFCURVE",
"239 234 OFFCURVE",
"234 225 CURVE",
"193 216 OFFCURVE",
"162 211 OFFCURVE",
"141 209 CURVE",
"141 209 LINE"
);
},
{
closed = 1;
nodes = (
"252 236 OFFCURVE",
"256 244 OFFCURVE",
"259 253 CURVE",
"277 252 OFFCURVE",
"286 249 OFFCURVE",
"286 244 CURVE SMOOTH",
"286 239 OFFCURVE",
"273 233 OFFCURVE",
"248 228 CURVE",
"248 228 LINE"
);
},
{
closed = 1;
nodes = (
"111 307 OFFCURVE",
"107 338 OFFCURVE",
"107 366 CURVE SMOOTH",
"107 425 OFFCURVE",
"120 470 OFFCURVE",
"144 504 CURVE SMOOTH",
"164 532 OFFCURVE",
"187 546 OFFCURVE",
"214 546 CURVE SMOOTH",
"235 546 OFFCURVE",
"252 537 OFFCURVE",
"266 518 CURVE SMOOTH",
"281 497 OFFCURVE",
"288 468 OFFCURVE",
"288 432 CURVE SMOOTH",
"288 390 OFFCURVE",
"277 339 OFFCURVE",
"256 278 CURVE",
"238 279 OFFCURVE",
"220 280 OFFCURVE",
"203 280 CURVE SMOOTH",
"173 280 OFFCURVE",
"145 278 OFFCURVE",
"119 274 CURVE",
"119 274 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01292 6 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 120 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 7 58 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01214 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 92 22 92 38 92 54 92 70 92 86 92 102 92 118 92 134 92 150 92 166 92 182 92 198 92 214 92 230 92 246 92 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 128 22 128 38 128 54 128 70 128 86 128 102 128 118 128 134 128 150 128 166 128 182 128 198 128 214 128 230 128 246 128 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012130 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012142 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012151 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012155 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012158 83 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012167 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012124 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012153 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012153 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012155 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012155 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012162 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012162 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0120 4 158 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01218 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 216 18 232 18 248 18 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01216 162 18 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 158 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012142 52 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012158 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 761;
}
);
leftKerningGroup = H;
note = K;
rightKerningGroup = K;
unicode = 004B;
},
{
glyphname = Kcommaaccent;
lastChange = "2021-10-05 04:30:22 +0000";
layers = (
{
components = (
{
name = K;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 312, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0136;
},
{
glyphname = L;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{438, -91}";
},
{
name = center;
position = "{351, 238}";
},
{
name = top;
position = "{643, 534}";
},
{
name = topright;
position = "{769, 541}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"653 -118 OFFCURVE",
"694 -90 OFFCURVE",
"694 -34 CURVE SMOOTH",
"694 -15 OFFCURVE",
"680 5 OFFCURVE",
"651 27 CURVE SMOOTH",
"650 28 OFFCURVE",
"648 29 OFFCURVE",
"646 29 CURVE SMOOTH",
"644 29 OFFCURVE",
"642 28 OFFCURVE",
"643 25 CURVE SMOOTH",
"644 20 LINE",
"651 12 OFFCURVE",
"657 3 OFFCURVE",
"664 -6 CURVE SMOOTH",
"672 -16 OFFCURVE",
"676 -26 OFFCURVE",
"676 -35 CURVE SMOOTH",
"676 -70 OFFCURVE",
"648 -88 OFFCURVE",
"593 -88 CURVE SMOOTH",
"536 -88 OFFCURVE",
"449 -62 OFFCURVE",
"331 -9 CURVE",
"362 11 OFFCURVE",
"403 75 OFFCURVE",
"428 140 CURVE",
"511 143 OFFCURVE",
"582 174 OFFCURVE",
"639 233 CURVE SMOOTH",
"698 294 OFFCURVE",
"728 369 OFFCURVE",
"728 459 CURVE SMOOTH",
"728 479 OFFCURVE",
"722 499 OFFCURVE",
"711 518 CURVE SMOOTH",
"697 539 OFFCURVE",
"681 549 OFFCURVE",
"662 549 CURVE SMOOTH",
"636 549 OFFCURVE",
"612 544 OFFCURVE",
"590 534 CURVE",
"580 539 OFFCURVE",
"568 541 OFFCURVE",
"554 541 CURVE SMOOTH",
"513 541 OFFCURVE",
"477 515 OFFCURVE",
"446 463 CURVE SMOOTH",
"426 428 OFFCURVE",
"407 378 OFFCURVE",
"389 314 CURVE SMOOTH",
"366 233 OFFCURVE",
"350 182 OFFCURVE",
"341 161 CURVE",
"296 172 OFFCURVE",
"262 193 OFFCURVE",
"238 226 CURVE SMOOTH",
"215 256 OFFCURVE",
"203 290 OFFCURVE",
"203 328 CURVE SMOOTH",
"203 358 OFFCURVE",
"210 386 OFFCURVE",
"225 412 CURVE SMOOTH",
"240 439 OFFCURVE",
"262 461 OFFCURVE",
"290 477 CURVE SMOOTH",
"292 478 OFFCURVE",
"293 480 OFFCURVE",
"293 482 CURVE SMOOTH",
"293 486 OFFCURVE",
"291 488 OFFCURVE",
"287 488 CURVE SMOOTH",
"284 488 LINE",
"220 452 OFFCURVE",
"183 386 OFFCURVE",
"183 319 CURVE SMOOTH",
"183 278 OFFCURVE",
"195 243 OFFCURVE",
"219 213 CURVE SMOOTH",
"247 180 OFFCURVE",
"286 159 OFFCURVE",
"336 148 CURVE",
"315 99 OFFCURVE",
"290 61 OFFCURVE",
"263 34 CURVE",
"256 39 OFFCURVE",
"231 59 OFFCURVE",
"186 94 CURVE SMOOTH",
"157 117 OFFCURVE",
"135 133 OFFCURVE",
"118 143 CURVE SMOOTH",
"96 155 OFFCURVE",
"77 161 OFFCURVE",
"60 161 CURVE SMOOTH",
"47 161 OFFCURVE",
"34 157 OFFCURVE",
"24 149 CURVE SMOOTH",
"4 134 OFFCURVE",
"-6 110 OFFCURVE",
"-6 76 CURVE SMOOTH",
"-6 46 OFFCURVE",
"2 21 OFFCURVE",
"18 0 CURVE SMOOTH",
"35 -22 OFFCURVE",
"59 -39 OFFCURVE",
"92 -50 CURVE SMOOTH",
"120 -60 OFFCURVE",
"150 -65 OFFCURVE",
"182 -65 CURVE SMOOTH",
"222 -65 OFFCURVE",
"265 -52 OFFCURVE",
"309 -24 CURVE",
"388 -65 OFFCURVE",
"430 -86 OFFCURVE",
"435 -88 CURVE SMOOTH",
"482 -108 OFFCURVE",
"527 -118 OFFCURVE",
"570 -118 CURVE",
"570 -118 LINE"
);
},
{
closed = 1;
nodes = (
"134 -44 OFFCURVE",
"108 -39 OFFCURVE",
"85 -29 CURVE SMOOTH",
"36 -8 OFFCURVE",
"11 40 OFFCURVE",
"11 73 CURVE SMOOTH",
"11 102 OFFCURVE",
"25 116 OFFCURVE",
"54 116 CURVE SMOOTH",
"76 116 OFFCURVE",
"108 103 OFFCURVE",
"149 76 CURVE SMOOTH",
"236 13 LINE",
"209 -4 OFFCURVE",
"179 -13 OFFCURVE",
"145 -13 CURVE SMOOTH",
"130 -13 OFFCURVE",
"115 -11 OFFCURVE",
"98 -8 CURVE",
"96 -7 OFFCURVE",
"95 -8 OFFCURVE",
"94 -9 CURVE SMOOTH",
"93 -10 OFFCURVE",
"93 -11 OFFCURVE",
"94 -13 CURVE",
"98 -15 LINE",
"115 -20 OFFCURVE",
"131 -22 OFFCURVE",
"148 -22 CURVE SMOOTH",
"182 -22 OFFCURVE",
"214 -12 OFFCURVE",
"245 8 CURVE",
"275 -13 LINE",
"242 -34 OFFCURVE",
"205 -44 OFFCURVE",
"163 -44 CURVE",
"163 -44 LINE"
);
},
{
closed = 1;
nodes = (
"294 12 OFFCURVE",
"283 19 OFFCURVE",
"272 28 CURVE",
"305 57 OFFCURVE",
"332 95 OFFCURVE",
"354 144 CURVE",
"366 142 OFFCURVE",
"378 141 OFFCURVE",
"391 141 CURVE",
"382 115 OFFCURVE",
"369 87 OFFCURVE",
"352 58 CURVE SMOOTH",
"332 25 OFFCURVE",
"316 7 OFFCURVE",
"305 5 CURVE",
"305 5 LINE"
);
},
{
closed = 1;
nodes = (
"395 153 LINE",
"383 154 OFFCURVE",
"371 155 OFFCURVE",
"359 156 CURVE",
"370 184 OFFCURVE",
"385 234 OFFCURVE",
"404 307 CURVE SMOOTH",
"421 372 OFFCURVE",
"439 421 OFFCURVE",
"456 455 CURVE SMOOTH",
"483 508 OFFCURVE",
"516 534 OFFCURVE",
"556 534 CURVE",
"565 533 OFFCURVE",
"573 532 OFFCURVE",
"581 529 CURVE",
"540 508 OFFCURVE",
"507 469 OFFCURVE",
"482 412 CURVE SMOOTH",
"472 388 OFFCURVE",
"457 346 OFFCURVE",
"438 285 CURVE SMOOTH",
"413 208 OFFCURVE",
"399 165 OFFCURVE",
"396 156 CURVE SMOOTH",
"395 153 LINE"
);
},
{
closed = 1;
nodes = (
"451 210 LINE SMOOTH",
"481 295 OFFCURVE",
"508 363 OFFCURVE",
"531 412 CURVE SMOOTH",
"551 456 OFFCURVE",
"576 490 OFFCURVE",
"606 513 CURVE",
"615 502 OFFCURVE",
"620 487 OFFCURVE",
"620 470 CURVE SMOOTH",
"620 448 OFFCURVE",
"613 426 OFFCURVE",
"599 404 CURVE SMOOTH",
"584 381 OFFCURVE",
"564 363 OFFCURVE",
"539 352 CURVE SMOOTH",
"537 351 OFFCURVE",
"537 349 OFFCURVE",
"538 347 CURVE SMOOTH",
"539 345 OFFCURVE",
"540 344 OFFCURVE",
"543 345 CURVE SMOOTH",
"570 356 OFFCURVE",
"592 373 OFFCURVE",
"609 396 CURVE SMOOTH",
"624 418 OFFCURVE",
"631 441 OFFCURVE",
"631 464 CURVE SMOOTH",
"631 486 OFFCURVE",
"625 504 OFFCURVE",
"613 518 CURVE",
"629 529 OFFCURVE",
"643 534 OFFCURVE",
"656 534 CURVE SMOOTH",
"686 534 OFFCURVE",
"701 508 OFFCURVE",
"701 456 CURVE SMOOTH",
"701 379 OFFCURVE",
"675 311 OFFCURVE",
"624 251 CURVE SMOOTH",
"571 190 OFFCURVE",
"506 157 OFFCURVE",
"431 153 CURVE",
"431 153 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012160 7 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 7 78 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01227 127 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012218 127 234 127 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 127 25 127 41 127 57 127 73 127 89 127 105 127 121 127 137 127 153 127 169 127 185 127 201 127 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01238 127 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01248 127 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01250 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012109 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\012134 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012138 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012150 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012154 64 27 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 160 22 160 38 160 54 160 70 160 86 160 102 160 118 160 134 160 150 160 166 160 182 160 198 160 214 160 230 160 246 160 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012168 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01236 4 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 1 111 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012165 4 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 701;
}
);
leftKerningGroup = H;
note = L;
rightKerningGroup = L;
unicode = 004C;
},
{
glyphname = LJ;
lastChange = "2021-10-05 03:28:54 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = J;
transform = "{1, 0, 0, 1, 701, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1147;
}
);
unicode = 01C7;
},
{
glyphname = Lacute;
lastChange = "2021-10-05 04:30:39 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 615, 364}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 0139;
},
{
glyphname = Lcaron;
lastChange = "2021-10-05 04:30:42 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = caroncomb.alt.case;
transform = "{1, 0, 0, 1, 758, 371}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 013D;
},
{
glyphname = Lcommaaccent;
lastChange = "2021-10-05 04:30:46 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 369, -91}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 013B;
},
{
glyphname = Ldot;
lastChange = "2021-10-05 04:30:53 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 455, -138}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 013F;
},
{
glyphname = Lj;
lastChange = "2021-10-05 03:28:54 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = j;
transform = "{1, 0, 0, 1, 701, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 856;
}
);
unicode = 01C8;
},
{
glyphname = Lslash;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = L;
},
{
name = hyphen;
transform = "{1.14005, 0.11982, -0.08662, 0.82412, 241, -24}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 701;
}
);
unicode = 0141;
},
{
glyphname = M;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"663 -141 OFFCURVE",
"687 -129 OFFCURVE",
"712 -106 CURVE SMOOTH",
"718 -100 OFFCURVE",
"721 -95 OFFCURVE",
"721 -92 CURVE SMOOTH",
"721 -90 OFFCURVE",
"720 -89 OFFCURVE",
"717 -89 CURVE SMOOTH",
"714 -89 OFFCURVE",
"711 -91 OFFCURVE",
"708 -94 CURVE SMOOTH",
"691 -112 OFFCURVE",
"676 -121 OFFCURVE",
"663 -121 CURVE SMOOTH",
"650 -121 OFFCURVE",
"643 -108 OFFCURVE",
"643 -83 CURVE SMOOTH",
"643 -30 OFFCURVE",
"662 37 OFFCURVE",
"702 118 CURVE SMOOTH",
"734 184 OFFCURVE",
"773 247 OFFCURVE",
"818 307 CURVE SMOOTH",
"878 386 OFFCURVE",
"908 441 OFFCURVE",
"908 474 CURVE SMOOTH",
"908 489 OFFCURVE",
"900 497 OFFCURVE",
"884 497 CURVE SMOOTH",
"871 497 OFFCURVE",
"851 491 OFFCURVE",
"824 479 CURVE SMOOTH",
"771 454 OFFCURVE",
"709 393 OFFCURVE",
"638 295 CURVE SMOOTH",
"583 218 OFFCURVE",
"540 148 OFFCURVE",
"510 83 CURVE",
"511 90 OFFCURVE",
"517 119 OFFCURVE",
"528 172 CURVE SMOOTH",
"538 223 OFFCURVE",
"545 262 OFFCURVE",
"548 289 CURVE SMOOTH",
"549 307 OFFCURVE",
"550 324 OFFCURVE",
"550 341 CURVE SMOOTH",
"550 380 OFFCURVE",
"546 410 OFFCURVE",
"537 433 CURVE SMOOTH",
"528 458 OFFCURVE",
"514 471 OFFCURVE",
"497 471 CURVE SMOOTH",
"465 471 OFFCURVE",
"425 431 OFFCURVE",
"376 350 CURVE SMOOTH",
"361 325 OFFCURVE",
"342 287 OFFCURVE",
"321 236 CURVE",
"326 267 OFFCURVE",
"329 297 OFFCURVE",
"329 325 CURVE SMOOTH",
"329 421 OFFCURVE",
"303 489 OFFCURVE",
"250 529 CURVE SMOOTH",
"226 548 OFFCURVE",
"201 557 OFFCURVE",
"176 557 CURVE SMOOTH",
"99 557 OFFCURVE",
"31 472 OFFCURVE",
"31 381 CURVE SMOOTH",
"31 358 OFFCURVE",
"35 336 OFFCURVE",
"44 315 CURVE SMOOTH",
"47 307 OFFCURVE",
"51 303 OFFCURVE",
"56 303 CURVE SMOOTH",
"59 303 OFFCURVE",
"61 306 OFFCURVE",
"61 311 CURVE SMOOTH",
"61 315 OFFCURVE",
"60 320 OFFCURVE",
"58 325 CURVE SMOOTH",
"53 338 OFFCURVE",
"50 352 OFFCURVE",
"50 369 CURVE SMOOTH",
"50 410 OFFCURVE",
"63 449 OFFCURVE",
"89 486 CURVE SMOOTH",
"116 524 OFFCURVE",
"146 543 OFFCURVE",
"179 543 CURVE SMOOTH",
"200 543 OFFCURVE",
"220 534 OFFCURVE",
"239 516 CURVE SMOOTH",
"278 479 OFFCURVE",
"297 425 OFFCURVE",
"297 354 CURVE SMOOTH",
"297 296 OFFCURVE",
"284 226 OFFCURVE",
"257 144 CURVE SMOOTH",
"245 107 OFFCURVE",
"232 73 OFFCURVE",
"218 43 CURVE",
"207 47 OFFCURVE",
"196 53 OFFCURVE",
"187 61 CURVE",
"238 173 OFFCURVE",
"264 276 OFFCURVE",
"265 370 CURVE SMOOTH",
"265 409 OFFCURVE",
"257 440 OFFCURVE",
"240 462 CURVE SMOOTH",
"225 483 OFFCURVE",
"206 493 OFFCURVE",
"183 493 CURVE SMOOTH",
"153 493 OFFCURVE",
"127 477 OFFCURVE",
"104 445 CURVE SMOOTH",
"79 410 OFFCURVE",
"67 362 OFFCURVE",
"67 303 CURVE SMOOTH",
"67 292 OFFCURVE",
"68 280 OFFCURVE",
"69 267 CURVE SMOOTH",
"72 230 OFFCURVE",
"83 192 OFFCURVE",
"101 153 CURVE SMOOTH",
"121 112 OFFCURVE",
"145 80 OFFCURVE",
"174 58 CURVE",
"158 23 OFFCURVE",
"143 -5 OFFCURVE",
"129 -28 CURVE",
"127 -30 OFFCURVE",
"128 -33 OFFCURVE",
"132 -33 CURVE SMOOTH",
"133 -33 OFFCURVE",
"134 -33 OFFCURVE",
"134 -32 CURVE",
"154 -1 OFFCURVE",
"170 27 OFFCURVE",
"183 52 CURVE",
"193 45 OFFCURVE",
"203 39 OFFCURVE",
"214 36 CURVE",
"185 -24 OFFCURVE",
"155 -59 OFFCURVE",
"125 -70 CURVE SMOOTH",
"121 -72 OFFCURVE",
"117 -73 OFFCURVE",
"113 -73 CURVE SMOOTH",
"101 -73 OFFCURVE",
"95 -68 OFFCURVE",
"95 -57 CURVE SMOOTH",
"96 -50 LINE SMOOTH",
"97 -44 OFFCURVE",
"95 -41 OFFCURVE",
"92 -41 CURVE SMOOTH",
"86 -41 OFFCURVE",
"83 -47 OFFCURVE",
"83 -59 CURVE SMOOTH",
"83 -84 OFFCURVE",
"96 -96 OFFCURVE",
"121 -96 CURVE SMOOTH",
"126 -96 OFFCURVE",
"131 -96 OFFCURVE",
"136 -95 CURVE SMOOTH",
"154 -92 OFFCURVE",
"174 -78 OFFCURVE",
"196 -53 CURVE SMOOTH",
"217 -31 OFFCURVE",
"236 -4 OFFCURVE",
"254 28 CURVE",
"297 27 OFFCURVE",
"353 50 OFFCURVE",
"366 86 CURVE",
"368 88 OFFCURVE",
"366 91 OFFCURVE",
"363 91 CURVE SMOOTH",
"361 91 OFFCURVE",
"360 90 OFFCURVE",
"359 89 CURVE",
"354 72 OFFCURVE",
"340 59 OFFCURVE",
"318 49 CURVE SMOOTH",
"297 39 OFFCURVE",
"277 34 OFFCURVE",
"258 35 CURVE",
"269 56 OFFCURVE",
"278 76 OFFCURVE",
"285 95 CURVE SMOOTH",
"310 167 OFFCURVE",
"340 237 OFFCURVE",
"373 304 CURVE SMOOTH",
"420 398 OFFCURVE",
"455 445 OFFCURVE",
"479 445 CURVE SMOOTH",
"502 445 OFFCURVE",
"513 401 OFFCURVE",
"513 312 CURVE SMOOTH",
"513 258 OFFCURVE",
"505 174 OFFCURVE",
"483 60 CURVE SMOOTH",
"482 55 OFFCURVE",
"481 51 OFFCURVE",
"481 48 CURVE SMOOTH",
"481 37 OFFCURVE",
"484 31 OFFCURVE",
"491 31 CURVE SMOOTH",
"502 31 OFFCURVE",
"513 44 OFFCURVE",
"523 69 CURVE SMOOTH",
"543 122 OFFCURVE",
"577 182 OFFCURVE",
"626 248 CURVE SMOOTH",
"668 305 OFFCURVE",
"712 356 OFFCURVE",
"758 401 CURVE SMOOTH",
"802 444 OFFCURVE",
"831 466 OFFCURVE",
"845 466 CURVE SMOOTH",
"849 466 OFFCURVE",
"851 463 OFFCURVE",
"851 458 CURVE SMOOTH",
"851 452 OFFCURVE",
"849 443 OFFCURVE",
"844 432 CURVE SMOOTH",
"836 415 OFFCURVE",
"812 373 OFFCURVE",
"771 304 CURVE SMOOTH",
"726 229 OFFCURVE",
"693 169 OFFCURVE",
"671 125 CURVE SMOOTH",
"635 55 OFFCURVE",
"613 -1 OFFCURVE",
"605 -44 CURVE SMOOTH",
"602 -59 OFFCURVE",
"601 -72 OFFCURVE",
"601 -85 CURVE SMOOTH",
"601 -122 OFFCURVE",
"613 -141 OFFCURVE",
"638 -141 CURVE",
"638 -141 LINE"
);
},
{
closed = 1;
nodes = (
"152 90 OFFCURVE",
"130 122 OFFCURVE",
"113 163 CURVE SMOOTH",
"97 200 OFFCURVE",
"88 236 OFFCURVE",
"85 272 CURVE SMOOTH",
"84 285 OFFCURVE",
"83 298 OFFCURVE",
"83 311 CURVE SMOOTH",
"83 365 OFFCURVE",
"93 408 OFFCURVE",
"114 441 CURVE SMOOTH",
"132 470 OFFCURVE",
"153 484 OFFCURVE",
"178 484 CURVE SMOOTH",
"198 484 OFFCURVE",
"215 474 OFFCURVE",
"228 455 CURVE SMOOTH",
"242 434 OFFCURVE",
"249 404 OFFCURVE",
"249 366 CURVE SMOOTH",
"248 269 OFFCURVE",
"225 170 OFFCURVE",
"179 67 CURVE",
"179 67 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01277 7 87 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 7 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01294 8 69 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 8 164 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012124 8 138 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 87 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01245 87 124 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 61 22 61 38 61 54 61 70 61 86 61 102 61 118 61 134 61 150 61 166 61 182 61 198 61 214 61 230 61 246 61 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 77 22 77 38 77 54 77 70 77 86 77 102 77 118 77 134 77 150 77 166 77 182 77 198 77 214 77 230 77 246 77 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 102 94 118 94 134 94 150 94 166 94 182 94 198 94 214 94 230 94 246 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 94 22 94 38 94 54 94 70 94 86 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 94 117 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01296 69 94 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 164 122 164 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 164 25 164 41 164 57 164 73 164 89 164 105 164 121 164 137 164 153 164 169 164 185 164 201 164 217 164 233 164 249 164 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 164 25 164 41 164 57 164 73 164 89 164 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012164 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 138 122 138 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 105 138 121 138 137 138 153 138 169 138 185 138 201 138 217 138 233 138 249 138 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 138 25 138 41 138 57 138 73 138 89 138 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012172 2 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012181 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01290 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01290 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012126 4 136 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01233 4 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012100 4 166 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 819;
}
);
leftKerningGroup = M;
note = M;
rightKerningGroup = M;
unicode = 004D;
},
{
glyphname = N;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{489, 0}";
},
{
name = top;
position = "{745, 467}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"650 -140 OFFCURVE",
"662 -138 OFFCURVE",
"675 -133 CURVE SMOOTH",
"690 -128 OFFCURVE",
"703 -120 OFFCURVE",
"713 -110 CURVE SMOOTH",
"720 -103 OFFCURVE",
"723 -96 OFFCURVE",
"723 -89 CURVE SMOOTH",
"723 -86 OFFCURVE",
"722 -86 OFFCURVE",
"719 -87 CURVE",
"719 -95 OFFCURVE",
"684 -114 OFFCURVE",
"669 -114 CURVE SMOOTH",
"646 -114 OFFCURVE",
"634 -95 OFFCURVE",
"634 -58 CURVE SMOOTH",
"634 -17 OFFCURVE",
"647 44 OFFCURVE",
"674 123 CURVE SMOOTH",
"690 170 OFFCURVE",
"722 244 OFFCURVE",
"771 344 CURVE SMOOTH",
"786 375 OFFCURVE",
"794 400 OFFCURVE",
"794 421 CURVE SMOOTH",
"794 443 OFFCURVE",
"784 454 OFFCURVE",
"765 454 CURVE SMOOTH",
"758 454 OFFCURVE",
"749 452 OFFCURVE",
"739 449 CURVE SMOOTH",
"722 444 OFFCURVE",
"697 430 OFFCURVE",
"666 408 CURVE SMOOTH",
"592 355 OFFCURVE",
"506 270 OFFCURVE",
"408 154 CURVE",
"442 258 OFFCURVE",
"459 337 OFFCURVE",
"459 390 CURVE SMOOTH",
"459 469 OFFCURVE",
"428 512 OFFCURVE",
"367 520 CURVE",
"350 548 OFFCURVE",
"326 562 OFFCURVE",
"297 562 CURVE SMOOTH",
"256 562 OFFCURVE",
"212 530 OFFCURVE",
"188 473 CURVE",
"138 448 OFFCURVE",
"98 418 OFFCURVE",
"68 384 CURVE SMOOTH",
"33 344 OFFCURVE",
"15 303 OFFCURVE",
"15 261 CURVE SMOOTH",
"15 220 OFFCURVE",
"36 196 OFFCURVE",
"71 196 CURVE SMOOTH",
"80 196 OFFCURVE",
"89 198 OFFCURVE",
"100 201 CURVE SMOOTH",
"105 203 OFFCURVE",
"108 206 OFFCURVE",
"108 210 CURVE SMOOTH",
"108 213 OFFCURVE",
"106 214 OFFCURVE",
"102 214 CURVE SMOOTH",
"100 214 OFFCURVE",
"97 214 OFFCURVE",
"93 213 CURVE SMOOTH",
"89 212 OFFCURVE",
"86 211 OFFCURVE",
"84 211 CURVE SMOOTH",
"63 211 OFFCURVE",
"45 230 OFFCURVE",
"45 254 CURVE SMOOTH",
"45 282 OFFCURVE",
"58 313 OFFCURVE",
"83 348 CURVE SMOOTH",
"107 380 OFFCURVE",
"138 410 OFFCURVE",
"175 438 CURVE",
"169 413 OFFCURVE",
"166 386 OFFCURVE",
"166 357 CURVE SMOOTH",
"166 340 OFFCURVE",
"167 323 OFFCURVE",
"169 305 CURVE SMOOTH",
"182 201 OFFCURVE",
"224 132 OFFCURVE",
"296 97 CURVE",
"293 91 LINE SMOOTH",
"273 50 OFFCURVE",
"259 14 OFFCURVE",
"242 -14 CURVE",
"241 -17 OFFCURVE",
"241 -19 OFFCURVE",
"243 -20 CURVE SMOOTH",
"246 -21 OFFCURVE",
"248 -21 OFFCURVE",
"249 -18 CURVE",
"264 8 OFFCURVE",
"278 41 OFFCURVE",
"296 79 CURVE SMOOTH",
"303 94 LINE",
"314 89 OFFCURVE",
"325 86 OFFCURVE",
"337 83 CURVE",
"323 49 OFFCURVE",
"313 24 OFFCURVE",
"308 9 CURVE SMOOTH",
"304 0 OFFCURVE",
"302 -7 OFFCURVE",
"302 -13 CURVE SMOOTH",
"302 -18 OFFCURVE",
"304 -21 OFFCURVE",
"309 -21 CURVE SMOOTH",
"314 -21 OFFCURVE",
"320 -18 OFFCURVE",
"329 -12 CURVE SMOOTH",
"337 -7 OFFCURVE",
"342 -2 OFFCURVE",
"344 1 CURVE SMOOTH",
"363 36 OFFCURVE",
"377 62 OFFCURVE",
"386 81 CURVE",
"419 84 OFFCURVE",
"449 95 OFFCURVE",
"476 115 CURVE SMOOTH",
"503 137 OFFCURVE",
"523 165 OFFCURVE",
"534 199 CURVE",
"534 202 OFFCURVE",
"533 204 OFFCURVE",
"530 204 CURVE SMOOTH",
"528 204 OFFCURVE",
"527 203 OFFCURVE",
"526 201 CURVE SMOOTH",
"507 142 OFFCURVE",
"454 100 OFFCURVE",
"393 92 CURVE",
"417 130 OFFCURVE",
"449 170 OFFCURVE",
"489 213 CURVE SMOOTH",
"512 237 OFFCURVE",
"548 273 OFFCURVE",
"599 321 CURVE SMOOTH",
"636 356 OFFCURVE",
"673 385 OFFCURVE",
"710 408 CURVE SMOOTH",
"721 415 OFFCURVE",
"730 418 OFFCURVE",
"737 418 CURVE SMOOTH",
"745 418 OFFCURVE",
"749 413 OFFCURVE",
"749 402 CURVE SMOOTH",
"749 396 OFFCURVE",
"747 388 OFFCURVE",
"744 377 CURVE",
"707 276 OFFCURVE",
"676 195 OFFCURVE",
"653 134 CURVE SMOOTH",
"621 47 LINE SMOOTH",
"603 -1 OFFCURVE",
"598 -41 OFFCURVE",
"598 -71 CURVE SMOOTH",
"598 -112 OFFCURVE",
"612 -134 OFFCURVE",
"641 -139 CURVE",
"641 -139 LINE"
);
},
{
closed = 1;
nodes = (
"234 139 OFFCURVE",
"196 207 OFFCURVE",
"183 311 CURVE SMOOTH",
"180 329 OFFCURVE",
"179 347 OFFCURVE",
"179 364 CURVE SMOOTH",
"179 395 OFFCURVE",
"183 423 OFFCURVE",
"190 448 CURVE",
"249 488 OFFCURVE",
"300 508 OFFCURVE",
"344 508 CURVE SMOOTH",
"349 508 OFFCURVE",
"355 507 OFFCURVE",
"360 506 CURVE",
"370 485 OFFCURVE",
"374 457 OFFCURVE",
"374 423 CURVE SMOOTH",
"374 339 OFFCURVE",
"349 233 OFFCURVE",
"299 107 CURVE",
"299 107 LINE"
);
},
{
closed = 1;
nodes = (
"341 93 LINE",
"329 95 OFFCURVE",
"317 98 OFFCURVE",
"306 103 CURVE",
"361 239 OFFCURVE",
"388 347 OFFCURVE",
"388 428 CURVE SMOOTH",
"388 457 OFFCURVE",
"384 482 OFFCURVE",
"375 503 CURVE",
"410 493 OFFCURVE",
"428 462 OFFCURVE",
"428 411 CURVE SMOOTH",
"428 351 OFFCURVE",
"410 263 OFFCURVE",
"364 150 CURVE SMOOTH",
"341 93 LINE"
);
},
{
closed = 1;
nodes = (
"224 529 OFFCURVE",
"260 556 OFFCURVE",
"293 556 CURVE SMOOTH",
"317 556 OFFCURVE",
"337 544 OFFCURVE",
"352 521 CURVE",
"345 521 LINE SMOOTH",
"306 521 OFFCURVE",
"258 508 OFFCURVE",
"201 481 CURVE",
"201 481 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012117 8 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 6 111 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 6 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012143 8 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 8 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012153 8 62 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0124 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 15 22 15 38 15 54 15 70 15 86 15 102 15 118 15 134 15 150 15 166 15 182 15 198 15 214 15 230 15 246 15 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 25 122 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01227 21 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 62 122 62 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 105 62 121 62 137 62 153 62 169 62 185 62 201 62 217 62 233 62 249 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 62 25 62 41 62 57 62 73 62 89 62 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01272 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012109 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012113 111 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 117 22 117 38 117 54 117 70 117 86 117 102 117 118 117 134 117 150 117 166 117 182 117 198 117 214 117 230 117 246 117 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 117 22 117 38 117 54 117 70 117 86 117 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 117 117 117 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012145 132 153 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012153 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012156 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012139 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 11 233 11 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 11 24 11 40 11 56 11 72 11 88 11 104 11 120 11 136 11 152 11 168 11 184 11 200 11 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0122 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 139 11 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 761;
}
);
leftKerningGroup = H;
note = N;
rightKerningGroup = H;
unicode = 004E;
},
{
glyphname = NJ;
lastChange = "2021-10-05 03:28:54 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = J;
transform = "{1, 0, 0, 1, 761, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1207;
}
);
unicode = 01CA;
},
{
glyphname = Nacute;
lastChange = "2021-10-05 04:42:32 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 717, 297}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0143;
},
{
glyphname = Ncaron;
lastChange = "2021-10-05 04:42:32 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 717, 297}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0147;
},
{
glyphname = Ncommaaccent;
lastChange = "2021-10-05 04:31:19 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 420, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
unicode = 0145;
},
{
glyphname = Eng;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"430 -238 OFFCURVE",
"439 -237 OFFCURVE",
"448 -235 CURVE SMOOTH",
"584 -202 OFFCURVE",
"648 -11 OFFCURVE",
"719 187 CURVE SMOOTH",
"754 286 OFFCURVE",
"794 388 OFFCURVE",
"794 421 CURVE SMOOTH",
"794 443 OFFCURVE",
"784 454 OFFCURVE",
"765 454 CURVE SMOOTH",
"758 454 OFFCURVE",
"749 452 OFFCURVE",
"739 449 CURVE SMOOTH",
"722 444 OFFCURVE",
"697 430 OFFCURVE",
"666 408 CURVE SMOOTH",
"592 355 OFFCURVE",
"506 270 OFFCURVE",
"408 154 CURVE",
"442 258 OFFCURVE",
"459 337 OFFCURVE",
"459 390 CURVE SMOOTH",
"459 469 OFFCURVE",
"428 512 OFFCURVE",
"367 520 CURVE",
"350 548 OFFCURVE",
"326 562 OFFCURVE",
"297 562 CURVE SMOOTH",
"256 562 OFFCURVE",
"212 530 OFFCURVE",
"188 473 CURVE",
"138 448 OFFCURVE",
"98 418 OFFCURVE",
"68 384 CURVE SMOOTH",
"33 344 OFFCURVE",
"15 303 OFFCURVE",
"15 261 CURVE SMOOTH",
"15 220 OFFCURVE",
"36 196 OFFCURVE",
"71 196 CURVE SMOOTH",
"80 196 OFFCURVE",
"89 198 OFFCURVE",
"100 201 CURVE SMOOTH",
"105 203 OFFCURVE",
"108 206 OFFCURVE",
"108 210 CURVE SMOOTH",
"108 213 OFFCURVE",
"106 214 OFFCURVE",
"102 214 CURVE SMOOTH",
"100 214 OFFCURVE",
"97 214 OFFCURVE",
"93 213 CURVE SMOOTH",
"89 212 OFFCURVE",
"86 211 OFFCURVE",
"84 211 CURVE SMOOTH",
"63 211 OFFCURVE",
"45 230 OFFCURVE",
"45 254 CURVE SMOOTH",
"45 282 OFFCURVE",
"58 313 OFFCURVE",
"83 348 CURVE SMOOTH",
"107 380 OFFCURVE",
"138 410 OFFCURVE",
"175 438 CURVE",
"169 413 OFFCURVE",
"166 386 OFFCURVE",
"166 357 CURVE SMOOTH",
"166 340 OFFCURVE",
"167 323 OFFCURVE",
"169 305 CURVE SMOOTH",
"182 201 OFFCURVE",
"224 132 OFFCURVE",
"296 97 CURVE",
"293 91 LINE SMOOTH",
"273 50 OFFCURVE",
"259 14 OFFCURVE",
"242 -14 CURVE",
"241 -17 OFFCURVE",
"241 -19 OFFCURVE",
"243 -20 CURVE SMOOTH",
"246 -21 OFFCURVE",
"248 -21 OFFCURVE",
"249 -18 CURVE",
"264 8 OFFCURVE",
"278 41 OFFCURVE",
"296 79 CURVE SMOOTH",
"303 94 LINE",
"314 89 OFFCURVE",
"325 86 OFFCURVE",
"337 83 CURVE",
"323 49 OFFCURVE",
"313 24 OFFCURVE",
"308 9 CURVE SMOOTH",
"304 0 OFFCURVE",
"302 -7 OFFCURVE",
"302 -13 CURVE SMOOTH",
"302 -18 OFFCURVE",
"304 -21 OFFCURVE",
"309 -21 CURVE SMOOTH",
"314 -21 OFFCURVE",
"320 -18 OFFCURVE",
"329 -12 CURVE SMOOTH",
"337 -7 OFFCURVE",
"342 -2 OFFCURVE",
"344 1 CURVE SMOOTH",
"363 36 OFFCURVE",
"377 62 OFFCURVE",
"386 81 CURVE",
"419 84 OFFCURVE",
"449 95 OFFCURVE",
"476 115 CURVE SMOOTH",
"503 137 OFFCURVE",
"523 165 OFFCURVE",
"534 199 CURVE",
"534 203 OFFCURVE",
"533 204 OFFCURVE",
"530 204 CURVE SMOOTH",
"528 204 OFFCURVE",
"527 203 OFFCURVE",
"526 201 CURVE SMOOTH",
"507 142 OFFCURVE",
"454 100 OFFCURVE",
"393 92 CURVE",
"417 130 OFFCURVE",
"449 170 OFFCURVE",
"489 213 CURVE SMOOTH",
"512 237 OFFCURVE",
"548 273 OFFCURVE",
"599 321 CURVE SMOOTH",
"636 356 OFFCURVE",
"673 385 OFFCURVE",
"710 408 CURVE SMOOTH",
"721 415 OFFCURVE",
"730 418 OFFCURVE",
"737 418 CURVE SMOOTH",
"745 418 OFFCURVE",
"749 413 OFFCURVE",
"749 402 CURVE SMOOTH",
"749 380 OFFCURVE",
"703 246 OFFCURVE",
"692 217 CURVE SMOOTH",
"627 38 OFFCURVE",
"557 -184 OFFCURVE",
"448 -220 CURVE SMOOTH",
"442 -222 OFFCURVE",
"435 -222 OFFCURVE",
"429 -222 CURVE SMOOTH",
"395 -222 OFFCURVE",
"355 -203 OFFCURVE",
"355 -154 CURVE SMOOTH",
"355 -120 OFFCURVE",
"373 -97 OFFCURVE",
"382 -90 CURVE",
"385 -90 OFFCURVE",
"380 -86 OFFCURVE",
"375 -87 CURVE SMOOTH",
"367 -88 OFFCURVE",
"349 -106 OFFCURVE",
"344 -131 CURVE SMOOTH",
"342 -141 OFFCURVE",
"341 -150 OFFCURVE",
"341 -158 CURVE SMOOTH",
"341 -207 OFFCURVE",
"376 -238 OFFCURVE",
"422 -238 CURVE",
"422 -238 LINE"
);
},
{
closed = 1;
nodes = (
"234 139 OFFCURVE",
"196 207 OFFCURVE",
"183 311 CURVE SMOOTH",
"180 329 OFFCURVE",
"179 347 OFFCURVE",
"179 364 CURVE SMOOTH",
"179 395 OFFCURVE",
"183 423 OFFCURVE",
"190 448 CURVE",
"249 488 OFFCURVE",
"300 508 OFFCURVE",
"344 508 CURVE SMOOTH",
"349 508 OFFCURVE",
"355 507 OFFCURVE",
"360 506 CURVE",
"370 484 OFFCURVE",
"374 456 OFFCURVE",
"374 422 CURVE SMOOTH",
"374 337 OFFCURVE",
"349 233 OFFCURVE",
"299 107 CURVE",
"299 107 LINE"
);
},
{
closed = 1;
nodes = (
"341 93 LINE",
"329 95 OFFCURVE",
"317 98 OFFCURVE",
"306 103 CURVE",
"361 239 OFFCURVE",
"388 347 OFFCURVE",
"388 428 CURVE SMOOTH",
"388 457 OFFCURVE",
"384 482 OFFCURVE",
"375 503 CURVE",
"410 493 OFFCURVE",
"428 462 OFFCURVE",
"428 411 CURVE SMOOTH",
"428 351 OFFCURVE",
"410 263 OFFCURVE",
"364 150 CURVE SMOOTH",
"341 93 LINE"
);
},
{
closed = 1;
nodes = (
"224 529 OFFCURVE",
"260 556 OFFCURVE",
"293 556 CURVE SMOOTH",
"317 556 OFFCURVE",
"337 544 OFFCURVE",
"352 521 CURVE",
"345 521 LINE SMOOTH",
"306 521 OFFCURVE",
"258 508 OFFCURVE",
"201 481 CURVE",
"201 481 LINE"
);
}
);
width = 761;
}
);
unicode = 014A;
},
{
glyphname = Nj;
lastChange = "2021-10-05 03:28:54 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = j;
transform = "{1, 0, 0, 1, 761, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 01CB;
},
{
glyphname = Ntilde;
lastChange = "2021-10-05 04:41:26 +0000";
layers = (
{
components = (
{
name = N;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 673, 297}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 761;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = O;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{172, -20}";
},
{
name = center;
position = "{382, 238}";
},
{
name = ogonek;
position = "{202, -15}";
},
{
name = top;
position = "{653, 504}";
},
{
name = topleft;
position = "{20, 475}";
},
{
name = topright;
position = "{660, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"311 -26 OFFCURVE",
"397 -7 OFFCURVE",
"482 30 CURVE SMOOTH",
"573 69 OFFCURVE",
"643 122 OFFCURVE",
"694 188 CURVE SMOOTH",
"738 245 OFFCURVE",
"760 298 OFFCURVE",
"760 347 CURVE SMOOTH",
"760 368 OFFCURVE",
"756 388 OFFCURVE",
"748 408 CURVE SMOOTH",
"723 471 OFFCURVE",
"662 512 OFFCURVE",
"566 529 CURVE",
"561 559 OFFCURVE",
"549 582 OFFCURVE",
"529 598 CURVE SMOOTH",
"510 612 OFFCURVE",
"485 619 OFFCURVE",
"456 619 CURVE SMOOTH",
"416 619 OFFCURVE",
"376 607 OFFCURVE",
"336 582 CURVE SMOOTH",
"298 559 OFFCURVE",
"267 529 OFFCURVE",
"243 494 CURVE",
"178 469 OFFCURVE",
"127 438 OFFCURVE",
"89 400 CURVE SMOOTH",
"47 358 OFFCURVE",
"26 312 OFFCURVE",
"26 263 CURVE SMOOTH",
"26 220 OFFCURVE",
"54 182 OFFCURVE",
"91 165 CURVE",
"78 136 OFFCURVE",
"72 110 OFFCURVE",
"72 85 CURVE SMOOTH",
"72 51 OFFCURVE",
"84 25 OFFCURVE",
"108 6 CURVE SMOOTH",
"135 -15 OFFCURVE",
"174 -26 OFFCURVE",
"225 -26 CURVE",
"225 -26 LINE"
);
},
{
closed = 1;
nodes = (
"200 159 OFFCURVE",
"171 163 OFFCURVE",
"141 171 CURVE",
"154 202 OFFCURVE",
"173 232 OFFCURVE",
"198 261 CURVE",
"208 222 OFFCURVE",
"228 188 OFFCURVE",
"258 161 CURVE",
"248 160 OFFCURVE",
"238 159 OFFCURVE",
"228 159 CURVE",
"228 159 LINE"
);
},
{
closed = 1;
nodes = (
"70 198 OFFCURVE",
"49 230 OFFCURVE",
"49 265 CURVE SMOOTH",
"49 298 OFFCURVE",
"65 332 OFFCURVE",
"97 365 CURVE SMOOTH",
"126 396 OFFCURVE",
"166 424 OFFCURVE",
"217 449 CURVE",
"199 409 OFFCURVE",
"190 367 OFFCURVE",
"190 322 CURVE SMOOTH",
"190 313 OFFCURVE",
"190 304 OFFCURVE",
"191 296 CURVE",
"152 261 OFFCURVE",
"122 224 OFFCURVE",
"101 185 CURVE",
"101 185 LINE"
);
},
{
closed = 1;
nodes = (
"157 -6 OFFCURVE",
"119 29 OFFCURVE",
"119 89 CURVE SMOOTH",
"119 109 OFFCURVE",
"124 131 OFFCURVE",
"133 154 CURVE",
"164 145 OFFCURVE",
"194 141 OFFCURVE",
"224 141 CURVE SMOOTH",
"242 141 OFFCURVE",
"259 142 OFFCURVE",
"276 145 CURVE",
"318 114 OFFCURVE",
"366 99 OFFCURVE",
"419 99 CURVE SMOOTH",
"468 99 OFFCURVE",
"511 112 OFFCURVE",
"546 138 CURVE SMOOTH",
"547 139 OFFCURVE",
"548 141 OFFCURVE",
"548 143 CURVE",
"547 144 OFFCURVE",
"545 145 OFFCURVE",
"544 145 CURVE SMOOTH",
"541 144 LINE",
"507 119 OFFCURVE",
"467 106 OFFCURVE",
"421 106 CURVE SMOOTH",
"372 106 OFFCURVE",
"328 120 OFFCURVE",
"289 148 CURVE",
"359 164 OFFCURVE",
"420 203 OFFCURVE",
"471 265 CURVE SMOOTH",
"518 322 OFFCURVE",
"548 388 OFFCURVE",
"563 461 CURVE SMOOTH",
"566 478 OFFCURVE",
"568 493 OFFCURVE",
"567 508 CURVE",
"616 499 OFFCURVE",
"654 482 OFFCURVE",
"682 458 CURVE SMOOTH",
"711 432 OFFCURVE",
"725 400 OFFCURVE",
"725 363 CURVE SMOOTH",
"725 318 OFFCURVE",
"705 269 OFFCURVE",
"664 216 CURVE SMOOTH",
"549 68 OFFCURVE",
"403 -6 OFFCURVE",
"224 -6 CURVE",
"224 -6 LINE"
);
},
{
closed = 1;
nodes = (
"239 192 OFFCURVE",
"218 229 OFFCURVE",
"209 274 CURVE",
"240 310 OFFCURVE",
"276 341 OFFCURVE",
"317 366 CURVE SMOOTH",
"355 390 OFFCURVE",
"390 405 OFFCURVE",
"423 411 CURVE SMOOTH",
"428 412 OFFCURVE",
"430 415 OFFCURVE",
"430 418 CURVE SMOOTH",
"430 421 OFFCURVE",
"427 422 OFFCURVE",
"421 421 CURVE SMOOTH",
"391 416 OFFCURVE",
"357 403 OFFCURVE",
"318 383 CURVE SMOOTH",
"278 362 OFFCURVE",
"240 337 OFFCURVE",
"204 307 CURVE",
"204 322 LINE SMOOTH",
"204 370 OFFCURVE",
"214 415 OFFCURVE",
"235 457 CURVE",
"302 488 OFFCURVE",
"372 506 OFFCURVE",
"443 513 CURVE SMOOTH",
"459 514 OFFCURVE",
"474 515 OFFCURVE",
"489 515 CURVE SMOOTH",
"510 515 OFFCURVE",
"531 514 OFFCURVE",
"550 511 CURVE",
"551 495 OFFCURVE",
"549 478 OFFCURVE",
"546 461 CURVE SMOOTH",
"533 394 OFFCURVE",
"504 332 OFFCURVE",
"459 277 CURVE SMOOTH",
"406 212 OFFCURVE",
"344 174 OFFCURVE",
"272 163 CURVE",
"272 163 LINE"
);
},
{
closed = 1;
nodes = (
"299 550 OFFCURVE",
"344 584 OFFCURVE",
"397 602 CURVE SMOOTH",
"420 609 OFFCURVE",
"440 613 OFFCURVE",
"458 613 CURVE SMOOTH",
"510 613 OFFCURVE",
"540 586 OFFCURVE",
"548 532 CURVE",
"526 535 OFFCURVE",
"502 537 OFFCURVE",
"477 537 CURVE SMOOTH",
"467 537 OFFCURVE",
"456 537 OFFCURVE",
"445 536 CURVE SMOOTH",
"383 533 OFFCURVE",
"322 522 OFFCURVE",
"262 501 CURVE",
"262 501 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01251 5 25 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012120 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 6 58 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 66 22 66 38 66 54 66 70 66 86 66 102 66 118 66 134 66 150 66 166 66 182 66 198 66 214 66 230 66 246 66 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01239 58 66 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 102 51 118 51 134 51 150 51 166 51 182 51 198 51 214 51 230 51 246 51 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 51 22 51 38 51 54 51 70 51 86 51 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 51 117 51 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 120 117 120 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0124 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01231 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012123 4 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 3 116 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012100 116 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012116 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 763;
}
);
leftKerningGroup = O;
note = O;
rightKerningGroup = O;
unicode = 004F;
},
{
glyphname = Oacute;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 625, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Obreve;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 616, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 014E;
},
{
glyphname = Ocircumflex;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Ocircumflexacute;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_acutecomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED0;
},
{
glyphname = Ocircumflexdotbelow;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 130, -20}";
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED8;
},
{
glyphname = Ocircumflexgrave;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_gravecomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED2;
},
{
glyphname = Ocircumflexhookabove;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_hookabovecomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED4;
},
{
glyphname = Ocircumflextilde;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = circumflexcomb_tildecomb.case;
transform = "{1, 0, 0, 1, 577, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ED6;
},
{
glyphname = Odblgrave;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 543, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 020C;
},
{
glyphname = Odieresis;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 609, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Odieresismacron;
lastChange = "2021-10-05 04:48:31 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 609, 334}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 596, 388}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 022A;
},
{
glyphname = Odotaccentmacron;
lastChange = "2021-10-05 05:19:14 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 650, 334}";
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 609, 394}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 0230;
},
{
glyphname = Odotbelow;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 130, -20}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ECC;
},
{
glyphname = Ograve;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 576, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Ohookabove;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 628, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1ECE;
},
{
glyphname = Ohorn;
lastChange = "2021-10-05 04:44:34 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 700, 309}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 01A0;
},
{
glyphname = Ohornacute;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 625, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDA;
},
{
glyphname = Ohorndotbelow;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 130, -20}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EE2;
},
{
glyphname = Ohorngrave;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 576, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDC;
},
{
glyphname = Ohornhookabove;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 628, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EDE;
},
{
glyphname = Ohorntilde;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 581, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 1EE0;
},
{
glyphname = Ohungarumlaut;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 623, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 0150;
},
{
glyphname = Oinvertedbreve;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 597, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 020E;
},
{
glyphname = Omacron;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 585, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 014C;
},
{
glyphname = Oogonek;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 112, -19}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 01EA;
},
{
glyphname = Oslash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{347, 0}";
},
{
name = top;
position = "{556, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"112 -125 OFFCURVE",
"116 -124 OFFCURVE",
"121 -121 CURVE SMOOTH",
"137 -110 OFFCURVE",
"153 -97 OFFCURVE",
"170 -80 CURVE",
"179 -80 LINE SMOOTH",
"256 -80 OFFCURVE",
"332 -63 OFFCURVE",
"409 -29 CURVE SMOOTH",
"461 -9 OFFCURVE",
"570 64 OFFCURVE",
"599 112 CURVE SMOOTH",
"635 167 OFFCURVE",
"659 211 OFFCURVE",
"659 258 CURVE SMOOTH",
"659 308 OFFCURVE",
"636 348 OFFCURVE",
"591 379 CURVE SMOOTH",
"584 383 OFFCURVE",
"577 387 OFFCURVE",
"569 391 CURVE",
"602 420 OFFCURVE",
"631 437 OFFCURVE",
"658 441 CURVE",
"663 441 OFFCURVE",
"669 439 OFFCURVE",
"675 436 CURVE SMOOTH",
"681 433 OFFCURVE",
"685 431 OFFCURVE",
"688 431 CURVE SMOOTH",
"692 431 OFFCURVE",
"694 433 OFFCURVE",
"694 436 CURVE SMOOTH",
"694 442 OFFCURVE",
"690 447 OFFCURVE",
"683 451 CURVE SMOOTH",
"671 458 OFFCURVE",
"658 461 OFFCURVE",
"643 461 CURVE SMOOTH",
"603 461 OFFCURVE",
"567 440 OFFCURVE",
"531 408 CURVE",
"516 412 OFFCURVE",
"501 416 OFFCURVE",
"484 419 CURVE",
"481 443 OFFCURVE",
"472 462 OFFCURVE",
"457 475 CURVE SMOOTH",
"439 492 OFFCURVE",
"415 500 OFFCURVE",
"386 500 CURVE SMOOTH",
"321 500 OFFCURVE",
"265 472 OFFCURVE",
"217 415 CURVE",
"208 406 OFFCURVE",
"201 396 OFFCURVE",
"194 386 CURVE",
"145 368 OFFCURVE",
"105 346 OFFCURVE",
"74 320 CURVE SMOOTH",
"25 279 OFFCURVE",
"0 232 OFFCURVE",
"0 179 CURVE SMOOTH",
"0 142 OFFCURVE",
"25 107 OFFCURVE",
"58 92 CURVE",
"47 66 OFFCURVE",
"41 42 OFFCURVE",
"41 20 CURVE SMOOTH",
"41 -10 OFFCURVE",
"52 -34 OFFCURVE",
"74 -51 CURVE SMOOTH",
"91 -66 OFFCURVE",
"114 -75 OFFCURVE",
"144 -78 CURVE",
"139 -84 OFFCURVE",
"133 -90 OFFCURVE",
"128 -95 CURVE SMOOTH",
"111 -111 LINE",
"106 -114 OFFCURVE",
"104 -118 OFFCURVE",
"104 -121 CURVE SMOOTH",
"104 -124 OFFCURVE",
"106 -125 OFFCURVE",
"109 -125 CURVE",
"109 -125 LINE"
);
},
{
closed = 1;
nodes = (
"112 -56 OFFCURVE",
"84 -25 OFFCURVE",
"84 23 CURVE SMOOTH",
"84 42 OFFCURVE",
"88 61 OFFCURVE",
"96 82 CURVE",
"123 74 OFFCURVE",
"150 70 OFFCURVE",
"178 70 CURVE SMOOTH",
"216 70 OFFCURVE",
"251 77 OFFCURVE",
"284 92 CURVE",
"247 36 OFFCURVE",
"205 -14 OFFCURVE",
"161 -61 CURVE",
"161 -61 LINE"
);
},
{
closed = 1;
nodes = (
"156 86 OFFCURVE",
"130 90 OFFCURVE",
"103 98 CURVE",
"126 150 OFFCURVE",
"165 198 OFFCURVE",
"218 242 CURVE SMOOTH",
"266 281 OFFCURVE",
"312 304 OFFCURVE",
"356 313 CURVE",
"361 313 OFFCURVE",
"363 315 OFFCURVE",
"363 319 CURVE SMOOTH",
"363 321 OFFCURVE",
"360 322 OFFCURVE",
"355 321 CURVE SMOOTH",
"310 314 OFFCURVE",
"260 292 OFFCURVE",
"203 253 CURVE SMOOTH",
"142 210 OFFCURVE",
"97 162 OFFCURVE",
"68 109 CURVE",
"40 121 OFFCURVE",
"20 150 OFFCURVE",
"20 181 CURVE SMOOTH",
"20 226 OFFCURVE",
"46 266 OFFCURVE",
"98 303 CURVE SMOOTH",
"119 318 OFFCURVE",
"142 332 OFFCURVE",
"169 345 CURVE",
"155 316 OFFCURVE",
"148 286 OFFCURVE",
"148 253 CURVE SMOOTH",
"148 241 OFFCURVE",
"151 235 OFFCURVE",
"154 235 CURVE SMOOTH",
"157 235 OFFCURVE",
"160 241 OFFCURVE",
"160 253 CURVE SMOOTH",
"160 290 OFFCURVE",
"169 320 OFFCURVE",
"185 352 CURVE",
"209 363 OFFCURVE",
"235 371 OFFCURVE",
"263 380 CURVE SMOOTH",
"324 397 OFFCURVE",
"375 406 OFFCURVE",
"418 406 CURVE SMOOTH",
"437 406 OFFCURVE",
"455 404 OFFCURVE",
"471 403 CURVE",
"471 397 LINE SMOOTH",
"471 376 OFFCURVE",
"469 356 OFFCURVE",
"464 336 CURVE",
"447 315 OFFCURVE",
"431 295 OFFCURVE",
"416 274 CURVE SMOOTH",
"372 215 LINE",
"339 170 LINE SMOOTH",
"328 155 OFFCURVE",
"316 138 OFFCURVE",
"304 121 CURVE",
"265 98 OFFCURVE",
"224 86 OFFCURVE",
"181 86 CURVE",
"181 86 LINE"
);
},
{
closed = 1;
nodes = (
"225 -26 OFFCURVE",
"266 22 OFFCURVE",
"313 82 CURVE SMOOTH",
"354 135 LINE",
"363 143 OFFCURVE",
"372 151 OFFCURVE",
"381 160 CURVE SMOOTH",
"408 188 OFFCURVE",
"430 219 OFFCURVE",
"447 254 CURVE",
"490 307 OFFCURVE",
"523 347 OFFCURVE",
"554 378 CURVE",
"557 377 OFFCURVE",
"561 376 OFFCURVE",
"563 374 CURVE SMOOTH",
"569 369 LINE SMOOTH",
"604 340 OFFCURVE",
"628 312 OFFCURVE",
"628 269 CURVE SMOOTH",
"628 229 OFFCURVE",
"608 186 OFFCURVE",
"573 138 CURVE SMOOTH",
"473 1 OFFCURVE",
"357 -59 OFFCURVE",
"189 -62 CURVE",
"189 -62 LINE"
);
},
{
closed = 1;
nodes = (
"211 392 LINE",
"215 398 LINE SMOOTH",
"244 442 OFFCURVE",
"286 469 OFFCURVE",
"333 484 CURVE SMOOTH",
"353 491 OFFCURVE",
"371 494 OFFCURVE",
"388 494 CURVE SMOOTH",
"415 494 OFFCURVE",
"436 485 OFFCURVE",
"451 467 CURVE SMOOTH",
"460 455 OFFCURVE",
"466 440 OFFCURVE",
"469 422 CURVE",
"448 425 OFFCURVE",
"426 426 OFFCURVE",
"403 426 CURVE SMOOTH",
"350 426 OFFCURVE",
"295 418 OFFCURVE",
"238 401 CURVE SMOOTH",
"225 397 LINE",
"211 392 LINE"
);
},
{
closed = 1;
nodes = (
"481 357 LINE",
"482 358 LINE",
"485 372 OFFCURVE",
"486 385 OFFCURVE",
"486 398 CURVE SMOOTH",
"486 400 LINE",
"495 399 OFFCURVE",
"506 396 OFFCURVE",
"515 393 CURVE",
"498 375 LINE",
"481 357 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01258 7 160 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 8 155 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012128 8 110 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01210 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01220 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01254 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01280 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 102 86 118 86 134 86 150 86 166 86 182 86 198 86 214 86 230 86 246 86 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 86 22 86 38 86 54 86 70 86 86 86 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 86 117 86 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012102 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 110 122 110 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 105 110 121 110 137 110 153 110 169 110 185 110 201 110 217 110 233 110 249 110 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 110 25 110 41 110 57 110 73 110 89 110 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012123 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012151 160 128 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012184 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012142 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012144 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012146 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\012102 3 138 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 4 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01275 2 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012151 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012168 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 694;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Oslashacute;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = Oslash;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 528, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 694;
}
);
unicode = 01FE;
},
{
glyphname = Otilde;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 581, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = Otildemacron;
lastChange = "2021-10-05 04:43:28 +0000";
layers = (
{
components = (
{
name = O;
},
{
name = tildecomb_macroncomb.case;
transform = "{1, 0, 0, 1, 575, 334}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 763;
}
);
unicode = 022C;
},
{
glyphname = OE;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"764 -38 OFFCURVE",
"782 -37 OFFCURVE",
"801 -34 CURVE SMOOTH",
"864 -27 OFFCURVE",
"919 -9 OFFCURVE",
"964 19 CURVE SMOOTH",
"1015 51 OFFCURVE",
"1042 88 OFFCURVE",
"1042 130 CURVE SMOOTH",
"1042 134 OFFCURVE",
"1041 136 OFFCURVE",
"1039 136 CURVE SMOOTH",
"1036 136 OFFCURVE",
"1035 133 OFFCURVE",
"1034 128 CURVE SMOOTH",
"1031 94 OFFCURVE",
"1006 63 OFFCURVE",
"961 35 CURVE SMOOTH",
"918 9 OFFCURVE",
"867 -8 OFFCURVE",
"809 -16 CURVE SMOOTH",
"792 -19 OFFCURVE",
"775 -20 OFFCURVE",
"759 -20 CURVE SMOOTH",
"710 -20 OFFCURVE",
"671 -9 OFFCURVE",
"642 12 CURVE SMOOTH",
"615 32 OFFCURVE",
"601 57 OFFCURVE",
"601 87 CURVE SMOOTH",
"601 91 OFFCURVE",
"601 95 OFFCURVE",
"602 99 CURVE",
"647 132 OFFCURVE",
"683 170 OFFCURVE",
"711 212 CURVE",
"727 219 OFFCURVE",
"744 224 OFFCURVE",
"763 229 CURVE SMOOTH",
"820 244 OFFCURVE",
"875 251 OFFCURVE",
"926 249 CURVE SMOOTH",
"942 248 OFFCURVE",
"950 253 OFFCURVE",
"950 262 CURVE SMOOTH",
"950 270 OFFCURVE",
"944 274 OFFCURVE",
"932 274 CURVE SMOOTH",
"929 274 LINE SMOOTH",
"892 273 OFFCURVE",
"857 277 OFFCURVE",
"824 286 CURVE SMOOTH",
"786 297 OFFCURVE",
"764 313 OFFCURVE",
"759 332 CURVE",
"759 356 LINE",
"771 399 OFFCURVE",
"822 441 OFFCURVE",
"883 461 CURVE SMOOTH",
"920 472 OFFCURVE",
"952 478 OFFCURVE",
"978 478 CURVE SMOOTH",
"1005 478 OFFCURVE",
"1026 472 OFFCURVE",
"1039 460 CURVE SMOOTH",
"1050 451 OFFCURVE",
"1056 438 OFFCURVE",
"1056 423 CURVE SMOOTH",
"1056 398 OFFCURVE",
"1014 387 OFFCURVE",
"1014 376 CURVE SMOOTH",
"1014 374 OFFCURVE",
"1017 373 OFFCURVE",
"1022 373 CURVE SMOOTH",
"1026 373 LINE SMOOTH",
"1063 378 OFFCURVE",
"1085 403 OFFCURVE",
"1085 428 CURVE SMOOTH",
"1085 445 OFFCURVE",
"1076 460 OFFCURVE",
"1059 472 CURVE SMOOTH",
"1040 485 OFFCURVE",
"1014 492 OFFCURVE",
"980 492 CURVE SMOOTH",
"952 492 OFFCURVE",
"920 487 OFFCURVE",
"884 478 CURVE SMOOTH",
"824 461 OFFCURVE",
"779 437 OFFCURVE",
"749 406 CURVE",
"724 471 OFFCURVE",
"663 512 OFFCURVE",
"566 529 CURVE",
"561 559 OFFCURVE",
"549 582 OFFCURVE",
"529 598 CURVE SMOOTH",
"510 612 OFFCURVE",
"485 619 OFFCURVE",
"456 619 CURVE SMOOTH",
"416 619 OFFCURVE",
"376 607 OFFCURVE",
"336 582 CURVE SMOOTH",
"298 559 OFFCURVE",
"267 529 OFFCURVE",
"243 494 CURVE",
"178 469 OFFCURVE",
"127 438 OFFCURVE",
"89 400 CURVE SMOOTH",
"47 358 OFFCURVE",
"26 312 OFFCURVE",
"26 263 CURVE SMOOTH",
"26 220 OFFCURVE",
"54 182 OFFCURVE",
"91 165 CURVE",
"78 136 OFFCURVE",
"72 110 OFFCURVE",
"72 85 CURVE SMOOTH",
"72 51 OFFCURVE",
"84 25 OFFCURVE",
"108 6 CURVE SMOOTH",
"135 -15 OFFCURVE",
"174 -26 OFFCURVE",
"225 -26 CURVE SMOOTH",
"336 -26 OFFCURVE",
"460 8 OFFCURVE",
"561 71 CURVE",
"564 40 OFFCURVE",
"582 14 OFFCURVE",
"613 -6 CURVE SMOOTH",
"647 -27 OFFCURVE",
"691 -38 OFFCURVE",
"746 -38 CURVE",
"746 -38 LINE"
);
},
{
closed = 1;
nodes = (
"200 159 OFFCURVE",
"171 163 OFFCURVE",
"141 171 CURVE",
"154 202 OFFCURVE",
"173 232 OFFCURVE",
"198 261 CURVE",
"208 222 OFFCURVE",
"228 188 OFFCURVE",
"258 161 CURVE",
"248 160 OFFCURVE",
"238 159 OFFCURVE",
"228 159 CURVE",
"228 159 LINE"
);
},
{
closed = 1;
nodes = (
"70 198 OFFCURVE",
"49 230 OFFCURVE",
"49 265 CURVE SMOOTH",
"49 298 OFFCURVE",
"65 332 OFFCURVE",
"97 365 CURVE SMOOTH",
"126 396 OFFCURVE",
"166 424 OFFCURVE",
"217 449 CURVE",
"199 409 OFFCURVE",
"190 367 OFFCURVE",
"190 322 CURVE SMOOTH",
"190 313 OFFCURVE",
"190 304 OFFCURVE",
"191 296 CURVE",
"152 261 OFFCURVE",
"122 224 OFFCURVE",
"101 185 CURVE",
"101 185 LINE"
);
},
{
closed = 1;
nodes = (
"157 -6 OFFCURVE",
"119 29 OFFCURVE",
"119 89 CURVE SMOOTH",
"119 109 OFFCURVE",
"124 131 OFFCURVE",
"133 154 CURVE",
"164 145 OFFCURVE",
"194 141 OFFCURVE",
"224 141 CURVE SMOOTH",
"242 141 OFFCURVE",
"259 142 OFFCURVE",
"276 145 CURVE",
"318 114 OFFCURVE",
"366 99 OFFCURVE",
"419 99 CURVE SMOOTH",
"468 99 OFFCURVE",
"511 112 OFFCURVE",
"546 138 CURVE SMOOTH",
"547 139 OFFCURVE",
"548 141 OFFCURVE",
"548 143 CURVE",
"547 144 OFFCURVE",
"545 145 OFFCURVE",
"544 145 CURVE SMOOTH",
"541 144 LINE",
"507 119 OFFCURVE",
"467 106 OFFCURVE",
"421 106 CURVE SMOOTH",
"372 106 OFFCURVE",
"328 120 OFFCURVE",
"289 148 CURVE",
"359 164 OFFCURVE",
"420 203 OFFCURVE",
"471 265 CURVE SMOOTH",
"518 322 OFFCURVE",
"548 388 OFFCURVE",
"563 461 CURVE SMOOTH",
"566 478 OFFCURVE",
"568 493 OFFCURVE",
"567 508 CURVE",
"662 491 OFFCURVE",
"721 442 OFFCURVE",
"725 371 CURVE",
"722 362 OFFCURVE",
"719 353 OFFCURVE",
"719 344 CURVE SMOOTH",
"719 338 OFFCURVE",
"720 333 OFFCURVE",
"721 328 CURVE",
"713 293 OFFCURVE",
"694 256 OFFCURVE",
"664 216 CURVE",
"663 216 LINE",
"610 186 OFFCURVE",
"578 152 OFFCURVE",
"565 113 CURVE",
"470 34 OFFCURVE",
"357 -6 OFFCURVE",
"224 -6 CURVE",
"224 -6 LINE"
);
},
{
closed = 1;
nodes = (
"239 192 OFFCURVE",
"218 229 OFFCURVE",
"209 274 CURVE",
"240 310 OFFCURVE",
"276 341 OFFCURVE",
"317 366 CURVE SMOOTH",
"355 390 OFFCURVE",
"390 405 OFFCURVE",
"423 411 CURVE SMOOTH",
"428 412 OFFCURVE",
"430 415 OFFCURVE",
"430 418 CURVE SMOOTH",
"430 421 OFFCURVE",
"427 422 OFFCURVE",
"421 421 CURVE SMOOTH",
"391 416 OFFCURVE",
"357 403 OFFCURVE",
"318 383 CURVE SMOOTH",
"278 362 OFFCURVE",
"240 337 OFFCURVE",
"204 307 CURVE",
"204 322 LINE SMOOTH",
"204 370 OFFCURVE",
"214 415 OFFCURVE",
"235 457 CURVE",
"302 488 OFFCURVE",
"372 506 OFFCURVE",
"443 513 CURVE SMOOTH",
"459 514 OFFCURVE",
"474 515 OFFCURVE",
"489 515 CURVE SMOOTH",
"510 515 OFFCURVE",
"531 514 OFFCURVE",
"550 511 CURVE",
"551 495 OFFCURVE",
"549 478 OFFCURVE",
"546 461 CURVE SMOOTH",
"533 394 OFFCURVE",
"504 332 OFFCURVE",
"459 277 CURVE SMOOTH",
"406 212 OFFCURVE",
"344 174 OFFCURVE",
"272 163 CURVE",
"272 163 LINE"
);
},
{
closed = 1;
nodes = (
"299 550 OFFCURVE",
"344 584 OFFCURVE",
"397 602 CURVE SMOOTH",
"420 609 OFFCURVE",
"440 613 OFFCURVE",
"458 613 CURVE SMOOTH",
"510 613 OFFCURVE",
"540 586 OFFCURVE",
"548 532 CURVE",
"526 535 OFFCURVE",
"502 537 OFFCURVE",
"477 537 CURVE SMOOTH",
"467 537 OFFCURVE",
"456 537 OFFCURVE",
"445 536 CURVE SMOOTH",
"383 533 OFFCURVE",
"322 522 OFFCURVE",
"262 501 CURVE",
"262 501 LINE"
);
},
{
closed = 1;
nodes = (
"740 262 OFFCURVE",
"746 278 OFFCURVE",
"751 293 CURVE",
"774 277 OFFCURVE",
"803 269 OFFCURVE",
"836 270 CURVE",
"778 259 OFFCURVE",
"743 251 OFFCURVE",
"732 246 CURVE",
"732 246 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 5 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 8 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 6 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012152 5 161 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 37 22 37 38 37 54 37 70 37 86 37 102 37 118 37 134 37 150 37 166 37 182 37 198 37 214 37 230 37 246 37 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01210 29 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 22 117 22 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01259 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01261 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01283 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01293 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 102 103 118 103 134 103 150 103 166 103 182 103 198 103 214 103 230 103 246 103 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 103 22 103 38 103 54 103 70 103 86 103 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 103 117 103 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012118 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012144 130 152 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 161 122 161 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 161 25 161 41 161 57 161 73 161 89 161 105 161 121 161 137 161 153 161 169 161 185 161 201 161 217 161 233 161 249 161 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 161 25 161 41 161 57 161 73 161 89 161 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012152 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012203 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012138 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012192 3 114 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01285 121 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012148 1 165 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 3 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012176 4 180 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 180 176 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012176 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01283 99 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01299 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012200 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012200 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 99 200 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012106 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012114 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012118 121 85 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012192 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012194 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1060;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = P;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"1 -87 OFFCURVE",
"2 -85 OFFCURVE",
"2 -82 CURVE SMOOTH",
"1 -78 OFFCURVE",
"1 -74 OFFCURVE",
"1 -69 CURVE SMOOTH",
"1 -30 OFFCURVE",
"28 49 OFFCURVE",
"82 169 CURVE",
"91 165 OFFCURVE",
"102 162 OFFCURVE",
"114 160 CURVE",
"87 95 OFFCURVE",
"74 46 OFFCURVE",
"75 12 CURVE SMOOTH",
"79 -34 OFFCURVE",
"107 -64 OFFCURVE",
"155 -61 CURVE SMOOTH",
"158 -61 OFFCURVE",
"160 -59 OFFCURVE",
"160 -56 CURVE SMOOTH",
"160 -52 OFFCURVE",
"158 -49 OFFCURVE",
"155 -49 CURVE SMOOTH",
"153 -49 OFFCURVE",
"152 -50 OFFCURVE",
"150 -50 CURVE",
"143 -52 LINE",
"128 -52 OFFCURVE",
"117 -44 OFFCURVE",
"110 -30 CURVE SMOOTH",
"102 -17 OFFCURVE",
"99 -2 OFFCURVE",
"99 16 CURVE SMOOTH",
"99 42 OFFCURVE",
"115 88 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE SMOOTH",
"248 151 OFFCURVE",
"305 161 OFFCURVE",
"369 180 CURVE SMOOTH",
"442 201 OFFCURVE",
"501 226 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"178 488 LINE",
"172 534 OFFCURVE",
"143 558 OFFCURVE",
"92 558 CURVE SMOOTH",
"47 558 OFFCURVE",
"6 533 OFFCURVE",
"6 499 CURVE SMOOTH",
"6 464 OFFCURVE",
"33 447 OFFCURVE",
"86 447 CURVE SMOOTH",
"106 447 OFFCURVE",
"132 450 OFFCURVE",
"161 456 CURVE",
"159 424 OFFCURVE",
"149 384 OFFCURVE",
"133 336 CURVE",
"130 335 LINE SMOOTH",
"64 306 OFFCURVE",
"26 265 OFFCURVE",
"26 231 CURVE SMOOTH",
"26 207 OFFCURVE",
"40 189 OFFCURVE",
"68 175 CURVE",
"17 57 OFFCURVE",
"-8 -22 OFFCURVE",
"-8 -61 CURVE SMOOTH",
"-8 -70 OFFCURVE",
"-7 -78 OFFCURVE",
"-6 -85 CURVE SMOOTH",
"-5 -88 OFFCURVE",
"-4 -89 OFFCURVE",
"-1 -88 CURVE",
"-1 -88 LINE"
);
},
{
closed = 1;
nodes = (
"64 207 OFFCURVE",
"56 220 OFFCURVE",
"56 235 CURVE SMOOTH",
"56 264 OFFCURVE",
"80 291 OFFCURVE",
"126 315 CURVE",
"115 285 OFFCURVE",
"99 246 OFFCURVE",
"77 195 CURVE",
"77 195 LINE"
);
},
{
closed = 1;
nodes = (
"110 178 OFFCURVE",
"99 182 OFFCURVE",
"89 187 CURVE",
"117 249 OFFCURVE",
"136 295 OFFCURVE",
"148 326 CURVE",
"165 333 OFFCURVE",
"185 339 OFFCURVE",
"208 342 CURVE",
"174 283 OFFCURVE",
"145 227 OFFCURVE",
"121 175 CURVE",
"121 175 LINE"
);
},
{
closed = 1;
nodes = (
"42 478 OFFCURVE",
"26 486 OFFCURVE",
"26 502 CURVE SMOOTH",
"26 524 OFFCURVE",
"54 546 OFFCURVE",
"85 547 CURVE SMOOTH",
"131 550 OFFCURVE",
"157 530 OFFCURVE",
"161 486 CURVE",
"124 481 OFFCURVE",
"95 478 OFFCURVE",
"75 478 CURVE",
"75 478 LINE"
);
},
{
closed = 1;
nodes = (
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"186 232 OFFCURVE",
"220 292 OFFCURVE",
"257 349 CURVE",
"272 350 OFFCURVE",
"287 351 OFFCURVE",
"302 351 CURVE SMOOTH",
"359 351 OFFCURVE",
"399 342 OFFCURVE",
"425 326 CURVE SMOOTH",
"428 324 OFFCURVE",
"433 323 OFFCURVE",
"436 323 CURVE SMOOTH",
"441 323 OFFCURVE",
"442 325 OFFCURVE",
"440 329 CURVE SMOOTH",
"425 355 OFFCURVE",
"384 367 OFFCURVE",
"320 367 CURVE SMOOTH",
"303 367 OFFCURVE",
"286 366 OFFCURVE",
"267 364 CURVE",
"286 392 OFFCURVE",
"300 410 OFFCURVE",
"309 419 CURVE SMOOTH",
"312 423 OFFCURVE",
"313 425 OFFCURVE",
"313 427 CURVE SMOOTH",
"313 433 OFFCURVE",
"308 437 OFFCURVE",
"296 437 CURVE SMOOTH",
"278 437 OFFCURVE",
"266 431 OFFCURVE",
"258 419 CURVE SMOOTH",
"246 403 OFFCURVE",
"233 383 OFFCURVE",
"218 357 CURVE",
"193 354 OFFCURVE",
"173 349 OFFCURVE",
"155 342 CURVE",
"170 389 OFFCURVE",
"178 428 OFFCURVE",
"179 459 CURVE",
"214 467 OFFCURVE",
"239 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE",
"184 166 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01225 52 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 109 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 25 229 25 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01266 52 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0125 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0129 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01211 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01213 52 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01217 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01238 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01288 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012102 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 109 122 109 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 105 109 121 109 137 109 153 109 169 109 185 109 201 109 217 109 233 109 249 109 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 109 25 109 41 109 57 109 73 109 89 109 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012119 52 78 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01278 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01274 3 113 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 4 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01290 1 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012104 1 84 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01290 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01288 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012113 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01298 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012125 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 530;
}
);
leftKerningGroup = H;
note = P;
rightKerningGroup = P;
unicode = 0050;
},
{
glyphname = Thorn;
lastChange = "2021-10-05 05:06:35 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"197 151 LINE",
"248 151 OFFCURVE",
"305 161 OFFCURVE",
"369 180 CURVE SMOOTH",
"442 201 OFFCURVE",
"501 226 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"178 488 LINE",
"172 534 OFFCURVE",
"143 558 OFFCURVE",
"92 558 CURVE SMOOTH",
"47 558 OFFCURVE",
"6 533 OFFCURVE",
"6 499 CURVE SMOOTH",
"6 464 OFFCURVE",
"33 447 OFFCURVE",
"86 447 CURVE SMOOTH",
"106 447 OFFCURVE",
"132 450 OFFCURVE",
"161 456 CURVE",
"159 424 OFFCURVE",
"149 384 OFFCURVE",
"133 336 CURVE",
"130 335 LINE SMOOTH",
"62 312 OFFCURVE",
"26 265 OFFCURVE",
"26 231 CURVE SMOOTH",
"26 207 OFFCURVE",
"40 189 OFFCURVE",
"68 175 CURVE",
"17 57 OFFCURVE",
"-8 -22 OFFCURVE",
"-8 -61 CURVE SMOOTH",
"-8 -70 OFFCURVE",
"-7 -78 OFFCURVE",
"-6 -85 CURVE SMOOTH",
"-5 -88 OFFCURVE",
"-4 -89 OFFCURVE",
"-1 -88 CURVE SMOOTH",
"1 -87 OFFCURVE",
"2 -85 OFFCURVE",
"2 -82 CURVE SMOOTH",
"1 -78 OFFCURVE",
"1 -74 OFFCURVE",
"1 -69 CURVE SMOOTH",
"1 -30 OFFCURVE",
"28 49 OFFCURVE",
"82 169 CURVE",
"91 165 OFFCURVE",
"102 162 OFFCURVE",
"114 160 CURVE",
"62 23 OFFCURVE",
"49 -43 OFFCURVE",
"50 -90 CURVE SMOOTH",
"54 -152 OFFCURVE",
"82 -193 OFFCURVE",
"130 -189 CURVE SMOOTH",
"133 -189 OFFCURVE",
"135 -186 OFFCURVE",
"135 -182 CURVE SMOOTH",
"135 -176 OFFCURVE",
"133 -173 OFFCURVE",
"130 -173 CURVE SMOOTH",
"128 -173 OFFCURVE",
"127 -173 OFFCURVE",
"125 -174 CURVE SMOOTH",
"118 -176 LINE SMOOTH",
"104 -182 OFFCURVE",
"92 -166 OFFCURVE",
"85 -147 CURVE SMOOTH",
"77 -129 OFFCURVE",
"74 -109 OFFCURVE",
"74 -84 CURVE SMOOTH",
"74 -49 OFFCURVE",
"90 14 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE"
);
},
{
closed = 1;
nodes = (
"77 195 LINE",
"64 207 OFFCURVE",
"56 220 OFFCURVE",
"56 235 CURVE SMOOTH",
"56 264 OFFCURVE",
"80 291 OFFCURVE",
"126 315 CURVE",
"115 285 OFFCURVE",
"99 246 OFFCURVE",
"77 195 CURVE"
);
},
{
closed = 1;
nodes = (
"121 175 LINE",
"110 178 OFFCURVE",
"99 182 OFFCURVE",
"89 187 CURVE",
"117 249 OFFCURVE",
"136 295 OFFCURVE",
"148 326 CURVE",
"165 333 OFFCURVE",
"185 339 OFFCURVE",
"208 342 CURVE",
"174 283 OFFCURVE",
"145 227 OFFCURVE",
"121 175 CURVE"
);
},
{
closed = 1;
nodes = (
"75 478 LINE",
"42 478 OFFCURVE",
"26 486 OFFCURVE",
"26 502 CURVE SMOOTH",
"26 524 OFFCURVE",
"54 546 OFFCURVE",
"85 547 CURVE SMOOTH",
"131 550 OFFCURVE",
"157 530 OFFCURVE",
"161 486 CURVE",
"124 481 OFFCURVE",
"95 478 OFFCURVE",
"75 478 CURVE"
);
},
{
closed = 1;
nodes = (
"184 166 LINE",
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"186 232 OFFCURVE",
"220 292 OFFCURVE",
"257 349 CURVE",
"272 350 OFFCURVE",
"287 351 OFFCURVE",
"302 351 CURVE SMOOTH",
"359 351 OFFCURVE",
"399 342 OFFCURVE",
"425 326 CURVE SMOOTH",
"428 324 OFFCURVE",
"433 323 OFFCURVE",
"436 323 CURVE SMOOTH",
"441 323 OFFCURVE",
"442 325 OFFCURVE",
"440 329 CURVE SMOOTH",
"425 355 OFFCURVE",
"384 367 OFFCURVE",
"320 367 CURVE SMOOTH",
"303 367 OFFCURVE",
"286 366 OFFCURVE",
"267 364 CURVE",
"322 467 OFFCURVE",
"418 632 OFFCURVE",
"427 641 CURVE SMOOTH",
"430 645 OFFCURVE",
"431 647 OFFCURVE",
"431 649 CURVE SMOOTH",
"431 655 OFFCURVE",
"426 659 OFFCURVE",
"414 659 CURVE SMOOTH",
"396 659 OFFCURVE",
"384 653 OFFCURVE",
"376 641 CURVE SMOOTH",
"364 625 OFFCURVE",
"272 451 OFFCURVE",
"218 357 CURVE",
"193 354 OFFCURVE",
"173 349 OFFCURVE",
"155 342 CURVE",
"170 389 OFFCURVE",
"178 428 OFFCURVE",
"179 459 CURVE",
"214 467 OFFCURVE",
"239 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE"
);
},
{
closed = 1;
nodes = (
"197 151 LINE",
"248 151 OFFCURVE",
"305 161 OFFCURVE",
"369 180 CURVE SMOOTH",
"442 201 OFFCURVE",
"501 226 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"178 488 LINE",
"172 534 OFFCURVE",
"143 558 OFFCURVE",
"92 558 CURVE SMOOTH",
"47 558 OFFCURVE",
"6 533 OFFCURVE",
"6 499 CURVE SMOOTH",
"6 464 OFFCURVE",
"33 447 OFFCURVE",
"86 447 CURVE SMOOTH",
"106 447 OFFCURVE",
"132 450 OFFCURVE",
"161 456 CURVE",
"159 424 OFFCURVE",
"149 384 OFFCURVE",
"133 336 CURVE",
"130 335 LINE SMOOTH",
"62 312 OFFCURVE",
"26 265 OFFCURVE",
"26 231 CURVE SMOOTH",
"26 207 OFFCURVE",
"40 189 OFFCURVE",
"68 175 CURVE",
"17 57 OFFCURVE",
"-8 -22 OFFCURVE",
"-8 -61 CURVE SMOOTH",
"-8 -70 OFFCURVE",
"-7 -78 OFFCURVE",
"-6 -85 CURVE SMOOTH",
"-5 -88 OFFCURVE",
"-4 -89 OFFCURVE",
"-1 -88 CURVE SMOOTH",
"1 -87 OFFCURVE",
"2 -85 OFFCURVE",
"2 -82 CURVE SMOOTH",
"1 -78 OFFCURVE",
"1 -74 OFFCURVE",
"1 -69 CURVE SMOOTH",
"1 -30 OFFCURVE",
"28 49 OFFCURVE",
"82 169 CURVE",
"91 165 OFFCURVE",
"102 162 OFFCURVE",
"114 160 CURVE",
"62 23 OFFCURVE",
"49 -43 OFFCURVE",
"50 -90 CURVE SMOOTH",
"54 -152 OFFCURVE",
"82 -193 OFFCURVE",
"130 -189 CURVE SMOOTH",
"133 -189 OFFCURVE",
"135 -186 OFFCURVE",
"135 -182 CURVE SMOOTH",
"135 -176 OFFCURVE",
"133 -173 OFFCURVE",
"130 -173 CURVE SMOOTH",
"128 -173 OFFCURVE",
"127 -173 OFFCURVE",
"125 -174 CURVE SMOOTH",
"118 -176 LINE SMOOTH",
"104 -182 OFFCURVE",
"92 -166 OFFCURVE",
"85 -147 CURVE SMOOTH",
"77 -129 OFFCURVE",
"74 -109 OFFCURVE",
"74 -84 CURVE SMOOTH",
"74 -49 OFFCURVE",
"90 14 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE"
);
},
{
closed = 1;
nodes = (
"77 195 LINE",
"64 207 OFFCURVE",
"56 220 OFFCURVE",
"56 235 CURVE SMOOTH",
"56 264 OFFCURVE",
"80 291 OFFCURVE",
"126 315 CURVE",
"115 285 OFFCURVE",
"99 246 OFFCURVE",
"77 195 CURVE"
);
},
{
closed = 1;
nodes = (
"121 175 LINE",
"110 178 OFFCURVE",
"99 182 OFFCURVE",
"89 187 CURVE",
"117 249 OFFCURVE",
"136 295 OFFCURVE",
"148 326 CURVE",
"165 333 OFFCURVE",
"185 339 OFFCURVE",
"208 342 CURVE",
"174 283 OFFCURVE",
"145 227 OFFCURVE",
"121 175 CURVE"
);
},
{
closed = 1;
nodes = (
"75 478 LINE",
"42 478 OFFCURVE",
"26 486 OFFCURVE",
"26 502 CURVE SMOOTH",
"26 524 OFFCURVE",
"54 546 OFFCURVE",
"85 547 CURVE SMOOTH",
"131 550 OFFCURVE",
"157 530 OFFCURVE",
"161 486 CURVE",
"124 481 OFFCURVE",
"95 478 OFFCURVE",
"75 478 CURVE"
);
},
{
closed = 1;
nodes = (
"184 166 LINE",
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"186 232 OFFCURVE",
"220 292 OFFCURVE",
"257 349 CURVE",
"272 350 OFFCURVE",
"287 351 OFFCURVE",
"302 351 CURVE SMOOTH",
"359 351 OFFCURVE",
"399 342 OFFCURVE",
"425 326 CURVE SMOOTH",
"428 324 OFFCURVE",
"433 323 OFFCURVE",
"436 323 CURVE SMOOTH",
"441 323 OFFCURVE",
"442 325 OFFCURVE",
"440 329 CURVE SMOOTH",
"425 355 OFFCURVE",
"384 367 OFFCURVE",
"320 367 CURVE SMOOTH",
"303 367 OFFCURVE",
"286 366 OFFCURVE",
"267 364 CURVE",
"322 467 OFFCURVE",
"418 632 OFFCURVE",
"427 641 CURVE SMOOTH",
"430 645 OFFCURVE",
"431 647 OFFCURVE",
"431 649 CURVE SMOOTH",
"431 655 OFFCURVE",
"426 659 OFFCURVE",
"414 659 CURVE SMOOTH",
"396 659 OFFCURVE",
"384 653 OFFCURVE",
"376 641 CURVE SMOOTH",
"364 625 OFFCURVE",
"272 451 OFFCURVE",
"218 357 CURVE",
"193 354 OFFCURVE",
"173 349 OFFCURVE",
"155 342 CURVE",
"170 389 OFFCURVE",
"178 428 OFFCURVE",
"179 459 CURVE",
"214 467 OFFCURVE",
"239 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE"
);
}
);
width = 530;
}
);
unicode = 00DE;
},
{
glyphname = Q;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"656 -143 OFFCURVE",
"678 -142 OFFCURVE",
"699 -139 CURVE SMOOTH",
"755 -132 OFFCURVE",
"783 -103 OFFCURVE",
"783 -51 CURVE SMOOTH",
"783 -37 OFFCURVE",
"781 -21 OFFCURVE",
"776 -4 CURVE SMOOTH",
"775 1 OFFCURVE",
"773 3 OFFCURVE",
"769 3 CURVE SMOOTH",
"765 3 OFFCURVE",
"763 1 OFFCURVE",
"764 -4 CURVE SMOOTH",
"767 -25 OFFCURVE",
"769 -37 OFFCURVE",
"769 -40 CURVE SMOOTH",
"769 -87 OFFCURVE",
"722 -110 OFFCURVE",
"628 -110 CURVE SMOOTH",
"570 -110 OFFCURVE",
"500 -101 OFFCURVE",
"418 -84 CURVE SMOOTH",
"350 -70 OFFCURVE",
"302 -57 OFFCURVE",
"274 -44 CURVE",
"329 -31 OFFCURVE",
"388 -5 OFFCURVE",
"451 34 CURVE",
"486 19 OFFCURVE",
"521 11 OFFCURVE",
"554 11 CURVE SMOOTH",
"643 11 OFFCURVE",
"708 71 OFFCURVE",
"708 159 CURVE SMOOTH",
"708 187 OFFCURVE",
"702 216 OFFCURVE",
"689 246 CURVE",
"717 287 OFFCURVE",
"731 326 OFFCURVE",
"731 361 CURVE SMOOTH",
"731 419 OFFCURVE",
"697 462 OFFCURVE",
"628 489 CURVE SMOOTH",
"580 509 OFFCURVE",
"524 519 OFFCURVE",
"460 519 CURVE SMOOTH",
"317 519 OFFCURVE",
"205 488 OFFCURVE",
"123 429 CURVE SMOOTH",
"50 377 OFFCURVE",
"13 312 OFFCURVE",
"13 234 CURVE SMOOTH",
"13 188 OFFCURVE",
"27 143 OFFCURVE",
"56 100 CURVE",
"54 89 OFFCURVE",
"53 78 OFFCURVE",
"53 68 CURVE SMOOTH",
"53 26 OFFCURVE",
"70 -6 OFFCURVE",
"103 -28 CURVE SMOOTH",
"128 -45 OFFCURVE",
"159 -54 OFFCURVE",
"196 -55 CURVE SMOOTH",
"211 -55 OFFCURVE",
"228 -54 OFFCURVE",
"246 -51 CURVE",
"384 -112 OFFCURVE",
"513 -143 OFFCURVE",
"633 -143 CURVE",
"633 -143 LINE"
);
},
{
closed = 1;
nodes = (
"178 -33 OFFCURVE",
"153 -27 OFFCURVE",
"134 -14 CURVE SMOOTH",
"113 0 OFFCURVE",
"101 21 OFFCURVE",
"98 48 CURVE",
"128 18 OFFCURVE",
"164 -9 OFFCURVE",
"207 -32 CURVE",
"207 -32 LINE"
);
},
{
closed = 1;
nodes = (
"176 6 OFFCURVE",
"128 49 OFFCURVE",
"96 102 CURVE",
"104 233 OFFCURVE",
"154 324 OFFCURVE",
"246 375 CURVE SMOOTH",
"289 399 OFFCURVE",
"338 411 OFFCURVE",
"393 411 CURVE SMOOTH",
"446 411 OFFCURVE",
"495 400 OFFCURVE",
"542 378 CURVE SMOOTH",
"591 355 OFFCURVE",
"628 323 OFFCURVE",
"655 282 CURVE",
"634 223 OFFCURVE",
"585 165 OFFCURVE",
"510 106 CURVE SMOOTH",
"490 91 OFFCURVE",
"466 75 OFFCURVE",
"439 58 CURVE",
"405 78 OFFCURVE",
"377 102 OFFCURVE",
"356 130 CURVE SMOOTH",
"332 162 OFFCURVE",
"320 195 OFFCURVE",
"320 229 CURVE SMOOTH",
"320 242 OFFCURVE",
"323 252 OFFCURVE",
"328 261 CURVE SMOOTH",
"334 270 OFFCURVE",
"340 272 OFFCURVE",
"345 272 CURVE SMOOTH",
"347 272 OFFCURVE",
"348 273 OFFCURVE",
"348 275 CURVE SMOOTH",
"348 279 OFFCURVE",
"346 279 OFFCURVE",
"341 279 CURVE SMOOTH",
"333 279 OFFCURVE",
"325 275 OFFCURVE",
"318 266 CURVE SMOOTH",
"308 255 OFFCURVE",
"303 241 OFFCURVE",
"303 224 CURVE SMOOTH",
"303 189 OFFCURVE",
"315 155 OFFCURVE",
"339 122 CURVE SMOOTH",
"360 93 OFFCURVE",
"388 68 OFFCURVE",
"423 48 CURVE",
"354 7 OFFCURVE",
"293 -18 OFFCURVE",
"241 -28 CURVE",
"241 -28 LINE"
);
},
{
closed = 1;
nodes = (
"62 192 OFFCURVE",
"60 210 OFFCURVE",
"60 229 CURVE SMOOTH",
"60 307 OFFCURVE",
"94 372 OFFCURVE",
"161 424 CURVE SMOOTH",
"236 481 OFFCURVE",
"335 507 OFFCURVE",
"459 503 CURVE SMOOTH",
"582 499 OFFCURVE",
"667 434 OFFCURVE",
"667 342 CURVE SMOOTH",
"667 327 OFFCURVE",
"664 312 OFFCURVE",
"660 297 CURVE",
"629 340 OFFCURVE",
"588 374 OFFCURVE",
"536 399 CURVE SMOOTH",
"486 422 OFFCURVE",
"433 434 OFFCURVE",
"377 434 CURVE SMOOTH",
"323 434 OFFCURVE",
"273 423 OFFCURVE",
"228 400 CURVE SMOOTH",
"141 357 OFFCURVE",
"87 281 OFFCURVE",
"67 173 CURVE",
"67 173 LINE"
);
},
{
closed = 1;
nodes = (
"530 23 OFFCURVE",
"499 30 OFFCURVE",
"466 44 CURVE",
"491 60 OFFCURVE",
"515 76 OFFCURVE",
"536 93 CURVE SMOOTH",
"599 142 OFFCURVE",
"646 188 OFFCURVE",
"679 233 CURVE",
"689 207 OFFCURVE",
"694 182 OFFCURVE",
"694 158 CURVE SMOOTH",
"694 78 OFFCURVE",
"640 23 OFFCURVE",
"559 23 CURVE",
"559 23 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01272 8 45 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01297 7 85 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 6 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01229 6 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01245 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01215 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 21 25 21 41 21 57 21 73 21 89 21 105 21 121 21 137 21 153 21 169 21 185 21 201 21 217 21 233 21 249 21 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 72 22 72 38 72 54 72 70 72 86 72 102 72 118 72 134 72 150 72 166 72 182 72 198 72 214 72 230 72 246 72 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 72 22 72 38 72 54 72 70 72 86 72 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 72 117 72 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01255 45 113 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01274 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 79 25 79 41 79 57 79 73 79 89 79 105 79 121 79 137 79 153 79 169 79 185 79 201 79 217 79 233 79 249 79 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01281 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 97 22 97 38 97 54 97 70 97 86 97 102 97 118 97 134 97 150 97 166 97 182 97 198 97 214 97 230 97 246 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012117 45 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012122 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01219 4 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 2 68 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 4 109 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 37 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 748;
}
);
leftKerningGroup = O;
note = Q;
rightKerningGroup = O;
unicode = 0051;
},
{
glyphname = R;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{302, 0}";
},
{
name = top;
position = "{441, 519}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"42 -105 OFFCURVE",
"44 -105 OFFCURVE",
"45 -103 CURVE SMOOTH",
"76 -47 LINE",
"91 -58 OFFCURVE",
"110 -62 OFFCURVE",
"133 -61 CURVE SMOOTH",
"137 -61 OFFCURVE",
"139 -59 OFFCURVE",
"139 -56 CURVE SMOOTH",
"139 -51 OFFCURVE",
"137 -49 OFFCURVE",
"132 -49 CURVE SMOOTH",
"129 -49 LINE SMOOTH",
"126 -49 OFFCURVE",
"122 -50 OFFCURVE",
"119 -50 CURVE SMOOTH",
"105 -50 OFFCURVE",
"94 -44 OFFCURVE",
"85 -31 CURVE",
"123 38 OFFCURVE",
"152 93 OFFCURVE",
"171 134 CURVE",
"182 133 OFFCURVE",
"193 133 OFFCURVE",
"206 133 CURVE SMOOTH",
"257 133 OFFCURVE",
"311 140 OFFCURVE",
"367 153 CURVE",
"476 98 OFFCURVE",
"530 37 OFFCURVE",
"530 -31 CURVE SMOOTH",
"530 -42 OFFCURVE",
"528 -53 OFFCURVE",
"525 -64 CURVE SMOOTH",
"524 -71 LINE SMOOTH",
"523 -76 OFFCURVE",
"526 -78 OFFCURVE",
"529 -78 CURVE SMOOTH",
"534 -78 OFFCURVE",
"538 -73 OFFCURVE",
"541 -64 CURVE SMOOTH",
"546 -44 OFFCURVE",
"549 -25 OFFCURVE",
"549 -6 CURVE SMOOTH",
"549 65 OFFCURVE",
"507 124 OFFCURVE",
"424 169 CURVE",
"443 176 OFFCURVE",
"460 183 OFFCURVE",
"477 190 CURVE SMOOTH",
"531 214 OFFCURVE",
"573 244 OFFCURVE",
"604 279 CURVE SMOOTH",
"633 312 OFFCURVE",
"648 346 OFFCURVE",
"648 379 CURVE SMOOTH",
"648 419 OFFCURVE",
"627 451 OFFCURVE",
"586 476 CURVE SMOOTH",
"545 500 OFFCURVE",
"487 512 OFFCURVE",
"413 512 CURVE SMOOTH",
"359 512 OFFCURVE",
"297 506 OFFCURVE",
"228 496 CURVE",
"208 536 OFFCURVE",
"171 557 OFFCURVE",
"119 557 CURVE SMOOTH",
"79 557 OFFCURVE",
"48 546 OFFCURVE",
"29 524 CURVE SMOOTH",
"19 512 OFFCURVE",
"14 499 OFFCURVE",
"14 486 CURVE SMOOTH",
"14 460 OFFCURVE",
"31 447 OFFCURVE",
"66 447 CURVE SMOOTH",
"71 447 OFFCURVE",
"76 448 OFFCURVE",
"81 448 CURVE SMOOTH",
"96 449 OFFCURVE",
"117 452 OFFCURVE",
"142 458 CURVE SMOOTH",
"162 462 OFFCURVE",
"182 466 OFFCURVE",
"201 471 CURVE SMOOTH",
"207 473 OFFCURVE",
"214 475 OFFCURVE",
"221 476 CURVE",
"226 463 OFFCURVE",
"229 447 OFFCURVE",
"230 430 CURVE",
"204 401 OFFCURVE",
"167 340 OFFCURVE",
"118 247 CURVE",
"61 247 OFFCURVE",
"33 235 OFFCURVE",
"33 211 CURVE SMOOTH",
"33 193 OFFCURVE",
"48 176 OFFCURVE",
"78 160 CURVE",
"55 104 OFFCURVE",
"44 59 OFFCURVE",
"44 24 CURVE SMOOTH",
"44 -4 OFFCURVE",
"53 -26 OFFCURVE",
"69 -41 CURVE",
"37 -99 LINE SMOOTH",
"35 -102 OFFCURVE",
"36 -103 OFFCURVE",
"39 -104 CURVE",
"39 -104 LINE"
);
},
{
closed = 1;
nodes = (
"74 -8 OFFCURVE",
"71 8 OFFCURVE",
"71 25 CURVE SMOOTH",
"71 51 OFFCURVE",
"84 92 OFFCURVE",
"110 147 CURVE",
"125 142 OFFCURVE",
"141 138 OFFCURVE",
"158 136 CURVE",
"139 93 OFFCURVE",
"112 40 OFFCURVE",
"79 -21 CURVE",
"79 -21 LINE"
);
},
{
closed = 1;
nodes = (
"73 188 OFFCURVE",
"66 197 OFFCURVE",
"66 206 CURVE SMOOTH",
"66 219 OFFCURVE",
"80 226 OFFCURVE",
"108 227 CURVE",
"100 210 OFFCURVE",
"93 194 OFFCURVE",
"86 178 CURVE",
"86 178 LINE"
);
},
{
closed = 1;
nodes = (
"147 152 OFFCURVE",
"132 156 OFFCURVE",
"117 161 CURVE",
"126 181 OFFCURVE",
"137 202 OFFCURVE",
"149 224 CURVE",
"154 223 LINE SMOOTH",
"165 221 OFFCURVE",
"178 219 OFFCURVE",
"191 216 CURVE",
"184 195 OFFCURVE",
"175 172 OFFCURVE",
"164 149 CURVE",
"164 149 LINE"
);
},
{
closed = 1;
nodes = (
"188 172 OFFCURVE",
"197 193 OFFCURVE",
"204 213 CURVE",
"249 202 OFFCURVE",
"293 187 OFFCURVE",
"334 168 CURVE",
"277 153 OFFCURVE",
"225 147 OFFCURVE",
"178 149 CURVE",
"178 149 LINE"
);
},
{
closed = 1;
nodes = (
"186 242 OFFCURVE",
"173 243 OFFCURVE",
"161 244 CURVE",
"183 283 OFFCURVE",
"205 319 OFFCURVE",
"228 352 CURVE",
"223 317 OFFCURVE",
"213 279 OFFCURVE",
"200 239 CURVE",
"200 239 LINE"
);
},
{
closed = 1;
nodes = (
"47 472 OFFCURVE",
"30 481 OFFCURVE",
"30 500 CURVE SMOOTH",
"30 506 OFFCURVE",
"32 512 OFFCURVE",
"37 518 CURVE SMOOTH",
"52 538 OFFCURVE",
"77 547 OFFCURVE",
"111 547 CURVE SMOOTH",
"159 547 OFFCURVE",
"193 529 OFFCURVE",
"213 494 CURVE",
"206 493 OFFCURVE",
"200 492 OFFCURVE",
"193 491 CURVE SMOOTH",
"138 482 OFFCURVE",
"101 476 OFFCURVE",
"82 474 CURVE",
"82 474 LINE"
);
},
{
closed = 1;
nodes = (
"340 208 OFFCURVE",
"281 225 OFFCURVE",
"213 237 CURVE",
"230 286 OFFCURVE",
"241 333 OFFCURVE",
"244 376 CURVE",
"261 399 OFFCURVE",
"274 416 OFFCURVE",
"285 427 CURVE SMOOTH",
"288 430 OFFCURVE",
"290 433 OFFCURVE",
"290 436 CURVE SMOOTH",
"290 443 OFFCURVE",
"283 446 OFFCURVE",
"269 446 CURVE SMOOTH",
"260 446 OFFCURVE",
"252 444 OFFCURVE",
"243 440 CURVE",
"242 454 OFFCURVE",
"239 467 OFFCURVE",
"234 479 CURVE",
"305 492 OFFCURVE",
"368 500 OFFCURVE",
"422 500 CURVE SMOOTH",
"478 500 OFFCURVE",
"522 490 OFFCURVE",
"554 471 CURVE SMOOTH",
"588 452 OFFCURVE",
"605 424 OFFCURVE",
"605 389 CURVE SMOOTH",
"605 360 OFFCURVE",
"593 330 OFFCURVE",
"568 299 CURVE SMOOTH",
"543 267 OFFCURVE",
"508 239 OFFCURVE",
"463 216 CURVE SMOOTH",
"441 205 OFFCURVE",
"417 194 OFFCURVE",
"391 185 CURVE",
"391 185 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0126 7 60 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 7 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01272 8 133 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01212 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01220 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012100 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012100 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01242 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01278 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012102 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012104 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012115 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012117 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 133 122 133 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 133 25 133 41 133 57 133 73 133 89 133 105 133 121 133 137 133 153 133 169 133 185 133 201 133 217 133 233 133 249 133 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 133 25 133 41 133 57 133 73 133 89 133 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012141 60 72 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01268 1 137 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 2 94 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01248 4 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012137 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01294 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012104 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012117 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 604;
}
);
leftKerningGroup = H;
note = R;
rightKerningGroup = R;
unicode = 0052;
},
{
glyphname = Racute;
lastChange = "2021-10-05 04:31:52 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 413, 349}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0154;
},
{
glyphname = Rcaron;
lastChange = "2021-10-05 04:31:52 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 413, 349}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0158;
},
{
glyphname = Rcommaaccent;
lastChange = "2021-10-05 04:31:52 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 233, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0156;
},
{
glyphname = Rdblgrave;
lastChange = "2021-10-05 04:31:52 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 331, 349}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0210;
},
{
glyphname = Rinvertedbreve;
lastChange = "2021-10-05 04:31:52 +0000";
layers = (
{
components = (
{
name = R;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 385, 349}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 604;
}
);
unicode = 0212;
},
{
glyphname = S;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{158, -63}";
},
{
name = top;
position = "{448, 489}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"179 -64 OFFCURVE",
"203 -62 OFFCURVE",
"229 -58 CURVE SMOOTH",
"282 -50 OFFCURVE",
"330 -31 OFFCURVE",
"373 -2 CURVE SMOOTH",
"418 30 OFFCURVE",
"441 64 OFFCURVE",
"441 99 CURVE SMOOTH",
"441 137 OFFCURVE",
"415 172 OFFCURVE",
"363 203 CURVE",
"365 218 OFFCURVE",
"366 234 OFFCURVE",
"366 249 CURVE SMOOTH",
"366 320 OFFCURVE",
"348 379 OFFCURVE",
"313 426 CURVE",
"350 449 OFFCURVE",
"390 465 OFFCURVE",
"434 467 CURVE SMOOTH",
"454 468 LINE SMOOTH",
"489 470 OFFCURVE",
"507 458 OFFCURVE",
"507 437 CURVE SMOOTH",
"507 430 OFFCURVE",
"504 421 OFFCURVE",
"499 411 CURVE SMOOTH",
"486 386 OFFCURVE",
"480 370 OFFCURVE",
"480 364 CURVE SMOOTH",
"480 361 OFFCURVE",
"481 360 OFFCURVE",
"483 360 CURVE SMOOTH",
"490 360 OFFCURVE",
"509 377 OFFCURVE",
"540 410 CURVE",
"547 419 OFFCURVE",
"551 428 OFFCURVE",
"551 436 CURVE SMOOTH",
"551 443 OFFCURVE",
"547 446 OFFCURVE",
"540 446 CURVE SMOOTH",
"538 446 LINE",
"523 437 LINE",
"522 436 OFFCURVE",
"521 437 OFFCURVE",
"521 438 CURVE SMOOTH",
"522 443 LINE SMOOTH",
"523 446 OFFCURVE",
"523 449 OFFCURVE",
"522 450 CURVE",
"517 481 OFFCURVE",
"493 496 OFFCURVE",
"451 496 CURVE SMOOTH",
"446 496 OFFCURVE",
"441 496 OFFCURVE",
"436 495 CURVE SMOOTH",
"395 491 OFFCURVE",
"349 473 OFFCURVE",
"299 442 CURVE",
"266 476 OFFCURVE",
"224 493 OFFCURVE",
"173 493 CURVE SMOOTH",
"142 493 OFFCURVE",
"112 486 OFFCURVE",
"83 473 CURVE SMOOTH",
"39 453 OFFCURVE",
"9 400 OFFCURVE",
"9 352 CURVE SMOOTH",
"9 333 OFFCURVE",
"14 316 OFFCURVE",
"23 302 CURVE SMOOTH",
"40 276 OFFCURVE",
"66 263 OFFCURVE",
"100 263 CURVE SMOOTH",
"112 263 OFFCURVE",
"126 266 OFFCURVE",
"143 273 CURVE SMOOTH",
"162 282 OFFCURVE",
"172 291 OFFCURVE",
"172 300 CURVE SMOOTH",
"172 302 OFFCURVE",
"171 303 OFFCURVE",
"169 304 CURVE",
"168 304 OFFCURVE",
"166 303 OFFCURVE",
"165 302 CURVE SMOOTH",
"151 281 OFFCURVE",
"130 270 OFFCURVE",
"101 270 CURVE SMOOTH",
"70 270 OFFCURVE",
"47 282 OFFCURVE",
"31 306 CURVE SMOOTH",
"23 319 OFFCURVE",
"19 335 OFFCURVE",
"19 354 CURVE SMOOTH",
"19 399 OFFCURVE",
"46 447 OFFCURVE",
"86 466 CURVE SMOOTH",
"113 478 OFFCURVE",
"139 484 OFFCURVE",
"166 484 CURVE SMOOTH",
"211 484 OFFCURVE",
"251 467 OFFCURVE",
"284 433 CURVE",
"237 400 OFFCURVE",
"213 364 OFFCURVE",
"213 327 CURVE SMOOTH",
"213 300 OFFCURVE",
"225 275 OFFCURVE",
"248 253 CURVE SMOOTH",
"263 238 OFFCURVE",
"287 222 OFFCURVE",
"319 205 CURVE SMOOTH",
"330 198 OFFCURVE",
"340 191 OFFCURVE",
"349 184 CURVE",
"342 131 OFFCURVE",
"323 87 OFFCURVE",
"294 53 CURVE SMOOTH",
"262 15 OFFCURVE",
"221 -6 OFFCURVE",
"171 -10 CURVE",
"168 -11 OFFCURVE",
"167 -12 OFFCURVE",
"167 -14 CURVE",
"168 -17 OFFCURVE",
"169 -18 OFFCURVE",
"171 -18 CURVE SMOOTH",
"221 -14 OFFCURVE",
"263 7 OFFCURVE",
"297 45 CURVE SMOOTH",
"328 79 OFFCURVE",
"348 123 OFFCURVE",
"359 176 CURVE",
"385 153 OFFCURVE",
"398 127 OFFCURVE",
"398 99 CURVE SMOOTH",
"398 70 OFFCURVE",
"384 43 OFFCURVE",
"355 20 CURVE SMOOTH",
"324 -5 OFFCURVE",
"283 -21 OFFCURVE",
"230 -29 CURVE SMOOTH",
"203 -34 OFFCURVE",
"177 -36 OFFCURVE",
"153 -36 CURVE SMOOTH",
"81 -36 OFFCURVE",
"36 -16 OFFCURVE",
"36 19 CURVE SMOOTH",
"36 32 OFFCURVE",
"43 47 OFFCURVE",
"58 64 CURVE SMOOTH",
"72 81 OFFCURVE",
"97 96 OFFCURVE",
"133 111 CURVE SMOOTH",
"172 127 OFFCURVE",
"208 135 OFFCURVE",
"241 135 CURVE SMOOTH",
"252 135 OFFCURVE",
"263 134 OFFCURVE",
"272 132 CURVE SMOOTH",
"275 131 OFFCURVE",
"278 131 OFFCURVE",
"280 131 CURVE SMOOTH",
"283 131 OFFCURVE",
"285 132 OFFCURVE",
"285 134 CURVE SMOOTH",
"285 135 OFFCURVE",
"284 137 OFFCURVE",
"281 138 CURVE",
"266 146 OFFCURVE",
"248 150 OFFCURVE",
"227 150 CURVE SMOOTH",
"194 150 OFFCURVE",
"156 141 OFFCURVE",
"115 124 CURVE SMOOTH",
"78 107 OFFCURVE",
"52 91 OFFCURVE",
"37 76 CURVE SMOOTH",
"19 56 OFFCURVE",
"10 36 OFFCURVE",
"10 17 CURVE SMOOTH",
"10 -6 OFFCURVE",
"23 -26 OFFCURVE",
"48 -41 CURVE SMOOTH",
"75 -56 OFFCURVE",
"111 -64 OFFCURVE",
"156 -64 CURVE",
"156 -64 LINE"
);
},
{
closed = 1;
nodes = (
"353 209 LINE",
"333 220 LINE SMOOTH",
"275 252 OFFCURVE",
"244 284 OFFCURVE",
"244 325 CURVE SMOOTH",
"244 358 OFFCURVE",
"262 388 OFFCURVE",
"299 416 CURVE",
"335 368 OFFCURVE",
"353 308 OFFCURVE",
"353 236 CURVE SMOOTH",
"353 209 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01245 5 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 8 74 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 6 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 54 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 102 6 118 6 134 6 150 6 166 6 182 6 198 6 214 6 230 6 246 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 6 22 6 38 6 54 6 70 6 86 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 6 117 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012101 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01256 2 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01293 101 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012141 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012110 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012112 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01248 4 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 1 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012106 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012136 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012138 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 499;
}
);
leftKerningGroup = S;
note = S;
rightKerningGroup = S;
unicode = 0053;
},
{
glyphname = Sacute;
lastChange = "2021-10-05 04:32:47 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 420, 319}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015A;
},
{
glyphname = Scaron;
lastChange = "2021-10-05 04:32:44 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 420, 319}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 0160;
},
{
glyphname = Scedilla;
lastChange = "2021-10-05 04:32:35 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 70, -63}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015E;
},
{
glyphname = Scircumflex;
lastChange = "2021-10-05 04:32:47 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 372, 319}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 015C;
},
{
glyphname = Scommaaccent;
lastChange = "2021-10-05 04:32:35 +0000";
layers = (
{
components = (
{
name = S;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 89, -63}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 499;
}
);
unicode = 0218;
},
{
glyphname = Germandbls;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-161 -200 OFFCURVE",
"-112 -168 OFFCURVE",
"-60 -107 CURVE SMOOTH",
"-13 -52 OFFCURVE",
"55 105 OFFCURVE",
"144 366 CURVE SMOOTH",
"156 397 OFFCURVE",
"176 423 OFFCURVE",
"195 423 CURVE SMOOTH",
"198 423 OFFCURVE",
"200 422 OFFCURVE",
"202 421 CURVE SMOOTH",
"235 410 OFFCURVE",
"252 387 OFFCURVE",
"252 352 CURVE SMOOTH",
"252 317 OFFCURVE",
"230 284 OFFCURVE",
"185 254 CURVE SMOOTH",
"166 241 OFFCURVE",
"156 229 OFFCURVE",
"156 218 CURVE SMOOTH",
"156 209 OFFCURVE",
"164 199 OFFCURVE",
"180 189 CURVE SMOOTH",
"205 174 OFFCURVE",
"218 153 OFFCURVE",
"218 124 CURVE SMOOTH",
"218 90 OFFCURVE",
"202 58 OFFCURVE",
"171 29 CURVE SMOOTH",
"138 -2 OFFCURVE",
"97 -18 OFFCURVE",
"48 -20 CURVE SMOOTH",
"33 -21 OFFCURVE",
"26 -23 OFFCURVE",
"26 -28 CURVE SMOOTH",
"26 -32 OFFCURVE",
"35 -34 OFFCURVE",
"52 -34 CURVE SMOOTH",
"70 -33 LINE SMOOTH",
"125 -29 OFFCURVE",
"171 -10 OFFCURVE",
"206 23 CURVE SMOOTH",
"238 53 OFFCURVE",
"254 86 OFFCURVE",
"254 123 CURVE SMOOTH",
"254 167 OFFCURVE",
"231 197 OFFCURVE",
"185 214 CURVE SMOOTH",
"182 215 OFFCURVE",
"180 218 OFFCURVE",
"180 221 CURVE SMOOTH",
"180 228 OFFCURVE",
"184 233 OFFCURVE",
"193 238 CURVE SMOOTH",
"221 253 OFFCURVE",
"244 270 OFFCURVE",
"263 291 CURVE SMOOTH",
"284 313 OFFCURVE",
"293 336 OFFCURVE",
"293 357 CURVE SMOOTH",
"293 377 OFFCURVE",
"285 394 OFFCURVE",
"269 408 CURVE SMOOTH",
"250 425 OFFCURVE",
"224 434 OFFCURVE",
"189 437 CURVE SMOOTH",
"170 439 OFFCURVE",
"154 433 OFFCURVE",
"141 420 CURVE SMOOTH",
"134 413 OFFCURVE",
"125 399 OFFCURVE",
"115 379 CURVE",
"-36 28 LINE SMOOTH",
"-67 -44 OFFCURVE",
"-94 -95 OFFCURVE",
"-117 -124 CURVE SMOOTH",
"-142 -155 OFFCURVE",
"-172 -176 OFFCURVE",
"-208 -185 CURVE SMOOTH",
"-212 -186 OFFCURVE",
"-216 -187 OFFCURVE",
"-221 -187 CURVE SMOOTH",
"-241 -187 OFFCURVE",
"-253 -181 OFFCURVE",
"-258 -169 CURVE",
"-253 -174 OFFCURVE",
"-247 -176 OFFCURVE",
"-239 -176 CURVE SMOOTH",
"-220 -176 OFFCURVE",
"-206 -159 OFFCURVE",
"-206 -141 CURVE SMOOTH",
"-206 -126 OFFCURVE",
"-218 -115 OFFCURVE",
"-233 -115 CURVE SMOOTH",
"-257 -115 OFFCURVE",
"-276 -138 OFFCURVE",
"-275 -163 CURVE SMOOTH",
"-272 -193 OFFCURVE",
"-250 -206 OFFCURVE",
"-208 -203 CURVE",
"-208 -203 LINE"
);
}
);
width = 262;
}
);
unicode = 1E9E;
},
{
glyphname = Schwa;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"205 14 OFFCURVE",
"238 35 OFFCURVE",
"273 73 CURVE SMOOTH",
"334 139 OFFCURVE",
"381 259 OFFCURVE",
"381 325 CURVE SMOOTH",
"381 423 OFFCURVE",
"344 470 OFFCURVE",
"267 470 CURVE SMOOTH",
"214 470 OFFCURVE",
"146 441 OFFCURVE",
"83 382 CURVE SMOOTH",
"57 358 OFFCURVE",
"52 337 OFFCURVE",
"62 337 CURVE SMOOTH",
"67 337 OFFCURVE",
"74 341 OFFCURVE",
"83 350 CURVE SMOOTH",
"134 400 OFFCURVE",
"212 445 OFFCURVE",
"253 445 CURVE SMOOTH",
"304 445 OFFCURVE",
"335 402 OFFCURVE",
"335 339 CURVE SMOOTH",
"335 323 OFFCURVE",
"333 307 OFFCURVE",
"331 287 CURVE",
"253 287 OFFCURVE",
"181 228 OFFCURVE",
"144 176 CURVE SMOOTH",
"122 144 OFFCURVE",
"112 114 OFFCURVE",
"112 85 CURVE SMOOTH",
"112 37 OFFCURVE",
"132 14 OFFCURVE",
"173 14 CURVE",
"173 14 LINE"
);
},
{
closed = 1;
nodes = (
"150 51 OFFCURVE",
"138 60 OFFCURVE",
"138 76 CURVE SMOOTH",
"138 96 OFFCURVE",
"144 123 OFFCURVE",
"159 153 CURVE SMOOTH",
"183 200 OFFCURVE",
"259 255 OFFCURVE",
"324 262 CURVE",
"290 164 OFFCURVE",
"216 51 OFFCURVE",
"159 51 CURVE",
"159 51 LINE"
);
}
);
width = 433;
}
);
unicode = 018F;
},
{
glyphname = T;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{243, -109}";
},
{
name = center;
position = "{517, 256}";
},
{
name = top;
position = "{734, 531}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"253 -121 OFFCURVE",
"331 -88 OFFCURVE",
"403 -21 CURVE",
"419 -26 OFFCURVE",
"436 -29 OFFCURVE",
"454 -29 CURVE SMOOTH",
"466 -29 OFFCURVE",
"478 -28 OFFCURVE",
"491 -26 CURVE SMOOTH",
"501 -24 OFFCURVE",
"514 -19 OFFCURVE",
"530 -11 CURVE SMOOTH",
"549 -2 OFFCURVE",
"559 7 OFFCURVE",
"559 14 CURVE SMOOTH",
"559 17 OFFCURVE",
"558 18 OFFCURVE",
"555 18 CURVE SMOOTH",
"554 18 OFFCURVE",
"552 17 OFFCURVE",
"551 16 CURVE SMOOTH",
"542 3 OFFCURVE",
"513 -13 OFFCURVE",
"489 -17 CURVE SMOOTH",
"477 -19 OFFCURVE",
"466 -20 OFFCURVE",
"455 -20 CURVE SMOOTH",
"439 -20 OFFCURVE",
"424 -18 OFFCURVE",
"410 -14 CURVE",
"433 8 OFFCURVE",
"454 34 OFFCURVE",
"475 63 CURVE SMOOTH",
"509 110 OFFCURVE",
"550 175 OFFCURVE",
"589 262 CURVE SMOOTH",
"659 418 LINE",
"714 403 OFFCURVE",
"766 394 OFFCURVE",
"817 394 CURVE SMOOTH",
"830 394 OFFCURVE",
"845 397 OFFCURVE",
"861 404 CURVE SMOOTH",
"882 413 OFFCURVE",
"893 423 OFFCURVE",
"893 434 CURVE SMOOTH",
"893 439 OFFCURVE",
"891 441 OFFCURVE",
"887 441 CURVE SMOOTH",
"885 441 OFFCURVE",
"883 440 OFFCURVE",
"882 437 CURVE SMOOTH",
"876 424 OFFCURVE",
"854 418 OFFCURVE",
"818 418 CURVE SMOOTH",
"772 418 OFFCURVE",
"722 424 OFFCURVE",
"670 439 CURVE",
"682 460 OFFCURVE",
"693 477 OFFCURVE",
"703 489 CURVE SMOOTH",
"720 508 OFFCURVE",
"734 518 OFFCURVE",
"746 518 CURVE SMOOTH",
"756 518 OFFCURVE",
"761 512 OFFCURVE",
"761 501 CURVE SMOOTH",
"761 497 LINE SMOOTH",
"761 493 OFFCURVE",
"761 491 OFFCURVE",
"763 491 CURVE SMOOTH",
"766 491 OFFCURVE",
"768 495 OFFCURVE",
"768 504 CURVE SMOOTH",
"768 517 OFFCURVE",
"757 529 OFFCURVE",
"742 529 CURVE SMOOTH",
"701 529 OFFCURVE",
"666 499 OFFCURVE",
"637 447 CURVE",
"542 468 LINE",
"534 521 OFFCURVE",
"497 553 OFFCURVE",
"452 553 CURVE SMOOTH",
"414 553 OFFCURVE",
"378 535 OFFCURVE",
"345 498 CURVE",
"314 500 OFFCURVE",
"286 501 OFFCURVE",
"259 501 CURVE SMOOTH",
"96 501 OFFCURVE",
"11 454 OFFCURVE",
"3 360 CURVE SMOOTH",
"0 327 OFFCURVE",
"12 297 OFFCURVE",
"41 270 CURVE SMOOTH",
"66 246 OFFCURVE",
"95 230 OFFCURVE",
"130 222 CURVE SMOOTH",
"146 218 OFFCURVE",
"161 216 OFFCURVE",
"174 216 CURVE SMOOTH",
"190 216 OFFCURVE",
"203 218 OFFCURVE",
"214 223 CURVE SMOOTH",
"223 227 OFFCURVE",
"227 231 OFFCURVE",
"227 234 CURVE SMOOTH",
"227 236 OFFCURVE",
"226 237 OFFCURVE",
"223 237 CURVE SMOOTH",
"218 237 OFFCURVE",
"211 236 OFFCURVE",
"200 234 CURVE",
"178 233 LINE",
"148 236 OFFCURVE",
"116 247 OFFCURVE",
"83 268 CURVE SMOOTH",
"42 293 OFFCURVE",
"22 321 OFFCURVE",
"22 354 CURVE SMOOTH",
"22 425 OFFCURVE",
"104 461 OFFCURVE",
"267 461 CURVE SMOOTH",
"283 461 OFFCURVE",
"300 461 OFFCURVE",
"318 460 CURVE",
"294 421 OFFCURVE",
"277 374 OFFCURVE",
"268 319 CURVE SMOOTH",
"264 298 OFFCURVE",
"262 276 OFFCURVE",
"262 252 CURVE SMOOTH",
"262 164 OFFCURVE",
"282 93 OFFCURVE",
"323 39 CURVE",
"293 2 OFFCURVE",
"266 -27 OFFCURVE",
"241 -48 CURVE SMOOTH",
"240 -49 OFFCURVE",
"240 -50 OFFCURVE",
"240 -51 CURVE SMOOTH",
"240 -54 OFFCURVE",
"241 -56 OFFCURVE",
"244 -56 CURVE SMOOTH",
"245 -56 OFFCURVE",
"246 -55 OFFCURVE",
"247 -54 CURVE SMOOTH",
"271 -33 OFFCURVE",
"298 -4 OFFCURVE",
"328 33 CURVE",
"337 22 OFFCURVE",
"346 12 OFFCURVE",
"357 4 CURVE",
"288 -63 OFFCURVE",
"225 -96 OFFCURVE",
"168 -96 CURVE SMOOTH",
"145 -96 OFFCURVE",
"127 -89 OFFCURVE",
"114 -76 CURVE SMOOTH",
"103 -65 OFFCURVE",
"98 -50 OFFCURVE",
"98 -33 CURVE SMOOTH",
"98 -6 OFFCURVE",
"108 16 OFFCURVE",
"128 33 CURVE SMOOTH",
"131 36 OFFCURVE",
"133 40 OFFCURVE",
"133 43 CURVE SMOOTH",
"133 46 OFFCURVE",
"132 48 OFFCURVE",
"129 48 CURVE SMOOTH",
"126 48 OFFCURVE",
"123 46 OFFCURVE",
"120 43 CURVE SMOOTH",
"93 19 OFFCURVE",
"79 -10 OFFCURVE",
"79 -43 CURVE SMOOTH",
"79 -65 OFFCURVE",
"86 -83 OFFCURVE",
"101 -98 CURVE SMOOTH",
"116 -113 OFFCURVE",
"139 -121 OFFCURVE",
"168 -121 CURVE",
"168 -121 LINE"
);
},
{
closed = 1;
nodes = (
"296 99 OFFCURVE",
"279 166 OFFCURVE",
"279 249 CURVE SMOOTH",
"279 274 OFFCURVE",
"281 298 OFFCURVE",
"284 321 CURVE SMOOTH",
"294 376 OFFCURVE",
"310 422 OFFCURVE",
"333 459 CURVE",
"405 454 OFFCURVE",
"456 450 OFFCURVE",
"487 446 CURVE SMOOTH",
"529 441 LINE",
"529 423 OFFCURVE",
"526 404 OFFCURVE",
"521 383 CURVE SMOOTH",
"493 281 OFFCURVE",
"430 170 OFFCURVE",
"331 49 CURVE",
"331 49 LINE"
);
},
{
closed = 1;
nodes = (
"354 20 OFFCURVE",
"345 30 OFFCURVE",
"336 41 CURVE",
"442 170 OFFCURVE",
"508 283 OFFCURVE",
"535 380 CURVE SMOOTH",
"540 401 OFFCURVE",
"543 420 OFFCURVE",
"544 439 CURVE",
"581 434 OFFCURVE",
"608 429 OFFCURVE",
"627 425 CURVE",
"554 273 OFFCURVE",
"486 157 OFFCURVE",
"423 78 CURVE SMOOTH",
"404 53 OFFCURVE",
"384 31 OFFCURVE",
"364 11 CURVE",
"364 11 LINE"
);
},
{
closed = 1;
nodes = (
"467 483 OFFCURVE",
"410 491 OFFCURVE",
"359 496 CURVE",
"388 529 OFFCURVE",
"419 546 OFFCURVE",
"452 546 CURVE SMOOTH",
"491 546 OFFCURVE",
"520 519 OFFCURVE",
"528 471 CURVE",
"528 471 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\012161 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\01219 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012161 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01253 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01257 4 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012103 4 79 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 4 140 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 79 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0125 79 103 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012103 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 588;
}
);
leftKerningGroup = T;
note = T;
rightKerningGroup = T;
unicode = 0054;
},
{
glyphname = Tbar;
lastChange = "2021-10-05 04:49:03 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 445, 174}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 0166;
},
{
glyphname = Tcaron;
lastChange = "2021-10-05 04:33:08 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 706, 361}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 0164;
},
{
glyphname = Tcedilla;
lastChange = "2021-10-05 04:33:08 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = cedillacomb.case;
transform = "{1, 0, 0, 1, 155, -109}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 0162;
},
{
glyphname = Tcommaaccent;
lastChange = "2021-10-05 04:33:08 +0000";
layers = (
{
components = (
{
name = T;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 174, -109}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 588;
}
);
unicode = 021A;
},
{
glyphname = U;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{367, -47}";
},
{
name = ogonek;
position = "{608, -72}";
},
{
name = top;
position = "{568, 475}";
},
{
name = topright;
position = "{690, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"640 -113 OFFCURVE",
"643 -111 OFFCURVE",
"643 -108 CURVE SMOOTH",
"643 -105 OFFCURVE",
"638 -102 OFFCURVE",
"627 -98 CURVE SMOOTH",
"584 -81 OFFCURVE",
"563 -39 OFFCURVE",
"563 27 CURVE SMOOTH",
"563 88 OFFCURVE",
"582 171 OFFCURVE",
"621 274 CURVE",
"662 327 OFFCURVE",
"690 366 OFFCURVE",
"704 390 CURVE SMOOTH",
"729 433 OFFCURVE",
"742 465 OFFCURVE",
"742 487 CURVE SMOOTH",
"742 500 OFFCURVE",
"737 507 OFFCURVE",
"728 507 CURVE SMOOTH",
"705 507 OFFCURVE",
"677 481 OFFCURVE",
"644 429 CURVE SMOOTH",
"631 409 OFFCURVE",
"619 384 OFFCURVE",
"608 355 CURVE SMOOTH",
"600 333 OFFCURVE",
"592 311 OFFCURVE",
"585 289 CURVE",
"504 173 LINE SMOOTH",
"463 114 OFFCURVE",
"425 69 OFFCURVE",
"393 37 CURVE SMOOTH",
"350 -6 OFFCURVE",
"313 -28 OFFCURVE",
"282 -28 CURVE SMOOTH",
"256 -28 OFFCURVE",
"243 -14 OFFCURVE",
"243 13 CURVE SMOOTH",
"243 50 OFFCURVE",
"267 100 OFFCURVE",
"315 164 CURVE SMOOTH",
"334 191 OFFCURVE",
"349 210 OFFCURVE",
"358 221 CURVE SMOOTH",
"398 276 OFFCURVE",
"418 326 OFFCURVE",
"418 370 CURVE SMOOTH",
"418 411 OFFCURVE",
"401 440 OFFCURVE",
"367 456 CURVE",
"367 475 LINE SMOOTH",
"367 509 OFFCURVE",
"355 535 OFFCURVE",
"336 553 CURVE SMOOTH",
"318 568 OFFCURVE",
"294 576 OFFCURVE",
"265 576 CURVE SMOOTH",
"206 576 OFFCURVE",
"135 543 OFFCURVE",
"94 495 CURVE SMOOTH",
"58 454 OFFCURVE",
"40 412 OFFCURVE",
"40 371 CURVE SMOOTH",
"40 355 OFFCURVE",
"43 340 OFFCURVE",
"49 326 CURVE",
"18 288 OFFCURVE",
"2 251 OFFCURVE",
"2 216 CURVE SMOOTH",
"2 178 OFFCURVE",
"20 145 OFFCURVE",
"56 116 CURVE",
"61 113 OFFCURVE",
"65 111 OFFCURVE",
"69 111 CURVE SMOOTH",
"72 111 OFFCURVE",
"74 112 OFFCURVE",
"74 115 CURVE SMOOTH",
"74 118 OFFCURVE",
"71 121 OFFCURVE",
"64 125 CURVE SMOOTH",
"37 141 OFFCURVE",
"23 164 OFFCURVE",
"23 193 CURVE SMOOTH",
"23 224 OFFCURVE",
"38 259 OFFCURVE",
"68 298 CURVE",
"88 277 OFFCURVE",
"113 266 OFFCURVE",
"144 266 CURVE SMOOTH",
"156 266 OFFCURVE",
"168 268 OFFCURVE",
"180 272 CURVE SMOOTH",
"183 273 OFFCURVE",
"184 274 OFFCURVE",
"183 276 CURVE SMOOTH",
"182 279 OFFCURVE",
"180 280 OFFCURVE",
"178 279 CURVE SMOOTH",
"167 276 OFFCURVE",
"155 274 OFFCURVE",
"144 274 CURVE SMOOTH",
"114 274 OFFCURVE",
"90 284 OFFCURVE",
"73 305 CURVE",
"97 336 OFFCURVE",
"126 364 OFFCURVE",
"161 389 CURVE SMOOTH",
"220 432 OFFCURVE",
"272 454 OFFCURVE",
"318 454 CURVE SMOOTH",
"331 454 OFFCURVE",
"342 452 OFFCURVE",
"351 448 CURVE",
"348 395 OFFCURVE",
"325 332 OFFCURVE",
"279 261 CURVE SMOOTH",
"208 151 LINE",
"179 100 OFFCURVE",
"164 59 OFFCURVE",
"164 28 CURVE SMOOTH",
"164 -7 OFFCURVE",
"178 -28 OFFCURVE",
"206 -33 CURVE",
"208 -34 OFFCURVE",
"210 -32 OFFCURVE",
"210 -29 CURVE SMOOTH",
"210 -27 OFFCURVE",
"209 -27 OFFCURVE",
"208 -26 CURVE",
"186 -22 OFFCURVE",
"175 -4 OFFCURVE",
"175 28 CURVE SMOOTH",
"175 59 OFFCURVE",
"188 100 OFFCURVE",
"219 148 CURVE SMOOTH",
"291 258 LINE SMOOTH",
"336 326 OFFCURVE",
"361 386 OFFCURVE",
"366 439 CURVE",
"377 428 OFFCURVE",
"383 413 OFFCURVE",
"383 393 CURVE SMOOTH",
"383 356 OFFCURVE",
"363 307 OFFCURVE",
"324 246 CURVE SMOOTH",
"305 217 OFFCURVE",
"290 196 OFFCURVE",
"279 181 CURVE SMOOTH",
"232 115 OFFCURVE",
"209 61 OFFCURVE",
"209 19 CURVE SMOOTH",
"209 -2 OFFCURVE",
"216 -19 OFFCURVE",
"229 -31 CURVE SMOOTH",
"240 -42 OFFCURVE",
"256 -47 OFFCURVE",
"276 -47 CURVE SMOOTH",
"319 -47 OFFCURVE",
"373 -11 OFFCURVE",
"438 61 CURVE SMOOTH",
"469 95 OFFCURVE",
"511 150 OFFCURVE",
"566 226 CURVE",
"543 151 OFFCURVE",
"531 87 OFFCURVE",
"531 34 CURVE SMOOTH",
"531 -50 OFFCURVE",
"561 -98 OFFCURVE",
"621 -111 CURVE SMOOTH",
"626 -112 OFFCURVE",
"630 -113 OFFCURVE",
"633 -113 CURVE",
"633 -113 LINE"
);
},
{
closed = 1;
nodes = (
"53 344 OFFCURVE",
"51 355 OFFCURVE",
"51 366 CURVE SMOOTH",
"51 405 OFFCURVE",
"69 445 OFFCURVE",
"106 487 CURVE SMOOTH",
"149 535 OFFCURVE",
"211 566 OFFCURVE",
"263 566 CURVE SMOOTH",
"323 566 OFFCURVE",
"353 531 OFFCURVE",
"352 462 CURVE",
"339 466 OFFCURVE",
"325 468 OFFCURVE",
"309 468 CURVE SMOOTH",
"259 468 OFFCURVE",
"204 448 OFFCURVE",
"144 409 CURVE SMOOTH",
"109 387 OFFCURVE",
"80 362 OFFCURVE",
"56 334 CURVE",
"56 334 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012115 7 125 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01225 89 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 6 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 8 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 125 47 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 17 22 17 38 17 54 17 70 17 86 17 102 17 118 17 134 17 150 17 166 17 182 17 198 17 214 17 230 17 246 17 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 27 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 25 229 25 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012106 57 122 57 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01267 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 73 122 73 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 105 73 121 73 137 73 153 73 169 73 185 73 201 73 217 73 233 73 249 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 73 25 73 41 73 57 73 73 73 89 73 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 115 22 115 38 115 54 115 70 115 86 115 102 115 118 115 134 115 150 115 166 115 182 115 198 115 214 115 230 115 246 115 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012139 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01255 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012134 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012134 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01227 3 63 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012134 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01297 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 97 233 97 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 97 24 97 40 97 56 97 72 97 88 97 104 97 120 97 136 97 152 97 168 97 184 97 200 97 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0120 134 97 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0129 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01259 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01275 53 134 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 663;
}
);
leftKerningGroup = U;
note = U;
rightKerningGroup = U;
unicode = 0055;
},
{
glyphname = Uacute;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 540, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ubreve;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = brevecomb.case;
transform = "{1, 0, 0, 1, 531, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016C;
},
{
glyphname = Ucircumflex;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 492, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udblgrave;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dblgravecomb.case;
transform = "{1, 0, 0, 1, 458, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0214;
},
{
glyphname = Udieresis;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 524, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Udotbelow;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 325, -47}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE4;
},
{
glyphname = Ugrave;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 491, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uhookabove;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 543, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE6;
},
{
glyphname = Uhorn;
lastChange = "2021-10-05 04:44:27 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = horncomb.case;
transform = "{1, 0, 0, 1, 730, 309}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 01AF;
},
{
glyphname = Uhornacute;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 540, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EE8;
},
{
glyphname = Uhorndotbelow;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 325, -47}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EF0;
},
{
glyphname = Uhorngrave;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 491, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEA;
},
{
glyphname = Uhornhookabove;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 543, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEC;
},
{
glyphname = Uhorntilde;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 496, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 1EEE;
},
{
glyphname = Uhungarumlaut;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlautcomb.case;
transform = "{1, 0, 0, 1, 538, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0170;
},
{
glyphname = Uinvertedbreve;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = breveinvertedcomb.case;
transform = "{1, 0, 0, 1, 512, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0216;
},
{
glyphname = Umacron;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 500, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016A;
},
{
glyphname = Uogonek;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ogonekcomb.case;
transform = "{1, 0, 0, 1, 518, -76}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0172;
},
{
glyphname = Uring;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = ringcomb.case;
transform = "{1, 0, 0, 1, 550, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 016E;
},
{
glyphname = Utilde;
lastChange = "2021-10-05 04:33:33 +0000";
layers = (
{
components = (
{
name = U;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 496, 305}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 663;
}
);
unicode = 0168;
},
{
glyphname = V;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"371 -70 OFFCURVE",
"450 -9 OFFCURVE",
"567 113 CURVE SMOOTH",
"614 162 OFFCURVE",
"653 212 OFFCURVE",
"682 261 CURVE SMOOTH",
"719 322 OFFCURVE",
"737 377 OFFCURVE",
"737 425 CURVE SMOOTH",
"737 472 OFFCURVE",
"719 511 OFFCURVE",
"684 542 CURVE SMOOTH",
"676 549 OFFCURVE",
"670 552 OFFCURVE",
"666 552 CURVE SMOOTH",
"665 552 OFFCURVE",
"664 551 OFFCURVE",
"664 549 CURVE SMOOTH",
"664 546 OFFCURVE",
"667 541 OFFCURVE",
"672 534 CURVE SMOOTH",
"698 504 OFFCURVE",
"711 468 OFFCURVE",
"711 427 CURVE SMOOTH",
"711 380 OFFCURVE",
"695 327 OFFCURVE",
"662 268 CURVE SMOOTH",
"635 220 OFFCURVE",
"600 172 OFFCURVE",
"556 125 CURVE SMOOTH",
"533 99 OFFCURVE",
"498 67 OFFCURVE",
"453 30 CURVE SMOOTH",
"396 -17 OFFCURVE",
"357 -40 OFFCURVE",
"338 -40 CURVE SMOOTH",
"333 -40 OFFCURVE",
"331 -36 OFFCURVE",
"331 -28 CURVE SMOOTH",
"331 -13 OFFCURVE",
"338 15 OFFCURVE",
"351 56 CURVE",
"380 55 OFFCURVE",
"408 62 OFFCURVE",
"436 79 CURVE SMOOTH",
"461 93 OFFCURVE",
"477 110 OFFCURVE",
"482 130 CURVE",
"483 132 OFFCURVE",
"481 134 OFFCURVE",
"477 134 CURVE SMOOTH",
"476 134 OFFCURVE",
"475 133 OFFCURVE",
"474 132 CURVE",
"470 114 OFFCURVE",
"456 98 OFFCURVE",
"433 85 CURVE SMOOTH",
"407 70 OFFCURVE",
"381 63 OFFCURVE",
"354 64 CURVE",
"377 132 OFFCURVE",
"395 182 OFFCURVE",
"408 215 CURVE SMOOTH",
"425 264 OFFCURVE",
"434 307 OFFCURVE",
"434 344 CURVE SMOOTH",
"434 417 OFFCURVE",
"404 460 OFFCURVE",
"345 471 CURVE",
"337 500 OFFCURVE",
"324 522 OFFCURVE",
"306 538 CURVE SMOOTH",
"290 552 OFFCURVE",
"271 559 OFFCURVE",
"250 559 CURVE SMOOTH",
"221 559 OFFCURVE",
"195 546 OFFCURVE",
"173 521 CURVE SMOOTH",
"154 499 OFFCURVE",
"140 472 OFFCURVE",
"131 441 CURVE SMOOTH",
"127 426 OFFCURVE",
"124 411 OFFCURVE",
"123 395 CURVE",
"87 369 OFFCURVE",
"59 341 OFFCURVE",
"38 311 CURVE SMOOTH",
"14 278 OFFCURVE",
"2 246 OFFCURVE",
"2 216 CURVE SMOOTH",
"2 178 OFFCURVE",
"20 145 OFFCURVE",
"56 116 CURVE",
"61 113 OFFCURVE",
"65 111 OFFCURVE",
"69 111 CURVE SMOOTH",
"72 111 OFFCURVE",
"74 112 OFFCURVE",
"74 115 CURVE SMOOTH",
"74 118 OFFCURVE",
"71 121 OFFCURVE",
"64 125 CURVE SMOOTH",
"37 141 OFFCURVE",
"23 164 OFFCURVE",
"23 193 CURVE SMOOTH",
"23 242 OFFCURVE",
"56 296 OFFCURVE",
"121 356 CURVE",
"121 299 OFFCURVE",
"134 245 OFFCURVE",
"161 196 CURVE SMOOTH",
"189 144 OFFCURVE",
"227 105 OFFCURVE",
"275 78 CURVE",
"256 20 OFFCURVE",
"245 -23 OFFCURVE",
"242 -51 CURVE",
"241 -53 OFFCURVE",
"243 -57 OFFCURVE",
"247 -57 CURVE SMOOTH",
"248 -57 OFFCURVE",
"248 -56 OFFCURVE",
"248 -54 CURVE SMOOTH",
"250 -31 OFFCURVE",
"262 12 OFFCURVE",
"284 74 CURVE",
"294 69 OFFCURVE",
"304 64 OFFCURVE",
"315 61 CURVE",
"304 23 OFFCURVE",
"298 -10 OFFCURVE",
"295 -39 CURVE SMOOTH",
"294 -54 OFFCURVE",
"314 -70 OFFCURVE",
"331 -70 CURVE",
"331 -70 LINE"
);
},
{
closed = 1;
nodes = (
"279 88 LINE",
"236 115 OFFCURVE",
"201 155 OFFCURVE",
"174 209 CURVE SMOOTH",
"149 260 OFFCURVE",
"136 314 OFFCURVE",
"136 370 CURVE",
"206 429 OFFCURVE",
"267 458 OFFCURVE",
"318 458 CURVE SMOOTH",
"323 458 OFFCURVE",
"329 457 OFFCURVE",
"334 456 CURVE",
"338 437 OFFCURVE",
"340 414 OFFCURVE",
"340 386 CURVE SMOOTH",
"340 305 OFFCURVE",
"321 211 OFFCURVE",
"284 103 CURVE SMOOTH",
"279 88 LINE"
);
},
{
closed = 1;
nodes = (
"307 73 OFFCURVE",
"297 78 OFFCURVE",
"287 83 CURVE",
"294 102 LINE SMOOTH",
"334 215 OFFCURVE",
"354 310 OFFCURVE",
"354 389 CURVE SMOOTH",
"354 414 OFFCURVE",
"352 434 OFFCURVE",
"349 451 CURVE",
"378 439 OFFCURVE",
"393 409 OFFCURVE",
"393 360 CURVE SMOOTH",
"393 325 OFFCURVE",
"385 281 OFFCURVE",
"369 229 CURVE SMOOTH",
"347 159 OFFCURVE",
"330 106 OFFCURVE",
"318 70 CURVE",
"318 70 LINE"
);
},
{
closed = 1;
nodes = (
"138 406 LINE",
"140 418 OFFCURVE",
"142 430 OFFCURVE",
"145 441 CURVE SMOOTH",
"153 472 OFFCURVE",
"166 497 OFFCURVE",
"184 516 CURVE SMOOTH",
"203 537 OFFCURVE",
"224 547 OFFCURVE",
"249 547 CURVE SMOOTH",
"284 547 OFFCURVE",
"314 521 OFFCURVE",
"329 473 CURVE",
"275 477 OFFCURVE",
"213 456 OFFCURVE",
"144 409 CURVE",
"138 406 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01291 7 101 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 7 89 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 6 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012117 8 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01264 5 54 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 101 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 36 122 36 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 105 36 121 36 137 36 153 36 169 36 185 36 201 36 217 36 233 36 249 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 36 25 36 41 36 57 36 73 36 89 36 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 54 122 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 91 22 91 38 91 54 91 70 91 86 91 102 91 118 91 134 91 150 91 166 91 182 91 198 91 214 91 230 91 246 91 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01289 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012105 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012121 101 64 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012130 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012111 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01246 4 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012111 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 18 233 18 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 18 24 18 40 18 56 18 72 18 88 18 104 18 120 18 136 18 152 18 168 18 184 18 200 18 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 2 values pushed */\0120 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012115 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 690;
}
);
leftKerningGroup = V;
note = V;
rightKerningGroup = V;
unicode = 0056;
},
{
glyphname = W;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{515, 0}";
},
{
name = top;
position = "{647, 365}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"145 -101 OFFCURVE",
"146 -97 OFFCURVE",
"146 -89 CURVE SMOOTH",
"146 -51 OFFCURVE",
"163 12 OFFCURVE",
"197 98 CURVE",
"206 93 OFFCURVE",
"218 90 OFFCURVE",
"231 87 CURVE",
"228 80 LINE SMOOTH",
"217 53 OFFCURVE",
"211 29 OFFCURVE",
"211 6 CURVE SMOOTH",
"211 -37 OFFCURVE",
"228 -59 OFFCURVE",
"261 -59 CURVE SMOOTH",
"299 -59 OFFCURVE",
"349 -28 OFFCURVE",
"412 35 CURVE SMOOTH",
"452 74 OFFCURVE",
"499 130 OFFCURVE",
"553 201 CURVE",
"548 174 OFFCURVE",
"546 148 OFFCURVE",
"546 123 CURVE SMOOTH",
"546 5 OFFCURVE",
"593 -54 OFFCURVE",
"688 -54 CURVE SMOOTH",
"743 -54 OFFCURVE",
"802 -30 OFFCURVE",
"863 23 CURVE SMOOTH",
"927 78 OFFCURVE",
"973 147 OFFCURVE",
"1000 230 CURVE SMOOTH",
"1015 276 OFFCURVE",
"1023 321 OFFCURVE",
"1023 366 CURVE SMOOTH",
"1023 415 OFFCURVE",
"1013 453 OFFCURVE",
"993 481 CURVE SMOOTH",
"970 516 OFFCURVE",
"933 533 OFFCURVE",
"883 533 CURVE SMOOTH",
"844 533 OFFCURVE",
"807 523 OFFCURVE",
"774 503 CURVE SMOOTH",
"772 502 OFFCURVE",
"771 500 OFFCURVE",
"771 497 CURVE SMOOTH",
"771 493 OFFCURVE",
"773 491 OFFCURVE",
"777 491 CURVE SMOOTH",
"780 491 LINE",
"812 510 OFFCURVE",
"846 520 OFFCURVE",
"883 520 CURVE SMOOTH",
"954 520 OFFCURVE",
"990 477 OFFCURVE",
"990 391 CURVE SMOOTH",
"990 343 OFFCURVE",
"980 294 OFFCURVE",
"961 243 CURVE SMOOTH",
"934 173 OFFCURVE",
"898 113 OFFCURVE",
"853 63 CURVE SMOOTH",
"803 6 OFFCURVE",
"751 -27 OFFCURVE",
"698 -34 CURVE SMOOTH",
"691 -35 OFFCURVE",
"685 -35 OFFCURVE",
"678 -35 CURVE SMOOTH",
"614 -35 OFFCURVE",
"582 9 OFFCURVE",
"582 96 CURVE SMOOTH",
"582 137 OFFCURVE",
"589 181 OFFCURVE",
"604 228 CURVE SMOOTH",
"617 272 OFFCURVE",
"633 306 OFFCURVE",
"652 331 CURVE",
"648 334 OFFCURVE",
"642 336 OFFCURVE",
"635 336 CURVE SMOOTH",
"620 336 OFFCURVE",
"601 328 OFFCURVE",
"597 321 CURVE SMOOTH",
"528 200 OFFCURVE",
"462 110 OFFCURVE",
"398 49 CURVE SMOOTH",
"346 0 OFFCURVE",
"310 -24 OFFCURVE",
"289 -24 CURVE SMOOTH",
"275 -24 OFFCURVE",
"268 -13 OFFCURVE",
"268 8 CURVE SMOOTH",
"268 25 OFFCURVE",
"273 51 OFFCURVE",
"283 84 CURVE",
"311 85 OFFCURVE",
"335 91 OFFCURVE",
"356 101 CURVE SMOOTH",
"380 112 OFFCURVE",
"396 128 OFFCURVE",
"403 148 CURVE SMOOTH",
"404 151 OFFCURVE",
"403 153 OFFCURVE",
"400 153 CURVE SMOOTH",
"398 153 OFFCURVE",
"397 152 OFFCURVE",
"396 151 CURVE",
"389 132 OFFCURVE",
"375 117 OFFCURVE",
"353 107 CURVE SMOOTH",
"334 98 OFFCURVE",
"311 94 OFFCURVE",
"286 94 CURVE",
"295 125 OFFCURVE",
"308 161 OFFCURVE",
"326 204 CURVE SMOOTH",
"360 285 LINE SMOOTH",
"387 348 OFFCURVE",
"400 400 OFFCURVE",
"400 441 CURVE SMOOTH",
"400 503 OFFCURVE",
"373 534 OFFCURVE",
"320 534 CURVE",
"315 562 OFFCURVE",
"305 584 OFFCURVE",
"288 599 CURVE SMOOTH",
"272 612 OFFCURVE",
"253 619 OFFCURVE",
"230 619 CURVE SMOOTH",
"187 619 OFFCURVE",
"149 599 OFFCURVE",
"114 558 CURVE SMOOTH",
"75 512 OFFCURVE",
"56 454 OFFCURVE",
"56 383 CURVE",
"27 346 OFFCURVE",
"12 310 OFFCURVE",
"12 276 CURVE SMOOTH",
"12 238 OFFCURVE",
"30 205 OFFCURVE",
"65 176 CURVE",
"70 173 OFFCURVE",
"75 171 OFFCURVE",
"79 171 CURVE SMOOTH",
"82 171 OFFCURVE",
"84 172 OFFCURVE",
"84 174 CURVE SMOOTH",
"84 177 OFFCURVE",
"81 181 OFFCURVE",
"74 185 CURVE SMOOTH",
"47 201 OFFCURVE",
"33 224 OFFCURVE",
"33 253 CURVE SMOOTH",
"33 276 OFFCURVE",
"42 302 OFFCURVE",
"59 331 CURVE",
"71 227 OFFCURVE",
"120 141 OFFCURVE",
"188 102 CURVE",
"151 9 OFFCURVE",
"134 -56 OFFCURVE",
"136 -94 CURVE",
"137 -99 OFFCURVE",
"138 -101 OFFCURVE",
"141 -101 CURVE",
"141 -101 LINE"
);
},
{
closed = 1;
nodes = (
"161 140 OFFCURVE",
"132 174 OFFCURVE",
"109 219 CURVE SMOOTH",
"88 261 OFFCURVE",
"76 305 OFFCURVE",
"71 350 CURVE",
"97 386 OFFCURVE",
"130 419 OFFCURVE",
"171 449 CURVE SMOOTH",
"226 490 OFFCURVE",
"271 512 OFFCURVE",
"304 515 CURVE",
"305 508 OFFCURVE",
"305 502 OFFCURVE",
"305 495 CURVE SMOOTH",
"304 406 OFFCURVE",
"271 288 OFFCURVE",
"204 139 CURVE SMOOTH",
"201 133 OFFCURVE",
"197 126 OFFCURVE",
"194 118 CURVE",
"194 118 LINE"
);
},
{
closed = 1;
nodes = (
"223 102 OFFCURVE",
"212 107 OFFCURVE",
"203 113 CURVE",
"213 137 LINE SMOOTH",
"279 296 OFFCURVE",
"322 415 OFFCURVE",
"322 503 CURVE SMOOTH",
"322 514 LINE",
"347 509 OFFCURVE",
"359 489 OFFCURVE",
"359 452 CURVE SMOOTH",
"359 417 OFFCURVE",
"347 368 OFFCURVE",
"324 306 CURVE SMOOTH",
"290 225 OFFCURVE",
"261 156 OFFCURVE",
"236 99 CURVE",
"236 99 LINE"
);
},
{
closed = 1;
nodes = (
"72 462 OFFCURVE",
"90 514 OFFCURVE",
"123 554 CURVE SMOOTH",
"152 590 OFFCURVE",
"185 608 OFFCURVE",
"221 608 CURVE SMOOTH",
"260 608 OFFCURVE",
"292 582 OFFCURVE",
"301 533 CURVE",
"260 528 OFFCURVE",
"210 506 OFFCURVE",
"153 469 CURVE SMOOTH",
"120 448 OFFCURVE",
"93 425 OFFCURVE",
"70 399 CURVE",
"70 399 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012120 7 130 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 6 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01245 8 102 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01227 7 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 8 94 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01286 8 70 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 7 22 7 38 7 54 7 70 7 86 7 102 7 118 7 134 7 150 7 166 7 182 7 198 7 214 7 230 7 246 7 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 70 122 70 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 105 70 121 70 137 70 153 70 169 70 185 70 201 70 217 70 233 70 249 70 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 70 25 70 41 70 57 70 73 70 89 70 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 94 122 94 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 105 94 121 94 137 94 153 94 169 94 185 94 201 94 217 94 233 94 249 94 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 94 25 94 41 94 57 94 73 94 89 94 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01296 94 60 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012132 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012118 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 120 22 120 38 120 54 120 70 120 86 120 102 120 118 120 134 120 150 120 166 120 182 120 198 120 214 120 230 120 246 120 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 142 22 142 38 142 54 142 70 142 86 142 102 142 118 142 134 142 150 142 166 142 182 142 198 142 214 142 230 142 246 142 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 142 22 142 38 142 54 142 70 142 86 142 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 142 117 142 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012148 130 86 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012157 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\012111 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012136 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012136 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0123 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01262 3 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012140 1 72 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0127 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01292 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01296 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012118 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012148 111 136 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 1029;
}
);
leftKerningGroup = W;
note = W;
rightKerningGroup = W;
unicode = 0057;
},
{
glyphname = Wacute;
lastChange = "2021-10-05 04:33:48 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 619, 195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E82;
},
{
glyphname = Wcircumflex;
lastChange = "2021-10-05 04:33:48 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 571, 195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 0174;
},
{
glyphname = Wdieresis;
lastChange = "2021-10-05 04:33:48 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 603, 195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E84;
},
{
glyphname = Wgrave;
lastChange = "2021-10-05 04:33:48 +0000";
layers = (
{
components = (
{
name = W;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 570, 195}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 1029;
}
);
unicode = 1E80;
},
{
glyphname = X;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-57 -141 OFFCURVE",
"-44 -129 OFFCURVE",
"-29 -106 CURVE SMOOTH",
"16 -34 OFFCURVE",
"83 40 OFFCURVE",
"172 116 CURVE",
"199 103 OFFCURVE",
"228 94 OFFCURVE",
"259 90 CURVE",
"261 -45 OFFCURVE",
"268 -118 OFFCURVE",
"280 -128 CURVE",
"282 -129 OFFCURVE",
"284 -130 OFFCURVE",
"286 -129 CURVE",
"287 -129 OFFCURVE",
"288 -128 OFFCURVE",
"288 -127 CURVE SMOOTH",
"288 -125 LINE",
"277 -111 OFFCURVE",
"271 -40 OFFCURVE",
"271 88 CURVE",
"286 88 LINE SMOOTH",
"294 87 OFFCURVE",
"302 87 OFFCURVE",
"309 88 CURVE",
"308 -9 OFFCURVE",
"329 -58 OFFCURVE",
"372 -58 CURVE SMOOTH",
"395 -58 OFFCURVE",
"424 -45 OFFCURVE",
"459 -18 CURVE SMOOTH",
"487 3 OFFCURVE",
"520 33 OFFCURVE",
"558 72 CURVE",
"561 76 OFFCURVE",
"563 79 OFFCURVE",
"563 81 CURVE SMOOTH",
"563 84 OFFCURVE",
"562 85 OFFCURVE",
"559 85 CURVE SMOOTH",
"556 85 OFFCURVE",
"554 84 OFFCURVE",
"551 81 CURVE SMOOTH",
"511 37 OFFCURVE",
"478 8 OFFCURVE",
"452 -6 CURVE SMOOTH",
"438 -14 OFFCURVE",
"425 -18 OFFCURVE",
"414 -18 CURVE SMOOTH",
"379 -18 OFFCURVE",
"358 21 OFFCURVE",
"353 98 CURVE",
"402 118 OFFCURVE",
"436 158 OFFCURVE",
"436 209 CURVE SMOOTH",
"436 212 OFFCURVE",
"435 213 OFFCURVE",
"433 213 CURVE SMOOTH",
"430 213 OFFCURVE",
"429 212 OFFCURVE",
"429 209 CURVE SMOOTH",
"428 162 OFFCURVE",
"397 125 OFFCURVE",
"353 108 CURVE",
"352 119 OFFCURVE",
"351 132 OFFCURVE",
"351 146 CURVE SMOOTH",
"351 165 OFFCURVE",
"352 188 OFFCURVE",
"354 215 CURVE SMOOTH",
"356 260 LINE",
"396 289 OFFCURVE",
"462 333 OFFCURVE",
"553 393 CURVE SMOOTH",
"616 434 OFFCURVE",
"657 463 OFFCURVE",
"674 480 CURVE SMOOTH",
"691 496 OFFCURVE",
"699 507 OFFCURVE",
"699 514 CURVE SMOOTH",
"699 517 OFFCURVE",
"697 518 OFFCURVE",
"694 518 CURVE SMOOTH",
"682 518 OFFCURVE",
"664 507 OFFCURVE",
"640 484 CURVE SMOOTH",
"615 459 OFFCURVE",
"576 428 OFFCURVE",
"523 391 CURVE SMOOTH",
"356 276 LINE",
"357 384 OFFCURVE",
"348 447 OFFCURVE",
"328 466 CURVE SMOOTH",
"313 480 OFFCURVE",
"294 487 OFFCURVE",
"271 487 CURVE SMOOTH",
"262 487 OFFCURVE",
"251 486 OFFCURVE",
"240 483 CURVE",
"229 506 OFFCURVE",
"214 524 OFFCURVE",
"195 536 CURVE SMOOTH",
"178 547 OFFCURVE",
"160 553 OFFCURVE",
"141 553 CURVE SMOOTH",
"102 553 OFFCURVE",
"72 536 OFFCURVE",
"49 503 CURVE SMOOTH",
"28 472 OFFCURVE",
"18 433 OFFCURVE",
"18 384 CURVE SMOOTH",
"18 334 OFFCURVE",
"30 286 OFFCURVE",
"53 240 CURVE SMOOTH",
"78 189 OFFCURVE",
"113 151 OFFCURVE",
"158 124 CURVE",
"64 46 OFFCURVE",
"-10 -31 OFFCURVE",
"-64 -106 CURVE SMOOTH",
"-72 -116 OFFCURVE",
"-76 -125 OFFCURVE",
"-76 -132 CURVE SMOOTH",
"-76 -138 OFFCURVE",
"-73 -141 OFFCURVE",
"-68 -141 CURVE",
"-68 -141 LINE"
);
},
{
closed = 1;
nodes = (
"259 101 LINE",
"232 106 OFFCURVE",
"207 114 OFFCURVE",
"184 126 CURVE",
"207 146 OFFCURVE",
"231 166 OFFCURVE",
"258 186 CURVE",
"259 101 LINE"
);
},
{
closed = 1;
nodes = (
"281 98 OFFCURVE",
"276 98 OFFCURVE",
"271 99 CURVE",
"271 197 LINE",
"316 230 LINE",
"314 176 OFFCURVE",
"312 132 OFFCURVE",
"309 98 CURVE",
"302 97 OFFCURVE",
"294 97 OFFCURVE",
"286 98 CURVE",
"286 98 LINE"
);
},
{
closed = 1;
nodes = (
"127 161 OFFCURVE",
"94 200 OFFCURVE",
"69 251 CURVE SMOOTH",
"47 298 OFFCURVE",
"36 346 OFFCURVE",
"36 396 CURVE SMOOTH",
"36 439 OFFCURVE",
"45 475 OFFCURVE",
"62 502 CURVE SMOOTH",
"81 531 OFFCURVE",
"107 546 OFFCURVE",
"140 546 CURVE SMOOTH",
"179 546 OFFCURVE",
"208 524 OFFCURVE",
"228 480 CURVE",
"195 470 OFFCURVE",
"160 451 OFFCURVE",
"122 424 CURVE SMOOTH",
"92 403 OFFCURVE",
"74 388 OFFCURVE",
"68 379 CURVE SMOOTH",
"65 375 OFFCURVE",
"64 372 OFFCURVE",
"64 370 CURVE SMOOTH",
"64 368 OFFCURVE",
"65 367 OFFCURVE",
"68 367 CURVE SMOOTH",
"73 367 OFFCURVE",
"78 368 OFFCURVE",
"82 371 CURVE",
"132 422 OFFCURVE",
"184 449 OFFCURVE",
"238 453 CURVE",
"249 414 OFFCURVE",
"255 330 OFFCURVE",
"258 203 CURVE",
"226 180 OFFCURVE",
"197 157 OFFCURVE",
"170 134 CURVE",
"170 134 LINE"
);
},
{
closed = 1;
nodes = (
"271 213 LINE",
"270 330 OFFCURVE",
"263 410 OFFCURVE",
"251 453 CURVE",
"258 453 OFFCURVE",
"264 452 OFFCURVE",
"270 451 CURVE SMOOTH",
"302 445 OFFCURVE",
"317 377 OFFCURVE",
"316 246 CURVE",
"271 213 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01220 7 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 6 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012130 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 20 22 20 38 20 54 20 70 20 86 20 102 20 118 20 134 20 150 20 166 20 182 20 198 20 214 20 230 20 246 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 37 122 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01228 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01240 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01281 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01283 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01295 99 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012113 37 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012130 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012132 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01289 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01253 4 67 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012103 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 541;
}
);
leftKerningGroup = X;
note = X;
rightKerningGroup = X;
unicode = 0058;
},
{
glyphname = Y;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{853, -72}";
},
{
name = top;
position = "{764, 400}";
},
{
name = topleft;
position = "{20, 475}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"487 -346 OFFCURVE",
"529 -335 OFFCURVE",
"573 -313 CURVE SMOOTH",
"613 -294 OFFCURVE",
"648 -268 OFFCURVE",
"679 -236 CURVE SMOOTH",
"736 -179 OFFCURVE",
"777 -104 OFFCURVE",
"802 -11 CURVE",
"813 -10 OFFCURVE",
"825 -9 OFFCURVE",
"838 -9 CURVE SMOOTH",
"869 -9 OFFCURVE",
"884 -15 OFFCURVE",
"884 -26 CURVE SMOOTH",
"884 -33 OFFCURVE",
"879 -41 OFFCURVE",
"870 -50 CURVE",
"869 -52 OFFCURVE",
"868 -54 OFFCURVE",
"868 -55 CURVE SMOOTH",
"868 -57 OFFCURVE",
"869 -58 OFFCURVE",
"871 -58 CURVE SMOOTH",
"872 -58 OFFCURVE",
"874 -57 OFFCURVE",
"876 -56 CURVE",
"889 -43 OFFCURVE",
"896 -32 OFFCURVE",
"896 -23 CURVE SMOOTH",
"896 -13 OFFCURVE",
"888 -5 OFFCURVE",
"873 1 CURVE SMOOTH",
"860 6 OFFCURVE",
"845 8 OFFCURVE",
"828 8 CURVE SMOOTH",
"820 8 OFFCURVE",
"813 7 OFFCURVE",
"806 6 CURVE",
"811 29 OFFCURVE",
"817 63 OFFCURVE",
"823 106 CURVE SMOOTH",
"830 159 OFFCURVE",
"833 205 OFFCURVE",
"833 244 CURVE SMOOTH",
"833 263 OFFCURVE",
"832 280 OFFCURVE",
"830 293 CURVE SMOOTH",
"826 319 OFFCURVE",
"819 332 OFFCURVE",
"809 332 CURVE SMOOTH",
"800 332 OFFCURVE",
"787 322 OFFCURVE",
"770 303 CURVE SMOOTH",
"708 230 OFFCURVE",
"643 167 OFFCURVE",
"576 115 CURVE SMOOTH",
"538 86 OFFCURVE",
"502 62 OFFCURVE",
"469 45 CURVE SMOOTH",
"438 29 OFFCURVE",
"414 21 OFFCURVE",
"397 21 CURVE SMOOTH",
"385 21 OFFCURVE",
"379 26 OFFCURVE",
"379 35 CURVE SMOOTH",
"379 63 OFFCURVE",
"423 118 OFFCURVE",
"510 200 CURVE SMOOTH",
"619 303 OFFCURVE",
"674 386 OFFCURVE",
"674 451 CURVE SMOOTH",
"674 516 OFFCURVE",
"620 549 OFFCURVE",
"513 549 CURVE SMOOTH",
"496 549 OFFCURVE",
"478 548 OFFCURVE",
"459 547 CURVE",
"424 575 OFFCURVE",
"378 588 OFFCURVE",
"319 588 CURVE SMOOTH",
"256 588 OFFCURVE",
"209 574 OFFCURVE",
"177 546 CURVE SMOOTH",
"152 523 OFFCURVE",
"140 495 OFFCURVE",
"143 463 CURVE",
"55 420 OFFCURVE",
"11 372 OFFCURVE",
"11 319 CURVE SMOOTH",
"11 282 OFFCURVE",
"34 253 OFFCURVE",
"79 233 CURVE SMOOTH",
"115 217 OFFCURVE",
"153 210 OFFCURVE",
"191 210 CURVE SMOOTH",
"221 210 OFFCURVE",
"251 212 OFFCURVE",
"281 217 CURVE SMOOTH",
"310 222 OFFCURVE",
"329 227 OFFCURVE",
"340 234 CURVE SMOOTH",
"349 239 OFFCURVE",
"353 243 OFFCURVE",
"353 247 CURVE SMOOTH",
"353 248 OFFCURVE",
"352 249 OFFCURVE",
"349 249 CURVE SMOOTH",
"346 249 OFFCURVE",
"341 248 OFFCURVE",
"334 245 CURVE SMOOTH",
"311 234 OFFCURVE",
"279 228 OFFCURVE",
"238 228 CURVE SMOOTH",
"187 228 OFFCURVE",
"142 236 OFFCURVE",
"103 251 CURVE SMOOTH",
"59 267 OFFCURVE",
"37 288 OFFCURVE",
"37 313 CURVE SMOOTH",
"37 350 OFFCURVE",
"75 388 OFFCURVE",
"151 429 CURVE",
"161 407 OFFCURVE",
"177 389 OFFCURVE",
"199 375 CURVE SMOOTH",
"225 359 OFFCURVE",
"256 352 OFFCURVE",
"291 352 CURVE SMOOTH",
"322 352 OFFCURVE",
"352 357 OFFCURVE",
"383 367 CURVE SMOOTH",
"385 368 OFFCURVE",
"386 369 OFFCURVE",
"386 371 CURVE SMOOTH",
"386 374 OFFCURVE",
"385 375 OFFCURVE",
"383 374 CURVE",
"352 366 OFFCURVE",
"324 363 OFFCURVE",
"297 363 CURVE SMOOTH",
"262 363 OFFCURVE",
"232 370 OFFCURVE",
"207 386 CURVE SMOOTH",
"187 399 OFFCURVE",
"173 415 OFFCURVE",
"164 435 CURVE",
"254 480 OFFCURVE",
"353 510 OFFCURVE",
"461 523 CURVE",
"486 495 OFFCURVE",
"498 461 OFFCURVE",
"498 421 CURVE SMOOTH",
"498 359 OFFCURVE",
"470 295 OFFCURVE",
"413 230 CURVE SMOOTH",
"376 189 OFFCURVE",
"351 158 OFFCURVE",
"337 137 CURVE SMOOTH",
"310 97 OFFCURVE",
"296 61 OFFCURVE",
"296 28 CURVE SMOOTH",
"296 16 OFFCURVE",
"299 6 OFFCURVE",
"303 -4 CURVE SMOOTH",
"311 -22 OFFCURVE",
"322 -31 OFFCURVE",
"337 -31 CURVE SMOOTH",
"342 -31 OFFCURVE",
"348 -29 OFFCURVE",
"353 -26 CURVE SMOOTH",
"354 -25 OFFCURVE",
"355 -23 OFFCURVE",
"354 -21 CURVE",
"354 -19 OFFCURVE",
"353 -18 OFFCURVE",
"351 -18 CURVE",
"347 -21 LINE SMOOTH",
"344 -23 OFFCURVE",
"341 -24 OFFCURVE",
"338 -24 CURVE SMOOTH",
"327 -24 OFFCURVE",
"318 -16 OFFCURVE",
"313 0 CURVE SMOOTH",
"310 8 OFFCURVE",
"309 18 OFFCURVE",
"309 29 CURVE SMOOTH",
"309 40 LINE SMOOTH",
"312 69 OFFCURVE",
"327 101 OFFCURVE",
"352 138 CURVE SMOOTH",
"367 159 OFFCURVE",
"390 188 OFFCURVE",
"422 223 CURVE SMOOTH",
"485 292 OFFCURVE",
"516 359 OFFCURVE",
"516 426 CURVE SMOOTH",
"516 465 OFFCURVE",
"505 497 OFFCURVE",
"482 524 CURVE",
"498 526 OFFCURVE",
"513 527 OFFCURVE",
"526 527 CURVE SMOOTH",
"613 527 OFFCURVE",
"656 501 OFFCURVE",
"656 450 CURVE SMOOTH",
"656 424 OFFCURVE",
"639 387 OFFCURVE",
"599 346 CURVE SMOOTH",
"488 230 LINE SMOOTH",
"437 177 OFFCURVE",
"409 144 OFFCURVE",
"401 134 CURVE SMOOTH",
"375 104 OFFCURVE",
"358 79 OFFCURVE",
"349 59 CURVE SMOOTH",
"342 42 OFFCURVE",
"338 28 OFFCURVE",
"338 16 CURVE SMOOTH",
"338 -6 OFFCURVE",
"349 -17 OFFCURVE",
"372 -17 CURVE SMOOTH",
"417 -17 OFFCURVE",
"489 22 OFFCURVE",
"588 101 CURVE SMOOTH",
"662 160 OFFCURVE",
"729 219 OFFCURVE",
"789 279 CURVE",
"790 240 OFFCURVE",
"788 187 OFFCURVE",
"783 122 CURVE SMOOTH",
"778 64 OFFCURVE",
"773 23 OFFCURVE",
"768 -1 CURVE",
"665 -27 OFFCURVE",
"580 -56 OFFCURVE",
"513 -88 CURVE SMOOTH",
"400 -141 OFFCURVE",
"344 -199 OFFCURVE",
"344 -261 CURVE SMOOTH",
"344 -310 OFFCURVE",
"383 -346 OFFCURVE",
"446 -346 CURVE",
"446 -346 LINE"
);
},
{
closed = 1;
nodes = (
"415 -329 OFFCURVE",
"381 -303 OFFCURVE",
"381 -259 CURVE SMOOTH",
"381 -199 OFFCURVE",
"432 -145 OFFCURVE",
"533 -98 CURVE SMOOTH",
"583 -74 OFFCURVE",
"660 -48 OFFCURVE",
"764 -19 CURVE",
"735 -120 OFFCURVE",
"689 -200 OFFCURVE",
"626 -257 CURVE SMOOTH",
"573 -305 OFFCURVE",
"519 -329 OFFCURVE",
"466 -329 CURVE",
"466 -329 LINE"
);
},
{
closed = 1;
nodes = (
"155 498 OFFCURVE",
"166 522 OFFCURVE",
"189 541 CURVE SMOOTH",
"217 566 OFFCURVE",
"258 578 OFFCURVE",
"312 578 CURVE SMOOTH",
"362 578 OFFCURVE",
"403 567 OFFCURVE",
"435 544 CURVE",
"402 541 OFFCURVE",
"366 535 OFFCURVE",
"326 526 CURVE SMOOTH",
"267 514 OFFCURVE",
"211 495 OFFCURVE",
"156 469 CURVE",
"156 469 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012112 5 132 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012178 8 31 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01261 7 90 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012144 7 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012162 8 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0124 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 39 122 39 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 105 39 121 39 137 39 153 39 169 39 185 39 201 39 217 39 233 39 249 39 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 39 25 39 41 39 57 39 73 39 89 39 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 55 25 55 41 55 57 55 73 55 89 55 105 55 121 55 137 55 153 55 169 55 185 55 201 55 217 55 233 55 249 55 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01259 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 178 22 178 38 178 54 178 70 178 86 178 102 178 118 178 134 178 150 178 166 178 182 178 198 178 214 178 230 178 246 178 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 178 22 178 38 178 54 178 70 178 86 178 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 178 117 178 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01278 31 178 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 90 25 90 41 90 57 90 73 90 89 90 105 90 121 90 137 90 153 90 169 90 185 90 201 90 217 90 233 90 249 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 102 112 118 112 134 112 150 112 166 112 182 112 198 112 214 112 230 112 246 112 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 112 22 112 38 112 54 112 70 112 86 112 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 112 117 112 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\012178 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012148 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012160 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012166 39 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012174 132 162 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\012162 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012186 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\012181 2 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012142 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012150 4 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012168 2 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012116 3 128 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 57 142 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\012142 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012140 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012166 43 150 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 916;
}
);
leftKerningGroup = Y;
note = Y;
rightKerningGroup = Y;
unicode = 0059;
},
{
glyphname = Yacute;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 736, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 00DD;
},
{
glyphname = Ycircumflex;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = circumflexcomb.case;
transform = "{1, 0, 0, 1, 688, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 0176;
},
{
glyphname = Ydieresis;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dieresiscomb.case;
transform = "{1, 0, 0, 1, 720, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Ydotbelow;
lastChange = "2021-10-05 04:49:28 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 811, -72}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF4;
},
{
glyphname = Ygrave;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, 687, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF2;
},
{
glyphname = Yhookabove;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 739, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF6;
},
{
glyphname = Ymacron;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 696, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 0232;
},
{
glyphname = Ytilde;
lastChange = "2021-10-05 04:34:06 +0000";
layers = (
{
components = (
{
name = Y;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, 692, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 916;
}
);
unicode = 1EF8;
},
{
glyphname = Z;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{242, 0}";
},
{
name = center;
position = "{242, 238}";
},
{
name = top;
position = "{374, 554}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"97 -346 OFFCURVE",
"139 -335 OFFCURVE",
"183 -313 CURVE SMOOTH",
"223 -294 OFFCURVE",
"258 -268 OFFCURVE",
"289 -236 CURVE SMOOTH",
"346 -179 OFFCURVE",
"386 -104 OFFCURVE",
"411 -11 CURVE",
"422 -10 OFFCURVE",
"435 -9 OFFCURVE",
"448 -9 CURVE SMOOTH",
"479 -9 OFFCURVE",
"494 -15 OFFCURVE",
"494 -26 CURVE SMOOTH",
"494 -33 OFFCURVE",
"489 -41 OFFCURVE",
"479 -50 CURVE",
"478 -52 OFFCURVE",
"477 -54 OFFCURVE",
"477 -55 CURVE SMOOTH",
"477 -57 OFFCURVE",
"478 -58 OFFCURVE",
"481 -58 CURVE SMOOTH",
"482 -58 OFFCURVE",
"484 -57 OFFCURVE",
"486 -56 CURVE",
"499 -43 OFFCURVE",
"505 -32 OFFCURVE",
"505 -23 CURVE SMOOTH",
"505 -13 OFFCURVE",
"498 -5 OFFCURVE",
"483 1 CURVE SMOOTH",
"470 6 OFFCURVE",
"455 8 OFFCURVE",
"438 8 CURVE SMOOTH",
"430 8 OFFCURVE",
"422 7 OFFCURVE",
"415 6 CURVE",
"418 15 OFFCURVE",
"419 25 OFFCURVE",
"419 34 CURVE SMOOTH",
"419 64 OFFCURVE",
"411 90 OFFCURVE",
"394 111 CURVE SMOOTH",
"377 135 OFFCURVE",
"354 146 OFFCURVE",
"326 145 CURVE",
"403 200 OFFCURVE",
"459 247 OFFCURVE",
"494 284 CURVE SMOOTH",
"539 331 OFFCURVE",
"561 376 OFFCURVE",
"561 418 CURVE SMOOTH",
"561 465 OFFCURVE",
"537 495 OFFCURVE",
"490 508 CURVE",
"467 550 OFFCURVE",
"423 571 OFFCURVE",
"357 571 CURVE SMOOTH",
"307 571 OFFCURVE",
"256 557 OFFCURVE",
"204 530 CURVE SMOOTH",
"127 490 OFFCURVE",
"88 443 OFFCURVE",
"85 390 CURVE",
"54 367 OFFCURVE",
"32 344 OFFCURVE",
"19 322 CURVE SMOOTH",
"16 317 OFFCURVE",
"15 313 OFFCURVE",
"15 310 CURVE SMOOTH",
"15 307 OFFCURVE",
"16 305 OFFCURVE",
"18 305 CURVE SMOOTH",
"19 305 OFFCURVE",
"30 314 OFFCURVE",
"51 332 CURVE SMOOTH",
"75 351 OFFCURVE",
"87 361 OFFCURVE",
"88 361 CURVE",
"99 317 OFFCURVE",
"145 286 OFFCURVE",
"208 286 CURVE SMOOTH",
"239 286 OFFCURVE",
"272 294 OFFCURVE",
"306 309 CURVE SMOOTH",
"309 310 OFFCURVE",
"309 311 OFFCURVE",
"308 313 CURVE SMOOTH",
"307 316 OFFCURVE",
"306 316 OFFCURVE",
"304 315 CURVE SMOOTH",
"274 302 OFFCURVE",
"245 296 OFFCURVE",
"218 296 CURVE SMOOTH",
"158 296 OFFCURVE",
"115 329 OFFCURVE",
"107 376 CURVE",
"154 409 OFFCURVE",
"207 438 OFFCURVE",
"266 462 CURVE SMOOTH",
"334 490 OFFCURVE",
"391 504 OFFCURVE",
"438 504 CURVE SMOOTH",
"449 504 OFFCURVE",
"460 503 OFFCURVE",
"469 501 CURVE",
"478 486 OFFCURVE",
"483 468 OFFCURVE",
"483 449 CURVE SMOOTH",
"483 396 OFFCURVE",
"451 339 OFFCURVE",
"388 279 CURVE SMOOTH",
"367 260 OFFCURVE",
"339 239 OFFCURVE",
"304 214 CURVE SMOOTH",
"259 183 OFFCURVE",
"218 159 OFFCURVE",
"179 141 CURVE SMOOTH",
"176 140 OFFCURVE",
"176 138 OFFCURVE",
"177 135 CURVE SMOOTH",
"178 132 OFFCURVE",
"179 131 OFFCURVE",
"181 132 CURVE SMOOTH",
"220 149 OFFCURVE",
"263 174 OFFCURVE",
"308 205 CURVE SMOOTH",
"344 230 OFFCURVE",
"372 252 OFFCURVE",
"393 271 CURVE SMOOTH",
"466 340 OFFCURVE",
"502 402 OFFCURVE",
"502 459 CURVE SMOOTH",
"502 470 OFFCURVE",
"501 481 OFFCURVE",
"498 491 CURVE",
"519 478 OFFCURVE",
"529 456 OFFCURVE",
"529 426 CURVE SMOOTH",
"529 383 OFFCURVE",
"495 329 OFFCURVE",
"427 265 CURVE SMOOTH",
"382 223 OFFCURVE",
"329 182 OFFCURVE",
"268 141 CURVE SMOOTH",
"261 136 OFFCURVE",
"245 131 OFFCURVE",
"221 124 CURVE SMOOTH",
"200 118 OFFCURVE",
"186 113 OFFCURVE",
"181 108 CURVE SMOOTH",
"173 100 OFFCURVE",
"169 92 OFFCURVE",
"169 83 CURVE SMOOTH",
"169 76 OFFCURVE",
"172 73 OFFCURVE",
"178 73 CURVE SMOOTH",
"182 73 OFFCURVE",
"203 82 OFFCURVE",
"241 99 CURVE SMOOTH",
"250 103 OFFCURVE",
"262 106 OFFCURVE",
"277 109 CURVE SMOOTH",
"309 115 LINE",
"357 112 OFFCURVE",
"381 85 OFFCURVE",
"381 33 CURVE SMOOTH",
"381 22 OFFCURVE",
"380 10 OFFCURVE",
"378 -1 CURVE",
"275 -27 OFFCURVE",
"190 -56 OFFCURVE",
"123 -88 CURVE SMOOTH",
"10 -141 OFFCURVE",
"-46 -199 OFFCURVE",
"-46 -261 CURVE SMOOTH",
"-46 -310 OFFCURVE",
"-7 -346 OFFCURVE",
"56 -346 CURVE",
"56 -346 LINE"
);
},
{
closed = 1;
nodes = (
"26 -329 OFFCURVE",
"-9 -303 OFFCURVE",
"-9 -259 CURVE SMOOTH",
"-9 -199 OFFCURVE",
"41 -145 OFFCURVE",
"142 -98 CURVE SMOOTH",
"193 -74 OFFCURVE",
"270 -48 OFFCURVE",
"374 -19 CURVE",
"345 -120 OFFCURVE",
"299 -200 OFFCURVE",
"236 -257 CURVE SMOOTH",
"183 -305 OFFCURVE",
"129 -329 OFFCURVE",
"75 -329 CURVE",
"75 -329 LINE"
);
},
{
closed = 1;
nodes = (
"113 453 OFFCURVE",
"147 492 OFFCURVE",
"208 524 CURVE SMOOTH",
"255 549 OFFCURVE",
"301 561 OFFCURVE",
"346 561 CURVE SMOOTH",
"397 561 OFFCURVE",
"436 545 OFFCURVE",
"461 513 CURVE",
"452 514 OFFCURVE",
"443 515 OFFCURVE",
"433 515 CURVE SMOOTH",
"384 515 OFFCURVE",
"329 504 OFFCURVE",
"267 483 CURVE SMOOTH",
"207 462 OFFCURVE",
"153 437 OFFCURVE",
"106 406 CURVE",
"106 406 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012141 8 51 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 7 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 8 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0126 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 57 122 57 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01222 57 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01281 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 77 122 77 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 105 77 121 77 137 77 153 77 169 77 185 77 201 77 217 77 233 77 249 77 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 77 25 77 41 77 57 77 73 77 89 77 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01279 97 81 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012137 51 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 102 141 118 141 134 141 150 141 166 141 182 141 198 141 214 141 230 141 246 141 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 141 22 141 38 141 54 141 70 141 86 141 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 141 117 141 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012149 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\012133 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\012133 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\012144 2 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 2 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\012133 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012101 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 101 233 101 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 101 24 101 40 101 56 101 72 101 88 101 104 101 120 101 136 101 152 101 168 101 184 101 200 101 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0126 133 101 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 484;
}
);
leftKerningGroup = Z;
note = Z;
rightKerningGroup = Z;
unicode = 005A;
},
{
glyphname = Zacute;
lastChange = "2021-10-05 04:34:11 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 346, 384}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 0179;
},
{
glyphname = Zcaron;
lastChange = "2021-10-05 04:34:11 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = caroncomb.case;
transform = "{1, 0, 0, 1, 346, 384}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 017D;
},
{
glyphname = Zdotaccent;
lastChange = "2021-10-05 04:34:11 +0000";
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 371, 384}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 484;
}
);
unicode = 017B;
},
{
glyphname = a;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{82, 0}";
},
{
name = ogonek;
position = "{190, 10}";
},
{
name = top;
position = "{143, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27 -1 OFFCURVE",
"41 6 OFFCURVE",
"58 19 CURVE SMOOTH",
"75 34 OFFCURVE",
"92 53 OFFCURVE",
"108 74 CURVE",
"109 53 OFFCURVE",
"115 35 OFFCURVE",
"125 21 CURVE SMOOTH",
"136 6 OFFCURVE",
"149 0 OFFCURVE",
"164 0 CURVE SMOOTH",
"197 0 OFFCURVE",
"236 24 OFFCURVE",
"281 72 CURVE",
"283 75 OFFCURVE",
"284 78 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 84 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"234 38 OFFCURVE",
"201 18 OFFCURVE",
"176 18 CURVE SMOOTH",
"151 18 OFFCURVE",
"139 34 OFFCURVE",
"139 65 CURVE SMOOTH",
"139 90 OFFCURVE",
"147 117 OFFCURVE",
"162 145 CURVE",
"163 146 OFFCURVE",
"165 148 OFFCURVE",
"170 149 CURVE SMOOTH",
"175 150 OFFCURVE",
"177 152 OFFCURVE",
"177 155 CURVE SMOOTH",
"177 168 OFFCURVE",
"156 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130 176 OFFCURVE",
"117 173 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 151 OFFCURVE",
"38 122 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"1 -1 OFFCURVE",
"16 -1 CURVE",
"16 -1 LINE"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 35 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 57 OFFCURVE",
"29 69 OFFCURVE",
"36 82 CURVE SMOOTH",
"61 131 OFFCURVE",
"90 155 OFFCURVE",
"125 154 CURVE",
"118 139 OFFCURVE",
"112 121 OFFCURVE",
"109 99 CURVE",
"102 80 OFFCURVE",
"87 62 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44 29 OFFCURVE",
"37 29 CURVE",
"37 29 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01240 8 12 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 102 40 118 40 134 40 150 40 166 40 182 40 198 40 214 40 230 40 246 40 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 40 22 40 38 40 54 40 70 40 86 40 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 40 117 40 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01218 4 36 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
leftKerningGroup = a;
note = a;
rightKerningGroup = n;
unicode = 0061;
},
{
glyphname = aacute;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = abreve;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0103;
},
{
glyphname = abreveacute;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_acutecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAF;
},
{
glyphname = abrevedotbelow;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 40, 0}";
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB7;
},
{
glyphname = abrevegrave;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_gravecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB1;
},
{
glyphname = abrevehookabove;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_hookabovecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB3;
},
{
glyphname = abrevetilde;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = brevecomb_tildecomb;
transform = "{1, 0, 0, 1, 106, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EB5;
},
{
glyphname = acircumflex;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = acircumflexacute;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA5;
},
{
glyphname = acircumflexdotbelow;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 40, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAD;
},
{
glyphname = acircumflexgrave;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA7;
},
{
glyphname = acircumflexhookabove;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA9;
},
{
glyphname = acircumflextilde;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 72, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EAB;
},
{
glyphname = adblgrave;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 33, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0201;
},
{
glyphname = adieresis;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 99, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = adotbelow;
lastChange = "2021-10-05 04:01:47 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 40, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA1;
},
{
glyphname = agrave;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = ahookabove;
lastChange = "2021-10-05 04:04:34 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 116, -8}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 1EA3;
},
{
glyphname = ainvertedbreve;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 87, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0203;
},
{
glyphname = amacron;
lastChange = "2021-10-05 04:52:54 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 84, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0101;
},
{
glyphname = aogonek;
lastChange = "2021-10-05 04:05:11 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 100, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0105;
},
{
glyphname = aring;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = aringacute;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 125, 0}";
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 157, 98}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 01FB;
},
{
glyphname = atilde;
lastChange = "2021-10-05 04:02:00 +0000";
layers = (
{
components = (
{
name = a;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 71, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = ae;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{153, 0}";
},
{
name = top;
position = "{153, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"185 -9 OFFCURVE",
"216 0 OFFCURVE",
"251 19 CURVE SMOOTH",
"284 36 OFFCURVE",
"308 54 OFFCURVE",
"323 72 CURVE SMOOTH",
"325 75 OFFCURVE",
"326 78 OFFCURVE",
"326 81 CURVE SMOOTH",
"326 89 OFFCURVE",
"322 88 OFFCURVE",
"314 79 CURVE SMOOTH",
"300 64 OFFCURVE",
"279 48 OFFCURVE",
"251 33 CURVE SMOOTH",
"220 16 OFFCURVE",
"194 7 OFFCURVE",
"173 7 CURVE SMOOTH",
"147 7 OFFCURVE",
"134 21 OFFCURVE",
"134 49 CURVE SMOOTH",
"134 56 OFFCURVE",
"135 63 OFFCURVE",
"137 72 CURVE",
"174 81 OFFCURVE",
"202 98 OFFCURVE",
"220 121 CURVE SMOOTH",
"231 135 OFFCURVE",
"236 148 OFFCURVE",
"236 161 CURVE SMOOTH",
"236 182 OFFCURVE",
"226 192 OFFCURVE",
"206 192 CURVE SMOOTH",
"191 192 OFFCURVE",
"176 186 OFFCURVE",
"161 173 CURVE",
"156 175 OFFCURVE",
"150 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130 176 OFFCURVE",
"117 173 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 151 OFFCURVE",
"38 122 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"1 -1 OFFCURVE",
"16 -1 CURVE SMOOTH",
"27 -1 OFFCURVE",
"41 6 OFFCURVE",
"58 19 CURVE SMOOTH",
"72 31 OFFCURVE",
"86 46 OFFCURVE",
"101 64 CURVE",
"100 55 LINE",
"100 12 OFFCURVE",
"119 -9 OFFCURVE",
"158 -9 CURVE",
"158 -9 LINE"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 35 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 57 OFFCURVE",
"29 69 OFFCURVE",
"36 82 CURVE SMOOTH",
"61 131 OFFCURVE",
"90 155 OFFCURVE",
"125 154 CURVE",
"118 139 OFFCURVE",
"112 121 OFFCURVE",
"109 99 CURVE",
"102 80 OFFCURVE",
"87 62 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44 29 OFFCURVE",
"37 29 CURVE",
"37 29 LINE"
);
},
{
closed = 1;
nodes = (
"158 126 OFFCURVE",
"195 176 OFFCURVE",
"212 176 CURVE SMOOTH",
"217 176 OFFCURVE",
"219 172 OFFCURVE",
"219 165 CURVE SMOOTH",
"219 156 OFFCURVE",
"215 144 OFFCURVE",
"208 131 CURVE SMOOTH",
"195 110 OFFCURVE",
"173 94 OFFCURVE",
"141 83 CURVE",
"141 83 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0124 8 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 8 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01238 7 56 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 102 44 118 44 134 44 150 44 166 44 182 44 198 44 214 44 230 44 246 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 44 22 44 38 44 54 44 70 44 86 44 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 44 117 44 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0120 18 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 4 117 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 56 25 56 41 56 57 56 73 56 89 56 105 56 121 56 137 56 153 56 169 56 185 56 201 56 217 56 233 56 249 56 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01261 26 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01246 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 4 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 306;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = aeacute;
lastChange = "2021-10-05 04:01:47 +0000";
layers = (
{
components = (
{
name = ae;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 125, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 306;
}
);
unicode = 01FD;
},
{
glyphname = b;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 -24 OFFCURVE",
"131 -11 OFFCURVE",
"156 16 CURVE",
"191 21 OFFCURVE",
"227 39 OFFCURVE",
"263 71 CURVE SMOOTH",
"267 74 OFFCURVE",
"269 78 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 84 OFFCURVE",
"268 85 OFFCURVE",
"266 85 CURVE SMOOTH",
"264 85 OFFCURVE",
"262 84 OFFCURVE",
"259 82 CURVE",
"232 53 OFFCURVE",
"201 36 OFFCURVE",
"167 31 CURVE",
"188 60 OFFCURVE",
"199 88 OFFCURVE",
"199 116 CURVE SMOOTH",
"199 161 OFFCURVE",
"177 194 OFFCURVE",
"134 214 CURVE",
"192 311 OFFCURVE",
"238 375 OFFCURVE",
"271 406 CURVE SMOOTH",
"273 408 OFFCURVE",
"274 410 OFFCURVE",
"274 412 CURVE SMOOTH",
"274 419 OFFCURVE",
"266 423 OFFCURVE",
"251 423 CURVE SMOOTH",
"243 423 OFFCURVE",
"237 421 OFFCURVE",
"233 417 CURVE SMOOTH",
"198 384 OFFCURVE",
"155 319 OFFCURVE",
"103 223 CURVE",
"93 225 OFFCURVE",
"83 226 OFFCURVE",
"74 226 CURVE SMOOTH",
"50 226 OFFCURVE",
"31 218 OFFCURVE",
"18 203 CURVE SMOOTH",
"5 190 OFFCURVE",
"-1 172 OFFCURVE",
"-1 150 CURVE SMOOTH",
"-1 119 OFFCURVE",
"11 90 OFFCURVE",
"34 64 CURVE",
"30 49 OFFCURVE",
"28 37 OFFCURVE",
"28 26 CURVE SMOOTH",
"28 -7 OFFCURVE",
"44 -24 OFFCURVE",
"76 -24 CURVE",
"76 -24 LINE"
);
},
{
closed = 1;
nodes = (
"61 -11 OFFCURVE",
"55 -1 OFFCURVE",
"55 20 CURVE SMOOTH",
"55 27 OFFCURVE",
"56 34 OFFCURVE",
"58 43 CURVE",
"77 29 OFFCURVE",
"97 20 OFFCURVE",
"120 17 CURVE",
"103 -2 OFFCURVE",
"87 -11 OFFCURVE",
"74 -11 CURVE",
"74 -11 LINE"
);
},
{
closed = 1;
nodes = (
"31 110 OFFCURVE",
"26 129 OFFCURVE",
"26 148 CURVE SMOOTH",
"26 167 OFFCURVE",
"32 183 OFFCURVE",
"43 194 CURVE SMOOTH",
"56 207 OFFCURVE",
"74 212 OFFCURVE",
"97 210 CURVE",
"91 198 LINE SMOOTH",
"68 155 OFFCURVE",
"51 119 OFFCURVE",
"42 91 CURVE",
"42 91 LINE"
);
},
{
closed = 1;
nodes = (
"106 34 OFFCURVE",
"83 46 OFFCURVE",
"63 65 CURVE",
"67 79 OFFCURVE",
"73 94 OFFCURVE",
"81 111 CURVE SMOOTH",
"96 142 OFFCURVE",
"112 173 OFFCURVE",
"129 203 CURVE",
"156 194 OFFCURVE",
"170 171 OFFCURVE",
"170 134 CURVE SMOOTH",
"170 111 OFFCURVE",
"163 85 OFFCURVE",
"149 57 CURVE SMOOTH",
"145 48 OFFCURVE",
"139 39 OFFCURVE",
"132 30 CURVE",
"132 30 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01262 5 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01244 5 52 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0122 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 102 62 118 62 134 62 150 62 166 62 182 62 198 62 214 62 230 62 246 62 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 62 22 62 38 62 54 62 70 62 86 62 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 62 117 62 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0124 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 52 122 52 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 105 52 121 52 137 52 153 52 169 52 185 52 201 52 217 52 233 52 249 52 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 52 25 52 41 52 57 52 73 52 89 52 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01258 26 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01264 62 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0126 1 20 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
leftKerningGroup = h;
note = b;
rightKerningGroup = o;
unicode = 0062;
},
{
glyphname = c;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{63, -10}";
},
{
name = top;
position = "{120, 176}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"112 -7 OFFCURVE",
"161 20 OFFCURVE",
"211 73 CURVE",
"213 76 OFFCURVE",
"214 78 OFFCURVE",
"214 81 CURVE SMOOTH",
"214 84 OFFCURVE",
"213 85 OFFCURVE",
"211 86 CURVE",
"209 86 OFFCURVE",
"206 84 OFFCURVE",
"201 79 CURVE SMOOTH",
"173 50 OFFCURVE",
"146 30 OFFCURVE",
"120 19 CURVE SMOOTH",
"101 12 OFFCURVE",
"85 8 OFFCURVE",
"72 8 CURVE SMOOTH",
"47 8 OFFCURVE",
"34 20 OFFCURVE",
"34 44 CURVE SMOOTH",
"34 73 OFFCURVE",
"56 113 OFFCURVE",
"89 138 CURVE SMOOTH",
"102 148 OFFCURVE",
"114 153 OFFCURVE",
"127 153 CURVE SMOOTH",
"136 153 OFFCURVE",
"141 149 OFFCURVE",
"141 141 CURVE SMOOTH",
"141 136 OFFCURVE",
"139 129 OFFCURVE",
"134 121 CURVE SMOOTH",
"131 114 OFFCURVE",
"131 111 OFFCURVE",
"136 111 CURVE SMOOTH",
"137 111 OFFCURVE",
"139 112 OFFCURVE",
"141 114 CURVE",
"144 119 OFFCURVE",
"148 125 OFFCURVE",
"153 134 CURVE SMOOTH",
"158 145 OFFCURVE",
"160 153 OFFCURVE",
"160 159 CURVE SMOOTH",
"160 178 OFFCURVE",
"149 188 OFFCURVE",
"128 188 CURVE SMOOTH",
"102 188 OFFCURVE",
"75 171 OFFCURVE",
"47 138 CURVE SMOOTH",
"21 107 OFFCURVE",
"8 78 OFFCURVE",
"8 53 CURVE SMOOTH",
"8 13 OFFCURVE",
"26 -7 OFFCURVE",
"63 -7 CURVE",
"63 -7 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01227 5 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 27 117 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01229 1 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0128 4 22 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 193;
}
);
leftKerningGroup = o;
note = c;
rightKerningGroup = c;
unicode = 0063;
},
{
glyphname = cacute;
lastChange = "2021-10-05 04:07:31 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 92, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 0107;
},
{
glyphname = ccaron;
lastChange = "2021-10-05 04:07:31 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 92, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 010D;
},
{
glyphname = ccedilla;
lastChange = "2021-10-05 04:06:55 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -25, -10}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = ccircumflex;
lastChange = "2021-10-05 04:07:31 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 49, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 0109;
},
{
glyphname = cdotaccent;
lastChange = "2021-10-05 04:07:31 +0000";
layers = (
{
components = (
{
name = c;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 117, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 193;
}
);
unicode = 010B;
},
{
glyphname = d;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{132, 0}";
},
{
name = center;
position = "{173, 268}";
},
{
name = top;
position = "{309, 429}";
},
{
name = topright;
position = "{365, 425}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27 -1 OFFCURVE",
"41 6 OFFCURVE",
"58 19 CURVE SMOOTH",
"75 34 OFFCURVE",
"92 53 OFFCURVE",
"108 74 CURVE",
"109 53 OFFCURVE",
"115 35 OFFCURVE",
"125 21 CURVE SMOOTH",
"136 6 OFFCURVE",
"149 0 OFFCURVE",
"164 0 CURVE SMOOTH",
"197 0 OFFCURVE",
"236 24 OFFCURVE",
"281 72 CURVE",
"283 75 OFFCURVE",
"284 78 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 84 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"234 38 OFFCURVE",
"201 18 OFFCURVE",
"176 18 CURVE SMOOTH",
"154 18 OFFCURVE",
"142 31 OFFCURVE",
"139 58 CURVE",
"140 85 OFFCURVE",
"149 118 OFFCURVE",
"165 159 CURVE",
"208 196 OFFCURVE",
"245 232 OFFCURVE",
"274 269 CURVE SMOOTH",
"317 321 OFFCURVE",
"338 364 OFFCURVE",
"338 399 CURVE SMOOTH",
"338 419 OFFCURVE",
"328 429 OFFCURVE",
"309 429 CURVE SMOOTH",
"297 429 OFFCURVE",
"285 425 OFFCURVE",
"274 418 CURVE SMOOTH",
"251 403 OFFCURVE",
"224 367 OFFCURVE",
"194 309 CURVE SMOOTH",
"173 268 OFFCURVE",
"154 224 OFFCURVE",
"136 175 CURVE",
"117 177 OFFCURVE",
"94 166 OFFCURVE",
"65 141 CURVE SMOOTH",
"42 122 OFFCURVE",
"24 102 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"1 -1 OFFCURVE",
"16 -1 CURVE",
"16 -1 LINE"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 35 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 57 OFFCURVE",
"29 69 OFFCURVE",
"36 82 CURVE SMOOTH",
"46 103 OFFCURVE",
"59 120 OFFCURVE",
"76 133 CURVE SMOOTH",
"94 148 OFFCURVE",
"112 155 OFFCURVE",
"130 154 CURVE",
"127 150 OFFCURVE",
"120 132 OFFCURVE",
"109 99 CURVE SMOOTH",
"102 81 OFFCURVE",
"88 63 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44 29 OFFCURVE",
"37 29 CURVE",
"37 29 LINE"
);
},
{
closed = 1;
nodes = (
"202 248 OFFCURVE",
"234 315 OFFCURVE",
"270 378 CURVE SMOOTH",
"284 403 OFFCURVE",
"298 415 OFFCURVE",
"311 415 CURVE SMOOTH",
"317 415 OFFCURVE",
"319 411 OFFCURVE",
"319 403 CURVE SMOOTH",
"319 398 LINE",
"315 369 OFFCURVE",
"296 332 OFFCURVE",
"263 285 CURVE SMOOTH",
"236 246 OFFCURVE",
"206 211 OFFCURVE",
"173 179 CURVE",
"173 179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01258 8 28 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 102 58 118 58 134 58 150 58 166 58 182 58 198 58 214 58 230 58 246 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 58 22 58 38 58 54 58 70 58 86 58 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 58 117 58 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01240 1 44 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
leftKerningGroup = o;
note = d;
rightKerningGroup = l;
unicode = 0064;
},
{
glyphname = eth;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"75 -24 OFFCURVE",
"113 13 OFFCURVE",
"138 54 CURVE SMOOTH",
"160 90 OFFCURVE",
"184 153 OFFCURVE",
"189 188 CURVE SMOOTH",
"195 214 OFFCURVE",
"201 268 OFFCURVE",
"201 302 CURVE SMOOTH",
"201 310 OFFCURVE",
"201 317 OFFCURVE",
"200 324 CURVE",
"209 330 OFFCURVE",
"219 336 OFFCURVE",
"231 342 CURVE SMOOTH",
"243 348 OFFCURVE",
"249 353 OFFCURVE",
"249 357 CURVE SMOOTH",
"249 358 LINE",
"247 361 OFFCURVE",
"239 359 OFFCURVE",
"223 353 CURVE SMOOTH",
"214 349 OFFCURVE",
"205 346 OFFCURVE",
"198 343 CURVE",
"190 384 OFFCURVE",
"169 406 OFFCURVE",
"136 406 CURVE SMOOTH",
"125 406 OFFCURVE",
"116 405 OFFCURVE",
"111 402 CURVE SMOOTH",
"106 399 OFFCURVE",
"102 396 OFFCURVE",
"101 392 CURVE SMOOTH",
"101 389 OFFCURVE",
"103 388 OFFCURVE",
"106 389 CURVE SMOOTH",
"109 390 OFFCURVE",
"114 391 OFFCURVE",
"121 391 CURVE SMOOTH",
"134 391 OFFCURVE",
"144 381 OFFCURVE",
"151 360 CURVE SMOOTH",
"154 350 OFFCURVE",
"157 339 OFFCURVE",
"158 326 CURVE",
"145 320 LINE SMOOTH",
"129 312 OFFCURVE",
"118 305 OFFCURVE",
"110 298 CURVE SMOOTH",
"101 288 OFFCURVE",
"90 273 OFFCURVE",
"93 268 CURVE",
"96 265 OFFCURVE",
"104 266 OFFCURVE",
"117 274 CURVE SMOOTH",
"134 283 OFFCURVE",
"148 292 OFFCURVE",
"160 300 CURVE",
"161 291 OFFCURVE",
"161 282 OFFCURVE",
"161 273 CURVE SMOOTH",
"161 216 OFFCURVE",
"158 170 OFFCURVE",
"147 133 CURVE",
"139 88 OFFCURVE",
"89 -9 OFFCURVE",
"46 -9 CURVE SMOOTH",
"34 -9 OFFCURVE",
"30 0 OFFCURVE",
"30 13 CURVE SMOOTH",
"30 41 OFFCURVE",
"50 87 OFFCURVE",
"64 108 CURVE SMOOTH",
"85 145 OFFCURVE",
"113 172 OFFCURVE",
"136 173 CURVE SMOOTH",
"144 174 OFFCURVE",
"148 178 OFFCURVE",
"148 181 CURVE SMOOTH",
"148 185 OFFCURVE",
"144 188 OFFCURVE",
"135 188 CURVE SMOOTH",
"77 188 OFFCURVE",
"29 127 OFFCURVE",
"14 83 CURVE SMOOTH",
"7 65 OFFCURVE",
"2 43 OFFCURVE",
"2 23 CURVE SMOOTH",
"2 -3 OFFCURVE",
"10 -24 OFFCURVE",
"35 -24 CURVE",
"35 -24 LINE"
);
}
);
width = 210;
}
);
unicode = 00F0;
},
{
glyphname = dcaron;
lastChange = "2021-10-05 04:10:12 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 354, 255}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 010F;
},
{
glyphname = dcroat;
lastChange = "2021-10-05 04:10:28 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, 101, 186}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 0111;
},
{
glyphname = dzcaron;
lastChange = "2021-10-05 04:11:08 +0000";
layers = (
{
components = (
{
name = d;
},
{
name = zcaron;
transform = "{1, 0, 0, 1, 264, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 562;
}
);
unicode = 01C6;
},
{
glyphname = e;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{69, 0}";
},
{
name = ogonek;
position = "{148, 10}";
},
{
name = top;
position = "{111, 181}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"91 -9 OFFCURVE",
"122 0 OFFCURVE",
"158 19 CURVE SMOOTH",
"191 36 OFFCURVE",
"214 54 OFFCURVE",
"229 72 CURVE SMOOTH",
"232 75 OFFCURVE",
"233 78 OFFCURVE",
"233 81 CURVE SMOOTH",
"233 89 OFFCURVE",
"229 88 OFFCURVE",
"221 79 CURVE SMOOTH",
"206 64 OFFCURVE",
"185 48 OFFCURVE",
"158 33 CURVE SMOOTH",
"127 16 OFFCURVE",
"101 7 OFFCURVE",
"80 7 CURVE SMOOTH",
"54 7 OFFCURVE",
"41 21 OFFCURVE",
"41 49 CURVE SMOOTH",
"41 56 OFFCURVE",
"42 63 OFFCURVE",
"43 72 CURVE",
"80 81 OFFCURVE",
"108 98 OFFCURVE",
"127 121 CURVE SMOOTH",
"138 135 OFFCURVE",
"143 148 OFFCURVE",
"143 161 CURVE SMOOTH",
"143 182 OFFCURVE",
"133 192 OFFCURVE",
"112 192 CURVE SMOOTH",
"96 192 OFFCURVE",
"79 183 OFFCURVE",
"61 166 CURVE SMOOTH",
"30 137 OFFCURVE",
"6 84 OFFCURVE",
"6 55 CURVE SMOOTH",
"6 12 OFFCURVE",
"25 -9 OFFCURVE",
"64 -9 CURVE",
"64 -9 LINE"
);
},
{
closed = 1;
nodes = (
"64 126 OFFCURVE",
"102 176 OFFCURVE",
"119 176 CURVE SMOOTH",
"124 176 OFFCURVE",
"126 172 OFFCURVE",
"126 165 CURVE SMOOTH",
"126 156 OFFCURVE",
"122 144 OFFCURVE",
"114 131 CURVE SMOOTH",
"102 110 OFFCURVE",
"80 94 OFFCURVE",
"47 83 CURVE",
"47 83 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01219 8 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01213 7 31 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 102 19 118 19 134 19 150 19 166 19 182 19 198 19 214 19 230 19 246 19 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 19 22 19 38 19 54 19 70 19 86 19 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 19 117 19 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 31 25 31 41 31 57 31 73 31 89 31 105 31 121 31 137 31 153 31 169 31 185 31 201 31 217 31 233 31 249 31 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01236 6 13 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01221 2 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 211;
}
);
leftKerningGroup = o;
note = e;
rightKerningGroup = e;
unicode = 0065;
},
{
glyphname = eacute;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 83, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ebreve;
lastChange = "2021-10-05 04:13:00 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 74, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0115;
},
{
glyphname = ecaron;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 83, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 011B;
},
{
glyphname = ecircumflex;
lastChange = "2021-10-05 04:35:17 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = ecircumflexacute;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBF;
},
{
glyphname = ecircumflexdotbelow;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 27, 0}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC7;
},
{
glyphname = ecircumflexgrave;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC1;
},
{
glyphname = ecircumflexhookabove;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC3;
},
{
glyphname = ecircumflextilde;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 40, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EC5;
},
{
glyphname = edblgrave;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 1, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0205;
},
{
glyphname = edieresis;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 67, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = edotaccent;
lastChange = "2021-10-05 04:13:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 108, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0117;
},
{
glyphname = edotbelow;
lastChange = "2021-10-05 04:12:13 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 27, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EB9;
},
{
glyphname = egrave;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 34, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = ehookabove;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 84, 3}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBB;
},
{
glyphname = einvertedbreve;
lastChange = "2021-10-05 04:13:03 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 55, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0207;
},
{
glyphname = emacron;
lastChange = "2021-10-05 04:52:55 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 52, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0113;
},
{
glyphname = eogonek;
lastChange = "2021-10-05 04:46:32 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 58, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 0119;
},
{
glyphname = etilde;
lastChange = "2021-10-05 04:13:02 +0000";
layers = (
{
components = (
{
name = e;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 39, 11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 211;
}
);
unicode = 1EBD;
},
{
glyphname = schwa;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"118 -8 OFFCURVE",
"138 3 OFFCURVE",
"159 21 CURVE SMOOTH",
"196 54 OFFCURVE",
"224 115 OFFCURVE",
"224 149 CURVE SMOOTH",
"224 197 OFFCURVE",
"202 221 OFFCURVE",
"155 221 CURVE SMOOTH",
"123 221 OFFCURVE",
"82 207 OFFCURVE",
"45 177 CURVE SMOOTH",
"34 169 OFFCURVE",
"29 161 OFFCURVE",
"29 157 CURVE SMOOTH",
"29 155 OFFCURVE",
"30 154 OFFCURVE",
"32 154 CURVE SMOOTH",
"35 154 OFFCURVE",
"39 156 OFFCURVE",
"45 161 CURVE SMOOTH",
"75 186 OFFCURVE",
"123 209 OFFCURVE",
"147 209 CURVE SMOOTH",
"178 209 OFFCURVE",
"197 187 OFFCURVE",
"197 155 CURVE SMOOTH",
"197 147 OFFCURVE",
"195 139 OFFCURVE",
"194 129 CURVE",
"147 129 OFFCURVE",
"104 100 OFFCURVE",
"81 73 CURVE SMOOTH",
"68 57 OFFCURVE",
"62 42 OFFCURVE",
"62 28 CURVE SMOOTH",
"62 3 OFFCURVE",
"74 -8 OFFCURVE",
"98 -8 CURVE",
"98 -8 LINE"
);
},
{
closed = 1;
nodes = (
"85 11 OFFCURVE",
"77 15 OFFCURVE",
"77 23 CURVE SMOOTH",
"77 33 OFFCURVE",
"81 47 OFFCURVE",
"90 62 CURVE SMOOTH",
"105 85 OFFCURVE",
"151 113 OFFCURVE",
"190 117 CURVE",
"169 67 OFFCURVE",
"125 11 OFFCURVE",
"90 11 CURVE",
"90 11 LINE"
);
}
);
width = 296;
}
);
unicode = 0259;
},
{
glyphname = f;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160 -197 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98 -151 OFFCURVE",
"-72 -120 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"134 152 OFFCURVE",
"167 153 OFFCURVE",
"174 154 CURVE SMOOTH",
"189 156 OFFCURVE",
"196 160 OFFCURVE",
"196 166 CURVE SMOOTH",
"196 169 OFFCURVE",
"193 172 OFFCURVE",
"187 174 CURVE",
"181 174 OFFCURVE",
"170 173 OFFCURVE",
"154 173 CURVE SMOOTH",
"138 173 OFFCURVE",
"116 174 OFFCURVE",
"90 174 CURVE",
"166 241 OFFCURVE",
"215 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245 359 OFFCURVE",
"249 374 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418 OFFCURVE",
"240 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163 392 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98 279 OFFCURVE",
"79 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-3 173 OFFCURVE",
"-8 170 OFFCURVE",
"-8 165 CURVE SMOOTH",
"-8 164 LINE SMOOTH",
"-7 157 OFFCURVE",
"1 153 OFFCURVE",
"14 152 CURVE",
"41 153 LINE",
"8 83 OFFCURVE",
"-30 11 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-98 -103 OFFCURVE",
"-125 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187 -185 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283 -191 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304 -109 OFFCURVE",
"-295 -100 CURVE",
"-293 -97 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90 OFFCURVE",
"-293 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90 OFFCURVE",
"-302 -93 CURVE",
"-315 -106 OFFCURVE",
"-322 -122 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -160 OFFCURVE",
"-315 -175 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287 -202 OFFCURVE",
"-268 -209 OFFCURVE",
"-243 -209 CURVE",
"-243 -209 LINE"
);
},
{
closed = 1;
nodes = (
"122 248 OFFCURVE",
"154 308 OFFCURVE",
"184 361 CURVE SMOOTH",
"203 393 OFFCURVE",
"216 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 386 OFFCURVE",
"227 371 OFFCURVE",
"219 354 CURVE SMOOTH",
"194 299 OFFCURVE",
"150 241 OFFCURVE",
"87 182 CURVE",
"87 182 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 60 25 60 41 60 57 60 73 60 89 60 105 60 121 60 137 60 153 60 169 60 185 60 201 60 217 60 233 60 249 60 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01256 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0122 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01230 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01240 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01266 20 56 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01269 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01234 1 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 4 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 154;
}
);
leftKerningGroup = f;
note = f;
rightKerningGroup = f;
unicode = 0066;
},
{
glyphname = g;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{-193, -330}";
},
{
name = top;
position = "{165, 191}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-154 -334 OFFCURVE",
"-112 -323 OFFCURVE",
"-68 -302 CURVE SMOOTH",
"-28 -283 OFFCURVE",
"8 -257 OFFCURVE",
"39 -225 CURVE SMOOTH",
"96 -168 OFFCURVE",
"136 -93 OFFCURVE",
"161 0 CURVE",
"178 3 OFFCURVE",
"192 4 OFFCURVE",
"201 4 CURVE SMOOTH",
"228 4 OFFCURVE",
"242 -3 OFFCURVE",
"242 -16 CURVE SMOOTH",
"242 -23 OFFCURVE",
"238 -30 OFFCURVE",
"229 -39 CURVE",
"227 -40 OFFCURVE",
"226 -42 OFFCURVE",
"226 -44 CURVE SMOOTH",
"226 -46 OFFCURVE",
"227 -47 OFFCURVE",
"230 -47 CURVE SMOOTH",
"232 -47 OFFCURVE",
"234 -46 OFFCURVE",
"235 -44 CURVE",
"248 -33 OFFCURVE",
"254 -22 OFFCURVE",
"254 -11 CURVE SMOOTH",
"254 6 OFFCURVE",
"238 16 OFFCURVE",
"207 20 CURVE SMOOTH",
"202 21 OFFCURVE",
"196 21 OFFCURVE",
"191 21 CURVE SMOOTH",
"183 21 OFFCURVE",
"175 21 OFFCURVE",
"166 19 CURVE",
"185 97 OFFCURVE",
"196 147 OFFCURVE",
"196 169 CURVE SMOOTH",
"196 175 OFFCURVE",
"190 178 OFFCURVE",
"178 178 CURVE SMOOTH",
"165 178 OFFCURVE",
"157 174 OFFCURVE",
"155 166 CURVE SMOOTH",
"154 156 OFFCURVE",
"152 144 OFFCURVE",
"149 130 CURVE SMOOTH",
"144 112 OFFCURVE",
"138 99 OFFCURVE",
"132 91 CURVE SMOOTH",
"115 71 OFFCURVE",
"94 56 OFFCURVE",
"71 46 CURVE SMOOTH",
"62 41 OFFCURVE",
"54 39 OFFCURVE",
"48 39 CURVE SMOOTH",
"39 39 OFFCURVE",
"35 43 OFFCURVE",
"35 52 CURVE SMOOTH",
"35 74 OFFCURVE",
"53 102 OFFCURVE",
"88 136 CURVE SMOOTH",
"127 173 OFFCURVE",
"165 191 OFFCURVE",
"203 191 CURVE SMOOTH",
"232 191 OFFCURVE",
"247 184 OFFCURVE",
"247 171 CURVE SMOOTH",
"247 165 OFFCURVE",
"244 158 OFFCURVE",
"237 150 CURVE SMOOTH",
"236 149 OFFCURVE",
"235 147 OFFCURVE",
"235 146 CURVE SMOOTH",
"235 143 OFFCURVE",
"236 142 OFFCURVE",
"239 142 CURVE SMOOTH",
"240 142 OFFCURVE",
"242 143 OFFCURVE",
"244 145 CURVE SMOOTH",
"253 157 OFFCURVE",
"258 168 OFFCURVE",
"258 177 CURVE SMOOTH",
"258 196 OFFCURVE",
"241 206 OFFCURVE",
"208 206 CURVE SMOOTH",
"165 206 OFFCURVE",
"123 189 OFFCURVE",
"81 156 CURVE SMOOTH",
"29 116 OFFCURVE",
"3 79 OFFCURVE",
"3 44 CURVE SMOOTH",
"3 20 OFFCURVE",
"12 8 OFFCURVE",
"31 8 CURVE SMOOTH",
"46 8 OFFCURVE",
"63 16 OFFCURVE",
"83 31 CURVE SMOOTH",
"93 38 OFFCURVE",
"107 52 OFFCURVE",
"128 73 CURVE SMOOTH",
"143 88 LINE",
"127 10 LINE",
"-70 -41 OFFCURVE",
"-189 -93 OFFCURVE",
"-253 -161 CURVE SMOOTH",
"-282 -192 OFFCURVE",
"-297 -221 OFFCURVE",
"-297 -250 CURVE SMOOTH",
"-297 -299 OFFCURVE",
"-256 -334 OFFCURVE",
"-195 -334 CURVE",
"-195 -334 LINE"
);
},
{
closed = 1;
nodes = (
"-225 -315 OFFCURVE",
"-260 -289 OFFCURVE",
"-260 -248 CURVE SMOOTH",
"-260 -221 OFFCURVE",
"-248 -194 OFFCURVE",
"-225 -167 CURVE SMOOTH",
"-198 -135 OFFCURVE",
"-159 -108 OFFCURVE",
"-108 -85 CURVE SMOOTH",
"-72 -69 OFFCURVE",
"-29 -53 OFFCURVE",
"20 -38 CURVE SMOOTH",
"44 -30 OFFCURVE",
"78 -20 OFFCURVE",
"123 -8 CURVE",
"100 -108 OFFCURVE",
"56 -187 OFFCURVE",
"-8 -244 CURVE SMOOTH",
"-62 -291 OFFCURVE",
"-117 -315 OFFCURVE",
"-173 -315 CURVE",
"-173 -315 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01287 8 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 8 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01277 7 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01230 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01242 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01264 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01279 57 77 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 87 117 87 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01275 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01275 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01254 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01210 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 10 24 10 40 10 56 10 72 10 88 10 104 10 120 10 136 10 152 10 168 10 184 10 200 10 216 10 232 10 248 10 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01230 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01242 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01264 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01279 54 75 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01254 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01290 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 90 23 90 39 90 55 90 71 90 87 90 103 90 119 90 135 90 151 90 167 90 183 90 199 90 215 90 231 90 247 90 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 266;
}
);
leftKerningGroup = g;
note = g;
rightKerningGroup = g;
unicode = 0067;
},
{
glyphname = gbreve;
lastChange = "2021-10-05 04:13:30 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 128, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 011F;
},
{
glyphname = gcaron;
lastChange = "2021-10-05 04:13:30 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 137, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 01E7;
},
{
glyphname = gcircumflex;
lastChange = "2021-10-05 04:13:30 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 94, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 011D;
},
{
glyphname = gcommaaccent;
lastChange = "2021-10-05 04:13:30 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = commaturnedabovecomb;
transform = "{1, 0, 0, 1, 156, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 0123;
},
{
glyphname = gdotaccent;
lastChange = "2021-10-05 04:13:30 +0000";
layers = (
{
components = (
{
name = g;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 162, 21}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 266;
}
);
unicode = 0121;
},
{
glyphname = h;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{101, 0}";
},
{
name = center;
position = "{14, 118}";
},
{
name = top;
position = "{223, 425}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"18 1 OFFCURVE",
"25 4 OFFCURVE",
"32 9 CURVE",
"39 18 OFFCURVE",
"46 28 OFFCURVE",
"53 38 CURVE SMOOTH",
"68 58 OFFCURVE",
"82 73 OFFCURVE",
"95 83 CURVE SMOOTH",
"105 90 OFFCURVE",
"114 94 OFFCURVE",
"121 94 CURVE SMOOTH",
"129 94 OFFCURVE",
"135 89 OFFCURVE",
"140 78 CURVE",
"152 33 LINE SMOOTH",
"157 14 OFFCURVE",
"167 4 OFFCURVE",
"179 4 CURVE SMOOTH",
"207 4 OFFCURVE",
"243 27 OFFCURVE",
"288 73 CURVE",
"290 76 OFFCURVE",
"291 78 OFFCURVE",
"291 81 CURVE SMOOTH",
"291 84 OFFCURVE",
"290 85 OFFCURVE",
"288 85 CURVE SMOOTH",
"285 85 OFFCURVE",
"281 83 OFFCURVE",
"278 79 CURVE SMOOTH",
"268 68 OFFCURVE",
"256 58 OFFCURVE",
"243 48 CURVE SMOOTH",
"225 35 OFFCURVE",
"210 29 OFFCURVE",
"199 29 CURVE SMOOTH",
"189 29 OFFCURVE",
"182 38 OFFCURVE",
"179 55 CURVE SMOOTH",
"174 104 LINE SMOOTH",
"172 121 OFFCURVE",
"165 130 OFFCURVE",
"155 130 CURVE SMOOTH",
"139 130 OFFCURVE",
"118 119 OFFCURVE",
"91 96 CURVE SMOOTH",
"70 76 OFFCURVE",
"56 61 OFFCURVE",
"46 51 CURVE SMOOTH",
"34 39 LINE",
"45 84 OFFCURVE",
"61 124 OFFCURVE",
"80 159 CURVE",
"172 238 OFFCURVE",
"228 307 OFFCURVE",
"247 367 CURVE SMOOTH",
"251 378 OFFCURVE",
"253 389 OFFCURVE",
"253 398 CURVE SMOOTH",
"253 419 OFFCURVE",
"244 430 OFFCURVE",
"226 430 CURVE SMOOTH",
"201 430 OFFCURVE",
"179 415 OFFCURVE",
"158 384 CURVE SMOOTH",
"132 347 OFFCURVE",
"101 286 OFFCURVE",
"64 201 CURVE SMOOTH",
"34 133 OFFCURVE",
"13 81 OFFCURVE",
"2 44 CURVE SMOOTH",
"0 37 OFFCURVE",
"-1 31 OFFCURVE",
"-1 24 CURVE SMOOTH",
"-1 9 OFFCURVE",
"4 1 OFFCURVE",
"13 1 CURVE",
"13 1 LINE"
);
},
{
closed = 1;
nodes = (
"116 248 OFFCURVE",
"148 315 OFFCURVE",
"184 378 CURVE SMOOTH",
"199 403 OFFCURVE",
"212 415 OFFCURVE",
"223 415 CURVE SMOOTH",
"230 415 OFFCURVE",
"234 410 OFFCURVE",
"234 399 CURVE SMOOTH",
"234 392 OFFCURVE",
"231 382 OFFCURVE",
"226 369 CURVE SMOOTH",
"215 340 OFFCURVE",
"195 307 OFFCURVE",
"166 268 CURVE SMOOTH",
"141 235 OFFCURVE",
"115 206 OFFCURVE",
"88 179 CURVE",
"88 179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 7 57 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 57 25 57 41 57 57 57 73 57 89 57 105 57 121 57 137 57 153 57 169 57 185 57 201 57 217 57 233 57 249 57 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01226 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01234 2 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
leftKerningGroup = h;
note = h;
rightKerningGroup = n;
unicode = 0068;
},
{
glyphname = hbar;
lastChange = "2021-10-05 04:13:53 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = strokeshortcomb;
transform = "{0.84509, 0, 0, 1, -47, 36}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 283;
}
);
unicode = 0127;
},
{
glyphname = hcircumflex;
lastChange = "2021-10-05 04:14:08 +0000";
layers = (
{
components = (
{
name = h;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 152, 255}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 283;
}
);
unicode = 0125;
},
{
glyphname = i;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{86, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"101 -1 OFFCURVE",
"142 23 OFFCURVE",
"189 73 CURVE",
"191 76 OFFCURVE",
"192 78 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 84 OFFCURVE",
"191 85 OFFCURVE",
"189 86 CURVE",
"186 86 OFFCURVE",
"183 84 OFFCURVE",
"179 79 CURVE SMOOTH",
"139 37 OFFCURVE",
"106 16 OFFCURVE",
"79 16 CURVE SMOOTH",
"60 16 OFFCURVE",
"50 30 OFFCURVE",
"50 57 CURVE SMOOTH",
"50 64 OFFCURVE",
"51 71 OFFCURVE",
"52 78 CURVE SMOOTH",
"53 89 OFFCURVE",
"59 104 OFFCURVE",
"68 121 CURVE SMOOTH",
"93 164 LINE",
"94 169 LINE SMOOTH",
"94 175 OFFCURVE",
"89 178 OFFCURVE",
"79 178 CURVE SMOOTH",
"66 178 OFFCURVE",
"57 174 OFFCURVE",
"53 167 CURVE SMOOTH",
"30 133 OFFCURVE",
"17 104 OFFCURVE",
"16 80 CURVE SMOOTH",
"12 27 OFFCURVE",
"29 1 OFFCURVE",
"68 0 CURVE",
"68 0 LINE"
);
},
{
closed = 1;
nodes = (
"154 250 OFFCURVE",
"163 260 OFFCURVE",
"163 281 CURVE SMOOTH",
"163 294 OFFCURVE",
"155 301 OFFCURVE",
"140 301 CURVE SMOOTH",
"134 301 OFFCURVE",
"128 299 OFFCURVE",
"122 294 CURVE SMOOTH",
"115 289 OFFCURVE",
"111 282 OFFCURVE",
"111 274 CURVE SMOOTH",
"111 262 OFFCURVE",
"123 250 OFFCURVE",
"135 250 CURVE",
"135 250 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 5 122 5 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01229 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 102 29 118 29 134 29 150 29 166 29 182 29 198 29 214 29 230 29 246 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 29 22 29 38 29 54 29 70 29 86 29 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 29 117 29 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01213 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01231 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 31 23 31 39 31 55 31 71 31 87 31 103 31 119 31 135 31 151 31 167 31 183 31 199 31 215 31 231 31 247 31 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
leftKerningGroup = i;
note = i;
rightKerningGroup = i;
unicode = 0069;
},
{
glyphname = idotless;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{68, 0}";
},
{
name = ogonek;
position = "{100, 10}";
},
{
name = top;
position = "{82, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"101 -1 OFFCURVE",
"142 23 OFFCURVE",
"189 73 CURVE",
"191 76 OFFCURVE",
"192 78 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 84 OFFCURVE",
"191 85 OFFCURVE",
"189 86 CURVE",
"186 86 OFFCURVE",
"183 84 OFFCURVE",
"179 79 CURVE SMOOTH",
"139 37 OFFCURVE",
"106 16 OFFCURVE",
"79 16 CURVE SMOOTH",
"60 16 OFFCURVE",
"50 30 OFFCURVE",
"50 57 CURVE SMOOTH",
"50 64 OFFCURVE",
"51 71 OFFCURVE",
"52 78 CURVE SMOOTH",
"53 89 OFFCURVE",
"58 104 OFFCURVE",
"68 121 CURVE SMOOTH",
"93 164 LINE",
"94 169 LINE SMOOTH",
"95 175 OFFCURVE",
"89 178 OFFCURVE",
"79 178 CURVE SMOOTH",
"66 178 OFFCURVE",
"57 174 OFFCURVE",
"53 167 CURVE SMOOTH",
"30 133 OFFCURVE",
"17 104 OFFCURVE",
"16 80 CURVE SMOOTH",
"12 27 OFFCURVE",
"29 1 OFFCURVE",
"68 0 CURVE",
"68 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01218 8 4 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 18 117 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\01220 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 20 23 20 39 20 55 20 71 20 87 20 103 20 119 20 135 20 151 20 167 20 183 20 199 20 215 20 231 20 247 20 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = iacute;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = ibreve;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 45, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012D;
},
{
glyphname = icircumflex;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idblgrave;
lastChange = "2021-10-05 04:45:27 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, -28, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0209;
},
{
glyphname = idieresis;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 38, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = idotaccent;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 79, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
},
{
glyphname = idotbelow;
lastChange = "2021-10-05 05:05:18 +0000";
layers = (
{
components = (
{
name = i;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 44, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 1ECB;
},
{
glyphname = igrave;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 5, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = ihookabove;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 55, -8}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 1EC9;
},
{
glyphname = iinvertedbreve;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 26, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 020B;
},
{
glyphname = imacron;
lastChange = "2021-10-05 04:52:55 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 23, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012B;
},
{
glyphname = iogonek;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 79, 0}";
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 10, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 012F;
},
{
glyphname = itilde;
lastChange = "2021-10-05 04:45:44 +0000";
layers = (
{
components = (
{
name = idotless;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 10, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0129;
},
{
glyphname = j;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-235 -334 OFFCURVE",
"-168 -300 OFFCURVE",
"-101 -231 CURVE SMOOTH",
"-43 -171 OFFCURVE",
"5 -95 OFFCURVE",
"43 -4 CURVE",
"93 4 LINE",
"120 4 OFFCURVE",
"133 -3 OFFCURVE",
"133 -16 CURVE SMOOTH",
"133 -23 OFFCURVE",
"129 -30 OFFCURVE",
"121 -39 CURVE",
"119 -40 OFFCURVE",
"118 -42 OFFCURVE",
"118 -44 CURVE SMOOTH",
"118 -46 OFFCURVE",
"119 -47 OFFCURVE",
"122 -47 CURVE SMOOTH",
"123 -47 OFFCURVE",
"125 -46 OFFCURVE",
"126 -44 CURVE",
"139 -33 OFFCURVE",
"145 -22 OFFCURVE",
"145 -11 CURVE SMOOTH",
"145 9 OFFCURVE",
"124 21 OFFCURVE",
"81 21 CURVE SMOOTH",
"72 21 OFFCURVE",
"63 21 OFFCURVE",
"53 19 CURVE",
"68 64 OFFCURVE",
"103 128 OFFCURVE",
"126 153 CURVE SMOOTH",
"127 154 OFFCURVE",
"128 156 OFFCURVE",
"128 157 CURVE SMOOTH",
"128 163 OFFCURVE",
"121 166 OFFCURVE",
"108 166 CURVE SMOOTH",
"95 166 OFFCURVE",
"84 162 OFFCURVE",
"76 154 CURVE SMOOTH",
"66 144 OFFCURVE",
"54 122 OFFCURVE",
"41 88 CURVE SMOOTH",
"36 75 OFFCURVE",
"27 48 OFFCURVE",
"14 9 CURVE",
"-77 -13 OFFCURVE",
"-155 -39 OFFCURVE",
"-222 -69 CURVE SMOOTH",
"-283 -96 OFFCURVE",
"-329 -127 OFFCURVE",
"-361 -161 CURVE SMOOTH",
"-390 -192 OFFCURVE",
"-405 -221 OFFCURVE",
"-405 -250 CURVE SMOOTH",
"-405 -299 OFFCURVE",
"-366 -334 OFFCURVE",
"-303 -334 CURVE",
"-303 -334 LINE"
);
},
{
closed = 1;
nodes = (
"-347 -314 OFFCURVE",
"-368 -295 OFFCURVE",
"-368 -256 CURVE SMOOTH",
"-368 -235 OFFCURVE",
"-361 -212 OFFCURVE",
"-347 -189 CURVE SMOOTH",
"-332 -164 OFFCURVE",
"-311 -143 OFFCURVE",
"-286 -124 CURVE SMOOTH",
"-250 -99 OFFCURVE",
"-203 -75 OFFCURVE",
"-144 -54 CURVE SMOOTH",
"-109 -41 OFFCURVE",
"-58 -26 OFFCURVE",
"9 -8 CURVE",
"-20 -76 OFFCURVE",
"-49 -131 OFFCURVE",
"-78 -172 CURVE SMOOTH",
"-118 -227 OFFCURVE",
"-164 -266 OFFCURVE",
"-216 -290 CURVE SMOOTH",
"-251 -306 OFFCURVE",
"-280 -314 OFFCURVE",
"-305 -314 CURVE",
"-305 -314 LINE"
);
},
{
closed = 1;
nodes = (
"185 250 OFFCURVE",
"194 260 OFFCURVE",
"194 281 CURVE SMOOTH",
"194 294 OFFCURVE",
"186 301 OFFCURVE",
"171 301 CURVE SMOOTH",
"165 301 OFFCURVE",
"159 299 OFFCURVE",
"153 294 CURVE SMOOTH",
"146 289 OFFCURVE",
"143 282 OFFCURVE",
"143 274 CURVE SMOOTH",
"143 262 OFFCURVE",
"154 250 OFFCURVE",
"166 250 CURVE",
"166 250 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01271 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 5 122 5 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 105 5 121 5 137 5 153 5 169 5 185 5 201 5 217 5 233 5 249 5 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 5 25 5 41 5 57 5 73 5 89 5 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01271 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01214 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01226 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 39 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01263 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 2 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01265 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 65 23 65 39 65 55 65 71 65 87 65 103 65 119 65 135 65 151 65 167 65 183 65 199 65 215 65 231 65 247 65 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 155;
}
);
leftKerningGroup = j;
note = j;
rightKerningGroup = j;
unicode = 006A;
},
{
glyphname = jdotless;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{78, -320}";
},
{
name = top;
position = "{108, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-235 -334 OFFCURVE",
"-168 -300 OFFCURVE",
"-101 -231 CURVE SMOOTH",
"-43 -171 OFFCURVE",
"5 -95 OFFCURVE",
"43 -4 CURVE",
"93 4 LINE",
"120 4 OFFCURVE",
"133 -3 OFFCURVE",
"133 -16 CURVE SMOOTH",
"133 -23 OFFCURVE",
"129 -30 OFFCURVE",
"121 -39 CURVE",
"119 -40 OFFCURVE",
"118 -42 OFFCURVE",
"118 -44 CURVE SMOOTH",
"118 -46 OFFCURVE",
"119 -47 OFFCURVE",
"122 -47 CURVE SMOOTH",
"123 -47 OFFCURVE",
"125 -46 OFFCURVE",
"126 -44 CURVE",
"139 -33 OFFCURVE",
"145 -22 OFFCURVE",
"145 -11 CURVE SMOOTH",
"145 6 OFFCURVE",
"130 16 OFFCURVE",
"99 20 CURVE SMOOTH",
"93 21 OFFCURVE",
"87 21 OFFCURVE",
"80 21 CURVE SMOOTH",
"71 21 OFFCURVE",
"62 21 OFFCURVE",
"53 19 CURVE",
"68 64 OFFCURVE",
"103 128 OFFCURVE",
"126 153 CURVE SMOOTH",
"127 154 OFFCURVE",
"128 156 OFFCURVE",
"128 157 CURVE SMOOTH",
"128 163 OFFCURVE",
"121 166 OFFCURVE",
"108 166 CURVE SMOOTH",
"95 166 OFFCURVE",
"84 162 OFFCURVE",
"76 154 CURVE SMOOTH",
"66 144 OFFCURVE",
"54 122 OFFCURVE",
"41 88 CURVE SMOOTH",
"36 75 OFFCURVE",
"27 48 OFFCURVE",
"14 9 CURVE",
"-77 -13 OFFCURVE",
"-155 -39 OFFCURVE",
"-222 -69 CURVE SMOOTH",
"-283 -96 OFFCURVE",
"-329 -127 OFFCURVE",
"-361 -161 CURVE SMOOTH",
"-390 -192 OFFCURVE",
"-405 -221 OFFCURVE",
"-405 -250 CURVE SMOOTH",
"-405 -299 OFFCURVE",
"-366 -334 OFFCURVE",
"-303 -334 CURVE",
"-303 -334 LINE"
);
},
{
closed = 1;
nodes = (
"-347 -314 OFFCURVE",
"-368 -295 OFFCURVE",
"-368 -256 CURVE SMOOTH",
"-368 -235 OFFCURVE",
"-361 -212 OFFCURVE",
"-347 -189 CURVE SMOOTH",
"-332 -164 OFFCURVE",
"-311 -143 OFFCURVE",
"-286 -124 CURVE SMOOTH",
"-250 -99 OFFCURVE",
"-203 -75 OFFCURVE",
"-144 -54 CURVE SMOOTH",
"-109 -41 OFFCURVE",
"-58 -26 OFFCURVE",
"9 -8 CURVE",
"-20 -76 OFFCURVE",
"-49 -131 OFFCURVE",
"-78 -172 CURVE SMOOTH",
"-118 -227 OFFCURVE",
"-164 -266 OFFCURVE",
"-216 -290 CURVE SMOOTH",
"-251 -306 OFFCURVE",
"-280 -314 OFFCURVE",
"-305 -314 CURVE",
"-305 -314 LINE"
);
}
);
width = 155;
}
);
unicode = 0237;
},
{
glyphname = jcircumflex;
lastChange = "2021-10-05 04:14:44 +0000";
layers = (
{
components = (
{
name = jdotless;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 37, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 155;
}
);
unicode = 0135;
},
{
glyphname = k;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{102, 0}";
},
{
name = top;
position = "{144, 425}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"22 -11 OFFCURVE",
"27 -9 OFFCURVE",
"33 -6 CURVE",
"50 38 OFFCURVE",
"64 71 OFFCURVE",
"77 93 CURVE",
"88 68 OFFCURVE",
"101 48 OFFCURVE",
"118 31 CURVE SMOOTH",
"136 12 OFFCURVE",
"154 2 OFFCURVE",
"173 2 CURVE SMOOTH",
"192 2 OFFCURVE",
"215 10 OFFCURVE",
"243 26 CURVE SMOOTH",
"268 40 OFFCURVE",
"289 56 OFFCURVE",
"306 73 CURVE",
"308 76 OFFCURVE",
"309 78 OFFCURVE",
"309 81 CURVE SMOOTH",
"309 84 OFFCURVE",
"308 85 OFFCURVE",
"306 86 CURVE",
"304 86 OFFCURVE",
"301 84 OFFCURVE",
"296 79 CURVE SMOOTH",
"276 58 OFFCURVE",
"257 43 OFFCURVE",
"239 34 CURVE SMOOTH",
"227 27 OFFCURVE",
"215 24 OFFCURVE",
"203 24 CURVE SMOOTH",
"180 24 OFFCURVE",
"159 35 OFFCURVE",
"139 58 CURVE SMOOTH",
"122 77 OFFCURVE",
"110 100 OFFCURVE",
"101 129 CURVE",
"109 140 OFFCURVE",
"118 152 OFFCURVE",
"129 165 CURVE SMOOTH",
"151 190 OFFCURVE",
"171 203 OFFCURVE",
"188 203 CURVE SMOOTH",
"200 203 OFFCURVE",
"207 197 OFFCURVE",
"209 184 CURVE SMOOTH",
"210 177 OFFCURVE",
"212 174 OFFCURVE",
"216 174 CURVE SMOOTH",
"224 174 OFFCURVE",
"229 187 OFFCURVE",
"229 198 CURVE SMOOTH",
"229 214 OFFCURVE",
"217 228 OFFCURVE",
"198 228 CURVE SMOOTH",
"180 228 OFFCURVE",
"161 217 OFFCURVE",
"141 196 CURVE SMOOTH",
"126 179 OFFCURVE",
"111 161 OFFCURVE",
"97 142 CURVE",
"94 152 OFFCURVE",
"93 161 OFFCURVE",
"92 170 CURVE",
"177 245 OFFCURVE",
"229 311 OFFCURVE",
"247 367 CURVE SMOOTH",
"251 378 OFFCURVE",
"253 389 OFFCURVE",
"253 398 CURVE SMOOTH",
"253 419 OFFCURVE",
"244 430 OFFCURVE",
"226 430 CURVE SMOOTH",
"201 430 OFFCURVE",
"179 415 OFFCURVE",
"158 384 CURVE SMOOTH",
"133 347 OFFCURVE",
"101 283 OFFCURVE",
"64 194 CURVE SMOOTH",
"34 125 OFFCURVE",
"13 70 OFFCURVE",
"1 30 CURVE",
"-1 26 OFFCURVE",
"-2 21 OFFCURVE",
"-2 16 CURVE SMOOTH",
"-2 -2 OFFCURVE",
"4 -11 OFFCURVE",
"17 -11 CURVE",
"17 -11 LINE"
);
},
{
closed = 1;
nodes = (
"34 53 OFFCURVE",
"45 87 OFFCURVE",
"64 129 CURVE",
"66 122 OFFCURVE",
"69 113 OFFCURVE",
"72 104 CURVE",
"58 81 OFFCURVE",
"44 55 OFFCURVE",
"31 26 CURVE",
"31 26 LINE"
);
},
{
closed = 1;
nodes = (
"116 248 OFFCURVE",
"148 315 OFFCURVE",
"184 378 CURVE SMOOTH",
"199 403 OFFCURVE",
"212 415 OFFCURVE",
"223 415 CURVE SMOOTH",
"230 415 OFFCURVE",
"234 410 OFFCURVE",
"234 399 CURVE SMOOTH",
"234 392 OFFCURVE",
"231 382 OFFCURVE",
"226 369 CURVE SMOOTH",
"215 340 OFFCURVE",
"195 307 OFFCURVE",
"166 268 CURVE SMOOTH",
"141 235 OFFCURVE",
"115 206 OFFCURVE",
"88 179 CURVE",
"88 179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01276 7 2 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 2 25 2 41 2 57 2 73 2 89 2 105 2 121 2 137 2 153 2 169 2 185 2 201 2 217 2 233 2 249 2 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01276 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01281 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01242 4 56 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01274 1 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 4 34 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 288;
}
);
leftKerningGroup = h;
note = k;
rightKerningGroup = k;
unicode = 006B;
},
{
glyphname = kcommaaccent;
lastChange = "2021-10-05 04:14:53 +0000";
layers = (
{
components = (
{
name = k;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 33, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 288;
}
);
unicode = 0137;
},
{
glyphname = kgreenlandic;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"22 -11 OFFCURVE",
"27 -9 OFFCURVE",
"33 -6 CURVE",
"34 -2 OFFCURVE",
"36 1 OFFCURVE",
"37 5 CURVE",
"36 37 LINE",
"34 34 OFFCURVE",
"33 30 OFFCURVE",
"31 26 CURVE",
"34 53 OFFCURVE",
"45 87 OFFCURVE",
"64 129 CURVE",
"66 122 OFFCURVE",
"86 61 OFFCURVE",
"118 31 CURVE SMOOTH",
"138 13 OFFCURVE",
"154 2 OFFCURVE",
"173 2 CURVE SMOOTH",
"192 2 OFFCURVE",
"215 10 OFFCURVE",
"243 26 CURVE SMOOTH",
"268 40 OFFCURVE",
"289 56 OFFCURVE",
"306 73 CURVE",
"308 76 OFFCURVE",
"309 78 OFFCURVE",
"309 81 CURVE SMOOTH",
"309 84 OFFCURVE",
"308 85 OFFCURVE",
"306 86 CURVE",
"304 86 OFFCURVE",
"301 84 OFFCURVE",
"296 79 CURVE SMOOTH",
"276 58 OFFCURVE",
"257 43 OFFCURVE",
"239 34 CURVE SMOOTH",
"227 27 OFFCURVE",
"215 24 OFFCURVE",
"203 24 CURVE SMOOTH",
"180 24 OFFCURVE",
"159 35 OFFCURVE",
"139 58 CURVE SMOOTH",
"122 77 OFFCURVE",
"94 129 OFFCURVE",
"88 179 CURVE",
"107 225 OFFCURVE",
"127 271 OFFCURVE",
"150 314 CURVE",
"152 327 OFFCURVE",
"147 334 OFFCURVE",
"140 334 CURVE SMOOTH",
"133 334 OFFCURVE",
"124 326 OFFCURVE",
"118 314 CURVE SMOOTH",
"102 281 OFFCURVE",
"84 241 OFFCURVE",
"64 194 CURVE SMOOTH",
"34 125 OFFCURVE",
"13 70 OFFCURVE",
"1 30 CURVE",
"-1 26 OFFCURVE",
"-2 21 OFFCURVE",
"-2 16 CURVE SMOOTH",
"-2 -2 OFFCURVE",
"4 -11 OFFCURVE",
"17 -11 CURVE",
"17 -11 LINE"
);
},
{
closed = 1;
nodes = (
"81 133 LINE",
"91 146 OFFCURVE",
"102 159 OFFCURVE",
"116 174 CURVE SMOOTH",
"143 203 OFFCURVE",
"168 218 OFFCURVE",
"189 218 CURVE SMOOTH",
"203 218 OFFCURVE",
"212 211 OFFCURVE",
"215 196 CURVE SMOOTH",
"216 188 OFFCURVE",
"218 185 OFFCURVE",
"223 185 CURVE SMOOTH",
"233 185 OFFCURVE",
"239 200 OFFCURVE",
"239 212 CURVE SMOOTH",
"239 231 OFFCURVE",
"224 247 OFFCURVE",
"201 247 CURVE SMOOTH",
"179 247 OFFCURVE",
"155 234 OFFCURVE",
"130 210 CURVE SMOOTH",
"112 191 OFFCURVE",
"93 170 OFFCURVE",
"76 148 CURVE",
"81 133 LINE"
);
}
);
width = 288;
}
);
unicode = 0138;
},
{
glyphname = l;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{58, 0}";
},
{
name = center;
position = "{81, 213}";
},
{
name = top;
position = "{214, 425}";
},
{
name = topright;
position = "{265, 425}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"91 -1 OFFCURVE",
"132 23 OFFCURVE",
"179 73 CURVE SMOOTH",
"182 76 OFFCURVE",
"183 78 OFFCURVE",
"183 81 CURVE SMOOTH",
"183 84 OFFCURVE",
"182 85 OFFCURVE",
"179 86 CURVE",
"176 86 OFFCURVE",
"173 84 OFFCURVE",
"169 79 CURVE SMOOTH",
"148 56 OFFCURVE",
"128 40 OFFCURVE",
"109 29 CURVE SMOOTH",
"92 19 OFFCURVE",
"78 14 OFFCURVE",
"67 14 CURVE SMOOTH",
"50 14 OFFCURVE",
"41 27 OFFCURVE",
"41 54 CURVE SMOOTH",
"41 89 OFFCURVE",
"51 124 OFFCURVE",
"70 159 CURVE",
"162 238 OFFCURVE",
"218 307 OFFCURVE",
"237 367 CURVE SMOOTH",
"241 378 OFFCURVE",
"243 389 OFFCURVE",
"243 398 CURVE SMOOTH",
"243 419 OFFCURVE",
"234 430 OFFCURVE",
"216 430 CURVE SMOOTH",
"183 430 OFFCURVE",
"144 387 OFFCURVE",
"98 302 CURVE SMOOTH",
"62 237 OFFCURVE",
"38 181 OFFCURVE",
"25 136 CURVE SMOOTH",
"16 101 OFFCURVE",
"11 75 OFFCURVE",
"11 56 CURVE SMOOTH",
"11 19 OFFCURVE",
"27 1 OFFCURVE",
"58 0 CURVE",
"58 0 LINE"
);
},
{
closed = 1;
nodes = (
"106 248 OFFCURVE",
"138 315 OFFCURVE",
"175 378 CURVE SMOOTH",
"189 403 OFFCURVE",
"202 415 OFFCURVE",
"213 415 CURVE SMOOTH",
"220 415 OFFCURVE",
"224 410 OFFCURVE",
"224 399 CURVE SMOOTH",
"224 392 OFFCURVE",
"222 382 OFFCURVE",
"217 369 CURVE SMOOTH",
"206 340 OFFCURVE",
"185 307 OFFCURVE",
"156 268 CURVE SMOOTH",
"131 235 OFFCURVE",
"105 206 OFFCURVE",
"78 179 CURVE",
"78 179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0128 8 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 7 30 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01236 22 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 1 32 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 161;
}
);
leftKerningGroup = h;
note = l;
rightKerningGroup = l;
unicode = 006C;
},
{
glyphname = lacute;
lastChange = "2021-10-05 04:18:27 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 186, 255}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 013A;
},
{
glyphname = lcaron;
lastChange = "2021-10-05 04:18:27 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 254, 255}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 013E;
},
{
glyphname = lcommaaccent;
lastChange = "2021-10-05 04:18:27 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -11, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 013C;
},
{
glyphname = ldot;
lastChange = "2021-10-05 04:18:39 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = periodcentered;
transform = "{1, 0, 0, 1, 38, -72}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 0140;
},
{
glyphname = lj;
lastChange = "2021-10-05 03:18:37 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = j;
transform = "{1, 0, 0, 1, 161, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 316;
}
);
unicode = 01C9;
},
{
glyphname = lslash;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = l;
},
{
name = hyphen;
transform = "{0.81512, 0.17326, -0.17326, 0.81512, -32, -5}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 161;
}
);
unicode = 0142;
},
{
glyphname = m;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"119 -7 OFFCURVE",
"126 -3 OFFCURVE",
"134 6 CURVE",
"171 63 LINE",
"184 79 OFFCURVE",
"194 90 OFFCURVE",
"199 95 CURVE",
"196 31 OFFCURVE",
"211 -1 OFFCURVE",
"245 -1 CURVE SMOOTH",
"277 -1 OFFCURVE",
"316 24 OFFCURVE",
"361 74 CURVE",
"363 77 OFFCURVE",
"364 79 OFFCURVE",
"363 81 CURVE",
"363 84 OFFCURVE",
"362 85 OFFCURVE",
"359 85 CURVE SMOOTH",
"357 85 OFFCURVE",
"355 84 OFFCURVE",
"352 81 CURVE SMOOTH",
"332 60 OFFCURVE",
"318 46 OFFCURVE",
"311 41 CURVE SMOOTH",
"292 26 OFFCURVE",
"276 18 OFFCURVE",
"261 18 CURVE SMOOTH",
"242 18 OFFCURVE",
"233 31 OFFCURVE",
"233 58 CURVE SMOOTH",
"233 78 OFFCURVE",
"238 106 OFFCURVE",
"249 141 CURVE",
"250 149 LINE SMOOTH",
"250 154 OFFCURVE",
"248 157 OFFCURVE",
"243 157 CURVE SMOOTH",
"234 157 OFFCURVE",
"225 152 OFFCURVE",
"218 142 CURVE SMOOTH",
"180 91 OFFCURVE",
"154 55 OFFCURVE",
"141 35 CURVE",
"144 99 LINE",
"141 124 OFFCURVE",
"130 136 OFFCURVE",
"111 136 CURVE SMOOTH",
"104 136 OFFCURVE",
"96 134 OFFCURVE",
"89 129 CURVE SMOOTH",
"77 119 OFFCURVE",
"68 111 OFFCURVE",
"61 104 CURVE",
"81 165 LINE",
"81 171 OFFCURVE",
"79 174 OFFCURVE",
"74 174 CURVE SMOOTH",
"70 174 OFFCURVE",
"66 172 OFFCURVE",
"61 170 CURVE SMOOTH",
"50 165 OFFCURVE",
"43 161 OFFCURVE",
"41 158 CURVE",
"41 149 OFFCURVE",
"32 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE",
"-16 14 OFFCURVE",
"-16 12 OFFCURVE",
"-16 9 CURVE SMOOTH",
"-16 1 OFFCURVE",
"-13 -3 OFFCURVE",
"-7 -3 CURVE SMOOTH",
"-4 -3 OFFCURVE",
"-2 -2 OFFCURVE",
"1 -1 CURVE SMOOTH",
"3 0 OFFCURVE",
"10 12 OFFCURVE",
"23 34 CURVE SMOOTH",
"37 59 OFFCURVE",
"50 77 OFFCURVE",
"61 89 CURVE SMOOTH",
"78 106 OFFCURVE",
"91 115 OFFCURVE",
"98 115 CURVE SMOOTH",
"108 115 OFFCURVE",
"112 98 OFFCURVE",
"110 64 CURVE SMOOTH",
"107 29 LINE",
"105 9 LINE SMOOTH",
"104 2 OFFCURVE",
"106 -2 OFFCURVE",
"113 -4 CURVE",
"113 -4 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 4 122 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01255 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01210 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01224 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01241 4 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01257 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 57 23 57 39 57 55 57 71 57 87 57 103 57 119 57 135 57 151 57 167 57 183 57 199 57 215 57 231 57 247 57 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 341;
}
);
leftKerningGroup = n;
note = m;
rightKerningGroup = n;
unicode = 006D;
},
{
glyphname = n;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{74, 0}";
},
{
name = top;
position = "{134, 168}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"4 -1 OFFCURVE",
"7 1 OFFCURVE",
"9 5 CURVE",
"29 30 LINE SMOOTH",
"37 41 OFFCURVE",
"47 51 OFFCURVE",
"58 61 CURVE SMOOTH",
"105 106 LINE",
"104 94 OFFCURVE",
"103 83 OFFCURVE",
"103 73 CURVE SMOOTH",
"103 27 OFFCURVE",
"118 4 OFFCURVE",
"147 4 CURVE SMOOTH",
"180 4 OFFCURVE",
"217 27 OFFCURVE",
"259 74 CURVE",
"261 77 OFFCURVE",
"262 79 OFFCURVE",
"261 81 CURVE",
"261 84 OFFCURVE",
"260 85 OFFCURVE",
"258 85 CURVE SMOOTH",
"255 85 OFFCURVE",
"253 84 OFFCURVE",
"250 81 CURVE SMOOTH",
"230 60 OFFCURVE",
"216 46 OFFCURVE",
"209 41 CURVE SMOOTH",
"190 26 OFFCURVE",
"174 18 OFFCURVE",
"159 18 CURVE SMOOTH",
"144 18 OFFCURVE",
"136 29 OFFCURVE",
"136 52 CURVE SMOOTH",
"136 70 OFFCURVE",
"143 103 OFFCURVE",
"157 152 CURVE SMOOTH",
"158 156 OFFCURVE",
"159 159 OFFCURVE",
"159 162 CURVE SMOOTH",
"159 166 OFFCURVE",
"157 168 OFFCURVE",
"154 168 CURVE SMOOTH",
"149 168 OFFCURVE",
"142 163 OFFCURVE",
"133 153 CURVE SMOOTH",
"26 38 LINE",
"54 96 OFFCURVE",
"72 138 OFFCURVE",
"81 165 CURVE",
"81 171 OFFCURVE",
"79 174 OFFCURVE",
"74 174 CURVE SMOOTH",
"70 174 OFFCURVE",
"66 172 OFFCURVE",
"61 170 CURVE SMOOTH",
"50 165 OFFCURVE",
"43 161 OFFCURVE",
"41 158 CURVE",
"41 149 OFFCURVE",
"32 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE",
"-16 10 OFFCURVE",
"-8 -1 OFFCURVE",
"1 -1 CURVE",
"1 -1 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 8 41 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 25 117 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01227 1 39 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 240;
}
);
leftKerningGroup = n;
note = n;
rightKerningGroup = n;
unicode = 006E;
},
{
glyphname = nacute;
lastChange = "2021-10-05 04:50:41 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 106, -2}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0144;
},
{
glyphname = ncaron;
lastChange = "2021-10-05 04:50:36 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 106, -2}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0148;
},
{
glyphname = ncommaaccent;
lastChange = "2021-10-05 04:18:57 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, 5, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
unicode = 0146;
},
{
glyphname = eng;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-83 -217 OFFCURVE",
"-76 -217 OFFCURVE",
"-69 -215 CURVE SMOOTH",
"21 -195 OFFCURVE",
"70 -86 OFFCURVE",
"118 37 CURVE SMOOTH",
"133 74 OFFCURVE",
"143 103 OFFCURVE",
"157 152 CURVE SMOOTH",
"158 156 OFFCURVE",
"159 159 OFFCURVE",
"159 162 CURVE SMOOTH",
"159 166 OFFCURVE",
"157 168 OFFCURVE",
"154 168 CURVE SMOOTH",
"149 168 OFFCURVE",
"142 163 OFFCURVE",
"133 153 CURVE SMOOTH",
"26 38 LINE",
"54 96 OFFCURVE",
"72 138 OFFCURVE",
"81 165 CURVE",
"81 171 OFFCURVE",
"78 173 OFFCURVE",
"73 173 CURVE SMOOTH",
"70 173 OFFCURVE",
"66 172 OFFCURVE",
"61 170 CURVE SMOOTH",
"50 165 OFFCURVE",
"43 161 OFFCURVE",
"41 158 CURVE",
"41 149 OFFCURVE",
"32 124 OFFCURVE",
"15 84 CURVE SMOOTH",
"-15 15 LINE",
"-16 10 OFFCURVE",
"-8 -1 OFFCURVE",
"1 -1 CURVE SMOOTH",
"4 -1 OFFCURVE",
"7 1 OFFCURVE",
"9 5 CURVE",
"29 30 LINE SMOOTH",
"37 41 OFFCURVE",
"47 51 OFFCURVE",
"58 61 CURVE SMOOTH",
"105 106 LINE",
"117 113 OFFCURVE",
"114 101 OFFCURVE",
"103 74 CURVE SMOOTH",
"57 -47 OFFCURVE",
"6 -181 OFFCURVE",
"-69 -205 CURVE SMOOTH",
"-74 -206 OFFCURVE",
"-79 -207 OFFCURVE",
"-84 -207 CURVE SMOOTH",
"-110 -207 OFFCURVE",
"-141 -192 OFFCURVE",
"-141 -157 CURVE SMOOTH",
"-141 -132 OFFCURVE",
"-127 -116 OFFCURVE",
"-120 -111 CURVE",
"-118 -111 OFFCURVE",
"-121 -108 OFFCURVE",
"-125 -109 CURVE",
"-131 -109 OFFCURVE",
"-145 -122 OFFCURVE",
"-149 -140 CURVE SMOOTH",
"-151 -147 OFFCURVE",
"-151 -153 OFFCURVE",
"-151 -159 CURVE SMOOTH",
"-151 -195 OFFCURVE",
"-125 -217 OFFCURVE",
"-90 -217 CURVE",
"-90 -217 LINE"
);
}
);
width = 174;
}
);
unicode = 014B;
},
{
glyphname = nj;
lastChange = "2021-10-05 03:18:37 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = j;
transform = "{1, 0, 0, 1, 240, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 395;
}
);
unicode = 01CC;
},
{
glyphname = ntilde;
lastChange = "2021-10-05 04:50:45 +0000";
layers = (
{
components = (
{
name = n;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 62, -2}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 240;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = o;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{32, -6}";
},
{
name = center;
position = "{110, 85}";
},
{
name = ogonek;
position = "{61, -7}";
},
{
name = top;
position = "{110, 192}";
},
{
name = topright;
position = "{110, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"71 -18 OFFCURVE",
"104 2 OFFCURVE",
"127 30 CURVE",
"168 30 OFFCURVE",
"204 44 OFFCURVE",
"235 71 CURVE SMOOTH",
"239 74 OFFCURVE",
"241 78 OFFCURVE",
"241 81 CURVE SMOOTH",
"241 84 OFFCURVE",
"240 86 OFFCURVE",
"238 86 CURVE SMOOTH",
"235 86 OFFCURVE",
"233 85 OFFCURVE",
"231 83 CURVE SMOOTH",
"207 58 OFFCURVE",
"175 45 OFFCURVE",
"136 44 CURVE",
"138 46 LINE",
"152 71 OFFCURVE",
"159 96 OFFCURVE",
"159 123 CURVE SMOOTH",
"159 152 OFFCURVE",
"137 181 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 206 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87 209 OFFCURVE",
"79 204 OFFCURVE",
"70 193 CURVE",
"36 190 OFFCURVE",
"19 171 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"20 121 OFFCURVE",
"21 114 CURVE",
"9 82 OFFCURVE",
"3 54 OFFCURVE",
"3 30 CURVE SMOOTH",
"3 -2 OFFCURVE",
"17 -18 OFFCURVE",
"44 -18 CURVE",
"44 -18 LINE"
);
},
{
closed = 1;
nodes = (
"41 0 OFFCURVE",
"33 11 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43 OFFCURVE",
"35 55 OFFCURVE",
"38 69 CURVE",
"54 48 OFFCURVE",
"77 35 OFFCURVE",
"108 31 CURVE",
"93 10 OFFCURVE",
"77 0 OFFCURVE",
"58 0 CURVE",
"58 0 LINE"
);
},
{
closed = 1;
nodes = (
"79 50 OFFCURVE",
"57 70 OFFCURVE",
"49 104 CURVE",
"61 133 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"122 178 OFFCURVE",
"138 155 OFFCURVE",
"138 124 CURVE SMOOTH",
"138 99 OFFCURVE",
"131 73 OFFCURVE",
"116 45 CURVE",
"116 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0122 8 39 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 2 22 2 38 2 54 2 70 2 86 2 102 2 118 2 134 2 150 2 166 2 182 2 198 2 214 2 230 2 246 2 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 2 22 2 38 2 54 2 70 2 86 2 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 2 117 2 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01243 39 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01243 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01215 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 43 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01247 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0124 3 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01224 1 34 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
leftKerningGroup = o;
note = o;
rightKerningGroup = o;
unicode = 006F;
},
{
glyphname = oacute;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 82, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = obreve;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 73, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 014F;
},
{
glyphname = ocircumflex;
lastChange = "2021-10-05 04:59:50 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = ocircumflexacute;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_acutecomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED1;
},
{
glyphname = ocircumflexdotbelow;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -10, -6}";
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED9;
},
{
glyphname = ocircumflexgrave;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_gravecomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED3;
},
{
glyphname = ocircumflexhookabove;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_hookabovecomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED5;
},
{
glyphname = ocircumflextilde;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = circumflexcomb_tildecomb;
transform = "{1, 0, 0, 1, 39, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ED7;
},
{
glyphname = odblgrave;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 0, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 020D;
},
{
glyphname = odieresis;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 66, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = odieresismacron;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 66, 22}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 71, 84}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 022B;
},
{
glyphname = odotaccentmacron;
lastChange = "2021-10-05 05:17:02 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 107, 22}";
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 70, 86}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 0231;
},
{
glyphname = odotbelow;
lastChange = "2021-10-05 04:19:40 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -10, -6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ECD;
},
{
glyphname = ograve;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 33, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = ohookabove;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 83, 14}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1ECF;
},
{
glyphname = ohorn;
lastChange = "2021-10-05 04:19:40 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 130, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01A1;
},
{
glyphname = ohornacute;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 82, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDB;
},
{
glyphname = ohorndotbelow;
lastChange = "2021-10-05 04:19:40 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, -10, -6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EE3;
},
{
glyphname = ohorngrave;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 33, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDD;
},
{
glyphname = ohornhookabove;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 83, 14}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EDF;
},
{
glyphname = ohorntilde;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = ohorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 38, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 1EE1;
},
{
glyphname = ohungarumlaut;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 80, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 0151;
},
{
glyphname = oinvertedbreve;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 54, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 020F;
},
{
glyphname = omacron;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 51, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 014D;
},
{
glyphname = oogonek;
lastChange = "2021-10-05 04:19:40 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, -29, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01EB;
},
{
glyphname = oslash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = top;
position = "{112, 199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-13 -94 LINE SMOOTH",
"5 -80 OFFCURVE",
"20 -53 OFFCURVE",
"40 -18 CURVE",
"44 -18 LINE SMOOTH",
"71 -18 OFFCURVE",
"104 2 OFFCURVE",
"127 30 CURVE",
"168 30 OFFCURVE",
"204 44 OFFCURVE",
"235 71 CURVE SMOOTH",
"239 74 OFFCURVE",
"241 78 OFFCURVE",
"241 81 CURVE SMOOTH",
"241 84 OFFCURVE",
"240 86 OFFCURVE",
"238 86 CURVE SMOOTH",
"235 86 OFFCURVE",
"233 85 OFFCURVE",
"231 83 CURVE SMOOTH",
"207 58 OFFCURVE",
"175 45 OFFCURVE",
"136 44 CURVE",
"138 46 LINE",
"152 71 OFFCURVE",
"159 96 OFFCURVE",
"159 123 CURVE SMOOTH",
"159 138 OFFCURVE",
"155 152 OFFCURVE",
"144 164 CURVE SMOOTH",
"138 171 LINE",
"165 220 OFFCURVE",
"187 247 OFFCURVE",
"211 255 CURVE SMOOTH",
"213 256 OFFCURVE",
"216 256 OFFCURVE",
"219 255 CURVE SMOOTH",
"222 254 OFFCURVE",
"225 253 OFFCURVE",
"227 253 CURVE",
"228 254 OFFCURVE",
"229 255 OFFCURVE",
"229 256 CURVE SMOOTH",
"228 260 OFFCURVE",
"226 262 OFFCURVE",
"222 263 CURVE SMOOTH",
"218 265 OFFCURVE",
"213 266 OFFCURVE",
"209 266 CURVE SMOOTH",
"206 266 OFFCURVE",
"203 265 OFFCURVE",
"200 264 CURVE",
"167 259 OFFCURVE",
"140 219 OFFCURVE",
"121 183 CURVE",
"116 186 OFFCURVE",
"111 189 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 206 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87 209 OFFCURVE",
"79 204 OFFCURVE",
"70 193 CURVE",
"36 190 OFFCURVE",
"19 171 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"20 121 OFFCURVE",
"21 114 CURVE",
"8 81 OFFCURVE",
"3 53 OFFCURVE",
"3 29 CURVE SMOOTH",
"3 5 OFFCURVE",
"11 -10 OFFCURVE",
"27 -16 CURVE",
"14 -41 OFFCURVE",
"-2 -66 OFFCURVE",
"-19 -90 CURVE SMOOTH",
"-21 -93 OFFCURVE",
"-22 -95 OFFCURVE",
"-21 -96 CURVE",
"-21 -97 OFFCURVE",
"-20 -98 OFFCURVE",
"-18 -98 CURVE",
"-18 -98 LINE"
);
},
{
closed = 1;
nodes = (
"35 13 OFFCURVE",
"33 22 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43 OFFCURVE",
"35 55 OFFCURVE",
"38 69 CURVE",
"43 62 OFFCURVE",
"50 55 OFFCURVE",
"58 49 CURVE",
"53 38 LINE SMOOTH",
"48 27 OFFCURVE",
"44 17 OFFCURVE",
"39 8 CURVE",
"39 8 LINE"
);
},
{
closed = 1;
nodes = (
"55 0 OFFCURVE",
"53 0 OFFCURVE",
"51 1 CURVE",
"67 31 LINE",
"71 41 LINE",
"82 36 OFFCURVE",
"95 32 OFFCURVE",
"108 31 CURVE",
"93 10 OFFCURVE",
"77 0 OFFCURVE",
"58 0 CURVE",
"58 0 LINE"
);
},
{
closed = 1;
nodes = (
"58 78 OFFCURVE",
"52 90 OFFCURVE",
"49 104 CURVE",
"61 133 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"104 180 OFFCURVE",
"111 178 OFFCURVE",
"116 174 CURVE",
"100 140 LINE",
"84 107 LINE SMOOTH",
"78 94 OFFCURVE",
"71 82 OFFCURVE",
"66 69 CURVE",
"66 69 LINE"
);
},
{
closed = 1;
nodes = (
"101 47 OFFCURVE",
"89 51 OFFCURVE",
"79 58 CURVE",
"99 98 OFFCURVE",
"115 130 OFFCURVE",
"131 158 CURVE",
"136 148 OFFCURVE",
"138 137 OFFCURVE",
"138 124 CURVE SMOOTH",
"138 99 OFFCURVE",
"131 73 OFFCURVE",
"116 45 CURVE",
"116 45 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01298 8 44 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 102 98 118 98 134 98 150 98 166 98 182 98 198 98 214 98 230 98 246 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 98 22 98 38 98 54 98 70 98 86 98 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 98 117 98 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01248 44 98 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01267 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01269 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01294 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 48 15 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01252 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01292 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01292 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01294 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01294 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01218 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01269 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01288 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 36 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 220;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = oslashacute;
lastChange = "2021-10-05 04:20:12 +0000";
layers = (
{
components = (
{
name = oslash;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 84, 29}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 01FF;
},
{
glyphname = otilde;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 38, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = otildemacron;
lastChange = "2021-10-05 04:59:51 +0000";
layers = (
{
components = (
{
name = o;
},
{
name = tildecomb_macroncomb;
transform = "{1, 0, 0, 1, 32, 22}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 220;
}
);
unicode = 022D;
},
{
glyphname = oe;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"72 -18 OFFCURVE",
"99 -3 OFFCURVE",
"124 28 CURVE",
"131 3 OFFCURVE",
"150 -9 OFFCURVE",
"179 -9 CURVE SMOOTH",
"206 -9 OFFCURVE",
"237 0 OFFCURVE",
"273 19 CURVE SMOOTH",
"305 36 OFFCURVE",
"329 54 OFFCURVE",
"344 72 CURVE SMOOTH",
"346 75 OFFCURVE",
"347 78 OFFCURVE",
"347 81 CURVE SMOOTH",
"347 89 OFFCURVE",
"343 88 OFFCURVE",
"335 79 CURVE SMOOTH",
"321 64 OFFCURVE",
"300 48 OFFCURVE",
"272 33 CURVE SMOOTH",
"241 16 OFFCURVE",
"215 7 OFFCURVE",
"194 7 CURVE SMOOTH",
"168 7 OFFCURVE",
"155 21 OFFCURVE",
"155 49 CURVE SMOOTH",
"155 56 OFFCURVE",
"156 63 OFFCURVE",
"158 72 CURVE",
"195 81 OFFCURVE",
"222 98 OFFCURVE",
"241 121 CURVE SMOOTH",
"252 135 OFFCURVE",
"258 148 OFFCURVE",
"258 161 CURVE SMOOTH",
"258 182 OFFCURVE",
"247 192 OFFCURVE",
"226 192 CURVE SMOOTH",
"210 192 OFFCURVE",
"193 183 OFFCURVE",
"176 166 CURVE SMOOTH",
"169 159 OFFCURVE",
"162 152 OFFCURVE",
"155 143 CURVE",
"148 166 OFFCURVE",
"131 182 OFFCURVE",
"106 190 CURVE",
"109 193 LINE SMOOTH",
"111 195 OFFCURVE",
"112 197 OFFCURVE",
"112 199 CURVE SMOOTH",
"112 206 OFFCURVE",
"106 209 OFFCURVE",
"94 209 CURVE SMOOTH",
"87 209 OFFCURVE",
"79 204 OFFCURVE",
"70 193 CURVE",
"36 190 OFFCURVE",
"19 171 OFFCURVE",
"19 136 CURVE SMOOTH",
"19 128 OFFCURVE",
"20 121 OFFCURVE",
"21 114 CURVE",
"9 83 OFFCURVE",
"3 56 OFFCURVE",
"3 33 CURVE SMOOTH",
"3 -1 OFFCURVE",
"17 -18 OFFCURVE",
"44 -18 CURVE",
"44 -18 LINE"
);
},
{
closed = 1;
nodes = (
"41 0 OFFCURVE",
"33 11 OFFCURVE",
"33 34 CURVE SMOOTH",
"33 43 OFFCURVE",
"35 55 OFFCURVE",
"38 69 CURVE",
"54 48 OFFCURVE",
"77 35 OFFCURVE",
"108 31 CURVE",
"93 10 OFFCURVE",
"77 0 OFFCURVE",
"58 0 CURVE",
"58 0 LINE"
);
},
{
closed = 1;
nodes = (
"116 45 LINE",
"79 50 OFFCURVE",
"57 70 OFFCURVE",
"49 104 CURVE",
"61 133 OFFCURVE",
"77 159 OFFCURVE",
"97 181 CURVE",
"122 178 OFFCURVE",
"138 155 OFFCURVE",
"138 124 CURVE SMOOTH",
"137 112 LINE",
"126 89 OFFCURVE",
"121 70 OFFCURVE",
"121 55 CURVE SMOOTH",
"121 54 LINE",
"116 45 LINE"
);
},
{
closed = 1;
nodes = (
"178 126 OFFCURVE",
"216 176 OFFCURVE",
"233 176 CURVE SMOOTH",
"238 176 OFFCURVE",
"241 172 OFFCURVE",
"241 165 CURVE SMOOTH",
"241 156 OFFCURVE",
"237 144 OFFCURVE",
"229 131 CURVE SMOOTH",
"217 110 OFFCURVE",
"194 94 OFFCURVE",
"161 83 CURVE",
"161 83 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01211 8 66 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01240 29 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 29 234 29 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0127 29 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 102 11 118 11 134 11 150 11 166 11 182 11 198 11 214 11 230 11 246 11 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 11 22 11 38 11 54 11 70 11 86 11 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 11 117 11 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01215 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01232 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 29 40 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01262 66 46 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01274 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01213 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01248 4 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01274 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0124 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 4 24 4 40 4 56 4 72 4 88 4 104 4 120 4 136 4 152 4 168 4 184 4 200 4 216 4 232 4 248 4 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0127 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01215 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01232 74 4 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01234 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01260 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01262 13 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 326;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = p;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-187 -209 OFFCURVE",
"-148 -197 OFFCURVE",
"-115 -172 CURVE SMOOTH",
"-59 -131 OFFCURVE",
"-6 -30 OFFCURVE",
"31 43 CURVE",
"46 13 OFFCURVE",
"70 -2 OFFCURVE",
"104 -2 CURVE SMOOTH",
"129 -2 OFFCURVE",
"156 5 OFFCURVE",
"187 20 CURVE SMOOTH",
"214 33 OFFCURVE",
"240 49 OFFCURVE",
"263 70 CURVE SMOOTH",
"267 73 OFFCURVE",
"269 77 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 84 OFFCURVE",
"268 85 OFFCURVE",
"265 85 CURVE SMOOTH",
"264 85 OFFCURVE",
"262 84 OFFCURVE",
"259 82 CURVE",
"246 68 OFFCURVE",
"228 55 OFFCURVE",
"206 42 CURVE SMOOTH",
"181 28 OFFCURVE",
"158 18 OFFCURVE",
"136 13 CURVE",
"158 30 OFFCURVE",
"169 54 OFFCURVE",
"169 84 CURVE SMOOTH",
"169 105 OFFCURVE",
"163 125 OFFCURVE",
"151 144 CURVE SMOOTH",
"140 162 OFFCURVE",
"124 177 OFFCURVE",
"104 188 CURVE",
"134 241 OFFCURVE",
"160 268 OFFCURVE",
"181 268 CURVE SMOOTH",
"191 268 OFFCURVE",
"196 263 OFFCURVE",
"196 253 CURVE SMOOTH",
"196 247 LINE",
"195 244 OFFCURVE",
"196 242 OFFCURVE",
"198 242 CURVE SMOOTH",
"202 242 OFFCURVE",
"204 247 OFFCURVE",
"204 256 CURVE SMOOTH",
"204 269 OFFCURVE",
"196 276 OFFCURVE",
"181 276 CURVE SMOOTH",
"146 276 OFFCURVE",
"112 250 OFFCURVE",
"79 198 CURVE",
"71 200 OFFCURVE",
"63 201 OFFCURVE",
"55 202 CURVE SMOOTH",
"12 205 OFFCURVE",
"-19 187 OFFCURVE",
"-19 156 CURVE SMOOTH",
"-19 147 OFFCURVE",
"-17 143 OFFCURVE",
"-14 143 CURVE SMOOTH",
"-10 143 OFFCURVE",
"-8 145 OFFCURVE",
"-8 149 CURVE SMOOTH",
"-8 151 LINE SMOOTH",
"-11 166 OFFCURVE",
"-5 176 OFFCURVE",
"9 183 CURVE SMOOTH",
"20 188 OFFCURVE",
"34 189 OFFCURVE",
"51 188 CURVE SMOOTH",
"58 187 OFFCURVE",
"64 186 OFFCURVE",
"71 183 CURVE",
"48 140 OFFCURVE",
"32 109 OFFCURVE",
"22 88 CURVE SMOOTH",
"-5 37 OFFCURVE",
"-33 -13 OFFCURVE",
"-62 -62 CURVE SMOOTH",
"-111 -145 OFFCURVE",
"-176 -197 OFFCURVE",
"-236 -197 CURVE SMOOTH",
"-256 -197 OFFCURVE",
"-272 -191 OFFCURVE",
"-283 -178 CURVE SMOOTH",
"-293 -167 OFFCURVE",
"-298 -154 OFFCURVE",
"-298 -138 CURVE SMOOTH",
"-298 -122 OFFCURVE",
"-293 -109 OFFCURVE",
"-284 -100 CURVE SMOOTH",
"-281 -97 OFFCURVE",
"-280 -95 OFFCURVE",
"-280 -93 CURVE SMOOTH",
"-280 -90 OFFCURVE",
"-281 -89 OFFCURVE",
"-284 -89 CURVE SMOOTH",
"-287 -89 OFFCURVE",
"-289 -90 OFFCURVE",
"-291 -93 CURVE",
"-304 -106 OFFCURVE",
"-311 -122 OFFCURVE",
"-311 -141 CURVE SMOOTH",
"-311 -160 OFFCURVE",
"-304 -175 OFFCURVE",
"-291 -188 CURVE SMOOTH",
"-276 -202 OFFCURVE",
"-256 -209 OFFCURVE",
"-231 -209 CURVE",
"-231 -209 LINE"
);
},
{
closed = 1;
nodes = (
"64 16 OFFCURVE",
"47 28 OFFCURVE",
"36 51 CURVE",
"48 76 LINE",
"94 171 LINE",
"111 158 OFFCURVE",
"124 142 OFFCURVE",
"133 123 CURVE SMOOTH",
"140 109 OFFCURVE",
"143 95 OFFCURVE",
"143 82 CURVE SMOOTH",
"143 45 OFFCURVE",
"116 16 OFFCURVE",
"85 16 CURVE",
"85 16 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01285 6 75 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 85 22 85 38 85 54 85 70 85 86 85 102 85 118 85 134 85 150 85 166 85 182 85 198 85 214 85 230 85 246 85 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01289 1 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0126 3 64 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 248;
}
);
leftKerningGroup = p;
note = p;
rightKerningGroup = o;
unicode = 0070;
},
{
glyphname = thorn;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-187 -209 OFFCURVE",
"-148 -197 OFFCURVE",
"-115 -172 CURVE SMOOTH",
"-59 -131 OFFCURVE",
"-6 -30 OFFCURVE",
"31 43 CURVE",
"46 13 OFFCURVE",
"70 -2 OFFCURVE",
"104 -2 CURVE SMOOTH",
"129 -2 OFFCURVE",
"156 5 OFFCURVE",
"187 20 CURVE SMOOTH",
"214 33 OFFCURVE",
"240 49 OFFCURVE",
"263 70 CURVE SMOOTH",
"267 73 OFFCURVE",
"269 77 OFFCURVE",
"269 81 CURVE SMOOTH",
"269 84 OFFCURVE",
"268 85 OFFCURVE",
"265 85 CURVE SMOOTH",
"264 85 OFFCURVE",
"262 84 OFFCURVE",
"259 82 CURVE",
"246 68 OFFCURVE",
"228 55 OFFCURVE",
"206 42 CURVE SMOOTH",
"181 28 OFFCURVE",
"158 18 OFFCURVE",
"136 13 CURVE",
"158 30 OFFCURVE",
"169 54 OFFCURVE",
"169 84 CURVE SMOOTH",
"169 105 OFFCURVE",
"163 125 OFFCURVE",
"151 144 CURVE SMOOTH",
"140 162 OFFCURVE",
"125 181 OFFCURVE",
"109 192 CURVE",
"187 378 OFFCURVE",
"218 415 OFFCURVE",
"243 415 CURVE SMOOTH",
"257 415 OFFCURVE",
"262 406 OFFCURVE",
"261 386 CURVE",
"260 382 OFFCURVE",
"261 379 OFFCURVE",
"262 379 CURVE SMOOTH",
"267 379 OFFCURVE",
"270 386 OFFCURVE",
"270 399 CURVE SMOOTH",
"270 417 OFFCURVE",
"261 426 OFFCURVE",
"243 426 CURVE SMOOTH",
"201 426 OFFCURVE",
"162 390 OFFCURVE",
"80 206 CURVE",
"69 208 OFFCURVE",
"59 209 OFFCURVE",
"50 209 CURVE SMOOTH",
"10 209 OFFCURVE",
"-19 191 OFFCURVE",
"-19 156 CURVE SMOOTH",
"-19 147 OFFCURVE",
"-17 143 OFFCURVE",
"-14 143 CURVE SMOOTH",
"-10 143 OFFCURVE",
"-8 145 OFFCURVE",
"-8 149 CURVE SMOOTH",
"-8 151 LINE SMOOTH",
"-11 166 OFFCURVE",
"-5 176 OFFCURVE",
"9 183 CURVE SMOOTH",
"20 188 OFFCURVE",
"34 189 OFFCURVE",
"51 188 CURVE SMOOTH",
"58 187 OFFCURVE",
"64 186 OFFCURVE",
"71 183 CURVE",
"48 140 OFFCURVE",
"32 109 OFFCURVE",
"22 88 CURVE SMOOTH",
"-5 37 OFFCURVE",
"-33 -13 OFFCURVE",
"-62 -62 CURVE SMOOTH",
"-111 -145 OFFCURVE",
"-176 -197 OFFCURVE",
"-236 -197 CURVE SMOOTH",
"-256 -197 OFFCURVE",
"-272 -191 OFFCURVE",
"-283 -178 CURVE SMOOTH",
"-293 -167 OFFCURVE",
"-298 -154 OFFCURVE",
"-298 -138 CURVE SMOOTH",
"-298 -122 OFFCURVE",
"-293 -109 OFFCURVE",
"-284 -100 CURVE SMOOTH",
"-281 -97 OFFCURVE",
"-280 -95 OFFCURVE",
"-280 -93 CURVE SMOOTH",
"-280 -90 OFFCURVE",
"-281 -89 OFFCURVE",
"-284 -89 CURVE SMOOTH",
"-287 -89 OFFCURVE",
"-289 -90 OFFCURVE",
"-291 -93 CURVE",
"-304 -106 OFFCURVE",
"-311 -122 OFFCURVE",
"-311 -141 CURVE SMOOTH",
"-311 -160 OFFCURVE",
"-304 -175 OFFCURVE",
"-291 -188 CURVE SMOOTH",
"-276 -202 OFFCURVE",
"-256 -209 OFFCURVE",
"-231 -209 CURVE",
"-231 -209 LINE"
);
},
{
closed = 1;
nodes = (
"64 16 OFFCURVE",
"47 28 OFFCURVE",
"36 51 CURVE",
"48 76 LINE",
"94 171 LINE",
"111 158 OFFCURVE",
"124 142 OFFCURVE",
"133 123 CURVE SMOOTH",
"140 109 OFFCURVE",
"143 95 OFFCURVE",
"143 82 CURVE SMOOTH",
"143 45 OFFCURVE",
"116 16 OFFCURVE",
"85 16 CURVE",
"85 16 LINE"
);
}
);
width = 248;
}
);
unicode = 00FE;
},
{
glyphname = q;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 -321 OFFCURVE",
"140 -303 OFFCURVE",
"171 -266 CURVE SMOOTH",
"202 -230 OFFCURVE",
"217 -190 OFFCURVE",
"217 -146 CURVE SMOOTH",
"217 -127 OFFCURVE",
"214 -110 OFFCURVE",
"208 -94 CURVE SMOOTH",
"194 -60 OFFCURVE",
"167 -32 OFFCURVE",
"128 -10 CURVE",
"155 -7 OFFCURVE",
"184 4 OFFCURVE",
"216 23 CURVE SMOOTH",
"243 38 OFFCURVE",
"264 55 OFFCURVE",
"281 73 CURVE SMOOTH",
"283 75 OFFCURVE",
"284 78 OFFCURVE",
"284 81 CURVE SMOOTH",
"284 84 OFFCURVE",
"283 85 OFFCURVE",
"281 85 CURVE SMOOTH",
"279 85 OFFCURVE",
"276 83 OFFCURVE",
"273 79 CURVE SMOOTH",
"249 54 OFFCURVE",
"221 35 OFFCURVE",
"188 21 CURVE SMOOTH",
"158 8 OFFCURVE",
"131 2 OFFCURVE",
"107 3 CURVE",
"122 36 OFFCURVE",
"186 145 OFFCURVE",
"203 168 CURVE",
"200 176 OFFCURVE",
"193 180 OFFCURVE",
"182 180 CURVE SMOOTH",
"175 180 OFFCURVE",
"170 178 OFFCURVE",
"168 175 CURVE SMOOTH",
"165 171 LINE",
"159 174 OFFCURVE",
"152 176 OFFCURVE",
"143 176 CURVE SMOOTH",
"130 176 OFFCURVE",
"117 173 OFFCURVE",
"102 166 CURVE SMOOTH",
"68 151 OFFCURVE",
"38 122 OFFCURVE",
"11 81 CURVE SMOOTH",
"-1 62 OFFCURVE",
"-7 45 OFFCURVE",
"-7 29 CURVE SMOOTH",
"-7 9 OFFCURVE",
"1 -1 OFFCURVE",
"16 -1 CURVE SMOOTH",
"27 -1 OFFCURVE",
"41 6 OFFCURVE",
"58 19 CURVE SMOOTH",
"85 42 OFFCURVE",
"103 58 OFFCURVE",
"111 66 CURVE",
"79 6 LINE",
"76 6 OFFCURVE",
"70 8 OFFCURVE",
"70 8 CURVE",
"68 9 OFFCURVE",
"66 9 OFFCURVE",
"64 9 CURVE SMOOTH",
"59 9 OFFCURVE",
"56 7 OFFCURVE",
"56 3 CURVE SMOOTH",
"56 -3 OFFCURVE",
"60 -8 OFFCURVE",
"68 -11 CURVE",
"34 -91 LINE SMOOTH",
"15 -138 OFFCURVE",
"2 -171 OFFCURVE",
"-3 -190 CURVE SMOOTH",
"-6 -201 OFFCURVE",
"-7 -212 OFFCURVE",
"-7 -224 CURVE SMOOTH",
"-7 -250 OFFCURVE",
"-1 -272 OFFCURVE",
"11 -291 CURVE SMOOTH",
"24 -311 OFFCURVE",
"41 -321 OFFCURVE",
"63 -321 CURVE",
"63 -321 LINE"
);
},
{
closed = 1;
nodes = (
"29 -294 OFFCURVE",
"13 -275 OFFCURVE",
"13 -236 CURVE SMOOTH",
"13 -219 OFFCURVE",
"16 -201 OFFCURVE",
"22 -180 CURVE SMOOTH",
"28 -159 OFFCURVE",
"43 -126 OFFCURVE",
"66 -83 CURVE SMOOTH",
"89 -42 OFFCURVE",
"101 -21 OFFCURVE",
"104 -21 CURVE SMOOTH",
"118 -21 OFFCURVE",
"134 -30 OFFCURVE",
"153 -49 CURVE SMOOTH",
"173 -68 OFFCURVE",
"185 -89 OFFCURVE",
"189 -110 CURVE SMOOTH",
"190 -117 OFFCURVE",
"191 -125 OFFCURVE",
"191 -133 CURVE SMOOTH",
"191 -212 OFFCURVE",
"127 -294 OFFCURVE",
"62 -294 CURVE",
"62 -294 LINE"
);
},
{
closed = 1;
nodes = (
"29 29 OFFCURVE",
"25 35 OFFCURVE",
"25 46 CURVE SMOOTH",
"25 57 OFFCURVE",
"29 69 OFFCURVE",
"36 82 CURVE SMOOTH",
"55 121 OFFCURVE",
"118 159 OFFCURVE",
"158 158 CURVE",
"141 126 OFFCURVE",
"130 106 OFFCURVE",
"124 99 CURVE SMOOTH",
"100 75 OFFCURVE",
"81 57 OFFCURVE",
"66 44 CURVE SMOOTH",
"54 34 OFFCURVE",
"44 29 OFFCURVE",
"37 29 CURVE",
"37 29 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01287 7 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0122 5 92 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01249 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01263 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 10 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01270 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 87 22 87 38 87 54 87 70 87 86 87 102 87 118 87 134 87 150 87 166 87 182 87 198 87 214 87 230 87 246 87 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 92 122 92 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 105 92 121 92 137 92 153 92 169 92 185 92 201 92 217 92 233 92 249 92 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 92 25 92 41 92 57 92 73 92 89 92 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01295 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01249 4 82 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01226 6 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01263 82 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01265 6 44 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01289 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 89 23 89 39 89 55 89 71 89 87 89 103 89 119 89 135 89 151 89 167 89 183 89 199 89 215 89 231 89 247 89 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 264;
}
);
leftKerningGroup = o;
note = q;
rightKerningGroup = q;
unicode = 0071;
},
{
glyphname = r;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{50, 0}";
},
{
name = top;
position = "{190, 211}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"159 -16 OFFCURVE",
"173 -13 OFFCURVE",
"190 -7 CURVE SMOOTH",
"223 5 OFFCURVE",
"262 31 OFFCURVE",
"308 70 CURVE SMOOTH",
"312 74 OFFCURVE",
"314 78 OFFCURVE",
"314 81 CURVE SMOOTH",
"314 84 OFFCURVE",
"313 85 OFFCURVE",
"311 85 CURVE SMOOTH",
"308 85 OFFCURVE",
"305 83 OFFCURVE",
"301 79 CURVE SMOOTH",
"284 62 OFFCURVE",
"263 46 OFFCURVE",
"236 31 CURVE SMOOTH",
"205 13 OFFCURVE",
"180 4 OFFCURVE",
"160 4 CURVE SMOOTH",
"144 4 OFFCURVE",
"136 13 OFFCURVE",
"136 30 CURVE SMOOTH",
"136 35 OFFCURVE",
"137 40 OFFCURVE",
"138 46 CURVE SMOOTH",
"139 54 OFFCURVE",
"144 68 OFFCURVE",
"153 87 CURVE SMOOTH",
"160 104 OFFCURVE",
"166 116 OFFCURVE",
"171 123 CURVE SMOOTH",
"174 128 OFFCURVE",
"176 133 OFFCURVE",
"176 138 CURVE SMOOTH",
"176 151 OFFCURVE",
"170 157 OFFCURVE",
"158 157 CURVE SMOOTH",
"155 157 OFFCURVE",
"149 156 OFFCURVE",
"141 154 CURVE SMOOTH",
"133 151 OFFCURVE",
"127 150 OFFCURVE",
"122 150 CURVE SMOOTH",
"109 150 OFFCURVE",
"102 156 OFFCURVE",
"102 167 CURVE SMOOTH",
"102 169 LINE",
"124 195 OFFCURVE",
"135 217 OFFCURVE",
"135 233 CURVE SMOOTH",
"135 246 OFFCURVE",
"129 253 OFFCURVE",
"116 253 CURVE SMOOTH",
"106 253 OFFCURVE",
"97 249 OFFCURVE",
"89 240 CURVE SMOOTH",
"80 230 OFFCURVE",
"76 217 OFFCURVE",
"76 202 CURVE SMOOTH",
"76 196 OFFCURVE",
"77 190 OFFCURVE",
"78 184 CURVE SMOOTH",
"80 174 LINE",
"59 134 OFFCURVE",
"33 100 OFFCURVE",
"3 73 CURVE SMOOTH",
"-1 70 OFFCURVE",
"-3 67 OFFCURVE",
"-3 65 CURVE SMOOTH",
"-3 63 OFFCURVE",
"-2 62 OFFCURVE",
"1 62 CURVE SMOOTH",
"4 62 OFFCURVE",
"8 63 OFFCURVE",
"11 66 CURVE SMOOTH",
"46 95 OFFCURVE",
"72 126 OFFCURVE",
"89 158 CURVE",
"89 137 OFFCURVE",
"111 117 OFFCURVE",
"131 120 CURVE",
"112 85 OFFCURVE",
"102 56 OFFCURVE",
"102 33 CURVE SMOOTH",
"102 0 OFFCURVE",
"117 -16 OFFCURVE",
"147 -16 CURVE",
"147 -16 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01248 8 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 102 48 118 48 134 48 150 48 166 48 182 48 198 48 214 48 230 48 246 48 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 48 22 48 38 48 54 48 70 48 86 48 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 48 117 48 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0126 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0128 25 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01211 25 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01225 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 293;
}
);
leftKerningGroup = n;
note = r;
rightKerningGroup = r;
unicode = 0072;
},
{
glyphname = racute;
lastChange = "2021-10-05 04:20:29 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 162, 41}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0155;
},
{
glyphname = rcaron;
lastChange = "2021-10-05 04:20:35 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 162, 41}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0159;
},
{
glyphname = rcommaaccent;
lastChange = "2021-10-05 04:20:35 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -19, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0157;
},
{
glyphname = rdblgrave;
lastChange = "2021-10-05 04:20:35 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 80, 41}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0211;
},
{
glyphname = rinvertedbreve;
lastChange = "2021-10-05 04:20:35 +0000";
layers = (
{
components = (
{
name = r;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 134, 41}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 293;
}
);
unicode = 0213;
},
{
glyphname = s;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{33, -4}";
},
{
name = top;
position = "{150, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"67 -6 OFFCURVE",
"76 0 OFFCURVE",
"83 11 CURVE",
"91 9 OFFCURVE",
"100 9 OFFCURVE",
"109 9 CURVE SMOOTH",
"120 9 OFFCURVE",
"131 10 OFFCURVE",
"143 12 CURVE SMOOTH",
"175 18 OFFCURVE",
"208 38 OFFCURVE",
"243 71 CURVE SMOOTH",
"246 74 OFFCURVE",
"247 77 OFFCURVE",
"247 80 CURVE SMOOTH",
"247 83 OFFCURVE",
"246 85 OFFCURVE",
"243 85 CURVE SMOOTH",
"240 85 OFFCURVE",
"238 84 OFFCURVE",
"236 81 CURVE SMOOTH",
"211 52 OFFCURVE",
"180 34 OFFCURVE",
"145 25 CURVE SMOOTH",
"133 22 OFFCURVE",
"122 21 OFFCURVE",
"111 21 CURVE SMOOTH",
"103 21 OFFCURVE",
"95 22 OFFCURVE",
"87 23 CURVE",
"88 26 OFFCURVE",
"88 30 OFFCURVE",
"88 34 CURVE SMOOTH",
"87 44 OFFCURVE",
"81 58 OFFCURVE",
"71 75 CURVE SMOOTH",
"61 92 OFFCURVE",
"56 106 OFFCURVE",
"56 117 CURVE SMOOTH",
"56 123 OFFCURVE",
"57 129 OFFCURVE",
"59 136 CURVE SMOOTH",
"75 181 OFFCURVE",
"106 207 OFFCURVE",
"151 215 CURVE SMOOTH",
"155 216 OFFCURVE",
"159 216 OFFCURVE",
"162 216 CURVE SMOOTH",
"176 216 OFFCURVE",
"183 211 OFFCURVE",
"183 201 CURVE SMOOTH",
"183 195 OFFCURVE",
"181 188 OFFCURVE",
"176 179 CURVE SMOOTH",
"174 176 OFFCURVE",
"173 173 OFFCURVE",
"173 171 CURVE SMOOTH",
"173 168 OFFCURVE",
"174 166 OFFCURVE",
"177 167 CURVE SMOOTH",
"180 168 OFFCURVE",
"183 171 OFFCURVE",
"187 176 CURVE SMOOTH",
"196 189 OFFCURVE",
"200 202 OFFCURVE",
"200 215 CURVE SMOOTH",
"200 236 OFFCURVE",
"187 247 OFFCURVE",
"161 247 CURVE SMOOTH",
"148 247 OFFCURVE",
"134 244 OFFCURVE",
"119 239 CURVE SMOOTH",
"60 217 OFFCURVE",
"31 182 OFFCURVE",
"31 134 CURVE SMOOTH",
"31 115 OFFCURVE",
"37 95 OFFCURVE",
"51 76 CURVE SMOOTH",
"57 68 OFFCURVE",
"62 59 OFFCURVE",
"65 48 CURVE SMOOTH",
"67 41 OFFCURVE",
"68 35 OFFCURVE",
"68 29 CURVE",
"49 36 OFFCURVE",
"33 47 OFFCURVE",
"21 62 CURVE SMOOTH",
"20 63 OFFCURVE",
"19 63 OFFCURVE",
"18 63 CURVE SMOOTH",
"13 63 OFFCURVE",
"11 60 OFFCURVE",
"11 55 CURVE",
"10 54 OFFCURVE",
"9 51 OFFCURVE",
"9 47 CURVE SMOOTH",
"9 42 OFFCURVE",
"10 35 OFFCURVE",
"13 25 CURVE SMOOTH",
"17 8 OFFCURVE",
"34 -6 OFFCURVE",
"54 -6 CURVE",
"54 -6 LINE"
);
},
{
closed = 1;
nodes = (
"35 11 OFFCURVE",
"19 24 OFFCURVE",
"19 41 CURVE",
"30 30 OFFCURVE",
"44 21 OFFCURVE",
"61 16 CURVE",
"58 13 OFFCURVE",
"53 11 OFFCURVE",
"48 11 CURVE",
"48 11 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01244 7 54 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 54 25 54 41 54 57 54 73 54 89 54 105 54 121 54 137 54 153 54 169 54 185 54 201 54 217 54 233 54 249 54 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0125 3 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 226;
}
);
leftKerningGroup = s;
note = s;
rightKerningGroup = s;
unicode = 0073;
},
{
glyphname = sacute;
lastChange = "2021-10-05 04:52:55 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 122, 60}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015B;
},
{
glyphname = scaron;
lastChange = "2021-10-05 04:52:55 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = caroncomb;
transform = "{1, 0, 0, 1, 122, 60}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 0161;
},
{
glyphname = scedilla;
lastChange = "2021-10-05 04:20:59 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -55, -4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015F;
},
{
glyphname = scircumflex;
lastChange = "2021-10-05 04:51:28 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 79, 60}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 015D;
},
{
glyphname = scommaaccent;
lastChange = "2021-10-05 04:20:59 +0000";
layers = (
{
components = (
{
name = s;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -36, -4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 226;
}
);
unicode = 0219;
},
{
glyphname = germandbls;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160 -197 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98 -151 OFFCURVE",
"-72 -120 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"25 57 OFFCURVE",
"121 233 OFFCURVE",
"168 335 CURVE SMOOTH",
"188 380 OFFCURVE",
"226 411 OFFCURVE",
"259 411 CURVE SMOOTH",
"304 411 OFFCURVE",
"327 355 OFFCURVE",
"327 296 CURVE SMOOTH",
"327 281 OFFCURVE",
"326 266 OFFCURVE",
"323 252 CURVE",
"313 258 OFFCURVE",
"300 261 OFFCURVE",
"286 261 CURVE SMOOTH",
"223 261 OFFCURVE",
"139 200 OFFCURVE",
"139 135 CURVE SMOOTH",
"139 115 OFFCURVE",
"146 96 OFFCURVE",
"159 76 CURVE SMOOTH",
"165 68 OFFCURVE",
"170 59 OFFCURVE",
"173 48 CURVE SMOOTH",
"175 41 OFFCURVE",
"176 35 OFFCURVE",
"176 29 CURVE",
"157 36 OFFCURVE",
"141 47 OFFCURVE",
"129 62 CURVE SMOOTH",
"128 63 OFFCURVE",
"127 63 OFFCURVE",
"126 63 CURVE SMOOTH",
"121 63 OFFCURVE",
"119 60 OFFCURVE",
"119 55 CURVE",
"118 54 OFFCURVE",
"117 51 OFFCURVE",
"117 47 CURVE SMOOTH",
"117 42 OFFCURVE",
"118 35 OFFCURVE",
"121 25 CURVE SMOOTH",
"125 8 OFFCURVE",
"142 -6 OFFCURVE",
"162 -6 CURVE SMOOTH",
"175 -6 OFFCURVE",
"184 0 OFFCURVE",
"191 11 CURVE",
"200 10 OFFCURVE",
"209 9 OFFCURVE",
"218 9 CURVE SMOOTH",
"229 9 OFFCURVE",
"240 10 OFFCURVE",
"251 12 CURVE SMOOTH",
"283 18 OFFCURVE",
"324 38 OFFCURVE",
"359 71 CURVE SMOOTH",
"363 75 OFFCURVE",
"365 79 OFFCURVE",
"365 81 CURVE SMOOTH",
"365 83 OFFCURVE",
"364 84 OFFCURVE",
"362 84 CURVE SMOOTH",
"359 84 OFFCURVE",
"355 82 OFFCURVE",
"352 79 CURVE SMOOTH",
"326 55 OFFCURVE",
"293 36 OFFCURVE",
"262 27 CURVE SMOOTH",
"252 24 OFFCURVE",
"236 21 OFFCURVE",
"219 21 CURVE SMOOTH",
"211 21 OFFCURVE",
"203 22 OFFCURVE",
"195 23 CURVE",
"196 26 OFFCURVE",
"196 30 OFFCURVE",
"196 34 CURVE SMOOTH",
"195 44 OFFCURVE",
"189 58 OFFCURVE",
"179 75 CURVE SMOOTH",
"169 92 OFFCURVE",
"164 106 OFFCURVE",
"164 117 CURVE SMOOTH",
"164 123 OFFCURVE",
"165 129 OFFCURVE",
"167 136 CURVE SMOOTH",
"183 181 OFFCURVE",
"214 207 OFFCURVE",
"260 221 CURVE SMOOTH",
"273 225 OFFCURVE",
"284 227 OFFCURVE",
"293 227 CURVE SMOOTH",
"304 227 OFFCURVE",
"312 224 OFFCURVE",
"317 220 CURVE SMOOTH",
"322 215 OFFCURVE",
"330 215 OFFCURVE",
"334 228 CURVE SMOOTH",
"341 250 OFFCURVE",
"345 274 OFFCURVE",
"345 299 CURVE SMOOTH",
"345 365 OFFCURVE",
"317 430 OFFCURVE",
"256 430 CURVE SMOOTH",
"211 430 OFFCURVE",
"158 394 OFFCURVE",
"130 340 CURVE SMOOTH",
"98 279 OFFCURVE",
"15 87 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-97 -103 OFFCURVE",
"-125 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187 -185 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283 -191 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304 -109 OFFCURVE",
"-295 -100 CURVE",
"-293 -97 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90 OFFCURVE",
"-293 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90 OFFCURVE",
"-302 -93 CURVE",
"-315 -106 OFFCURVE",
"-322 -122 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -160 OFFCURVE",
"-315 -175 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287 -202 OFFCURVE",
"-268 -209 OFFCURVE",
"-243 -209 CURVE",
"-243 -209 LINE"
);
},
{
closed = 1;
nodes = (
"143 11 OFFCURVE",
"127 24 OFFCURVE",
"127 41 CURVE",
"138 30 OFFCURVE",
"152 21 OFFCURVE",
"169 16 CURVE",
"166 13 OFFCURVE",
"161 11 OFFCURVE",
"156 11 CURVE",
"156 11 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 32 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 32 122 32 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 105 32 121 32 137 32 153 32 169 32 185 32 201 32 217 32 233 32 249 32 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 32 25 32 41 32 57 32 73 32 89 32 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01224 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01258 2 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01248 54 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01256 54 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = t;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{65, 0}";
},
{
name = center;
position = "{11, 85}";
},
{
name = top;
position = "{86, 170}";
},
{
name = topright;
position = "{196, 329}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"102 -1 OFFCURVE",
"142 23 OFFCURVE",
"189 73 CURVE SMOOTH",
"191 75 OFFCURVE",
"192 78 OFFCURVE",
"192 81 CURVE SMOOTH",
"192 84 OFFCURVE",
"191 85 OFFCURVE",
"188 85 CURVE SMOOTH",
"185 85 OFFCURVE",
"182 83 OFFCURVE",
"179 79 CURVE SMOOTH",
"158 56 OFFCURVE",
"138 40 OFFCURVE",
"119 29 CURVE SMOOTH",
"106 22 OFFCURVE",
"94 18 OFFCURVE",
"82 18 CURVE SMOOTH",
"59 18 OFFCURVE",
"47 32 OFFCURVE",
"47 59 CURVE SMOOTH",
"47 82 OFFCURVE",
"57 114 OFFCURVE",
"78 153 CURVE",
"137 153 OFFCURVE",
"169 153 OFFCURVE",
"174 154 CURVE SMOOTH",
"189 156 OFFCURVE",
"196 160 OFFCURVE",
"196 166 CURVE SMOOTH",
"196 169 OFFCURVE",
"193 172 OFFCURVE",
"187 174 CURVE",
"89 174 LINE",
"125 229 OFFCURVE",
"152 269 OFFCURVE",
"169 293 CURVE SMOOTH",
"170 294 OFFCURVE",
"171 296 OFFCURVE",
"171 297 CURVE SMOOTH",
"171 303 OFFCURVE",
"165 306 OFFCURVE",
"153 306 CURVE SMOOTH",
"139 306 OFFCURVE",
"128 302 OFFCURVE",
"119 294 CURVE",
"104 271 OFFCURVE",
"91 251 OFFCURVE",
"82 235 CURVE SMOOTH",
"65 205 OFFCURVE",
"54 185 OFFCURVE",
"49 174 CURVE",
"31 174 LINE",
"13 173 LINE SMOOTH",
"4 173 OFFCURVE",
"-1 171 OFFCURVE",
"-1 166 CURVE SMOOTH",
"-1 164 LINE SMOOTH",
"-1 157 OFFCURVE",
"6 152 OFFCURVE",
"15 151 CURVE",
"12 152 OFFCURVE",
"20 152 OFFCURVE",
"38 153 CURVE",
"24 120 OFFCURVE",
"17 91 OFFCURVE",
"17 66 CURVE SMOOTH",
"17 58 OFFCURVE",
"18 50 OFFCURVE",
"19 41 CURVE SMOOTH",
"25 14 OFFCURVE",
"41 1 OFFCURVE",
"68 0 CURVE",
"68 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01225 8 43 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 102 25 118 25 134 25 150 25 166 25 182 25 198 25 214 25 230 25 246 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 25 22 25 38 25 54 25 70 25 86 25 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 25 117 25 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01245 43 25 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01239 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01216 4 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01227 3 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 27 23 27 39 27 55 27 71 27 87 27 103 27 119 27 135 27 151 27 167 27 183 27 199 27 215 27 231 27 247 27 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 171;
}
);
leftKerningGroup = t;
note = t;
rightKerningGroup = t;
unicode = 0074;
},
{
glyphname = tbar;
lastChange = "2021-10-05 04:21:14 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = strokeshortcomb;
transform = "{1, 0, 0, 1, -61, 3}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0167;
},
{
glyphname = tcaron;
lastChange = "2021-10-05 04:21:31 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = caroncomb.alt;
transform = "{1, 0, 0, 1, 185, 159}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0165;
},
{
glyphname = tcedilla;
lastChange = "2021-10-05 04:21:37 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = cedillacomb;
transform = "{1, 0, 0, 1, -23, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 0163;
},
{
glyphname = tcommaaccent;
lastChange = "2021-10-05 04:21:40 +0000";
layers = (
{
components = (
{
name = t;
},
{
name = commaaccentcomb;
transform = "{1, 0, 0, 1, -4, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 171;
}
);
unicode = 021B;
},
{
glyphname = u;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{92, 0}";
},
{
name = ogonek;
position = "{196, 10}";
},
{
name = top;
position = "{119, 159}";
},
{
name = topright;
position = "{159, 159}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"197 -3 OFFCURVE",
"239 21 OFFCURVE",
"288 73 CURVE",
"291 75 OFFCURVE",
"292 78 OFFCURVE",
"292 81 CURVE SMOOTH",
"292 84 OFFCURVE",
"291 86 OFFCURVE",
"289 86 CURVE SMOOTH",
"286 86 OFFCURVE",
"283 84 OFFCURVE",
"279 80 CURVE SMOOTH",
"239 37 OFFCURVE",
"206 16 OFFCURVE",
"180 16 CURVE SMOOTH",
"163 16 OFFCURVE",
"155 26 OFFCURVE",
"155 47 CURVE SMOOTH",
"155 74 OFFCURVE",
"167 111 OFFCURVE",
"191 159 CURVE",
"192 160 OFFCURVE",
"193 162 OFFCURVE",
"193 163 CURVE SMOOTH",
"193 166 OFFCURVE",
"190 168 OFFCURVE",
"183 168 CURVE SMOOTH",
"171 168 OFFCURVE",
"163 165 OFFCURVE",
"159 159 CURVE",
"147 128 OFFCURVE",
"130 98 OFFCURVE",
"109 69 CURVE SMOOTH",
"84 36 OFFCURVE",
"63 19 OFFCURVE",
"46 19 CURVE SMOOTH",
"39 19 OFFCURVE",
"35 27 OFFCURVE",
"35 43 CURVE SMOOTH",
"35 56 OFFCURVE",
"40 75 OFFCURVE",
"53 98 CURVE SMOOTH",
"74 136 LINE",
"76 142 OFFCURVE",
"73 145 OFFCURVE",
"65 145 CURVE SMOOTH",
"52 145 OFFCURVE",
"43 141 OFFCURVE",
"39 134 CURVE SMOOTH",
"16 92 OFFCURVE",
"4 59 OFFCURVE",
"4 36 CURVE SMOOTH",
"4 14 OFFCURVE",
"14 3 OFFCURVE",
"33 3 CURVE SMOOTH",
"40 3 OFFCURVE",
"49 5 OFFCURVE",
"59 10 CURVE SMOOTH",
"76 19 OFFCURVE",
"99 41 OFFCURVE",
"129 76 CURVE",
"127 68 OFFCURVE",
"126 60 OFFCURVE",
"126 53 CURVE SMOOTH",
"126 37 OFFCURVE",
"130 24 OFFCURVE",
"139 14 CURVE SMOOTH",
"147 5 OFFCURVE",
"155 1 OFFCURVE",
"164 0 CURVE",
"164 0 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0122 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01236 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 102 36 118 36 134 36 150 36 166 36 182 36 198 36 214 36 230 36 246 36 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 36 22 36 38 36 54 36 70 36 86 36 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 36 117 36 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0124 1 24 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01220 24 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
leftKerningGroup = u;
note = u;
rightKerningGroup = u;
unicode = 0075;
},
{
glyphname = uacute;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 91, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ubreve;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = brevecomb;
transform = "{1, 0, 0, 1, 82, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016D;
},
{
glyphname = ucircumflex;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 48, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udblgrave;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dblgravecomb;
transform = "{1, 0, 0, 1, 9, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0215;
},
{
glyphname = udieresis;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 75, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = udotbelow;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 50, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE5;
},
{
glyphname = ugrave;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 42, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uhookabove;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 92, -19}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE7;
},
{
glyphname = uhorn;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = horncomb;
transform = "{1, 0, 0, 1, 179, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 01B0;
},
{
glyphname = uhornacute;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 91, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EE9;
},
{
glyphname = uhorndotbelow;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 50, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EF1;
},
{
glyphname = uhorngrave;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 42, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EEB;
},
{
glyphname = uhornhookabove;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 92, -19}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EED;
},
{
glyphname = uhorntilde;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = uhorn;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 47, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 1EEF;
},
{
glyphname = uhungarumlaut;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlautcomb;
transform = "{1, 0, 0, 1, 89, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0171;
},
{
glyphname = uinvertedbreve;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = breveinvertedcomb;
transform = "{1, 0, 0, 1, 63, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0217;
},
{
glyphname = umacron;
lastChange = "2021-10-05 04:52:09 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 60, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016B;
},
{
glyphname = uogonek;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ogonekcomb;
transform = "{1, 0, 0, 1, 106, 6}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0173;
},
{
glyphname = uring;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = ringcomb;
transform = "{1, 0, 0, 1, 101, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 016F;
},
{
glyphname = utilde;
lastChange = "2021-10-05 04:22:01 +0000";
layers = (
{
components = (
{
name = u;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 47, -11}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 270;
}
);
unicode = 0169;
},
{
glyphname = v;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"86 -9 OFFCURVE",
"132 34 OFFCURVE",
"159 94 CURVE",
"168 66 OFFCURVE",
"196 44 OFFCURVE",
"228 44 CURVE SMOOTH",
"251 44 OFFCURVE",
"271 54 OFFCURVE",
"288 73 CURVE SMOOTH",
"290 76 OFFCURVE",
"291 78 OFFCURVE",
"291 80 CURVE SMOOTH",
"291 82 OFFCURVE",
"291 83 OFFCURVE",
"290 84 CURVE",
"289 87 OFFCURVE",
"286 86 OFFCURVE",
"281 81 CURVE SMOOTH",
"264 63 OFFCURVE",
"247 54 OFFCURVE",
"229 54 CURVE SMOOTH",
"197 54 OFFCURVE",
"171 84 OFFCURVE",
"170 113 CURVE",
"189 129 OFFCURVE",
"201 147 OFFCURVE",
"206 168 CURVE SMOOTH",
"207 172 OFFCURVE",
"208 176 OFFCURVE",
"208 179 CURVE SMOOTH",
"208 194 OFFCURVE",
"202 201 OFFCURVE",
"191 201 CURVE SMOOTH",
"181 201 OFFCURVE",
"172 194 OFFCURVE",
"164 179 CURVE SMOOTH",
"155 161 OFFCURVE",
"152 137 OFFCURVE",
"154 108 CURVE",
"130 56 OFFCURVE",
"93 14 OFFCURVE",
"66 14 CURVE",
"59 15 LINE SMOOTH",
"54 16 OFFCURVE",
"51 22 OFFCURVE",
"51 33 CURVE SMOOTH",
"51 46 OFFCURVE",
"55 60 OFFCURVE",
"62 75 CURVE SMOOTH",
"63 78 OFFCURVE",
"71 91 OFFCURVE",
"85 114 CURVE SMOOTH",
"97 134 OFFCURVE",
"103 146 OFFCURVE",
"103 149 CURVE SMOOTH",
"103 156 OFFCURVE",
"99 159 OFFCURVE",
"91 159 CURVE SMOOTH",
"84 159 OFFCURVE",
"78 156 OFFCURVE",
"73 150 CURVE SMOOTH",
"53 123 OFFCURVE",
"30 99 OFFCURVE",
"5 76 CURVE SMOOTH",
"1 72 OFFCURVE",
"-1 69 OFFCURVE",
"-2 66 CURVE",
"-2 63 OFFCURVE",
"0 61 OFFCURVE",
"3 61 CURVE SMOOTH",
"5 61 OFFCURVE",
"7 62 OFFCURVE",
"9 65 CURVE",
"33 87 LINE",
"39 93 LINE",
"30 76 OFFCURVE",
"26 59 OFFCURVE",
"26 42 CURVE SMOOTH",
"26 15 OFFCURVE",
"36 0 OFFCURVE",
"55 -4 CURVE",
"55 -4 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01233 5 10 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 102 33 118 33 134 33 150 33 166 33 182 33 198 33 214 33 230 33 246 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 33 22 33 38 33 54 33 70 33 86 33 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 33 117 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01212 10 33 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01244 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[11100]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012217 2 233 2 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0128 2 24 2 40 2 56 2 72 2 88 2 104 2 120 2 136 2 152 2 168 2 184 2 200 2 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0125 44 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01212 44 2 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
leftKerningGroup = v;
note = v;
rightKerningGroup = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{154, 0}";
},
{
name = top;
position = "{173, 147}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"47 -34 OFFCURVE",
"80 -11 OFFCURVE",
"101 20 CURVE SMOOTH",
"116 42 OFFCURVE",
"125 54 OFFCURVE",
"126 55 CURVE",
"125 49 OFFCURVE",
"125 43 OFFCURVE",
"125 38 CURVE SMOOTH",
"125 11 OFFCURVE",
"134 -3 OFFCURVE",
"153 -3 CURVE SMOOTH",
"177 -3 OFFCURVE",
"207 26 OFFCURVE",
"226 74 CURVE",
"237 57 OFFCURVE",
"253 48 OFFCURVE",
"272 48 CURVE SMOOTH",
"290 48 OFFCURVE",
"308 56 OFFCURVE",
"325 73 CURVE",
"329 76 OFFCURVE",
"330 80 OFFCURVE",
"328 83 CURVE",
"327 86 OFFCURVE",
"323 85 OFFCURVE",
"318 80 CURVE SMOOTH",
"305 65 OFFCURVE",
"291 57 OFFCURVE",
"277 57 CURVE SMOOTH",
"257 57 OFFCURVE",
"240 73 OFFCURVE",
"235 94 CURVE",
"248 107 OFFCURVE",
"256 125 OFFCURVE",
"256 148 CURVE SMOOTH",
"256 164 OFFCURVE",
"248 175 OFFCURVE",
"238 175 CURVE SMOOTH",
"220 175 OFFCURVE",
"212 157 OFFCURVE",
"212 121 CURVE SMOOTH",
"212 108 OFFCURVE",
"215 95 OFFCURVE",
"220 84 CURVE",
"205 45 OFFCURVE",
"179 16 OFFCURVE",
"163 16 CURVE SMOOTH",
"155 16 OFFCURVE",
"151 22 OFFCURVE",
"151 34 CURVE SMOOTH",
"151 42 OFFCURVE",
"153 53 OFFCURVE",
"158 66 CURVE SMOOTH",
"163 81 OFFCURVE",
"171 99 OFFCURVE",
"182 119 CURVE",
"182 127 OFFCURVE",
"177 131 OFFCURVE",
"166 131 CURVE SMOOTH",
"157 131 OFFCURVE",
"152 129 OFFCURVE",
"149 125 CURVE",
"133 92 OFFCURVE",
"116 57 OFFCURVE",
"93 26 CURVE SMOOTH",
"70 -3 OFFCURVE",
"49 -18 OFFCURVE",
"32 -18 CURVE SMOOTH",
"23 -18 OFFCURVE",
"19 -13 OFFCURVE",
"19 -2 CURVE SMOOTH",
"19 11 OFFCURVE",
"25 30 OFFCURVE",
"37 55 CURVE SMOOTH",
"57 97 OFFCURVE",
"77 127 OFFCURVE",
"96 146 CURVE",
"97 148 OFFCURVE",
"98 150 OFFCURVE",
"98 152 CURVE SMOOTH",
"98 158 OFFCURVE",
"94 161 OFFCURVE",
"86 161 CURVE SMOOTH",
"78 161 OFFCURVE",
"70 157 OFFCURVE",
"61 149 CURVE SMOOTH",
"49 138 OFFCURVE",
"37 124 OFFCURVE",
"26 106 CURVE SMOOTH",
"13 85 OFFCURVE",
"4 64 OFFCURVE",
"-1 45 CURVE SMOOTH",
"-4 31 OFFCURVE",
"-6 19 OFFCURVE",
"-6 8 CURVE SMOOTH",
"-6 -20 OFFCURVE",
"4 -34 OFFCURVE",
"24 -34 CURVE",
"24 -34 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 20 122 20 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 105 20 121 20 137 20 153 20 169 20 185 20 201 20 217 20 233 20 249 20 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 20 25 20 41 20 57 20 73 20 89 20 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01260 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01245 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 102 45 118 45 134 45 150 45 166 45 182 45 198 45 214 45 230 45 246 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 45 22 45 38 45 54 45 70 45 86 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 45 117 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01247 2 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01262 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01269 13 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01254 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01215 18 54 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 308;
}
);
leftKerningGroup = w;
note = w;
rightKerningGroup = w;
unicode = 0077;
},
{
glyphname = wacute;
lastChange = "2021-10-05 04:22:23 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 145, -23}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E83;
},
{
glyphname = wcircumflex;
lastChange = "2021-10-05 04:22:23 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 102, -23}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 0175;
},
{
glyphname = wdieresis;
lastChange = "2021-10-05 04:22:23 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 129, -23}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E85;
},
{
glyphname = wgrave;
lastChange = "2021-10-05 04:22:23 +0000";
layers = (
{
components = (
{
name = w;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 96, -23}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
unicode = 1E81;
},
{
glyphname = x;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-60 -44 OFFCURVE",
"-58 -43 OFFCURVE",
"-56 -41 CURVE SMOOTH",
"-4 14 LINE SMOOTH",
"21 41 OFFCURVE",
"39 58 OFFCURVE",
"50 67 CURVE",
"51 53 OFFCURVE",
"52 41 OFFCURVE",
"54 32 CURVE SMOOTH",
"60 10 OFFCURVE",
"73 -1 OFFCURVE",
"92 -1 CURVE SMOOTH",
"110 -1 OFFCURVE",
"133 9 OFFCURVE",
"161 28 CURVE SMOOTH",
"182 42 OFFCURVE",
"200 57 OFFCURVE",
"214 72 CURVE SMOOTH",
"217 75 OFFCURVE",
"218 78 OFFCURVE",
"218 81 CURVE SMOOTH",
"218 84 OFFCURVE",
"217 85 OFFCURVE",
"215 85 CURVE SMOOTH",
"213 85 OFFCURVE",
"210 83 OFFCURVE",
"206 79 CURVE SMOOTH",
"165 35 OFFCURVE",
"132 13 OFFCURVE",
"109 13 CURVE SMOOTH",
"92 13 OFFCURVE",
"83 24 OFFCURVE",
"80 45 CURVE SMOOTH",
"77 64 OFFCURVE",
"76 78 OFFCURVE",
"75 86 CURVE",
"94 106 OFFCURVE",
"160 154 OFFCURVE",
"181 169 CURVE",
"185 174 OFFCURVE",
"187 178 OFFCURVE",
"187 180 CURVE SMOOTH",
"187 182 OFFCURVE",
"186 183 OFFCURVE",
"183 183 CURVE SMOOTH",
"180 183 OFFCURVE",
"161 170 OFFCURVE",
"126 144 CURVE SMOOTH",
"76 106 LINE",
"77 117 OFFCURVE",
"77 128 OFFCURVE",
"75 139 CURVE SMOOTH",
"73 150 OFFCURVE",
"70 155 OFFCURVE",
"65 155 CURVE SMOOTH",
"58 155 OFFCURVE",
"28 133 OFFCURVE",
"28 126 CURVE SMOOTH",
"28 125 OFFCURVE",
"28 124 OFFCURVE",
"29 124 CURVE SMOOTH",
"32 124 OFFCURVE",
"36 126 OFFCURVE",
"42 131 CURVE SMOOTH",
"46 135 OFFCURVE",
"50 98 OFFCURVE",
"49 85 CURVE",
"36 71 LINE SMOOTH",
"-31 3 OFFCURVE",
"-64 -34 OFFCURVE",
"-64 -41 CURVE SMOOTH",
"-64 -43 OFFCURVE",
"-63 -44 OFFCURVE",
"-61 -44 CURVE",
"-61 -44 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0124 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 4 23 4 39 4 55 4 71 4 87 4 103 4 119 4 135 4 151 4 167 4 183 4 199 4 215 4 231 4 247 4 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01220 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01244 26 48 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 234;
}
);
leftKerningGroup = x;
note = x;
rightKerningGroup = x;
unicode = 0078;
},
{
glyphname = y;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{200, 0}";
},
{
name = top;
position = "{125, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-167 -334 OFFCURVE",
"-124 -323 OFFCURVE",
"-81 -302 CURVE SMOOTH",
"-41 -283 OFFCURVE",
"-5 -257 OFFCURVE",
"26 -225 CURVE SMOOTH",
"83 -168 OFFCURVE",
"123 -93 OFFCURVE",
"148 0 CURVE",
"165 3 OFFCURVE",
"179 4 OFFCURVE",
"188 4 CURVE SMOOTH",
"215 4 OFFCURVE",
"229 -3 OFFCURVE",
"229 -16 CURVE SMOOTH",
"229 -23 OFFCURVE",
"225 -30 OFFCURVE",
"216 -39 CURVE SMOOTH",
"215 -40 OFFCURVE",
"214 -42 OFFCURVE",
"214 -44 CURVE SMOOTH",
"214 -46 OFFCURVE",
"215 -47 OFFCURVE",
"218 -47 CURVE SMOOTH",
"219 -47 OFFCURVE",
"221 -46 OFFCURVE",
"223 -44 CURVE SMOOTH",
"235 -33 OFFCURVE",
"241 -22 OFFCURVE",
"241 -11 CURVE SMOOTH",
"241 13 OFFCURVE",
"207 21 OFFCURVE",
"178 21 CURVE SMOOTH",
"170 21 OFFCURVE",
"162 21 OFFCURVE",
"153 19 CURVE",
"170 87 OFFCURVE",
"178 136 OFFCURVE",
"178 165 CURVE SMOOTH",
"178 174 OFFCURVE",
"175 178 OFFCURVE",
"164 178 CURVE SMOOTH",
"155 178 OFFCURVE",
"149 175 OFFCURVE",
"146 168 CURVE SMOOTH",
"113 105 OFFCURVE",
"87 64 OFFCURVE",
"68 46 CURVE SMOOTH",
"54 31 OFFCURVE",
"44 24 OFFCURVE",
"38 24 CURVE SMOOTH",
"32 24 OFFCURVE",
"29 29 OFFCURVE",
"29 38 CURVE SMOOTH",
"29 48 OFFCURVE",
"32 60 OFFCURVE",
"38 75 CURVE SMOOTH",
"55 112 OFFCURVE",
"69 139 OFFCURVE",
"78 154 CURVE",
"79 159 LINE SMOOTH",
"80 162 OFFCURVE",
"77 163 OFFCURVE",
"74 163 CURVE SMOOTH",
"66 163 OFFCURVE",
"50 154 OFFCURVE",
"46 146 CURVE SMOOTH",
"16 91 OFFCURVE",
"1 51 OFFCURVE",
"1 28 CURVE SMOOTH",
"1 11 OFFCURVE",
"8 2 OFFCURVE",
"21 2 CURVE SMOOTH",
"29 2 OFFCURVE",
"38 6 OFFCURVE",
"48 13 CURVE SMOOTH",
"81 37 OFFCURVE",
"112 77 OFFCURVE",
"141 133 CURVE",
"130 78 OFFCURVE",
"121 37 OFFCURVE",
"114 10 CURVE",
"-82 -41 OFFCURVE",
"-202 -93 OFFCURVE",
"-266 -161 CURVE SMOOTH",
"-295 -192 OFFCURVE",
"-309 -221 OFFCURVE",
"-309 -250 CURVE SMOOTH",
"-309 -299 OFFCURVE",
"-269 -334 OFFCURVE",
"-208 -334 CURVE",
"-208 -334 LINE"
);
},
{
closed = 1;
nodes = (
"-239 -318 OFFCURVE",
"-273 -292 OFFCURVE",
"-273 -248 CURVE SMOOTH",
"-273 -221 OFFCURVE",
"-261 -194 OFFCURVE",
"-238 -167 CURVE SMOOTH",
"-211 -135 OFFCURVE",
"-172 -108 OFFCURVE",
"-121 -85 CURVE SMOOTH",
"-85 -69 OFFCURVE",
"-42 -53 OFFCURVE",
"8 -38 CURVE SMOOTH",
"31 -30 OFFCURVE",
"66 -20 OFFCURVE",
"111 -8 CURVE",
"82 -109 OFFCURVE",
"36 -188 OFFCURVE",
"-27 -246 CURVE SMOOTH",
"-81 -294 OFFCURVE",
"-135 -318 OFFCURVE",
"-188 -318 CURVE",
"-188 -318 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 61 122 61 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 105 61 121 61 137 61 153 61 169 61 185 61 201 61 217 61 233 61 249 61 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 61 25 61 41 61 57 61 73 61 89 61 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01274 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01245 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0120 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01211 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 11 23 11 39 11 55 11 71 11 87 11 103 11 119 11 135 11 151 11 167 11 183 11 199 11 215 11 231 11 247 11 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01221 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01233 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01255 45 17 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
leftKerningGroup = y;
note = y;
rightKerningGroup = y;
unicode = 0079;
},
{
glyphname = yacute;
lastChange = "2021-10-05 04:22:48 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 97, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 00FD;
},
{
glyphname = ycircumflex;
lastChange = "2021-10-05 04:22:48 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = circumflexcomb;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 0177;
},
{
glyphname = ydieresis;
lastChange = "2021-10-05 04:22:46 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 81, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = ydotbelow;
lastChange = "2021-10-05 04:52:28 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = dotbelowcomb;
transform = "{1, 0, 0, 1, 158, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF5;
},
{
glyphname = ygrave;
lastChange = "2021-10-05 04:22:48 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 48, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF3;
},
{
glyphname = yhookabove;
lastChange = "2021-10-05 04:22:48 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 98, -8}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF7;
},
{
glyphname = ymacron;
lastChange = "2021-10-05 04:52:32 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 66, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 0233;
},
{
glyphname = ytilde;
lastChange = "2021-10-05 04:22:48 +0000";
layers = (
{
components = (
{
name = y;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 53, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 250;
}
);
unicode = 1EF9;
},
{
glyphname = z;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = bottom;
position = "{149, 0}";
},
{
name = center;
position = "{149, 85}";
},
{
name = top;
position = "{155, 199}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-7 -307 OFFCURVE",
"61 -276 OFFCURVE",
"118 -213 CURVE SMOOTH",
"173 -154 OFFCURVE",
"203 -83 OFFCURVE",
"210 0 CURVE",
"227 3 OFFCURVE",
"241 4 OFFCURVE",
"251 4 CURVE SMOOTH",
"278 4 OFFCURVE",
"291 -3 OFFCURVE",
"291 -16 CURVE SMOOTH",
"291 -23 OFFCURVE",
"287 -30 OFFCURVE",
"279 -39 CURVE",
"277 -40 OFFCURVE",
"276 -42 OFFCURVE",
"276 -44 CURVE SMOOTH",
"276 -46 OFFCURVE",
"277 -47 OFFCURVE",
"279 -47 CURVE SMOOTH",
"281 -47 OFFCURVE",
"283 -46 OFFCURVE",
"284 -44 CURVE",
"297 -33 OFFCURVE",
"303 -22 OFFCURVE",
"303 -11 CURVE SMOOTH",
"303 6 OFFCURVE",
"288 16 OFFCURVE",
"257 20 CURVE SMOOTH",
"248 21 OFFCURVE",
"233 20 OFFCURVE",
"211 17 CURVE",
"210 42 OFFCURVE",
"200 62 OFFCURVE",
"183 75 CURVE SMOOTH",
"172 84 OFFCURVE",
"160 89 OFFCURVE",
"149 88 CURVE",
"181 114 LINE SMOOTH",
"201 131 OFFCURVE",
"211 148 OFFCURVE",
"211 167 CURVE SMOOTH",
"211 190 OFFCURVE",
"193 208 OFFCURVE",
"165 208 CURVE SMOOTH",
"139 208 OFFCURVE",
"112 194 OFFCURVE",
"85 166 CURVE SMOOTH",
"48 125 OFFCURVE",
"21 95 OFFCURVE",
"5 76 CURVE SMOOTH",
"0 71 OFFCURVE",
"-3 67 OFFCURVE",
"-3 64 CURVE SMOOTH",
"-3 63 OFFCURVE",
"-2 62 OFFCURVE",
"1 62 CURVE SMOOTH",
"6 62 OFFCURVE",
"22 76 OFFCURVE",
"48 103 CURVE SMOOTH",
"96 154 LINE",
"117 173 OFFCURVE",
"137 183 OFFCURVE",
"156 183 CURVE SMOOTH",
"175 183 OFFCURVE",
"185 175 OFFCURVE",
"185 158 CURVE SMOOTH",
"185 145 OFFCURVE",
"178 132 OFFCURVE",
"164 119 CURVE SMOOTH",
"154 110 OFFCURVE",
"140 100 OFFCURVE",
"122 91 CURVE",
"83 85 OFFCURVE",
"64 74 OFFCURVE",
"64 59 CURVE SMOOTH",
"64 52 OFFCURVE",
"70 47 OFFCURVE",
"79 47 CURVE SMOOTH",
"80 47 OFFCURVE",
"82 48 OFFCURVE",
"84 48 CURVE",
"101 53 OFFCURVE",
"114 58 OFFCURVE",
"123 63 CURVE",
"127 64 OFFCURVE",
"131 64 OFFCURVE",
"136 64 CURVE SMOOTH",
"150 64 OFFCURVE",
"160 58 OFFCURVE",
"167 45 CURVE SMOOTH",
"172 35 OFFCURVE",
"174 23 OFFCURVE",
"174 9 CURVE",
"87 -12 OFFCURVE",
"11 -37 OFFCURVE",
"-53 -64 CURVE SMOOTH",
"-105 -87 OFFCURVE",
"-144 -114 OFFCURVE",
"-171 -143 CURVE SMOOTH",
"-193 -169 OFFCURVE",
"-204 -196 OFFCURVE",
"-204 -223 CURVE SMOOTH",
"-204 -250 OFFCURVE",
"-193 -270 OFFCURVE",
"-171 -285 CURVE SMOOTH",
"-150 -300 OFFCURVE",
"-122 -307 OFFCURVE",
"-88 -307 CURVE",
"-88 -307 LINE"
);
},
{
closed = 1;
nodes = (
"-129 -291 OFFCURVE",
"-170 -263 OFFCURVE",
"-170 -216 CURVE SMOOTH",
"-170 -165 OFFCURVE",
"-129 -120 OFFCURVE",
"-46 -81 CURVE SMOOTH",
"-9 -63 OFFCURVE",
"24 -49 OFFCURVE",
"53 -40 CURVE SMOOTH",
"71 -34 OFFCURVE",
"111 -23 OFFCURVE",
"174 -7 CURVE",
"171 -82 OFFCURVE",
"149 -146 OFFCURVE",
"106 -201 CURVE SMOOTH",
"60 -261 OFFCURVE",
"1 -291 OFFCURVE",
"-70 -291 CURVE",
"-70 -291 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01282 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01262 37 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01226 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0126 26 74 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012218 37 234 37 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01243 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01266 37 62 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01262 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01276 \012MDRP[10000]	/* MoveDirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 102 82 118 82 134 82 150 82 166 82 182 82 198 82 214 82 230 82 246 82 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 82 22 82 38 82 54 82 70 82 86 82 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 82 117 82 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01259 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01285 2 16 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01245 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 45 24 45 40 45 56 45 72 45 88 45 104 45 120 45 136 45 152 45 168 45 184 45 200 45 216 45 232 45 248 45 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 298;
}
);
leftKerningGroup = z;
note = z;
rightKerningGroup = z;
unicode = 007A;
},
{
glyphname = zacute;
lastChange = "2021-10-05 04:12:26 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 127, 29}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017A;
},
{
glyphname = zcaron;
lastChange = "2021-10-05 04:11:16 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 127, 29}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017E;
},
{
glyphname = zdotaccent;
lastChange = "2021-10-05 04:12:26 +0000";
layers = (
{
components = (
{
name = z;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 152, 29}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 298;
}
);
unicode = 017C;
},
{
glyphname = f_f;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = f;
},
{
name = f;
transform = "{1, 0, 0, 1, 154, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
leftMetricsKey = f;
rightMetricsKey = f;
},
{
glyphname = f_f_i;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = f_f;
},
{
name = i;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 479;
}
);
leftMetricsKey = f;
rightMetricsKey = i;
},
{
glyphname = f_f_l;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = f_f;
},
{
name = l;
transform = "{1, 0, 0, 1, 308, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 469;
}
);
leftMetricsKey = f;
rightMetricsKey = l;
},
{
glyphname = fi;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160 -197 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98 -151 OFFCURVE",
"-72 -120 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"134 152 OFFCURVE",
"175 152 OFFCURVE",
"196 153 CURVE",
"179 125 OFFCURVE",
"170 101 OFFCURVE",
"169 80 CURVE SMOOTH",
"165 26 OFFCURVE",
"183 0 OFFCURVE",
"224 0 CURVE SMOOTH",
"256 0 OFFCURVE",
"296 24 OFFCURVE",
"342 73 CURVE",
"344 76 OFFCURVE",
"345 78 OFFCURVE",
"345 81 CURVE SMOOTH",
"345 84 OFFCURVE",
"344 85 OFFCURVE",
"342 86 CURVE",
"339 86 OFFCURVE",
"336 84 OFFCURVE",
"332 79 CURVE SMOOTH",
"293 37 OFFCURVE",
"260 16 OFFCURVE",
"233 16 CURVE SMOOTH",
"213 16 OFFCURVE",
"203 30 OFFCURVE",
"203 57 CURVE SMOOTH",
"203 64 OFFCURVE",
"204 71 OFFCURVE",
"205 78 CURVE SMOOTH",
"207 89 OFFCURVE",
"212 104 OFFCURVE",
"221 121 CURVE SMOOTH",
"246 164 LINE SMOOTH",
"247 166 OFFCURVE",
"248 168 OFFCURVE",
"248 169 CURVE SMOOTH",
"248 175 OFFCURVE",
"243 178 OFFCURVE",
"233 178 CURVE SMOOTH",
"225 178 OFFCURVE",
"218 176 OFFCURVE",
"213 173 CURVE",
"90 174 LINE",
"166 241 OFFCURVE",
"215 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245 359 OFFCURVE",
"249 374 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418 OFFCURVE",
"240 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163 392 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98 279 OFFCURVE",
"79 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-3 173 OFFCURVE",
"-8 170 OFFCURVE",
"-8 165 CURVE SMOOTH",
"-8 164 LINE SMOOTH",
"-7 157 OFFCURVE",
"1 153 OFFCURVE",
"14 152 CURVE",
"41 153 LINE",
"8 83 OFFCURVE",
"-30 11 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-98 -103 OFFCURVE",
"-125 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187 -185 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283 -191 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304 -109 OFFCURVE",
"-295 -100 CURVE",
"-293 -97 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90 OFFCURVE",
"-293 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90 OFFCURVE",
"-302 -93 CURVE",
"-315 -106 OFFCURVE",
"-322 -122 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -160 OFFCURVE",
"-315 -175 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287 -202 OFFCURVE",
"-268 -209 OFFCURVE",
"-243 -209 CURVE",
"-243 -209 LINE"
);
},
{
closed = 1;
nodes = (
"122 248 OFFCURVE",
"154 308 OFFCURVE",
"184 361 CURVE SMOOTH",
"203 393 OFFCURVE",
"216 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 386 OFFCURVE",
"227 371 OFFCURVE",
"219 354 CURVE SMOOTH",
"194 299 OFFCURVE",
"150 241 OFFCURVE",
"87 182 CURVE",
"87 182 LINE"
);
},
{
closed = 1;
nodes = (
"307 250 OFFCURVE",
"316 260 OFFCURVE",
"316 281 CURVE SMOOTH",
"316 294 OFFCURVE",
"308 301 OFFCURVE",
"293 301 CURVE SMOOTH",
"287 301 OFFCURVE",
"281 299 OFFCURVE",
"275 294 CURVE SMOOTH",
"268 289 OFFCURVE",
"264 282 OFFCURVE",
"264 274 CURVE SMOOTH",
"264 262 OFFCURVE",
"276 250 OFFCURVE",
"288 250 CURVE",
"288 250 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01228 6 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01271 8 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 7 83 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01291 8 96 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 4 122 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 105 4 121 4 137 4 153 4 169 4 185 4 201 4 217 4 233 4 249 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 4 25 4 41 4 57 4 73 4 89 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 4 71 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 28 22 28 38 28 54 28 70 28 86 28 102 28 118 28 134 28 150 28 166 28 182 28 198 28 214 28 230 28 246 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01238 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01257 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01263 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 83 25 83 41 83 57 83 73 83 89 83 105 83 121 83 137 83 153 83 169 83 185 83 201 83 217 83 233 83 249 83 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 18 91 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 96 122 96 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 105 96 121 96 137 96 153 96 169 96 185 96 201 96 217 96 233 96 249 96 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 96 25 96 41 96 57 96 73 96 89 96 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012103 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0122 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01232 1 14 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\012100 93 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01257 4 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 2 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 73 23 73 39 73 55 73 71 73 87 73 103 73 119 73 135 73 151 73 167 73 183 73 199 73 215 73 231 73 247 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01289 2 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 324;
}
);
note = fi;
unicode = FB01;
},
{
glyphname = fl;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-199 -209 OFFCURVE",
"-160 -197 OFFCURVE",
"-127 -172 CURVE SMOOTH",
"-98 -151 OFFCURVE",
"-72 -120 OFFCURVE",
"-47 -77 CURVE SMOOTH",
"7 23 OFFCURVE",
"47 99 OFFCURVE",
"73 151 CURVE",
"127 152 OFFCURVE",
"164 152 OFFCURVE",
"183 153 CURVE",
"182 147 OFFCURVE",
"180 141 OFFCURVE",
"178 136 CURVE",
"169 101 OFFCURVE",
"164 75 OFFCURVE",
"164 56 CURVE SMOOTH",
"164 18 OFFCURVE",
"181 0 OFFCURVE",
"214 0 CURVE SMOOTH",
"246 0 OFFCURVE",
"286 24 OFFCURVE",
"332 73 CURVE SMOOTH",
"335 76 OFFCURVE",
"336 78 OFFCURVE",
"336 81 CURVE SMOOTH",
"336 84 OFFCURVE",
"335 85 OFFCURVE",
"332 86 CURVE",
"329 86 OFFCURVE",
"326 84 OFFCURVE",
"322 79 CURVE SMOOTH",
"301 56 OFFCURVE",
"281 40 OFFCURVE",
"263 29 CURVE SMOOTH",
"246 19 OFFCURVE",
"231 14 OFFCURVE",
"221 14 CURVE SMOOTH",
"203 14 OFFCURVE",
"194 27 OFFCURVE",
"194 54 CURVE SMOOTH",
"194 89 OFFCURVE",
"204 124 OFFCURVE",
"223 159 CURVE",
"315 238 OFFCURVE",
"371 307 OFFCURVE",
"390 367 CURVE SMOOTH",
"394 378 OFFCURVE",
"396 389 OFFCURVE",
"396 398 CURVE SMOOTH",
"396 419 OFFCURVE",
"387 430 OFFCURVE",
"370 430 CURVE SMOOTH",
"337 430 OFFCURVE",
"297 387 OFFCURVE",
"251 302 CURVE SMOOTH",
"224 253 OFFCURVE",
"204 210 OFFCURVE",
"190 173 CURVE",
"90 174 LINE",
"166 241 OFFCURVE",
"215 298 OFFCURVE",
"238 344 CURVE SMOOTH",
"245 359 OFFCURVE",
"249 374 OFFCURVE",
"249 389 CURVE SMOOTH",
"249 418 OFFCURVE",
"240 433 OFFCURVE",
"221 433 CURVE SMOOTH",
"211 433 OFFCURVE",
"200 427 OFFCURVE",
"188 415 CURVE SMOOTH",
"163 392 OFFCURVE",
"137 353 OFFCURVE",
"109 299 CURVE SMOOTH",
"98 279 OFFCURVE",
"79 237 OFFCURVE",
"50 173 CURVE",
"6 173 LINE SMOOTH",
"-3 173 OFFCURVE",
"-8 170 OFFCURVE",
"-8 165 CURVE SMOOTH",
"-8 164 LINE SMOOTH",
"-7 157 OFFCURVE",
"1 153 OFFCURVE",
"14 152 CURVE",
"41 153 LINE",
"8 83 OFFCURVE",
"-30 11 OFFCURVE",
"-73 -62 CURVE SMOOTH",
"-98 -103 OFFCURVE",
"-125 -136 OFFCURVE",
"-156 -160 CURVE SMOOTH",
"-187 -185 OFFCURVE",
"-218 -197 OFFCURVE",
"-248 -197 CURVE SMOOTH",
"-268 -197 OFFCURVE",
"-283 -191 OFFCURVE",
"-294 -178 CURVE SMOOTH",
"-304 -167 OFFCURVE",
"-309 -154 OFFCURVE",
"-309 -138 CURVE SMOOTH",
"-309 -122 OFFCURVE",
"-304 -109 OFFCURVE",
"-295 -100 CURVE",
"-293 -97 OFFCURVE",
"-292 -95 OFFCURVE",
"-292 -93 CURVE SMOOTH",
"-292 -90 OFFCURVE",
"-293 -89 OFFCURVE",
"-296 -89 CURVE SMOOTH",
"-298 -89 OFFCURVE",
"-300 -90 OFFCURVE",
"-302 -93 CURVE",
"-315 -106 OFFCURVE",
"-322 -122 OFFCURVE",
"-322 -141 CURVE SMOOTH",
"-322 -160 OFFCURVE",
"-315 -175 OFFCURVE",
"-302 -188 CURVE SMOOTH",
"-287 -202 OFFCURVE",
"-268 -209 OFFCURVE",
"-243 -209 CURVE",
"-243 -209 LINE"
);
},
{
closed = 1;
nodes = (
"122 248 OFFCURVE",
"154 308 OFFCURVE",
"184 361 CURVE SMOOTH",
"203 393 OFFCURVE",
"216 409 OFFCURVE",
"225 409 CURVE SMOOTH",
"229 409 OFFCURVE",
"231 405 OFFCURVE",
"231 397 CURVE SMOOTH",
"231 386 OFFCURVE",
"227 371 OFFCURVE",
"219 354 CURVE SMOOTH",
"194 299 OFFCURVE",
"150 241 OFFCURVE",
"87 182 CURVE",
"87 182 LINE"
);
},
{
closed = 1;
nodes = (
"259 248 OFFCURVE",
"291 315 OFFCURVE",
"328 378 CURVE SMOOTH",
"342 403 OFFCURVE",
"355 415 OFFCURVE",
"366 415 CURVE SMOOTH",
"373 415 OFFCURVE",
"377 410 OFFCURVE",
"377 399 CURVE SMOOTH",
"377 392 OFFCURVE",
"375 382 OFFCURVE",
"370 369 CURVE SMOOTH",
"359 340 OFFCURVE",
"338 307 OFFCURVE",
"309 268 CURVE SMOOTH",
"284 235 OFFCURVE",
"258 206 OFFCURVE",
"231 179 CURVE",
"231 179 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01256 6 46 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01281 7 97 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01210 7 85 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 30 122 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01234 30 16 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 56 22 56 38 56 54 56 70 56 86 56 102 56 118 56 134 56 150 56 166 56 182 56 198 56 214 56 230 56 246 56 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01266 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 85 25 85 41 85 57 85 73 85 89 85 105 85 121 85 137 85 153 85 169 85 185 85 201 85 217 85 233 85 249 85 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01291 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 97 25 97 41 97 57 97 73 97 89 97 105 97 121 97 137 97 153 97 169 97 185 97 201 97 217 97 233 97 249 97 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\012103 46 10 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012106 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01260 1 42 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01279 4 99 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01273 4 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01279 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01268 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 314;
}
);
note = fl;
unicode = FB02;
},
{
color = 0;
glyphname = ordfeminine;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"44 264 OFFCURVE",
"63 280 OFFCURVE",
"78 301 CURVE",
"80 277 OFFCURVE",
"89 264 OFFCURVE",
"106 264 CURVE SMOOTH",
"122 264 OFFCURVE",
"142 276 OFFCURVE",
"165 300 CURVE SMOOTH",
"167 302 OFFCURVE",
"167 304 OFFCURVE",
"166 306 CURVE SMOOTH",
"165 308 OFFCURVE",
"164 307 OFFCURVE",
"161 304 CURVE SMOOTH",
"142 283 OFFCURVE",
"126 273 OFFCURVE",
"113 273 CURVE SMOOTH",
"100 273 OFFCURVE",
"94 281 OFFCURVE",
"94 297 CURVE SMOOTH",
"94 310 OFFCURVE",
"98 323 OFFCURVE",
"106 337 CURVE",
"106 338 OFFCURVE",
"107 338 OFFCURVE",
"110 339 CURVE SMOOTH",
"112 340 OFFCURVE",
"113 341 OFFCURVE",
"113 342 CURVE SMOOTH",
"113 349 OFFCURVE",
"107 353 OFFCURVE",
"96 353 CURVE SMOOTH",
"90 353 OFFCURVE",
"83 351 OFFCURVE",
"76 348 CURVE SMOOTH",
"59 340 OFFCURVE",
"43 326 OFFCURVE",
"30 305 CURVE SMOOTH",
"24 296 OFFCURVE",
"21 287 OFFCURVE",
"21 279 CURVE SMOOTH",
"21 269 OFFCURVE",
"25 264 OFFCURVE",
"33 264 CURVE",
"33 264 LINE"
);
},
{
closed = 1;
nodes = (
"39 279 OFFCURVE",
"37 282 OFFCURVE",
"37 288 CURVE SMOOTH",
"37 293 OFFCURVE",
"39 298 OFFCURVE",
"43 305 CURVE SMOOTH",
"55 330 OFFCURVE",
"70 342 OFFCURVE",
"87 341 CURVE",
"83 334 OFFCURVE",
"80 325 OFFCURVE",
"79 314 CURVE",
"76 305 OFFCURVE",
"69 295 OFFCURVE",
"58 286 CURVE SMOOTH",
"52 281 OFFCURVE",
"47 279 OFFCURVE",
"43 279 CURVE",
"43 279 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01222 9 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 22 229 22 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\0124 9 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01230 9 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 234;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
color = 0;
glyphname = ordmasculine;
lastChange = "2021-10-05 04:53:16 +0000";
layers = (
{
components = (
{
name = o;
transform = "{0.85433, 0, 0, 0.85433, 0, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0123 7 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0121 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 3 22 3 38 3 54 3 70 3 86 3 102 3 118 3 134 3 150 3 166 3 182 3 198 3 214 3 230 3 246 3 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\0127 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 37 20 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0121 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\0127 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01218 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 35 45 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 188;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = pi;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"124 -9 OFFCURVE",
"128 -9 OFFCURVE",
"131 -8 CURVE SMOOTH",
"138 -6 OFFCURVE",
"147 3 OFFCURVE",
"158 18 CURVE SMOOTH",
"169 32 OFFCURVE",
"175 42 OFFCURVE",
"175 49 CURVE",
"174 50 LINE",
"173 50 OFFCURVE",
"171 49 OFFCURVE",
"170 46 CURVE",
"158 24 OFFCURVE",
"149 11 OFFCURVE",
"143 6 CURVE SMOOTH",
"136 0 OFFCURVE",
"130 -3 OFFCURVE",
"124 -3 CURVE SMOOTH",
"117 -3 OFFCURVE",
"113 5 OFFCURVE",
"113 21 CURVE SMOOTH",
"113 34 OFFCURVE",
"115 49 OFFCURVE",
"119 65 CURVE SMOOTH",
"131 108 LINE",
"149 107 OFFCURVE",
"164 112 OFFCURVE",
"177 123 CURVE SMOOTH",
"180 126 OFFCURVE",
"182 129 OFFCURVE",
"182 132 CURVE SMOOTH",
"182 133 OFFCURVE",
"181 134 OFFCURVE",
"180 134 CURVE",
"165 125 OFFCURVE",
"153 120 OFFCURVE",
"144 120 CURVE SMOOTH",
"135 120 OFFCURVE",
"122 123 OFFCURVE",
"104 129 CURVE SMOOTH",
"87 134 OFFCURVE",
"72 137 OFFCURVE",
"63 137 CURVE SMOOTH",
"45 137 OFFCURVE",
"28 129 OFFCURVE",
"11 113 CURVE SMOOTH",
"8 110 OFFCURVE",
"7 107 OFFCURVE",
"7 104 CURVE SMOOTH",
"7 103 OFFCURVE",
"8 103 OFFCURVE",
"9 103 CURVE SMOOTH",
"12 104 LINE",
"25 115 OFFCURVE",
"40 121 OFFCURVE",
"58 121 CURVE SMOOTH",
"59 121 LINE",
"59 84 OFFCURVE",
"57 54 OFFCURVE",
"53 34 CURVE",
"52 33 OFFCURVE",
"52 32 OFFCURVE",
"51 30 CURVE SMOOTH",
"48 20 LINE SMOOTH",
"45 13 OFFCURVE",
"44 8 OFFCURVE",
"44 6 CURVE SMOOTH",
"44 5 OFFCURVE",
"45 5 OFFCURVE",
"48 4 CURVE SMOOTH",
"49 4 OFFCURVE",
"50 5 OFFCURVE",
"51 6 CURVE",
"66 35 OFFCURVE",
"73 72 OFFCURVE",
"74 119 CURVE",
"92 116 OFFCURVE",
"105 113 OFFCURVE",
"114 110 CURVE",
"105 85 OFFCURVE",
"101 55 OFFCURVE",
"101 20 CURVE SMOOTH",
"101 1 OFFCURVE",
"108 -9 OFFCURVE",
"121 -9 CURVE",
"121 -9 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0127 6 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 23 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 2 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = zero;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"195 -29 OFFCURVE",
"243 -17 OFFCURVE",
"296 6 CURVE SMOOTH",
"348 29 OFFCURVE",
"393 59 OFFCURVE",
"431 94 CURVE SMOOTH",
"482 141 OFFCURVE",
"513 200 OFFCURVE",
"513 249 CURVE SMOOTH",
"513 278 OFFCURVE",
"502 301 OFFCURVE",
"481 318 CURVE SMOOTH",
"459 335 OFFCURVE",
"428 343 OFFCURVE",
"388 343 CURVE SMOOTH",
"339 343 OFFCURVE",
"287 328 OFFCURVE",
"231 298 CURVE SMOOTH",
"192 276 OFFCURVE",
"173 259 OFFCURVE",
"173 247 CURVE SMOOTH",
"173 243 OFFCURVE",
"176 241 OFFCURVE",
"182 241 CURVE SMOOTH",
"185 241 OFFCURVE",
"187 242 OFFCURVE",
"188 244 CURVE",
"250 297 OFFCURVE",
"319 326 OFFCURVE",
"396 326 CURVE SMOOTH",
"453 326 OFFCURVE",
"481 304 OFFCURVE",
"481 259 CURVE SMOOTH",
"481 212 OFFCURVE",
"445 149 OFFCURVE",
"396 105 CURVE SMOOTH",
"359 71 OFFCURVE",
"319 44 OFFCURVE",
"278 24 CURVE SMOOTH",
"233 2 OFFCURVE",
"191 -9 OFFCURVE",
"151 -9 CURVE SMOOTH",
"112 -9 OFFCURVE",
"82 0 OFFCURVE",
"61 19 CURVE SMOOTH",
"43 36 OFFCURVE",
"34 59 OFFCURVE",
"34 88 CURVE SMOOTH",
"34 148 OFFCURVE",
"74 224 OFFCURVE",
"134 276 CURVE SMOOTH",
"162 301 OFFCURVE",
"199 322 OFFCURVE",
"246 339 CURVE SMOOTH",
"288 354 OFFCURVE",
"331 364 OFFCURVE",
"374 368 CURVE SMOOTH",
"381 368 OFFCURVE",
"385 370 OFFCURVE",
"385 375 CURVE SMOOTH",
"385 379 OFFCURVE",
"382 381 OFFCURVE",
"376 382 CURVE SMOOTH",
"369 383 OFFCURVE",
"362 383 OFFCURVE",
"355 383 CURVE SMOOTH",
"316 383 OFFCURVE",
"268 372 OFFCURVE",
"213 349 CURVE SMOOTH",
"162 328 OFFCURVE",
"122 306 OFFCURVE",
"93 281 CURVE SMOOTH",
"50 246 OFFCURVE",
"22 202 OFFCURVE",
"9 149 CURVE SMOOTH",
"5 134 OFFCURVE",
"3 119 OFFCURVE",
"3 105 CURVE SMOOTH",
"3 26 OFFCURVE",
"64 -25 OFFCURVE",
"151 -28 CURVE",
"151 -28 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01227 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 102 27 118 27 134 27 150 27 166 27 182 27 198 27 214 27 230 27 246 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 27 22 27 38 27 54 27 70 27 86 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 27 117 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 38 122 38 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 105 38 121 38 137 38 153 38 169 38 185 38 201 38 217 38 233 38 249 38 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 38 25 38 41 38 57 38 73 38 89 38 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01252 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01238 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01254 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01258 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01231 3 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01250 3 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 513;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"51 -6 OFFCURVE",
"56 -4 OFFCURVE",
"57 0 CURVE",
"83 63 OFFCURVE",
"117 134 OFFCURVE",
"159 211 CURVE SMOOTH",
"196 278 OFFCURVE",
"228 329 OFFCURVE",
"254 364 CURVE",
"254 367 LINE SMOOTH",
"254 376 OFFCURVE",
"242 388 OFFCURVE",
"229 388 CURVE SMOOTH",
"227 388 OFFCURVE",
"225 387 OFFCURVE",
"223 386 CURVE",
"170 335 OFFCURVE",
"132 298 OFFCURVE",
"108 274 CURVE SMOOTH",
"100 267 OFFCURVE",
"96 262 OFFCURVE",
"96 258 CURVE SMOOTH",
"96 255 OFFCURVE",
"97 254 OFFCURVE",
"99 254 CURVE SMOOTH",
"102 254 OFFCURVE",
"105 256 OFFCURVE",
"110 259 CURVE",
"116 265 OFFCURVE",
"127 274 OFFCURVE",
"143 286 CURVE SMOOTH",
"157 297 OFFCURVE",
"165 303 OFFCURVE",
"168 304 CURVE",
"151 260 OFFCURVE",
"130 211 OFFCURVE",
"105 156 CURVE SMOOTH",
"82 107 OFFCURVE",
"59 59 OFFCURVE",
"36 10 CURVE SMOOTH",
"35 7 OFFCURVE",
"34 5 OFFCURVE",
"34 3 CURVE SMOOTH",
"34 -3 OFFCURVE",
"37 -6 OFFCURVE",
"44 -6 CURVE",
"44 -6 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 229;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"266 -32 OFFCURVE",
"267 -32 OFFCURVE",
"268 -31 CURVE",
"282 -25 OFFCURVE",
"289 -15 OFFCURVE",
"289 2 CURVE SMOOTH",
"289 35 OFFCURVE",
"231 51 OFFCURVE",
"115 51 CURVE",
"122 59 OFFCURVE",
"151 79 OFFCURVE",
"200 111 CURVE SMOOTH",
"226 128 OFFCURVE",
"252 144 OFFCURVE",
"279 160 CURVE SMOOTH",
"313 182 OFFCURVE",
"339 203 OFFCURVE",
"357 224 CURVE SMOOTH",
"382 251 OFFCURVE",
"394 280 OFFCURVE",
"394 311 CURVE SMOOTH",
"394 352 OFFCURVE",
"367 382 OFFCURVE",
"322 382 CURVE SMOOTH",
"303 382 OFFCURVE",
"282 377 OFFCURVE",
"259 367 CURVE SMOOTH",
"229 354 OFFCURVE",
"203 336 OFFCURVE",
"180 314 CURVE SMOOTH",
"155 290 OFFCURVE",
"140 265 OFFCURVE",
"135 239 CURVE SMOOTH",
"134 234 LINE SMOOTH",
"134 231 OFFCURVE",
"135 229 OFFCURVE",
"137 229 CURVE SMOOTH",
"141 229 OFFCURVE",
"144 232 OFFCURVE",
"145 238 CURVE",
"152 261 OFFCURVE",
"168 283 OFFCURVE",
"193 304 CURVE SMOOTH",
"214 323 OFFCURVE",
"239 339 OFFCURVE",
"267 350 CURVE SMOOTH",
"292 361 OFFCURVE",
"312 366 OFFCURVE",
"329 366 CURVE SMOOTH",
"358 366 OFFCURVE",
"373 353 OFFCURVE",
"373 328 CURVE SMOOTH",
"373 305 OFFCURVE",
"360 277 OFFCURVE",
"334 244 CURVE SMOOTH",
"302 203 OFFCURVE",
"253 161 OFFCURVE",
"188 118 CURVE SMOOTH",
"130 80 OFFCURVE",
"82 54 OFFCURVE",
"43 41 CURVE",
"18 41 OFFCURVE",
"-9 17 OFFCURVE",
"-9 0 CURVE SMOOTH",
"-9 -7 OFFCURVE",
"-5 -10 OFFCURVE",
"4 -10 CURVE SMOOTH",
"10 -10 OFFCURVE",
"17 -8 OFFCURVE",
"26 -5 CURVE SMOOTH",
"98 21 OFFCURVE",
"151 34 OFFCURVE",
"187 34 CURVE SMOOTH",
"227 34 OFFCURVE",
"282 17 OFFCURVE",
"282 -1 CURVE SMOOTH",
"282 -8 OFFCURVE",
"276 -14 OFFCURVE",
"264 -19 CURVE SMOOTH",
"260 -21 OFFCURVE",
"258 -23 OFFCURVE",
"258 -26 CURVE SMOOTH",
"258 -29 OFFCURVE",
"261 -32 OFFCURVE",
"264 -32 CURVE",
"264 -32 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01248 7 25 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 25 25 25 41 25 57 25 73 25 89 25 105 25 121 25 137 25 153 25 169 25 185 25 201 25 217 25 233 25 249 25 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01245 2 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01256 3 10 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 354;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"139 -53 OFFCURVE",
"208 -31 OFFCURVE",
"252 1 CURVE SMOOTH",
"288 26 OFFCURVE",
"306 54 OFFCURVE",
"306 84 CURVE SMOOTH",
"306 125 OFFCURVE",
"265 156 OFFCURVE",
"198 155 CURVE",
"200 156 OFFCURVE",
"212 158 OFFCURVE",
"233 161 CURVE SMOOTH",
"248 163 OFFCURVE",
"261 166 OFFCURVE",
"270 169 CURVE SMOOTH",
"315 184 OFFCURVE",
"350 202 OFFCURVE",
"373 224 CURVE SMOOTH",
"395 244 OFFCURVE",
"406 265 OFFCURVE",
"406 288 CURVE SMOOTH",
"406 339 OFFCURVE",
"348 378 OFFCURVE",
"263 378 CURVE SMOOTH",
"221 378 OFFCURVE",
"180 369 OFFCURVE",
"141 352 CURVE SMOOTH",
"90 330 OFFCURVE",
"64 301 OFFCURVE",
"64 264 CURVE SMOOTH",
"64 259 OFFCURVE",
"66 256 OFFCURVE",
"69 256 CURVE SMOOTH",
"75 256 OFFCURVE",
"78 259 OFFCURVE",
"79 266 CURVE SMOOTH",
"83 313 OFFCURVE",
"145 353 OFFCURVE",
"221 364 CURVE SMOOTH",
"232 366 OFFCURVE",
"243 366 OFFCURVE",
"254 366 CURVE SMOOTH",
"284 366 OFFCURVE",
"311 360 OFFCURVE",
"333 347 CURVE SMOOTH",
"360 331 OFFCURVE",
"374 310 OFFCURVE",
"374 283 CURVE SMOOTH",
"374 262 OFFCURVE",
"365 243 OFFCURVE",
"346 226 CURVE SMOOTH",
"325 206 OFFCURVE",
"295 191 OFFCURVE",
"256 181 CURVE SMOOTH",
"210 169 OFFCURVE",
"167 165 OFFCURVE",
"126 165 CURVE SMOOTH",
"114 165 OFFCURVE",
"108 161 OFFCURVE",
"108 154 CURVE SMOOTH",
"108 149 OFFCURVE",
"113 146 OFFCURVE",
"124 146 CURVE SMOOTH",
"160 148 OFFCURVE",
"193 144 OFFCURVE",
"223 133 CURVE SMOOTH",
"257 120 OFFCURVE",
"274 104 OFFCURVE",
"274 83 CURVE SMOOTH",
"274 65 OFFCURVE",
"261 45 OFFCURVE",
"234 23 CURVE SMOOTH",
"194 -9 OFFCURVE",
"129 -32 OFFCURVE",
"78 -32 CURVE SMOOTH",
"49 -32 OFFCURVE",
"29 -25 OFFCURVE",
"18 -11 CURVE SMOOTH",
"13 -5 OFFCURVE",
"10 2 OFFCURVE",
"10 11 CURVE SMOOTH",
"10 33 OFFCURVE",
"51 50 OFFCURVE",
"51 58 CURVE SMOOTH",
"51 61 OFFCURVE",
"48 62 OFFCURVE",
"41 61 CURVE SMOOTH",
"10 56 OFFCURVE",
"-5 40 OFFCURVE",
"-5 12 CURVE SMOOTH",
"-5 3 OFFCURVE",
"-3 -7 OFFCURVE",
"1 -16 CURVE SMOOTH",
"11 -41 OFFCURVE",
"39 -53 OFFCURVE",
"84 -53 CURVE",
"84 -53 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01235 6 27 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01218 8 44 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 8 58 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 27 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 35 22 35 38 35 54 35 70 35 86 35 102 35 118 35 134 35 150 35 166 35 182 35 198 35 214 35 230 35 246 35 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 5 values pushed */\012106 44 122 44 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 105 44 121 44 137 44 153 44 169 44 185 44 201 44 217 44 233 44 249 44 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 44 25 44 41 44 57 44 73 44 89 44 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 58 122 58 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 105 58 121 58 137 58 153 58 169 58 185 58 201 58 217 58 233 58 249 58 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 58 25 58 41 58 57 58 73 58 89 58 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0127 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01239 4 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01252 3 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 48 52 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 354;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"134 -27 OFFCURVE",
"138 -20 OFFCURVE",
"143 -11 CURVE SMOOTH",
"166 39 LINE SMOOTH",
"193 95 OFFCURVE",
"212 133 OFFCURVE",
"223 153 CURVE",
"233 154 LINE",
"240 154 LINE SMOOTH",
"243 154 OFFCURVE",
"252 153 OFFCURVE",
"269 150 CURVE SMOOTH",
"285 148 LINE",
"290 146 LINE",
"292 146 OFFCURVE",
"293 147 OFFCURVE",
"293 149 CURVE SMOOTH",
"293 146 LINE",
"298 146 OFFCURVE",
"301 149 OFFCURVE",
"301 155 CURVE SMOOTH",
"301 161 OFFCURVE",
"293 166 OFFCURVE",
"278 169 CURVE SMOOTH",
"245 175 LINE",
"238 178 LINE",
"238 189 OFFCURVE",
"335 341 OFFCURVE",
"348 353 CURVE",
"348 366 LINE SMOOTH",
"348 391 OFFCURVE",
"342 403 OFFCURVE",
"329 403 CURVE",
"299 365 OFFCURVE",
"257 326 OFFCURVE",
"204 286 CURVE SMOOTH",
"64 188 LINE",
"33 168 LINE SMOOTH",
"17 157 OFFCURVE",
"9 149 OFFCURVE",
"9 144 CURVE SMOOTH",
"9 135 OFFCURVE",
"14 130 OFFCURVE",
"23 130 CURVE",
"73 147 OFFCURVE",
"127 155 OFFCURVE",
"184 155 CURVE SMOOTH",
"188 155 OFFCURVE",
"191 155 OFFCURVE",
"193 154 CURVE",
"151 64 LINE SMOOTH",
"130 19 OFFCURVE",
"119 -9 OFFCURVE",
"119 -18 CURVE SMOOTH",
"119 -28 OFFCURVE",
"123 -33 OFFCURVE",
"130 -33 CURVE",
"130 -33 LINE"
);
},
{
closed = 1;
nodes = (
"203 181 OFFCURVE",
"201 181 OFFCURVE",
"198 181 CURVE SMOOTH",
"183 182 LINE SMOOTH",
"172 183 OFFCURVE",
"161 183 OFFCURVE",
"149 183 CURVE SMOOTH",
"96 183 LINE",
"113 197 OFFCURVE",
"141 218 OFFCURVE",
"180 246 CURVE SMOOTH",
"219 274 OFFCURVE",
"255 302 OFFCURVE",
"288 330 CURVE",
"240 230 OFFCURVE",
"212 180 OFFCURVE",
"204 180 CURVE",
"204 180 LINE"
);
}
);
width = 345;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"151 -25 OFFCURVE",
"198 -1 OFFCURVE",
"242 46 CURVE SMOOTH",
"283 91 OFFCURVE",
"304 135 OFFCURVE",
"304 179 CURVE SMOOTH",
"304 232 OFFCURVE",
"272 258 OFFCURVE",
"209 258 CURVE SMOOTH",
"188 258 OFFCURVE",
"163 253 OFFCURVE",
"133 243 CURVE",
"149 274 OFFCURVE",
"163 297 OFFCURVE",
"175 310 CURVE",
"175 312 OFFCURVE",
"177 313 OFFCURVE",
"181 313 CURVE SMOOTH",
"186 314 LINE",
"191 314 LINE",
"212 323 OFFCURVE",
"242 329 OFFCURVE",
"283 333 CURVE SMOOTH",
"300 335 OFFCURVE",
"331 337 OFFCURVE",
"376 339 CURVE",
"376 353 LINE",
"363 356 OFFCURVE",
"348 357 OFFCURVE",
"332 357 CURVE SMOOTH",
"316 357 OFFCURVE",
"292 355 OFFCURVE",
"260 351 CURVE SMOOTH",
"227 347 OFFCURVE",
"204 345 OFFCURVE",
"189 345 CURVE SMOOTH",
"176 346 LINE",
"161 346 LINE SMOOTH",
"158 346 OFFCURVE",
"152 342 OFFCURVE",
"143 335 CURVE SMOOTH",
"132 326 OFFCURVE",
"125 321 OFFCURVE",
"124 320 CURVE",
"124 308 OFFCURVE",
"131 307 OFFCURVE",
"138 304 CURVE",
"133 290 OFFCURVE",
"122 268 OFFCURVE",
"103 238 CURVE",
"95 228 OFFCURVE",
"87 217 OFFCURVE",
"80 206 CURVE SMOOTH",
"73 195 LINE",
"69 189 LINE",
"68 186 OFFCURVE",
"67 183 OFFCURVE",
"67 181 CURVE SMOOTH",
"67 172 OFFCURVE",
"73 167 OFFCURVE",
"84 167 CURVE SMOOTH",
"88 167 OFFCURVE",
"91 168 OFFCURVE",
"94 170 CURVE",
"95 170 OFFCURVE",
"96 171 OFFCURVE",
"98 174 CURVE",
"138 214 OFFCURVE",
"172 234 OFFCURVE",
"199 234 CURVE SMOOTH",
"247 234 OFFCURVE",
"266 219 OFFCURVE",
"266 171 CURVE SMOOTH",
"266 122 OFFCURVE",
"217 46 OFFCURVE",
"168 18 CURVE SMOOTH",
"145 4 OFFCURVE",
"121 -3 OFFCURVE",
"96 -3 CURVE SMOOTH",
"48 -3 OFFCURVE",
"24 21 OFFCURVE",
"24 70 CURVE SMOOTH",
"24 76 OFFCURVE",
"26 84 OFFCURVE",
"29 93 CURVE SMOOTH",
"32 102 OFFCURVE",
"34 107 OFFCURVE",
"34 108 CURVE SMOOTH",
"34 115 OFFCURVE",
"31 118 OFFCURVE",
"25 118 CURVE SMOOTH",
"18 118 OFFCURVE",
"1 73 OFFCURVE",
"1 65 CURVE SMOOTH",
"1 38 OFFCURVE",
"12 15 OFFCURVE",
"33 -2 CURVE SMOOTH",
"53 -17 OFFCURVE",
"75 -25 OFFCURVE",
"100 -25 CURVE",
"100 -25 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01230 5 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01214 8 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 22 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 102 30 118 30 134 30 150 30 166 30 182 30 198 30 214 30 230 30 246 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 30 22 30 38 30 54 30 70 30 86 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 30 117 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 37 122 37 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 105 37 121 37 137 37 153 37 169 37 185 37 201 37 217 37 233 37 249 37 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 37 25 37 41 37 57 37 73 37 89 37 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01274 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01232 4 18 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01212 4 40 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 40 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01240 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 344;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"180 -30 OFFCURVE",
"284 63 OFFCURVE",
"284 143 CURVE SMOOTH",
"284 194 OFFCURVE",
"249 236 OFFCURVE",
"196 236 CURVE SMOOTH",
"184 236 OFFCURVE",
"167 230 OFFCURVE",
"146 218 CURVE SMOOTH",
"123 205 OFFCURVE",
"111 193 OFFCURVE",
"111 184 CURVE SMOOTH",
"111 181 OFFCURVE",
"112 179 OFFCURVE",
"114 178 CURVE",
"115 176 LINE",
"118 176 OFFCURVE",
"123 178 OFFCURVE",
"131 183 CURVE SMOOTH",
"159 204 OFFCURVE",
"182 214 OFFCURVE",
"201 214 CURVE SMOOTH",
"233 214 OFFCURVE",
"249 195 OFFCURVE",
"249 157 CURVE SMOOTH",
"249 143 OFFCURVE",
"247 129 OFFCURVE",
"243 115 CURVE SMOOTH",
"232 82 OFFCURVE",
"214 54 OFFCURVE",
"189 29 CURVE SMOOTH",
"162 3 OFFCURVE",
"134 -10 OFFCURVE",
"106 -10 CURVE SMOOTH",
"86 -10 OFFCURVE",
"71 -1 OFFCURVE",
"61 16 CURVE SMOOTH",
"52 30 OFFCURVE",
"48 48 OFFCURVE",
"48 71 CURVE SMOOTH",
"48 79 OFFCURVE",
"49 87 OFFCURVE",
"50 95 CURVE SMOOTH",
"59 149 OFFCURVE",
"86 204 OFFCURVE",
"133 261 CURVE SMOOTH",
"173 310 OFFCURVE",
"220 352 OFFCURVE",
"273 388 CURVE SMOOTH",
"280 393 OFFCURVE",
"285 398 OFFCURVE",
"286 403 CURVE",
"289 408 OFFCURVE",
"288 410 OFFCURVE",
"283 410 CURVE SMOOTH",
"280 410 OFFCURVE",
"276 409 OFFCURVE",
"273 408 CURVE SMOOTH",
"220 387 OFFCURVE",
"164 343 OFFCURVE",
"107 274 CURVE SMOOTH",
"47 201 OFFCURVE",
"17 138 OFFCURVE",
"17 84 CURVE SMOOTH",
"17 54 OFFCURVE",
"23 29 OFFCURVE",
"36 8 CURVE SMOOTH",
"51 -17 OFFCURVE",
"73 -30 OFFCURVE",
"100 -30 CURVE",
"100 -30 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01249 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01234 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01249 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\0128 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 102 8 118 8 134 8 150 8 166 8 182 8 198 8 214 8 230 8 246 8 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 8 22 8 38 8 54 8 70 8 86 8 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 8 117 8 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01212 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01231 4 20 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 308;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"42 -23 OFFCURVE",
"44 -23 OFFCURVE",
"45 -22 CURVE SMOOTH",
"46 -21 LINE",
"50 -21 LINE",
"56 16 OFFCURVE",
"71 52 OFFCURVE",
"95 88 CURVE SMOOTH",
"113 115 OFFCURVE",
"140 147 OFFCURVE",
"176 184 CURVE SMOOTH",
"256 266 LINE SMOOTH",
"293 306 OFFCURVE",
"311 332 OFFCURVE",
"311 344 CURVE SMOOTH",
"311 356 OFFCURVE",
"301 365 OFFCURVE",
"286 373 CURVE SMOOTH",
"275 380 OFFCURVE",
"264 383 OFFCURVE",
"255 383 CURVE SMOOTH",
"207 383 OFFCURVE",
"148 370 OFFCURVE",
"79 344 CURVE SMOOTH",
"60 337 OFFCURVE",
"49 318 OFFCURVE",
"49 302 CURVE SMOOTH",
"49 291 OFFCURVE",
"53 286 OFFCURVE",
"61 286 CURVE SMOOTH",
"68 286 OFFCURVE",
"74 289 OFFCURVE",
"79 294 CURVE SMOOTH",
"98 309 LINE",
"111 317 OFFCURVE",
"131 326 OFFCURVE",
"158 337 CURVE SMOOTH",
"180 346 OFFCURVE",
"196 351 OFFCURVE",
"205 354 CURVE SMOOTH",
"226 359 OFFCURVE",
"242 361 OFFCURVE",
"254 361 CURVE SMOOTH",
"265 361 OFFCURVE",
"271 359 OFFCURVE",
"271 354 CURVE SMOOTH",
"271 343 OFFCURVE",
"246 308 OFFCURVE",
"195 250 CURVE SMOOTH",
"120 165 OFFCURVE",
"75 112 OFFCURVE",
"59 90 CURVE SMOOTH",
"34 56 LINE SMOOTH",
"25 43 OFFCURVE",
"21 30 OFFCURVE",
"21 18 CURVE SMOOTH",
"21 15 OFFCURVE",
"22 11 OFFCURVE",
"23 8 CURVE SMOOTH",
"29 -8 LINE SMOOTH",
"34 -18 OFFCURVE",
"38 -23 OFFCURVE",
"41 -23 CURVE",
"41 -23 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01245 4 28 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 -19 OFFCURVE",
"188 55 OFFCURVE",
"188 138 CURVE SMOOTH",
"188 158 OFFCURVE",
"180 182 OFFCURVE",
"165 210 CURVE",
"163 216 LINE",
"161 218 LINE",
"166 226 OFFCURVE",
"290 315 OFFCURVE",
"306 320 CURVE",
"318 299 OFFCURVE",
"326 288 OFFCURVE",
"329 285 CURVE SMOOTH",
"332 282 OFFCURVE",
"336 280 OFFCURVE",
"339 280 CURVE SMOOTH",
"344 280 OFFCURVE",
"346 284 OFFCURVE",
"346 292 CURVE SMOOTH",
"346 298 LINE SMOOTH",
"345 307 OFFCURVE",
"341 320 OFFCURVE",
"334 336 CURVE",
"354 348 OFFCURVE",
"380 364 OFFCURVE",
"411 385 CURVE SMOOTH",
"416 388 OFFCURVE",
"419 392 OFFCURVE",
"419 395 CURVE SMOOTH",
"419 399 OFFCURVE",
"416 400 OFFCURVE",
"410 399 CURVE",
"399 395 OFFCURVE",
"370 381 OFFCURVE",
"324 356 CURVE",
"307 379 OFFCURVE",
"279 391 OFFCURVE",
"239 391 CURVE SMOOTH",
"204 391 OFFCURVE",
"174 382 OFFCURVE",
"149 364 CURVE SMOOTH",
"120 344 OFFCURVE",
"106 317 OFFCURVE",
"106 283 CURVE SMOOTH",
"106 263 OFFCURVE",
"111 242 OFFCURVE",
"121 219 CURVE",
"88 192 OFFCURVE",
"64 172 OFFCURVE",
"49 159 CURVE SMOOTH",
"2 116 OFFCURVE",
"-21 78 OFFCURVE",
"-21 45 CURVE SMOOTH",
"-21 13 OFFCURVE",
"-1 -14 OFFCURVE",
"34 -15 CURVE",
"34 -15 LINE"
);
},
{
closed = 1;
nodes = (
"24 3 OFFCURVE",
"13 15 OFFCURVE",
"13 38 CURVE SMOOTH",
"13 58 OFFCURVE",
"27 86 OFFCURVE",
"54 121 CURVE SMOOTH",
"80 154 OFFCURVE",
"105 179 OFFCURVE",
"130 195 CURVE",
"139 179 OFFCURVE",
"156 132 OFFCURVE",
"156 124 CURVE SMOOTH",
"156 92 OFFCURVE",
"143 63 OFFCURVE",
"116 38 CURVE SMOOTH",
"92 15 OFFCURVE",
"68 3 OFFCURVE",
"45 3 CURVE",
"45 3 LINE"
);
},
{
closed = 1;
nodes = (
"148 249 OFFCURVE",
"145 256 OFFCURVE",
"144 260 CURVE SMOOTH",
"139 273 OFFCURVE",
"136 285 OFFCURVE",
"136 296 CURVE SMOOTH",
"136 325 OFFCURVE",
"154 348 OFFCURVE",
"191 365 CURVE SMOOTH",
"201 370 OFFCURVE",
"215 372 OFFCURVE",
"232 372 CURVE SMOOTH",
"265 372 OFFCURVE",
"286 361 OFFCURVE",
"296 340 CURVE",
"254 313 OFFCURVE",
"206 279 OFFCURVE",
"153 240 CURVE",
"153 240 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01259 8 22 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01246 8 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 8 52 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 102 16 118 16 134 16 150 16 166 16 182 16 198 16 214 16 230 16 246 16 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 16 22 16 38 16 54 16 70 16 86 16 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 16 117 16 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 46 117 46 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 102 59 118 59 134 59 150 59 166 59 182 59 198 59 214 59 230 59 246 59 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 59 22 59 38 59 54 59 70 59 86 59 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 59 117 59 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01261 3 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01232 4 42 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 323;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"134 -51 OFFCURVE",
"138 -48 OFFCURVE",
"140 -41 CURVE SMOOTH",
"144 -25 LINE SMOOTH",
"151 17 OFFCURVE",
"185 85 OFFCURVE",
"245 180 CURVE SMOOTH",
"278 233 OFFCURVE",
"295 260 OFFCURVE",
"295 263 CURVE SMOOTH",
"295 270 OFFCURVE",
"280 285 OFFCURVE",
"271 285 CURVE SMOOTH",
"269 285 OFFCURVE",
"267 284 OFFCURVE",
"265 283 CURVE",
"231 244 LINE SMOOTH",
"216 229 OFFCURVE",
"204 217 OFFCURVE",
"194 209 CURVE SMOOTH",
"179 198 OFFCURVE",
"162 187 OFFCURVE",
"141 177 CURVE SMOOTH",
"116 165 OFFCURVE",
"97 159 OFFCURVE",
"82 159 CURVE SMOOTH",
"63 159 OFFCURVE",
"53 170 OFFCURVE",
"53 191 CURVE SMOOTH",
"53 267 OFFCURVE",
"180 388 OFFCURVE",
"256 388 CURVE SMOOTH",
"286 388 OFFCURVE",
"301 376 OFFCURVE",
"301 353 CURVE SMOOTH",
"301 346 OFFCURVE",
"299 337 OFFCURVE",
"296 326 CURVE SMOOTH",
"291 309 LINE",
"291 306 OFFCURVE",
"292 304 OFFCURVE",
"294 304 CURVE",
"295 301 LINE",
"295 303 LINE",
"299 300 LINE",
"308 304 OFFCURVE",
"321 330 OFFCURVE",
"321 353 CURVE SMOOTH",
"321 388 OFFCURVE",
"299 405 OFFCURVE",
"255 405 CURVE SMOOTH",
"212 405 OFFCURVE",
"164 383 OFFCURVE",
"109 339 CURVE SMOOTH",
"47 290 OFFCURVE",
"20 244 OFFCURVE",
"20 200 CURVE SMOOTH",
"20 159 OFFCURVE",
"37 138 OFFCURVE",
"71 138 CURVE SMOOTH",
"91 138 OFFCURVE",
"115 145 OFFCURVE",
"144 159 CURVE SMOOTH",
"167 170 OFFCURVE",
"189 184 OFFCURVE",
"209 199 CURVE",
"152 88 OFFCURVE",
"123 8 OFFCURVE",
"121 -40 CURVE SMOOTH",
"121 -47 OFFCURVE",
"124 -51 OFFCURVE",
"129 -51 CURVE",
"129 -51 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01214 8 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01253 7 9 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 9 25 9 41 9 57 9 73 9 89 9 105 9 121 9 137 9 153 9 169 9 185 9 201 9 217 9 233 9 249 9 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 102 14 118 14 134 14 150 14 166 14 182 14 198 14 214 14 230 14 246 14 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 14 22 14 38 14 54 14 70 14 86 14 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 14 117 14 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01241 47 53 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01251 3 11 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01216 4 45 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 319;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = zero.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = zero;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 513;
}
);
},
{
glyphname = one.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = one;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 229;
}
);
},
{
glyphname = two.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = two;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
},
{
glyphname = three.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = three;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
},
{
glyphname = four.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = four;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 345;
}
);
},
{
glyphname = five.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = five;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 344;
}
);
},
{
glyphname = six.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = six;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 308;
}
);
},
{
glyphname = seven.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = seven;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 310;
}
);
},
{
glyphname = eight.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = eight;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 323;
}
);
},
{
glyphname = nine.lf;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = nine;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 319;
}
);
},
{
glyphname = onesuperior;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = one;
transform = "{0.7, 0, 0, 0.7, 0, 144}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 212;
}
);
unicode = 00B9;
},
{
glyphname = twosuperior;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = two;
transform = "{0.7, 0, 0, 0.7, 36, 169}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 354;
}
);
unicode = 00B2;
},
{
glyphname = threesuperior;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = three;
transform = "{0.7, 0, 0, 0.7, 29, 174}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 362;
}
);
unicode = 00B3;
},
{
glyphname = foursuperior;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = four;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 345;
}
);
leftMetricsKey = four;
rightMetricsKey = four;
unicode = 2074;
},
{
glyphname = fraction;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-4 -36 OFFCURVE",
"-1 -34 OFFCURVE",
"4 -31 CURVE SMOOTH",
"47 -2 OFFCURVE",
"103 57 OFFCURVE",
"174 148 CURVE SMOOTH",
"236 226 OFFCURVE",
"320 335 OFFCURVE",
"361 380 CURVE SMOOTH",
"409 432 OFFCURVE",
"447 461 OFFCURVE",
"482 465 CURVE SMOOTH",
"487 466 OFFCURVE",
"492 464 OFFCURVE",
"497 461 CURVE SMOOTH",
"502 458 OFFCURVE",
"506 456 OFFCURVE",
"509 456 CURVE SMOOTH",
"512 456 OFFCURVE",
"513 458 OFFCURVE",
"513 461 CURVE SMOOTH",
"513 466 OFFCURVE",
"510 471 OFFCURVE",
"504 474 CURVE SMOOTH",
"493 480 OFFCURVE",
"481 483 OFFCURVE",
"468 483 CURVE SMOOTH",
"423 483 OFFCURVE",
"379 450 OFFCURVE",
"339 407 CURVE SMOOTH",
"304 369 OFFCURVE",
"256 303 OFFCURVE",
"227 265 CURVE SMOOTH",
"203 236 OFFCURVE",
"179 200 OFFCURVE",
"154 163 CURVE SMOOTH",
"107 94 OFFCURVE",
"53 32 OFFCURVE",
"-6 -23 CURVE SMOOTH",
"-9 -26 OFFCURVE",
"-11 -29 OFFCURVE",
"-11 -32 CURVE SMOOTH",
"-11 -35 OFFCURVE",
"-10 -36 OFFCURVE",
"-7 -36 CURVE",
"-7 -36 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = onehalf;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = two;
transform = "{0.7, 0, 0, 0.7, 180, 0}";
},
{
name = one;
transform = "{0.7, 0, 0, 0.7, -14, 162}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 26, 55}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 461;
}
);
unicode = 00BD;
},
{
glyphname = onequarter;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = one;
transform = "{0.7, 0, 0, 0.7, -14, 162}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 26, 55}";
},
{
name = four;
transform = "{0.7, 0, 0, 0.7, 156, -1}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 405;
}
);
unicode = 00BC;
},
{
glyphname = threequarters;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = three;
transform = "{0.7, 0, 0, 0.7, 7, 174}";
},
{
name = fraction;
transform = "{0.7, 0, 0, 0.7, 139, 55}";
},
{
name = four;
transform = "{0.7, 0, 0, 0.7, 269, -1}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 518;
}
);
unicode = 00BE;
},
{
glyphname = period;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 -19 OFFCURVE",
"118 -7 OFFCURVE",
"118 9 CURVE SMOOTH",
"118 25 OFFCURVE",
"104 38 OFFCURVE",
"88 38 CURVE SMOOTH",
"71 38 OFFCURVE",
"58 25 OFFCURVE",
"58 9 CURVE SMOOTH",
"58 -7 OFFCURVE",
"71 -19 OFFCURVE",
"88 -19 CURVE",
"88 -19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 102 0 118 0 134 0 150 0 166 0 182 0 198 0 214 0 230 0 246 0 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 0 22 0 38 0 54 0 70 0 86 0 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 0 117 0 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = period;
unicode = 002E;
},
{
glyphname = comma;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"21 -97 OFFCURVE",
"28 -94 OFFCURVE",
"38 -88 CURVE SMOOTH",
"58 -75 OFFCURVE",
"77 -56 OFFCURVE",
"96 -31 CURVE SMOOTH",
"112 -8 OFFCURVE",
"120 9 OFFCURVE",
"120 20 CURVE SMOOTH",
"120 39 OFFCURVE",
"111 48 OFFCURVE",
"96 49 CURVE SMOOTH",
"72 49 OFFCURVE",
"58 33 OFFCURVE",
"58 18 CURVE SMOOTH",
"58 2 OFFCURVE",
"63 -7 OFFCURVE",
"74 -9 CURVE",
"54 -40 OFFCURVE",
"38 -62 OFFCURVE",
"26 -75 CURVE SMOOTH",
"18 -84 OFFCURVE",
"14 -90 OFFCURVE",
"14 -94 CURVE SMOOTH",
"14 -96 OFFCURVE",
"15 -97 OFFCURVE",
"17 -97 CURVE",
"17 -97 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = colon;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"167 110 OFFCURVE",
"180 123 OFFCURVE",
"180 139 CURVE SMOOTH",
"180 155 OFFCURVE",
"167 168 OFFCURVE",
"150 168 CURVE SMOOTH",
"134 168 OFFCURVE",
"120 155 OFFCURVE",
"120 139 CURVE SMOOTH",
"120 123 OFFCURVE",
"134 110 OFFCURVE",
"150 110 CURVE",
"150 110 LINE"
);
},
{
closed = 1;
nodes = (
"109 -4 OFFCURVE",
"123 9 OFFCURVE",
"123 25 CURVE SMOOTH",
"123 41 OFFCURVE",
"109 54 OFFCURVE",
"93 54 CURVE SMOOTH",
"76 54 OFFCURVE",
"63 41 OFFCURVE",
"63 25 CURVE SMOOTH",
"63 9 OFFCURVE",
"76 -4 OFFCURVE",
"93 -4 CURVE",
"93 -4 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01221 15 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"21 -97 OFFCURVE",
"28 -94 OFFCURVE",
"38 -88 CURVE SMOOTH",
"58 -75 OFFCURVE",
"77 -56 OFFCURVE",
"96 -31 CURVE SMOOTH",
"112 -8 OFFCURVE",
"120 9 OFFCURVE",
"120 20 CURVE SMOOTH",
"120 39 OFFCURVE",
"111 48 OFFCURVE",
"96 49 CURVE SMOOTH",
"72 49 OFFCURVE",
"58 33 OFFCURVE",
"58 18 CURVE SMOOTH",
"58 2 OFFCURVE",
"63 -7 OFFCURVE",
"74 -9 CURVE",
"54 -40 OFFCURVE",
"38 -62 OFFCURVE",
"26 -75 CURVE SMOOTH",
"18 -84 OFFCURVE",
"14 -90 OFFCURVE",
"14 -94 CURVE SMOOTH",
"14 -96 OFFCURVE",
"15 -97 OFFCURVE",
"17 -97 CURVE",
"17 -97 LINE"
);
},
{
closed = 1;
nodes = (
"189 130 OFFCURVE",
"203 143 OFFCURVE",
"203 159 CURVE SMOOTH",
"203 174 OFFCURVE",
"189 186 OFFCURVE",
"173 186 CURVE SMOOTH",
"156 186 OFFCURVE",
"143 174 OFFCURVE",
"143 159 CURVE SMOOTH",
"143 143 OFFCURVE",
"156 130 OFFCURVE",
"173 130 CURVE",
"173 130 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 145;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = ellipsis;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"301 -9 OFFCURVE",
"315 5 OFFCURVE",
"315 22 CURVE SMOOTH",
"315 34 OFFCURVE",
"306 43 OFFCURVE",
"294 43 CURVE SMOOTH",
"278 43 OFFCURVE",
"264 29 OFFCURVE",
"264 12 CURVE SMOOTH",
"264 0 OFFCURVE",
"272 -9 OFFCURVE",
"285 -9 CURVE",
"285 -9 LINE"
);
},
{
closed = 1;
nodes = (
"51 -9 OFFCURVE",
"65 5 OFFCURVE",
"65 22 CURVE SMOOTH",
"65 34 OFFCURVE",
"56 43 OFFCURVE",
"44 43 CURVE SMOOTH",
"28 43 OFFCURVE",
"14 29 OFFCURVE",
"14 12 CURVE SMOOTH",
"14 0 OFFCURVE",
"22 -9 OFFCURVE",
"35 -9 CURVE",
"35 -9 LINE"
);
},
{
closed = 1;
nodes = (
"172 -9 OFFCURVE",
"186 5 OFFCURVE",
"186 22 CURVE SMOOTH",
"186 34 OFFCURVE",
"178 43 OFFCURVE",
"165 43 CURVE SMOOTH",
"149 43 OFFCURVE",
"135 29 OFFCURVE",
"135 12 CURVE SMOOTH",
"135 0 OFFCURVE",
"144 -9 OFFCURVE",
"156 -9 CURVE",
"156 -9 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = exclam;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"140 97 OFFCURVE",
"146 103 OFFCURVE",
"150 114 CURVE SMOOTH",
"171 169 OFFCURVE",
"242 292 OFFCURVE",
"365 481 CURVE SMOOTH",
"366 482 OFFCURVE",
"364 486 OFFCURVE",
"361 491 CURVE SMOOTH",
"358 496 OFFCURVE",
"353 500 OFFCURVE",
"348 503 CURVE SMOOTH",
"340 509 OFFCURVE",
"333 512 OFFCURVE",
"326 512 CURVE SMOOTH",
"324 512 OFFCURVE",
"322 511 OFFCURVE",
"321 510 CURVE",
"268 421 OFFCURVE",
"148 185 OFFCURVE",
"121 118 CURVE SMOOTH",
"120 115 OFFCURVE",
"119 112 OFFCURVE",
"119 109 CURVE SMOOTH",
"119 101 OFFCURVE",
"123 97 OFFCURVE",
"131 97 CURVE",
"131 97 LINE"
);
},
{
closed = 1;
nodes = (
"104 -19 OFFCURVE",
"118 -7 OFFCURVE",
"118 9 CURVE SMOOTH",
"118 25 OFFCURVE",
"104 38 OFFCURVE",
"88 38 CURVE SMOOTH",
"71 38 OFFCURVE",
"58 25 OFFCURVE",
"58 9 CURVE SMOOTH",
"58 -7 OFFCURVE",
"71 -19 OFFCURVE",
"88 -19 CURVE",
"88 -19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01218 8 24 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 102 18 118 18 134 18 150 18 166 18 182 18 198 18 214 18 230 18 246 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 18 22 18 38 18 54 18 70 18 86 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 18 117 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01227 21 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclam;
unicode = 0021;
},
{
glyphname = exclamdown;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-45 -338 OFFCURVE",
"-42 -337 OFFCURVE",
"-41 -335 CURVE SMOOTH",
"12 -246 OFFCURVE",
"131 -9 OFFCURVE",
"158 56 CURVE",
"159 65 LINE SMOOTH",
"159 72 OFFCURVE",
"156 76 OFFCURVE",
"149 76 CURVE SMOOTH",
"140 76 OFFCURVE",
"134 71 OFFCURVE",
"130 60 CURVE SMOOTH",
"111 4 OFFCURVE",
"80 -57 OFFCURVE",
"39 -124 CURVE SMOOTH",
"-15 -205 OFFCURVE",
"-56 -267 OFFCURVE",
"-85 -308 CURVE SMOOTH",
"-86 -309 OFFCURVE",
"-85 -311 OFFCURVE",
"-82 -316 CURVE SMOOTH",
"-78 -321 OFFCURVE",
"-74 -325 OFFCURVE",
"-69 -329 CURVE SMOOTH",
"-60 -335 OFFCURVE",
"-53 -338 OFFCURVE",
"-48 -338 CURVE",
"-48 -338 LINE"
);
},
{
closed = 1;
nodes = (
"209 136 OFFCURVE",
"223 149 OFFCURVE",
"223 165 CURVE SMOOTH",
"223 181 OFFCURVE",
"209 194 OFFCURVE",
"193 194 CURVE SMOOTH",
"176 194 OFFCURVE",
"163 181 OFFCURVE",
"163 165 CURVE SMOOTH",
"163 149 OFFCURVE",
"176 136 OFFCURVE",
"193 136 CURVE",
"193 136 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0126 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 260;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = question;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"119 103 OFFCURVE",
"124 107 OFFCURVE",
"125 114 CURVE SMOOTH",
"128 126 LINE",
"123 126 OFFCURVE",
"120 129 OFFCURVE",
"120 135 CURVE SMOOTH",
"120 136 LINE SMOOTH",
"120 157 OFFCURVE",
"133 181 OFFCURVE",
"160 206 CURVE SMOOTH",
"199 239 OFFCURVE",
"228 263 OFFCURVE",
"249 278 CURVE SMOOTH",
"290 309 OFFCURVE",
"320 334 OFFCURVE",
"339 355 CURVE SMOOTH",
"366 386 OFFCURVE",
"380 415 OFFCURVE",
"380 444 CURVE SMOOTH",
"380 463 OFFCURVE",
"371 479 OFFCURVE",
"353 492 CURVE SMOOTH",
"338 503 OFFCURVE",
"322 508 OFFCURVE",
"305 508 CURVE SMOOTH",
"258 508 OFFCURVE",
"206 490 OFFCURVE",
"151 453 CURVE SMOOTH",
"107 425 OFFCURVE",
"77 399 OFFCURVE",
"61 376 CURVE SMOOTH",
"56 369 OFFCURVE",
"54 364 OFFCURVE",
"54 359 CURVE SMOOTH",
"54 354 OFFCURVE",
"57 352 OFFCURVE",
"63 352 CURVE SMOOTH",
"68 352 OFFCURVE",
"72 354 OFFCURVE",
"75 358 CURVE SMOOTH",
"90 379 OFFCURVE",
"118 402 OFFCURVE",
"159 429 CURVE SMOOTH",
"212 463 OFFCURVE",
"263 480 OFFCURVE",
"311 480 CURVE SMOOTH",
"331 480 OFFCURVE",
"341 470 OFFCURVE",
"341 451 CURVE SMOOTH",
"341 432 OFFCURVE",
"329 409 OFFCURVE",
"304 381 CURVE",
"266 344 OFFCURVE",
"237 316 OFFCURVE",
"218 299 CURVE SMOOTH",
"175 261 OFFCURVE",
"146 233 OFFCURVE",
"131 214 CURVE SMOOTH",
"104 182 OFFCURVE",
"90 154 OFFCURVE",
"90 130 CURVE SMOOTH",
"90 125 OFFCURVE",
"91 119 OFFCURVE",
"94 114 CURVE SMOOTH",
"99 107 OFFCURVE",
"104 103 OFFCURVE",
"111 103 CURVE",
"111 103 LINE"
);
},
{
closed = 1;
nodes = (
"100 -19 OFFCURVE",
"114 -7 OFFCURVE",
"114 9 CURVE SMOOTH",
"114 25 OFFCURVE",
"100 38 OFFCURVE",
"84 38 CURVE SMOOTH",
"67 38 OFFCURVE",
"54 25 OFFCURVE",
"54 9 CURVE SMOOTH",
"54 -7 OFFCURVE",
"67 -19 OFFCURVE",
"84 -19 CURVE",
"84 -19 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01247 8 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 27 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 47 117 47 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01219 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 27 122 27 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 105 27 121 27 137 27 153 27 169 27 185 27 201 27 217 27 233 27 249 27 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 27 25 27 41 27 57 27 73 27 89 27 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 3 values pushed */\01256 50 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01243 4 29 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = question;
unicode = 003F;
},
{
glyphname = questiondown;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"115 -334 OFFCURVE",
"166 -316 OFFCURVE",
"221 -279 CURVE SMOOTH",
"266 -251 OFFCURVE",
"296 -226 OFFCURVE",
"311 -203 CURVE SMOOTH",
"316 -196 OFFCURVE",
"318 -191 OFFCURVE",
"318 -186 CURVE SMOOTH",
"318 -181 OFFCURVE",
"315 -178 OFFCURVE",
"309 -178 CURVE SMOOTH",
"304 -178 OFFCURVE",
"299 -180 OFFCURVE",
"296 -184 CURVE SMOOTH",
"281 -206 OFFCURVE",
"253 -230 OFFCURVE",
"213 -255 CURVE SMOOTH",
"160 -289 OFFCURVE",
"109 -306 OFFCURVE",
"60 -306 CURVE SMOOTH",
"40 -306 OFFCURVE",
"30 -297 OFFCURVE",
"30 -278 CURVE SMOOTH",
"30 -260 OFFCURVE",
"43 -237 OFFCURVE",
"69 -208 CURVE SMOOTH",
"106 -170 OFFCURVE",
"135 -142 OFFCURVE",
"155 -125 CURVE SMOOTH",
"197 -87 OFFCURVE",
"226 -58 OFFCURVE",
"242 -39 CURVE SMOOTH",
"269 -8 OFFCURVE",
"283 20 OFFCURVE",
"283 44 CURVE SMOOTH",
"283 50 OFFCURVE",
"281 56 OFFCURVE",
"278 61 CURVE SMOOTH",
"274 69 OFFCURVE",
"268 73 OFFCURVE",
"261 73 CURVE SMOOTH",
"254 73 OFFCURVE",
"249 69 OFFCURVE",
"246 60 CURVE",
"246 57 OFFCURVE",
"245 53 OFFCURVE",
"244 48 CURVE",
"249 48 OFFCURVE",
"251 45 OFFCURVE",
"251 40 CURVE SMOOTH",
"251 38 LINE SMOOTH",
"251 16 OFFCURVE",
"238 -8 OFFCURVE",
"213 -33 CURVE",
"174 -65 OFFCURVE",
"144 -89 OFFCURVE",
"123 -104 CURVE SMOOTH",
"80 -135 OFFCURVE",
"50 -161 OFFCURVE",
"33 -181 CURVE SMOOTH",
"5 -211 OFFCURVE",
"-9 -240 OFFCURVE",
"-9 -269 CURVE SMOOTH",
"-9 -289 OFFCURVE",
"0 -305 OFFCURVE",
"19 -318 CURVE SMOOTH",
"34 -329 OFFCURVE",
"51 -334 OFFCURVE",
"68 -334 CURVE",
"68 -334 LINE"
);
},
{
closed = 1;
nodes = (
"305 136 OFFCURVE",
"319 149 OFFCURVE",
"319 165 CURVE SMOOTH",
"319 181 OFFCURVE",
"305 194 OFFCURVE",
"289 194 CURVE SMOOTH",
"272 194 OFFCURVE",
"259 181 OFFCURVE",
"259 165 CURVE SMOOTH",
"259 149 OFFCURVE",
"272 136 OFFCURVE",
"289 136 CURVE",
"289 136 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01247 8 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01239 8 29 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 29 122 29 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 29 39 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01257 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01231 20 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 102 47 118 47 134 47 150 47 166 47 182 47 198 47 214 47 230 47 246 47 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 47 22 47 38 47 54 47 70 47 86 47 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 47 117 47 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01260 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01216 11 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01216 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01249 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0127 49 23 49 39 49 55 49 71 49 87 49 103 49 119 49 135 49 151 49 167 49 183 49 199 49 215 49 231 49 247 49 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = periodcentered;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 3, 193}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 150;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = bullet;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"206 13 OFFCURVE",
"238 26 OFFCURVE",
"265 53 CURVE SMOOTH",
"291 79 OFFCURVE",
"304 111 OFFCURVE",
"304 148 CURVE SMOOTH",
"304 185 OFFCURVE",
"291 217 OFFCURVE",
"264 244 CURVE SMOOTH",
"238 270 OFFCURVE",
"206 283 OFFCURVE",
"169 283 CURVE SMOOTH",
"132 283 OFFCURVE",
"100 270 OFFCURVE",
"73 243 CURVE SMOOTH",
"47 217 OFFCURVE",
"34 185 OFFCURVE",
"34 148 CURVE SMOOTH",
"34 111 OFFCURVE",
"47 79 OFFCURVE",
"74 52 CURVE SMOOTH",
"100 26 OFFCURVE",
"132 13 OFFCURVE",
"169 13 CURVE",
"169 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 336;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = asterisk;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"177 132 OFFCURVE",
"184 142 OFFCURVE",
"184 151 CURVE SMOOTH",
"184 154 LINE",
"151 220 LINE",
"233 223 LINE SMOOTH",
"247 224 OFFCURVE",
"254 228 OFFCURVE",
"254 237 CURVE SMOOTH",
"254 241 OFFCURVE",
"251 243 OFFCURVE",
"245 243 CURVE SMOOTH",
"160 243 LINE",
"213 301 LINE SMOOTH",
"219 308 OFFCURVE",
"222 314 OFFCURVE",
"222 320 CURVE SMOOTH",
"222 325 OFFCURVE",
"220 328 OFFCURVE",
"217 328 CURVE SMOOTH",
"214 328 OFFCURVE",
"212 326 OFFCURVE",
"209 323 CURVE SMOOTH",
"136 250 LINE",
"123 277 OFFCURVE",
"110 301 OFFCURVE",
"99 322 CURVE SMOOTH",
"95 331 OFFCURVE",
"90 335 OFFCURVE",
"83 335 CURVE SMOOTH",
"78 335 OFFCURVE",
"76 333 OFFCURVE",
"76 328 CURVE SMOOTH",
"76 326 OFFCURVE",
"77 324 OFFCURVE",
"78 321 CURVE SMOOTH",
"114 243 LINE",
"23 243 LINE SMOOTH",
"14 243 OFFCURVE",
"10 239 OFFCURVE",
"10 232 CURVE SMOOTH",
"10 224 OFFCURVE",
"16 215 OFFCURVE",
"23 215 CURVE SMOOTH",
"105 218 LINE",
"43 155 LINE SMOOTH",
"39 151 OFFCURVE",
"37 147 OFFCURVE",
"37 144 CURVE SMOOTH",
"37 137 OFFCURVE",
"42 133 OFFCURVE",
"53 133 CURVE SMOOTH",
"56 133 OFFCURVE",
"59 134 OFFCURVE",
"61 135 CURVE",
"129 209 LINE",
"147 167 LINE SMOOTH",
"158 144 OFFCURVE",
"165 132 OFFCURVE",
"170 132 CURVE",
"170 132 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01237 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0125 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01216 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 19 30 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01225 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01241 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01249 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = numbersign;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"28 0 LINE",
"61 0 LINE",
"148 143 LINE",
"234 143 LINE",
"149 0 LINE",
"182 0 LINE",
"269 143 LINE",
"369 143 LINE",
"388 173 LINE",
"287 173 LINE",
"339 261 LINE",
"432 261 LINE",
"449 291 LINE",
"357 291 LINE",
"444 435 LINE",
"410 435 LINE",
"323 291 LINE",
"236 291 LINE",
"323 435 LINE",
"289 435 LINE",
"203 291 LINE",
"96 291 LINE",
"78 261 LINE",
"184 261 LINE",
"132 173 LINE",
"34 173 LINE",
"16 143 LINE",
"114 143 LINE",
"28 0 LINE"
);
},
{
closed = 1;
nodes = (
"165 173 LINE",
"218 261 LINE",
"305 261 LINE",
"253 173 LINE",
"165 173 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0127 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01211 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\0124 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 4 1 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01214 7 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01218 7 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 466;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = slash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"20 -25 OFFCURVE",
"23 -24 OFFCURVE",
"28 -21 CURVE SMOOTH",
"71 8 OFFCURVE",
"127 68 OFFCURVE",
"198 159 CURVE SMOOTH",
"260 237 OFFCURVE",
"344 346 OFFCURVE",
"385 391 CURVE SMOOTH",
"433 443 OFFCURVE",
"470 472 OFFCURVE",
"506 476 CURVE SMOOTH",
"511 476 OFFCURVE",
"516 475 OFFCURVE",
"521 472 CURVE SMOOTH",
"526 469 OFFCURVE",
"530 467 OFFCURVE",
"533 467 CURVE SMOOTH",
"536 467 OFFCURVE",
"537 468 OFFCURVE",
"537 471 CURVE SMOOTH",
"537 476 OFFCURVE",
"534 481 OFFCURVE",
"528 484 CURVE SMOOTH",
"517 491 OFFCURVE",
"505 494 OFFCURVE",
"492 494 CURVE SMOOTH",
"447 494 OFFCURVE",
"403 461 OFFCURVE",
"363 417 CURVE SMOOTH",
"328 379 OFFCURVE",
"279 312 OFFCURVE",
"251 276 CURVE SMOOTH",
"227 245 OFFCURVE",
"203 211 OFFCURVE",
"178 174 CURVE SMOOTH",
"130 104 OFFCURVE",
"77 42 OFFCURVE",
"18 -12 CURVE SMOOTH",
"15 -15 OFFCURVE",
"13 -18 OFFCURVE",
"13 -21 CURVE SMOOTH",
"13 -24 OFFCURVE",
"14 -25 OFFCURVE",
"17 -25 CURVE",
"17 -25 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = backslash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"537 -21 LINE",
"536 -19 OFFCURVE",
"534 -16 OFFCURVE",
"531 -12 CURVE",
"488 32 OFFCURVE",
"443 86 OFFCURVE",
"395 151 CURVE SMOOTH",
"271 321 LINE SMOOTH",
"185 436 OFFCURVE",
"114 494 OFFCURVE",
"58 494 CURVE SMOOTH",
"33 494 OFFCURVE",
"18 486 OFFCURVE",
"13 471 CURVE",
"17 467 LINE",
"18 467 OFFCURVE",
"23 469 OFFCURVE",
"30 472 CURVE SMOOTH",
"35 475 OFFCURVE",
"40 476 OFFCURVE",
"43 476 CURVE SMOOTH",
"75 476 OFFCURVE",
"126 435 OFFCURVE",
"195 353 CURVE SMOOTH",
"257 276 OFFCURVE",
"319 198 OFFCURVE",
"380 120 CURVE SMOOTH",
"451 33 OFFCURVE",
"502 -16 OFFCURVE",
"533 -25 CURVE",
"533 -25 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01214 3 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 543;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = periodcentered.loclCAT;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = periodcentered;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 150;
}
);
},
{
glyphname = parenleft;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"94 -84 OFFCURVE",
"97 -81 OFFCURVE",
"97 -74 CURVE SMOOTH",
"97 -71 OFFCURVE",
"96 -67 OFFCURVE",
"93 -63 CURVE SMOOTH",
"80 -46 OFFCURVE",
"74 8 OFFCURVE",
"74 99 CURVE SMOOTH",
"74 184 OFFCURVE",
"107 270 OFFCURVE",
"173 358 CURVE SMOOTH",
"235 441 OFFCURVE",
"304 499 OFFCURVE",
"381 530 CURVE",
"381 542 OFFCURVE",
"376 548 OFFCURVE",
"366 548 CURVE SMOOTH",
"356 548 OFFCURVE",
"339 540 OFFCURVE",
"314 525 CURVE SMOOTH",
"231 474 OFFCURVE",
"167 419 OFFCURVE",
"124 360 CURVE SMOOTH",
"67 282 OFFCURVE",
"38 192 OFFCURVE",
"38 89 CURVE SMOOTH",
"38 65 OFFCURVE",
"41 36 OFFCURVE",
"46 1 CURVE SMOOTH",
"53 -40 OFFCURVE",
"62 -66 OFFCURVE",
"71 -75 CURVE SMOOTH",
"77 -81 OFFCURVE",
"83 -84 OFFCURVE",
"88 -84 CURVE",
"88 -84 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0124 8 16 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 102 4 118 4 134 4 150 4 166 4 182 4 198 4 214 4 230 4 246 4 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 4 22 4 38 4 54 4 70 4 86 4 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 4 117 4 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 331;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"32 -88 OFFCURVE",
"49 -80 OFFCURVE",
"74 -65 CURVE SMOOTH",
"157 -13 OFFCURVE",
"221 42 OFFCURVE",
"264 101 CURVE SMOOTH",
"321 179 OFFCURVE",
"350 270 OFFCURVE",
"350 373 CURVE SMOOTH",
"350 396 OFFCURVE",
"347 425 OFFCURVE",
"341 459 CURVE SMOOTH",
"333 500 OFFCURVE",
"324 526 OFFCURVE",
"315 536 CURVE SMOOTH",
"310 542 OFFCURVE",
"304 545 OFFCURVE",
"299 545 CURVE SMOOTH",
"292 545 OFFCURVE",
"289 542 OFFCURVE",
"289 535 CURVE SMOOTH",
"289 531 OFFCURVE",
"291 527 OFFCURVE",
"294 523 CURVE SMOOTH",
"307 506 OFFCURVE",
"313 452 OFFCURVE",
"313 361 CURVE SMOOTH",
"313 276 OFFCURVE",
"280 190 OFFCURVE",
"214 102 CURVE SMOOTH",
"152 19 OFFCURVE",
"83 -39 OFFCURVE",
"6 -70 CURVE",
"6 -82 OFFCURVE",
"11 -88 OFFCURVE",
"21 -88 CURVE",
"21 -88 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 12 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 12 122 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 105 12 121 12 137 12 153 12 169 12 185 12 201 12 217 12 233 12 249 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 12 25 12 41 12 57 12 73 12 89 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 385;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = braceleft;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"151 -82 LINE SMOOTH",
"155 -82 OFFCURVE",
"157 -79 OFFCURVE",
"157 -73 CURVE SMOOTH",
"157 -70 OFFCURVE",
"156 -68 OFFCURVE",
"153 -68 CURVE SMOOTH",
"132 -68 OFFCURVE",
"116 -66 OFFCURVE",
"107 -61 CURVE SMOOTH",
"94 -54 OFFCURVE",
"88 -41 OFFCURVE",
"88 -23 CURVE SMOOTH",
"88 -13 OFFCURVE",
"89 -2 OFFCURVE",
"92 11 CURVE SMOOTH",
"104 63 LINE SMOOTH",
"109 89 OFFCURVE",
"112 110 OFFCURVE",
"112 126 CURVE SMOOTH",
"112 139 OFFCURVE",
"110 149 OFFCURVE",
"106 156 CURVE SMOOTH",
"97 173 OFFCURVE",
"76 184 OFFCURVE",
"42 190 CURVE",
"81 197 OFFCURVE",
"109 211 OFFCURVE",
"125 230 CURVE SMOOTH",
"138 246 OFFCURVE",
"150 280 OFFCURVE",
"161 331 CURVE SMOOTH",
"180 428 OFFCURVE",
"200 439 OFFCURVE",
"260 439 CURVE SMOOTH",
"264 439 OFFCURVE",
"270 446 OFFCURVE",
"270 450 CURVE SMOOTH",
"270 453 OFFCURVE",
"268 454 OFFCURVE",
"263 454 CURVE SMOOTH",
"261 454 LINE SMOOTH",
"220 454 OFFCURVE",
"189 447 OFFCURVE",
"169 432 CURVE SMOOTH",
"153 419 OFFCURVE",
"140 396 OFFCURVE",
"131 363 CURVE SMOOTH",
"114 284 LINE SMOOTH",
"108 252 OFFCURVE",
"98 230 OFFCURVE",
"83 219 CURVE SMOOTH",
"70 209 OFFCURVE",
"47 202 OFFCURVE",
"13 199 CURVE",
"8 192 OFFCURVE",
"6 188 OFFCURVE",
"6 185 CURVE SMOOTH",
"6 183 OFFCURVE",
"7 182 OFFCURVE",
"9 182 CURVE SMOOTH",
"27 182 OFFCURVE",
"41 180 OFFCURVE",
"50 176 CURVE SMOOTH",
"70 168 OFFCURVE",
"80 152 OFFCURVE",
"80 129 CURVE SMOOTH",
"80 120 OFFCURVE",
"79 110 OFFCURVE",
"76 97 CURVE SMOOTH",
"64 47 LINE SMOOTH",
"58 20 OFFCURVE",
"55 -2 OFFCURVE",
"55 -19 CURVE SMOOTH",
"55 -38 OFFCURVE",
"59 -52 OFFCURVE",
"66 -60 CURVE SMOOTH",
"79 -75 OFFCURVE",
"107 -82 OFFCURVE",
"148 -82 CURVE",
"148 -82 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 8 35 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 102 22 118 22 134 22 150 22 166 22 182 22 198 22 214 22 230 22 246 22 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 22 22 22 38 22 54 22 70 22 86 22 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 22 117 22 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01241 35 22 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01241 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01216 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01259 1 5 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 231;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = braceright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"19 -82 LINE SMOOTH",
"60 -82 OFFCURVE",
"91 -75 OFFCURVE",
"111 -61 CURVE SMOOTH",
"130 -48 OFFCURVE",
"145 -25 OFFCURVE",
"157 6 CURVE",
"165 34 OFFCURVE",
"173 62 OFFCURVE",
"182 89 CURVE SMOOTH",
"192 120 OFFCURVE",
"204 140 OFFCURVE",
"218 151 CURVE SMOOTH",
"237 166 OFFCURVE",
"262 173 OFFCURVE",
"293 173 CURVE",
"299 180 OFFCURVE",
"302 184 OFFCURVE",
"302 187 CURVE SMOOTH",
"302 189 OFFCURVE",
"301 190 OFFCURVE",
"298 190 CURVE SMOOTH",
"267 193 OFFCURVE",
"247 200 OFFCURVE",
"238 211 CURVE SMOOTH",
"234 216 OFFCURVE",
"232 224 OFFCURVE",
"232 234 CURVE SMOOTH",
"232 247 OFFCURVE",
"239 274 OFFCURVE",
"252 315 CURVE SMOOTH",
"265 355 OFFCURVE",
"271 383 OFFCURVE",
"271 399 CURVE SMOOTH",
"271 412 OFFCURVE",
"268 422 OFFCURVE",
"263 429 CURVE SMOOTH",
"252 444 OFFCURVE",
"225 451 OFFCURVE",
"182 451 CURVE SMOOTH",
"179 451 LINE",
"174 446 OFFCURVE",
"171 442 OFFCURVE",
"171 439 CURVE SMOOTH",
"171 438 OFFCURVE",
"172 437 OFFCURVE",
"175 437 CURVE SMOOTH",
"194 437 OFFCURVE",
"208 435 OFFCURVE",
"216 431 CURVE SMOOTH",
"229 426 OFFCURVE",
"236 415 OFFCURVE",
"236 400 CURVE SMOOTH",
"236 389 OFFCURVE",
"233 375 OFFCURVE",
"228 358 CURVE SMOOTH",
"210 296 OFFCURVE",
"201 256 OFFCURVE",
"201 239 CURVE SMOOTH",
"201 208 OFFCURVE",
"222 189 OFFCURVE",
"264 181 CURVE",
"64 144 OFFCURVE",
"200 -68 OFFCURVE",
"21 -68 CURVE SMOOTH",
"16 -68 OFFCURVE",
"13 -71 OFFCURVE",
"13 -78 CURVE SMOOTH",
"13 -81 OFFCURVE",
"14 -82 OFFCURVE",
"16 -82 CURVE",
"16 -82 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 30 122 30 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\01243 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\01224 30 43 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01246 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 102 46 118 46 134 46 150 46 166 46 182 46 198 46 214 46 230 46 246 46 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 46 22 46 38 46 54 46 70 46 86 46 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 46 117 46 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01248 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01243 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01251 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01219 1 14 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = bracketleft;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"148 -11 OFFCURVE",
"174 -6 OFFCURVE",
"174 4 CURVE SMOOTH",
"174 13 OFFCURVE",
"165 18 OFFCURVE",
"148 18 CURVE SMOOTH",
"143 18 OFFCURVE",
"135 18 OFFCURVE",
"125 17 CURVE SMOOTH",
"115 16 OFFCURVE",
"108 15 OFFCURVE",
"103 15 CURVE SMOOTH",
"75 15 OFFCURVE",
"61 24 OFFCURVE",
"61 43 CURVE SMOOTH",
"61 116 OFFCURVE",
"212 383 OFFCURVE",
"273 414 CURVE",
"277 417 OFFCURVE",
"287 418 OFFCURVE",
"303 418 CURVE SMOOTH",
"308 418 OFFCURVE",
"316 418 OFFCURVE",
"326 417 CURVE SMOOTH",
"336 416 OFFCURVE",
"344 415 OFFCURVE",
"349 415 CURVE SMOOTH",
"359 415 OFFCURVE",
"364 419 OFFCURVE",
"364 426 CURVE SMOOTH",
"364 441 OFFCURVE",
"345 449 OFFCURVE",
"308 449 CURVE SMOOTH",
"295 449 LINE SMOOTH",
"276 449 OFFCURVE",
"261 445 OFFCURVE",
"248 436 CURVE SMOOTH",
"239 430 OFFCURVE",
"227 418 OFFCURVE",
"212 401 CURVE SMOOTH",
"171 354 OFFCURVE",
"131 294 OFFCURVE",
"92 219 CURVE SMOOTH",
"47 132 OFFCURVE",
"24 65 OFFCURVE",
"24 18 CURVE SMOOTH",
"24 -1 OFFCURVE",
"48 -11 OFFCURVE",
"96 -11 CURVE",
"96 -11 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01210 8 21 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 102 10 118 10 134 10 150 10 166 10 182 10 198 10 214 10 230 10 246 10 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 10 22 10 38 10 54 10 70 10 86 10 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 10 117 10 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01215 4 19 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0125 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 366;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = bracketright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"115 -11 OFFCURVE",
"153 -1 OFFCURVE",
"172 18 CURVE SMOOTH",
"215 61 OFFCURVE",
"254 124 OFFCURVE",
"289 205 CURVE SMOOTH",
"325 288 OFFCURVE",
"343 359 OFFCURVE",
"343 419 CURVE SMOOTH",
"343 431 OFFCURVE",
"339 439 OFFCURVE",
"331 443 CURVE SMOOTH",
"326 446 OFFCURVE",
"316 448 OFFCURVE",
"303 448 CURVE SMOOTH",
"248 448 OFFCURVE",
"217 438 OFFCURVE",
"212 417 CURVE",
"214 416 LINE",
"248 417 LINE",
"283 418 LINE SMOOTH",
"293 418 OFFCURVE",
"300 417 OFFCURVE",
"304 416 CURVE",
"305 410 OFFCURVE",
"306 404 OFFCURVE",
"306 397 CURVE SMOOTH",
"306 353 OFFCURVE",
"289 292 OFFCURVE",
"254 214 CURVE SMOOTH",
"221 139 OFFCURVE",
"189 84 OFFCURVE",
"157 48 CURVE SMOOTH",
"143 33 OFFCURVE",
"124 23 OFFCURVE",
"99 19 CURVE",
"41 15 LINE",
"23 12 OFFCURVE",
"13 5 OFFCURVE",
"11 -8 CURVE",
"16 -10 OFFCURVE",
"31 -11 OFFCURVE",
"58 -11 CURVE",
"58 -11 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 18 122 18 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 105 18 121 18 137 18 153 18 169 18 185 18 201 18 217 18 233 18 249 18 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 18 25 18 41 18 57 18 73 18 89 18 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01228 4 26 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01226 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 348;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = hyphen;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46 105 LINE SMOOTH",
"76 106 OFFCURVE",
"102 108 OFFCURVE",
"123 110 CURVE SMOOTH",
"142 112 OFFCURVE",
"167 114 OFFCURVE",
"200 115 CURVE SMOOTH",
"219 115 OFFCURVE",
"228 117 OFFCURVE",
"228 121 CURVE SMOOTH",
"228 125 OFFCURVE",
"219 127 OFFCURVE",
"200 129 CURVE SMOOTH",
"155 133 OFFCURVE",
"123 135 OFFCURVE",
"103 135 CURVE SMOOTH",
"83 135 OFFCURVE",
"67 134 OFFCURVE",
"56 131 CURVE SMOOTH",
"40 126 OFFCURVE",
"20 116 OFFCURVE",
"20 111 CURVE SMOOTH",
"20 107 OFFCURVE",
"26 105 OFFCURVE",
"39 105 CURVE",
"39 105 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 4 4 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 265;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = softhyphen;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46 105 LINE SMOOTH",
"76 105 OFFCURVE",
"102 108 OFFCURVE",
"123 110 CURVE SMOOTH",
"142 112 OFFCURVE",
"155 114 OFFCURVE",
"165 115 CURVE SMOOTH",
"184 117 OFFCURVE",
"193 117 OFFCURVE",
"193 121 CURVE SMOOTH",
"193 125 OFFCURVE",
"184 126 OFFCURVE",
"165 129 CURVE SMOOTH",
"143 132 OFFCURVE",
"123 135 OFFCURVE",
"103 135 CURVE SMOOTH",
"83 135 OFFCURVE",
"67 134 OFFCURVE",
"56 131 CURVE SMOOTH",
"40 126 OFFCURVE",
"20 116 OFFCURVE",
"20 111 CURVE SMOOTH",
"20 107 OFFCURVE",
"26 105 OFFCURVE",
"39 105 CURVE",
"39 105 LINE"
);
}
);
width = 220;
}
);
unicode = 00AD;
},
{
glyphname = endash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46 105 LINE SMOOTH",
"72 106 OFFCURVE",
"108 109 OFFCURVE",
"154 112 CURVE SMOOTH",
"191 115 OFFCURVE",
"228 117 OFFCURVE",
"263 118 CURVE SMOOTH",
"281 118 OFFCURVE",
"290 121 OFFCURVE",
"290 126 CURVE SMOOTH",
"290 131 OFFCURVE",
"281 134 OFFCURVE",
"263 136 CURVE SMOOTH",
"218 141 OFFCURVE",
"171 144 OFFCURVE",
"122 144 CURVE SMOOTH",
"89 144 OFFCURVE",
"67 142 OFFCURVE",
"56 139 CURVE",
"40 132 OFFCURVE",
"20 120 OFFCURVE",
"20 113 CURVE SMOOTH",
"20 108 OFFCURVE",
"27 105 OFFCURVE",
"41 105 CURVE",
"41 105 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01211 4 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0122 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 375;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46 105 LINE SMOOTH",
"195 111 OFFCURVE",
"318 115 OFFCURVE",
"416 118 CURVE SMOOTH",
"435 118 OFFCURVE",
"444 121 OFFCURVE",
"444 126 CURVE SMOOTH",
"444 131 OFFCURVE",
"435 134 OFFCURVE",
"416 136 CURVE SMOOTH",
"371 141 OFFCURVE",
"288 144 OFFCURVE",
"167 144 CURVE SMOOTH",
"104 144 OFFCURVE",
"67 142 OFFCURVE",
"56 139 CURVE",
"40 132 OFFCURVE",
"20 120 OFFCURVE",
"20 113 CURVE SMOOTH",
"20 108 OFFCURVE",
"27 105 OFFCURVE",
"41 105 CURVE",
"41 105 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0129 4 2 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\0120 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 461;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = hyphentwo;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 265;
}
);
unicode = 2010;
},
{
glyphname = underscore;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"31 -46 OFFCURVE",
"51 -45 OFFCURVE",
"76 -44 CURVE SMOOTH",
"107 -43 OFFCURVE",
"127 -42 OFFCURVE",
"137 -42 CURVE SMOOTH",
"267 -39 OFFCURVE",
"385 -38 OFFCURVE",
"491 -38 CURVE",
"496 -33 LINE",
"495 -22 OFFCURVE",
"489 -16 OFFCURVE",
"478 -16 CURVE SMOOTH",
"16 -16 LINE SMOOTH",
"9 -16 OFFCURVE",
"5 -20 OFFCURVE",
"5 -28 CURVE SMOOTH",
"5 -40 OFFCURVE",
"9 -46 OFFCURVE",
"16 -46 CURVE",
"16 -46 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0121 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01211 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 504;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = quotesinglbase;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 16, -286}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 218;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotedblbase;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quotedblright;
transform = "{1, 0, 0, 1, 16, -484}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 305;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = quotedblleft;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 233, 763}";
},
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 314, 763}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01215 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01217 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01234 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01236 15 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{1, 0, 0, 1, 81, 192}";
},
{
name = quotesingle;
transform = "{1, 0, 0, 1, 0, 192}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quoteleft;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quotesingle;
transform = "{-1, 0, 0, -1, 233, 567}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 175;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"85 220 OFFCURVE",
"90 222 OFFCURVE",
"98 227 CURVE SMOOTH",
"113 237 OFFCURVE",
"127 253 OFFCURVE",
"141 275 CURVE SMOOTH",
"153 294 OFFCURVE",
"159 309 OFFCURVE",
"159 319 CURVE SMOOTH",
"159 334 OFFCURVE",
"152 343 OFFCURVE",
"141 343 CURVE SMOOTH",
"122 343 OFFCURVE",
"113 329 OFFCURVE",
"113 317 CURVE SMOOTH",
"113 303 OFFCURVE",
"116 296 OFFCURVE",
"124 296 CURVE",
"113 273 OFFCURVE",
"102 254 OFFCURVE",
"89 238 CURVE SMOOTH",
"83 231 OFFCURVE",
"80 225 OFFCURVE",
"80 221 CURVE SMOOTH",
"80 220 OFFCURVE",
"81 220 OFFCURVE",
"82 220 CURVE",
"82 220 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 175;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = guillemetleft;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"99 13 LINE",
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187 164 OFFCURVE",
"203 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 193 OFFCURVE",
"157 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
},
{
closed = 1;
nodes = (
"189 13 LINE",
"194 15 LINE",
"197 21 LINE",
"198 106 LINE",
"251 144 LINE SMOOTH",
"278 163 OFFCURVE",
"293 177 OFFCURVE",
"298 186 CURVE",
"298 190 LINE",
"294 192 LINE SMOOTH",
"292 193 OFFCURVE",
"248 166 OFFCURVE",
"161 112 CURVE",
"171 62 LINE SMOOTH",
"176 37 OFFCURVE",
"181 21 OFFCURVE",
"184 15 CURVE",
"189 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = guillemetright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 13 LINE",
"118 14 LINE",
"246 94 LINE",
"232 155 OFFCURVE",
"224 187 OFFCURVE",
"222 189 CURVE",
"217 192 LINE",
"212 189 LINE",
"210 186 OFFCURVE",
"209 178 OFFCURVE",
"209 165 CURVE SMOOTH",
"208 156 OFFCURVE",
"208 143 OFFCURVE",
"209 127 CURVE SMOOTH",
"209 99 LINE",
"156 61 LINE SMOOTH",
"129 42 OFFCURVE",
"113 29 OFFCURVE",
"108 20 CURVE",
"108 14 LINE",
"113 13 LINE"
);
},
{
closed = 1;
nodes = (
"23 13 LINE",
"27 14 LINE",
"155 94 LINE",
"152 110 OFFCURVE",
"149 126 OFFCURVE",
"146 142 CURVE SMOOTH",
"142 162 OFFCURVE",
"138 178 OFFCURVE",
"133 189 CURVE",
"127 192 LINE",
"122 189 LINE",
"119 184 LINE",
"118 99 LINE",
"67 62 LINE SMOOTH",
"34 37 OFFCURVE",
"17 22 OFFCURVE",
"17 17 CURVE",
"18 14 LINE",
"23 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = guilsinglleft;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"99 13 LINE",
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187 164 OFFCURVE",
"203 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 193 OFFCURVE",
"157 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 283;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"68 13 LINE",
"73 14 LINE",
"201 94 LINE",
"187 155 OFFCURVE",
"179 187 OFFCURVE",
"177 189 CURVE",
"172 192 LINE",
"167 189 LINE",
"165 186 OFFCURVE",
"164 178 OFFCURVE",
"164 165 CURVE SMOOTH",
"163 156 OFFCURVE",
"163 143 OFFCURVE",
"164 127 CURVE SMOOTH",
"164 99 LINE",
"111 61 LINE SMOOTH",
"84 42 OFFCURVE",
"68 29 OFFCURVE",
"63 20 CURVE",
"63 14 LINE",
"68 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 236;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = quotedbl;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"128 279 LINE",
"135 279 LINE",
"144 300 OFFCURVE",
"153 321 OFFCURVE",
"161 343 CURVE SMOOTH",
"174 375 OFFCURVE",
"180 396 OFFCURVE",
"180 404 CURVE SMOOTH",
"180 414 OFFCURVE",
"175 419 OFFCURVE",
"166 419 CURVE SMOOTH",
"155 419 OFFCURVE",
"143 407 OFFCURVE",
"142 395 CURVE SMOOTH",
"128 279 LINE"
);
},
{
closed = 1;
nodes = (
"32 279 LINE",
"39 279 LINE",
"48 300 OFFCURVE",
"57 321 OFFCURVE",
"65 343 CURVE SMOOTH",
"78 375 OFFCURVE",
"84 396 OFFCURVE",
"84 404 CURVE SMOOTH",
"84 414 OFFCURVE",
"79 419 OFFCURVE",
"70 419 CURVE SMOOTH",
"59 419 OFFCURVE",
"47 407 OFFCURVE",
"46 395 CURVE SMOOTH",
"32 279 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = quotesingle;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"88 224 OFFCURVE",
"93 226 OFFCURVE",
"101 231 CURVE SMOOTH",
"116 241 OFFCURVE",
"130 257 OFFCURVE",
"144 279 CURVE SMOOTH",
"155 296 OFFCURVE",
"162 314 OFFCURVE",
"162 328 CURVE SMOOTH",
"162 339 OFFCURVE",
"157 347 OFFCURVE",
"144 347 CURVE SMOOTH",
"125 347 OFFCURVE",
"115 329 OFFCURVE",
"115 316 CURVE SMOOTH",
"115 307 OFFCURVE",
"119 300 OFFCURVE",
"127 300 CURVE",
"116 277 OFFCURVE",
"105 258 OFFCURVE",
"92 242 CURVE SMOOTH",
"86 235 OFFCURVE",
"83 229 OFFCURVE",
"83 226 CURVE SMOOTH",
"83 225 OFFCURVE",
"83 224 OFFCURVE",
"85 224 CURVE",
"85 224 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0126 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0128 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 136;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = "leftanglebracket-math";
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"76 -52 LINE",
"80 -46 LINE",
"82 -27 LINE",
"83 241 LINE",
"130 361 LINE SMOOTH",
"155 424 OFFCURVE",
"169 469 OFFCURVE",
"173 494 CURVE",
"173 506 LINE",
"169 513 LINE",
"166 516 OFFCURVE",
"128 431 OFFCURVE",
"50 260 CURVE",
"60 106 LINE SMOOTH",
"64 43 OFFCURVE",
"67 -8 OFFCURVE",
"72 -46 CURVE",
"76 -52 LINE"
);
}
);
width = 223;
}
);
unicode = 27E8;
},
{
glyphname = "rightanglebracket-math";
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"54 -56 LINE",
"56 -59 OFFCURVE",
"95 26 OFFCURVE",
"173 196 CURVE",
"163 351 LINE SMOOTH",
"159 414 OFFCURVE",
"156 464 OFFCURVE",
"151 502 CURVE",
"147 509 LINE",
"143 502 LINE",
"141 483 LINE",
"140 215 LINE",
"93 95 LINE SMOOTH",
"68 32 OFFCURVE",
"54 -12 OFFCURVE",
"50 -37 CURVE",
"50 -50 LINE",
"54 -56 LINE"
);
}
);
width = 223;
}
);
unicode = 27E9;
},
{
glyphname = cedi;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"428 4 CURVE SMOOTH",
"487 25 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 74 OFFCURVE",
"562 77 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"562 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"558 86 OFFCURVE",
"556 84 OFFCURVE",
"553 82 CURVE",
"520 51 OFFCURVE",
"402 7 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH",
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 304 OFFCURVE",
"540 283 CURVE SMOOTH",
"535 279 OFFCURVE",
"535 273 OFFCURVE",
"542 273 CURVE SMOOTH",
"553 273 OFFCURVE",
"580 289 OFFCURVE",
"623 357 CURVE SMOOTH",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE SMOOTH",
"13 208 OFFCURVE",
"4 174 OFFCURVE",
"4 142 CURVE SMOOTH",
"4 42 OFFCURVE",
"91 -32 OFFCURVE",
"237 -32 CURVE",
"237 -32 LINE"
);
},
{
closed = 1;
nodes = (
"117 -116 OFFCURVE",
"126 -110 OFFCURVE",
"131 -100 CURVE",
"566 569 LINE SMOOTH",
"568 572 OFFCURVE",
"568 575 OFFCURVE",
"568 578 CURVE SMOOTH",
"568 583 OFFCURVE",
"565 585 OFFCURVE",
"561 585 CURVE SMOOTH",
"554 585 OFFCURVE",
"544 579 OFFCURVE",
"539 569 CURVE",
"104 -100 LINE SMOOTH",
"102 -103 OFFCURVE",
"102 -106 OFFCURVE",
"102 -109 CURVE SMOOTH",
"102 -114 OFFCURVE",
"105 -116 OFFCURVE",
"110 -116 CURVE",
"110 -116 LINE"
);
}
);
width = 600;
}
);
unicode = 20B5;
},
{
glyphname = cent;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"92 -74 OFFCURVE",
"97 -72 OFFCURVE",
"101 -69 CURVE",
"101 -9 OFFCURVE",
"103 52 OFFCURVE",
"106 109 CURVE",
"141 120 OFFCURVE",
"177 144 OFFCURVE",
"214 183 CURVE SMOOTH",
"216 185 OFFCURVE",
"217 188 OFFCURVE",
"217 191 CURVE SMOOTH",
"217 193 OFFCURVE",
"216 194 OFFCURVE",
"214 195 CURVE",
"211 195 OFFCURVE",
"208 193 OFFCURVE",
"204 189 CURVE SMOOTH",
"176 159 OFFCURVE",
"149 139 OFFCURVE",
"123 128 CURVE SMOOTH",
"107 123 LINE",
"114 260 LINE",
"119 262 OFFCURVE",
"124 263 OFFCURVE",
"129 263 CURVE SMOOTH",
"139 263 OFFCURVE",
"144 259 OFFCURVE",
"144 251 CURVE SMOOTH",
"144 246 OFFCURVE",
"142 239 OFFCURVE",
"137 230 CURVE SMOOTH",
"134 224 OFFCURVE",
"134 221 OFFCURVE",
"138 221 CURVE SMOOTH",
"140 221 OFFCURVE",
"142 222 OFFCURVE",
"143 224 CURVE SMOOTH",
"146 228 OFFCURVE",
"150 234 OFFCURVE",
"155 243 CURVE SMOOTH",
"160 254 OFFCURVE",
"163 262 OFFCURVE",
"163 269 CURVE SMOOTH",
"163 288 OFFCURVE",
"152 298 OFFCURVE",
"131 298 CURVE SMOOTH",
"126 298 OFFCURVE",
"121 297 OFFCURVE",
"116 296 CURVE",
"118 333 OFFCURVE",
"119 366 OFFCURVE",
"119 394 CURVE SMOOTH",
"119 407 OFFCURVE",
"118 420 OFFCURVE",
"118 431 CURVE SMOOTH",
"118 449 OFFCURVE",
"109 458 OFFCURVE",
"100 458 CURVE SMOOTH",
"91 458 OFFCURVE",
"83 450 OFFCURVE",
"83 437 CURVE SMOOTH",
"80 278 LINE",
"70 270 OFFCURVE",
"60 260 OFFCURVE",
"49 248 CURVE SMOOTH",
"23 217 OFFCURVE",
"10 188 OFFCURVE",
"10 162 CURVE SMOOTH",
"10 123 OFFCURVE",
"28 103 OFFCURVE",
"65 103 CURVE SMOOTH",
"77 103 LINE",
"74 -69 LINE",
"79 -72 OFFCURVE",
"83 -74 OFFCURVE",
"88 -74 CURVE",
"88 -74 LINE"
);
},
{
closed = 1;
nodes = (
"74 117 LINE",
"49 117 OFFCURVE",
"37 129 OFFCURVE",
"37 153 CURVE SMOOTH",
"37 168 OFFCURVE",
"42 184 OFFCURVE",
"52 201 CURVE SMOOTH",
"59 214 OFFCURVE",
"68 226 OFFCURVE",
"79 237 CURVE",
"78 117 LINE",
"74 117 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01254 5 4 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 7 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01236 8 21 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 54 117 54 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\0128 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01257 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01258 8 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 193;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = colonsign;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"428 4 CURVE SMOOTH",
"487 25 OFFCURVE",
"530 47 OFFCURVE",
"558 71 CURVE",
"560 74 OFFCURVE",
"562 77 OFFCURVE",
"563 80 CURVE",
"563 84 OFFCURVE",
"562 86 OFFCURVE",
"559 86 CURVE SMOOTH",
"558 86 OFFCURVE",
"556 84 OFFCURVE",
"553 82 CURVE",
"520 51 OFFCURVE",
"402 7 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -6 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH",
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"588 327 OFFCURVE",
"568 304 OFFCURVE",
"540 283 CURVE SMOOTH",
"535 279 OFFCURVE",
"535 273 OFFCURVE",
"542 273 CURVE SMOOTH",
"553 273 OFFCURVE",
"580 289 OFFCURVE",
"623 357 CURVE SMOOTH",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE SMOOTH",
"13 208 OFFCURVE",
"4 174 OFFCURVE",
"4 142 CURVE SMOOTH",
"4 42 OFFCURVE",
"91 -32 OFFCURVE",
"237 -32 CURVE",
"237 -32 LINE"
);
},
{
closed = 1;
nodes = (
"55 -116 OFFCURVE",
"64 -110 OFFCURVE",
"69 -100 CURVE",
"504 569 LINE SMOOTH",
"506 572 OFFCURVE",
"506 575 OFFCURVE",
"506 578 CURVE SMOOTH",
"506 583 OFFCURVE",
"503 585 OFFCURVE",
"499 585 CURVE SMOOTH",
"492 585 OFFCURVE",
"482 579 OFFCURVE",
"477 569 CURVE",
"42 -100 LINE SMOOTH",
"40 -103 OFFCURVE",
"40 -106 OFFCURVE",
"40 -109 CURVE SMOOTH",
"40 -114 OFFCURVE",
"43 -116 OFFCURVE",
"48 -116 CURVE",
"48 -116 LINE"
);
},
{
closed = 1;
nodes = (
"151 -116 OFFCURVE",
"160 -110 OFFCURVE",
"165 -100 CURVE",
"600 569 LINE SMOOTH",
"602 572 OFFCURVE",
"602 575 OFFCURVE",
"602 578 CURVE SMOOTH",
"602 583 OFFCURVE",
"599 585 OFFCURVE",
"595 585 CURVE SMOOTH",
"588 585 OFFCURVE",
"578 579 OFFCURVE",
"573 569 CURVE",
"138 -100 LINE SMOOTH",
"136 -103 OFFCURVE",
"136 -106 OFFCURVE",
"136 -109 CURVE SMOOTH",
"136 -114 OFFCURVE",
"139 -116 OFFCURVE",
"144 -116 CURVE",
"144 -116 LINE"
);
}
);
width = 600;
}
);
unicode = 20A1;
},
{
glyphname = currency;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-5 46 OFFCURVE",
"2 48 OFFCURVE",
"11 53 CURVE SMOOTH",
"24 60 OFFCURVE",
"38 71 OFFCURVE",
"55 84 CURVE",
"61 80 OFFCURVE",
"69 77 OFFCURVE",
"80 77 CURVE SMOOTH",
"97 77 OFFCURVE",
"113 82 OFFCURVE",
"127 91 CURVE",
"135 81 OFFCURVE",
"145 70 OFFCURVE",
"154 58 CURVE SMOOTH",
"160 51 OFFCURVE",
"166 48 OFFCURVE",
"170 48 CURVE SMOOTH",
"174 48 OFFCURVE",
"177 51 OFFCURVE",
"177 55 CURVE SMOOTH",
"177 57 OFFCURVE",
"176 59 OFFCURVE",
"174 62 CURVE SMOOTH",
"164 78 OFFCURVE",
"154 92 OFFCURVE",
"144 106 CURVE",
"160 122 OFFCURVE",
"170 144 OFFCURVE",
"170 163 CURVE SMOOTH",
"170 167 OFFCURVE",
"170 170 OFFCURVE",
"169 173 CURVE",
"186 187 OFFCURVE",
"203 202 OFFCURVE",
"219 215 CURVE SMOOTH",
"226 220 OFFCURVE",
"229 225 OFFCURVE",
"229 228 CURVE SMOOTH",
"229 230 OFFCURVE",
"227 231 OFFCURVE",
"225 231 CURVE SMOOTH",
"222 231 OFFCURVE",
"216 228 OFFCURVE",
"208 223 CURVE SMOOTH",
"193 211 OFFCURVE",
"177 199 OFFCURVE",
"160 187 CURVE",
"153 192 OFFCURVE",
"143 196 OFFCURVE",
"129 196 CURVE SMOOTH",
"112 196 OFFCURVE",
"97 191 OFFCURVE",
"84 183 CURVE",
"62 209 LINE SMOOTH",
"55 216 OFFCURVE",
"49 219 OFFCURVE",
"43 219 CURVE SMOOTH",
"37 219 OFFCURVE",
"33 215 OFFCURVE",
"33 210 CURVE SMOOTH",
"33 207 OFFCURVE",
"33 205 OFFCURVE",
"35 203 CURVE SMOOTH",
"46 189 OFFCURVE",
"55 177 OFFCURVE",
"64 167 CURVE",
"51 152 OFFCURVE",
"43 133 OFFCURVE",
"42 116 CURVE SMOOTH",
"42 111 OFFCURVE",
"42 106 OFFCURVE",
"43 101 CURVE",
"27 88 OFFCURVE",
"8 74 OFFCURVE",
"-12 59 CURVE SMOOTH",
"-16 56 OFFCURVE",
"-17 53 OFFCURVE",
"-17 51 CURVE SMOOTH",
"-17 48 OFFCURVE",
"-15 46 OFFCURVE",
"-10 46 CURVE",
"-10 46 LINE"
);
},
{
closed = 1;
nodes = (
"69 91 OFFCURVE",
"63 103 OFFCURVE",
"63 117 CURVE SMOOTH",
"63 141 OFFCURVE",
"89 183 OFFCURVE",
"121 183 CURVE SMOOTH",
"139 183 OFFCURVE",
"149 172 OFFCURVE",
"149 158 CURVE SMOOTH",
"149 129 OFFCURVE",
"122 91 OFFCURVE",
"85 91 CURVE",
"85 91 LINE"
);
}
);
width = 199;
}
);
unicode = 00A4;
},
{
glyphname = dollar;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"13 -38 LINE",
"34 -34 LINE",
"52 -1 LINE",
"91 -1 OFFCURVE",
"127 9 OFFCURVE",
"158 29 CURVE SMOOTH",
"194 52 OFFCURVE",
"212 83 OFFCURVE",
"212 120 CURVE SMOOTH",
"212 144 OFFCURVE",
"198 175 OFFCURVE",
"170 213 CURVE",
"243 345 LINE",
"266 340 OFFCURVE",
"280 328 OFFCURVE",
"283 308 CURVE",
"280 315 OFFCURVE",
"274 318 OFFCURVE",
"263 318 CURVE SMOOTH",
"244 318 OFFCURVE",
"235 309 OFFCURVE",
"235 290 CURVE SMOOTH",
"235 275 OFFCURVE",
"248 263 OFFCURVE",
"263 263 CURVE SMOOTH",
"283 263 OFFCURVE",
"297 283 OFFCURVE",
"297 304 CURVE SMOOTH",
"297 334 OFFCURVE",
"282 352 OFFCURVE",
"251 358 CURVE",
"271 396 LINE",
"251 392 LINE",
"234 359 LINE",
"201 359 OFFCURVE",
"171 351 OFFCURVE",
"145 336 CURVE SMOOTH",
"114 318 OFFCURVE",
"98 294 OFFCURVE",
"98 263 CURVE SMOOTH",
"98 242 OFFCURVE",
"111 215 OFFCURVE",
"136 183 CURVE",
"43 13 LINE",
"15 18 OFFCURVE",
"-8 30 OFFCURVE",
"-25 48 CURVE",
"-31 48 LINE",
"-38 41 OFFCURVE",
"-41 36 OFFCURVE",
"-42 33 CURVE",
"-31 18 OFFCURVE",
"-6 7 OFFCURVE",
"35 0 CURVE",
"13 -38 LINE"
);
},
{
closed = 1;
nodes = (
"147 170 LINE",
"164 147 OFFCURVE",
"173 127 OFFCURVE",
"173 109 CURVE SMOOTH",
"173 81 OFFCURVE",
"161 57 OFFCURVE",
"136 38 CURVE SMOOTH",
"113 20 OFFCURVE",
"88 11 OFFCURVE",
"59 11 CURVE",
"59 11 LINE"
);
},
{
closed = 1;
nodes = (
"160 226 LINE",
"146 252 LINE SMOOTH",
"141 261 OFFCURVE",
"138 270 OFFCURVE",
"138 279 CURVE SMOOTH",
"138 298 OFFCURVE",
"147 315 OFFCURVE",
"164 329 CURVE SMOOTH",
"181 342 OFFCURVE",
"199 348 OFFCURVE",
"219 348 CURVE SMOOTH",
"223 348 LINE",
"228 348 LINE",
"160 226 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01249 8 32 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01215 8 53 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 6 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01210 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01238 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01239 6 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01245 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 49 117 49 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01252 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 53 122 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 217 53 233 53 249 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01255 32 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01219 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01222 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\0128 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01210 3 8 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01239 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01245 3 36 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01252 21 38 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 281;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = dong;
lastChange = "2021-10-05 04:12:26 +0000";
layers = (
{
components = (
{
name = dcroat;
},
{
name = macronbelowcomb;
transform = "{1, 0, 0, 1, 49, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 264;
}
);
unicode = 20AB;
},
{
glyphname = euro;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"185 4 OFFCURVE",
"271 48 OFFCURVE",
"326 96 CURVE",
"328 97 OFFCURVE",
"329 100 OFFCURVE",
"329 103 CURVE SMOOTH",
"329 107 OFFCURVE",
"327 109 OFFCURVE",
"322 109 CURVE SMOOTH",
"320 109 LINE",
"316 108 LINE",
"268 65 OFFCURVE",
"184 26 OFFCURVE",
"134 26 CURVE SMOOTH",
"86 26 OFFCURVE",
"54 44 OFFCURVE",
"54 87 CURVE SMOOTH",
"54 102 OFFCURVE",
"58 119 OFFCURVE",
"67 140 CURVE",
"98 144 OFFCURVE",
"141 146 OFFCURVE",
"184 146 CURVE SMOOTH",
"208 146 OFFCURVE",
"232 145 OFFCURVE",
"248 144 CURVE SMOOTH",
"252 144 OFFCURVE",
"256 147 OFFCURVE",
"256 152 CURVE SMOOTH",
"256 163 OFFCURVE",
"228 168 OFFCURVE",
"173 168 CURVE SMOOTH",
"144 168 OFFCURVE",
"112 166 OFFCURVE",
"79 163 CURVE",
"88 176 OFFCURVE",
"98 188 OFFCURVE",
"106 197 CURVE",
"126 201 OFFCURVE",
"152 203 OFFCURVE",
"179 203 CURVE SMOOTH",
"195 203 OFFCURVE",
"211 203 OFFCURVE",
"227 202 CURVE SMOOTH",
"270 199 LINE SMOOTH",
"275 199 OFFCURVE",
"278 202 OFFCURVE",
"278 207 CURVE SMOOTH",
"278 218 OFFCURVE",
"250 223 OFFCURVE",
"195 223 CURVE SMOOTH",
"174 223 OFFCURVE",
"154 222 OFFCURVE",
"131 221 CURVE",
"184 268 OFFCURVE",
"265 311 OFFCURVE",
"324 311 CURVE SMOOTH",
"354 311 OFFCURVE",
"369 303 OFFCURVE",
"369 286 CURVE SMOOTH",
"369 279 OFFCURVE",
"354 240 OFFCURVE",
"354 244 CURVE SMOOTH",
"354 245 OFFCURVE",
"353 245 OFFCURVE",
"352 245 CURVE SMOOTH",
"351 245 OFFCURVE",
"350 245 OFFCURVE",
"350 244 CURVE SMOOTH",
"350 239 OFFCURVE",
"353 236 OFFCURVE",
"358 236 CURVE SMOOTH",
"376 236 OFFCURVE",
"391 267 OFFCURVE",
"391 286 CURVE SMOOTH",
"391 315 OFFCURVE",
"370 330 OFFCURVE",
"328 330 CURVE SMOOTH",
"255 330 OFFCURVE",
"166 278 OFFCURVE",
"100 217 CURVE",
"60 213 OFFCURVE",
"37 213 OFFCURVE",
"37 194 CURVE SMOOTH",
"37 193 OFFCURVE",
"38 189 OFFCURVE",
"42 189 CURVE SMOOTH",
"53 190 LINE",
"75 193 LINE",
"66 181 OFFCURVE",
"57 169 OFFCURVE",
"50 158 CURVE",
"44 158 LINE",
"29 155 OFFCURVE",
"15 155 OFFCURVE",
"15 139 CURVE SMOOTH",
"15 134 OFFCURVE",
"16 133 OFFCURVE",
"21 133 CURVE SMOOTH",
"27 133 LINE SMOOTH",
"30 133 OFFCURVE",
"33 133 OFFCURVE",
"36 134 CURVE",
"25 113 OFFCURVE",
"21 98 OFFCURVE",
"21 78 CURVE SMOOTH",
"21 33 OFFCURVE",
"65 4 OFFCURVE",
"122 4 CURVE",
"122 4 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01227 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01227 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01232 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01232 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\01227 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 29 24 29 40 29 56 29 72 29 88 29 104 29 120 29 136 29 152 29 168 29 184 29 200 29 216 29 232 29 248 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01296 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 373;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = florin;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-63 -231 OFFCURVE",
"-18 -136 OFFCURVE",
"12 -61 CURVE SMOOTH",
"37 1 OFFCURVE",
"72 89 OFFCURVE",
"91 144 CURVE",
"103 149 OFFCURVE",
"134 152 OFFCURVE",
"185 153 CURVE",
"189 156 LINE",
"191 156 OFFCURVE",
"191 157 OFFCURVE",
"191 159 CURVE SMOOTH",
"191 161 OFFCURVE",
"190 162 OFFCURVE",
"188 164 CURVE",
"185 165 OFFCURVE",
"179 166 OFFCURVE",
"171 167 CURVE",
"168 168 OFFCURVE",
"163 168 OFFCURVE",
"157 168 CURVE SMOOTH",
"135 168 LINE",
"130 167 OFFCURVE",
"125 167 OFFCURVE",
"120 168 CURVE",
"103 168 LINE",
"126 230 OFFCURVE",
"179 334 OFFCURVE",
"238 383 CURVE SMOOTH",
"251 393 OFFCURVE",
"263 398 OFFCURVE",
"274 398 CURVE SMOOTH",
"297 398 OFFCURVE",
"307 379 OFFCURVE",
"304 342 CURVE SMOOTH",
"303 327 OFFCURVE",
"305 319 OFFCURVE",
"308 319 CURVE SMOOTH",
"313 319 OFFCURVE",
"319 326 OFFCURVE",
"320 335 CURVE",
"322 338 OFFCURVE",
"323 342 OFFCURVE",
"324 345 CURVE",
"325 353 LINE SMOOTH",
"326 370 OFFCURVE",
"322 383 OFFCURVE",
"311 395 CURVE",
"298 405 OFFCURVE",
"284 410 OFFCURVE",
"268 410 CURVE SMOOTH",
"240 410 OFFCURVE",
"211 401 OFFCURVE",
"184 369 CURVE SMOOTH",
"136 305 OFFCURVE",
"107 237 OFFCURVE",
"76 166 CURVE",
"56 163 OFFCURVE",
"40 159 OFFCURVE",
"29 155 CURVE SMOOTH",
"18 151 OFFCURVE",
"12 147 OFFCURVE",
"11 144 CURVE",
"11 141 OFFCURVE",
"15 139 OFFCURVE",
"24 139 CURVE SMOOTH",
"27 139 OFFCURVE",
"31 139 OFFCURVE",
"36 140 CURVE SMOOTH",
"63 143 LINE",
"34 72 OFFCURVE",
"32 44 OFFCURVE",
"-4 -31 CURVE SMOOTH",
"-43 -108 OFFCURVE",
"-78 -166 OFFCURVE",
"-103 -189 CURVE SMOOTH",
"-122 -208 OFFCURVE",
"-140 -218 OFFCURVE",
"-156 -218 CURVE SMOOTH",
"-169 -218 OFFCURVE",
"-178 -206 OFFCURVE",
"-182 -187 CURVE",
"-183 -166 LINE SMOOTH",
"-183 -153 OFFCURVE",
"-185 -146 OFFCURVE",
"-188 -146 CURVE SMOOTH",
"-195 -146 OFFCURVE",
"-200 -156 OFFCURVE",
"-203 -176 CURVE SMOOTH",
"-204 -193 OFFCURVE",
"-199 -206 OFFCURVE",
"-189 -216 CURVE SMOOTH",
"-180 -227 OFFCURVE",
"-167 -231 OFFCURVE",
"-150 -231 CURVE",
"-150 -231 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01279 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01254 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 1 29 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01217 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 154;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = franc;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"335 -59 OFFCURVE",
"452 -3 OFFCURVE",
"536 99 CURVE",
"590 102 LINE SMOOTH",
"609 102 OFFCURVE",
"618 104 OFFCURVE",
"618 108 CURVE SMOOTH",
"618 112 OFFCURVE",
"609 114 OFFCURVE",
"590 116 CURVE SMOOTH",
"551 119 LINE",
"573 149 OFFCURVE",
"592 182 OFFCURVE",
"608 218 CURVE",
"615 217 OFFCURVE",
"631 215 OFFCURVE",
"654 210 CURVE SMOOTH",
"675 206 OFFCURVE",
"690 204 OFFCURVE",
"699 204 CURVE SMOOTH",
"705 204 OFFCURVE",
"707 205 OFFCURVE",
"707 206 CURVE SMOOTH",
"707 208 OFFCURVE",
"705 210 OFFCURVE",
"699 213 CURVE SMOOTH",
"689 218 OFFCURVE",
"676 221 OFFCURVE",
"659 224 CURVE SMOOTH",
"613 233 LINE",
"694 402 LINE",
"760 383 LINE SMOOTH",
"787 375 OFFCURVE",
"809 373 OFFCURVE",
"828 373 CURVE SMOOTH",
"851 373 OFFCURVE",
"866 380 OFFCURVE",
"875 393 CURVE SMOOTH",
"876 394 OFFCURVE",
"876 395 OFFCURVE",
"876 396 CURVE SMOOTH",
"876 399 OFFCURVE",
"874 401 OFFCURVE",
"870 401 CURVE SMOOTH",
"869 401 OFFCURVE",
"867 400 OFFCURVE",
"866 399 CURVE SMOOTH",
"861 391 OFFCURVE",
"853 387 OFFCURVE",
"841 387 CURVE SMOOTH",
"838 387 OFFCURVE",
"827 388 OFFCURVE",
"809 391 CURVE SMOOTH",
"794 393 OFFCURVE",
"776 397 OFFCURVE",
"756 403 CURVE SMOOTH",
"703 419 LINE",
"704 421 LINE SMOOTH",
"705 424 OFFCURVE",
"706 426 OFFCURVE",
"706 429 CURVE SMOOTH",
"706 437 OFFCURVE",
"702 441 OFFCURVE",
"693 441 CURVE SMOOTH",
"685 440 OFFCURVE",
"677 436 OFFCURVE",
"670 429 CURVE",
"594 449 OFFCURVE",
"486 465 OFFCURVE",
"407 466 CURVE SMOOTH",
"337 465 OFFCURVE",
"290 460 OFFCURVE",
"249 446 CURVE SMOOTH",
"195 428 OFFCURVE",
"156 405 OFFCURVE",
"131 378 CURVE SMOOTH",
"115 360 OFFCURVE",
"107 343 OFFCURVE",
"107 327 CURVE SMOOTH",
"107 321 OFFCURVE",
"108 315 OFFCURVE",
"111 309 CURVE SMOOTH",
"120 289 OFFCURVE",
"140 279 OFFCURVE",
"171 279 CURVE SMOOTH",
"185 279 OFFCURVE",
"200 281 OFFCURVE",
"216 286 CURVE SMOOTH",
"225 289 OFFCURVE",
"229 292 OFFCURVE",
"229 295 CURVE SMOOTH",
"229 297 OFFCURVE",
"227 298 OFFCURVE",
"223 298 CURVE SMOOTH",
"214 297 LINE",
"201 293 OFFCURVE",
"189 291 OFFCURVE",
"178 291 CURVE SMOOTH",
"153 291 OFFCURVE",
"140 300 OFFCURVE",
"140 318 CURVE SMOOTH",
"140 332 OFFCURVE",
"149 347 OFFCURVE",
"168 363 CURVE SMOOTH",
"231 416 OFFCURVE",
"333 438 OFFCURVE",
"442 438 CURVE SMOOTH",
"513 438 OFFCURVE",
"587 429 OFFCURVE",
"657 413 CURVE",
"645 394 OFFCURVE",
"630 363 OFFCURVE",
"613 319 CURVE SMOOTH",
"595 272 OFFCURVE",
"584 244 OFFCURVE",
"579 236 CURVE",
"557 239 OFFCURVE",
"516 241 OFFCURVE",
"474 241 CURVE SMOOTH",
"419 241 OFFCURVE",
"362 237 OFFCURVE",
"340 226 CURVE SMOOTH",
"333 222 OFFCURVE",
"326 216 OFFCURVE",
"318 207 CURVE SMOOTH",
"313 201 OFFCURVE",
"310 197 OFFCURVE",
"310 194 CURVE SMOOTH",
"310 193 OFFCURVE",
"311 192 OFFCURVE",
"314 192 CURVE SMOOTH",
"317 192 OFFCURVE",
"321 193 OFFCURVE",
"327 194 CURVE",
"360 205 OFFCURVE",
"478 221 OFFCURVE",
"542 221 CURVE SMOOTH",
"553 221 OFFCURVE",
"562 220 OFFCURVE",
"569 219 CURVE",
"552 183 OFFCURVE",
"534 150 OFFCURVE",
"513 121 CURVE",
"506 122 OFFCURVE",
"499 122 OFFCURVE",
"493 122 CURVE SMOOTH",
"473 122 OFFCURVE",
"457 121 OFFCURVE",
"446 118 CURVE SMOOTH",
"430 113 OFFCURVE",
"410 103 OFFCURVE",
"410 98 CURVE SMOOTH",
"410 94 OFFCURVE",
"416 92 OFFCURVE",
"428 92 CURVE SMOOTH",
"436 92 LINE",
"494 95 LINE",
"473 70 OFFCURVE",
"450 48 OFFCURVE",
"426 31 CURVE SMOOTH",
"362 -15 OFFCURVE",
"283 -38 OFFCURVE",
"189 -38 CURVE SMOOTH",
"150 -38 OFFCURVE",
"121 -33 OFFCURVE",
"101 -19 CURVE SMOOTH",
"85 -9 OFFCURVE",
"77 4 OFFCURVE",
"77 21 CURVE SMOOTH",
"77 32 OFFCURVE",
"81 44 OFFCURVE",
"89 56 CURVE SMOOTH",
"123 104 OFFCURVE",
"189 128 OFFCURVE",
"289 128 CURVE SMOOTH",
"338 128 OFFCURVE",
"367 124 OFFCURVE",
"374 121 CURVE SMOOTH",
"378 119 OFFCURVE",
"381 118 OFFCURVE",
"384 118 CURVE SMOOTH",
"387 118 OFFCURVE",
"388 119 OFFCURVE",
"388 120 CURVE SMOOTH",
"388 123 OFFCURVE",
"384 127 OFFCURVE",
"375 131 CURVE SMOOTH",
"357 139 OFFCURVE",
"328 144 OFFCURVE",
"287 144 CURVE SMOOTH",
"165 144 OFFCURVE",
"89 117 OFFCURVE",
"60 61 CURVE SMOOTH",
"53 49 OFFCURVE",
"50 37 OFFCURVE",
"50 25 CURVE SMOOTH",
"50 2 OFFCURVE",
"62 -18 OFFCURVE",
"85 -33 CURVE SMOOTH",
"111 -51 OFFCURVE",
"151 -59 OFFCURVE",
"201 -59 CURVE",
"201 -59 LINE"
);
}
);
width = 718;
}
);
unicode = 20A3;
},
{
glyphname = guarani;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"256 -32 OFFCURVE",
"277 -31 OFFCURVE",
"298 -28 CURVE SMOOTH",
"336 -23 OFFCURVE",
"379 -13 OFFCURVE",
"441 24 CURVE SMOOTH",
"515 70 OFFCURVE",
"566 114 OFFCURVE",
"604 171 CURVE SMOOTH",
"616 189 OFFCURVE",
"620 208 OFFCURVE",
"613 208 CURVE SMOOTH",
"611 208 OFFCURVE",
"608 206 OFFCURVE",
"604 201 CURVE",
"563 133 OFFCURVE",
"452 29 OFFCURVE",
"296 -4 CURVE SMOOTH",
"278 -8 OFFCURVE",
"261 -7 OFFCURVE",
"244 -7 CURVE SMOOTH",
"109 -7 OFFCURVE",
"23 47 OFFCURVE",
"23 132 CURVE SMOOTH",
"23 179 OFFCURVE",
"52 239 OFFCURVE",
"84 274 CURVE",
"170 388 OFFCURVE",
"337 467 OFFCURVE",
"481 467 CURVE SMOOTH",
"520 467 OFFCURVE",
"551 461 OFFCURVE",
"574 449 CURVE SMOOTH",
"598 436 OFFCURVE",
"610 417 OFFCURVE",
"610 393 CURVE SMOOTH",
"610 380 OFFCURVE",
"607 367 OFFCURVE",
"600 353 CURVE SMOOTH",
"597 346 OFFCURVE",
"600 343 OFFCURVE",
"604 343 CURVE SMOOTH",
"610 343 OFFCURVE",
"619 348 OFFCURVE",
"623 357 CURVE",
"633 372 OFFCURVE",
"636 390 OFFCURVE",
"636 407 CURVE SMOOTH",
"636 432 OFFCURVE",
"626 453 OFFCURVE",
"607 469 CURVE SMOOTH",
"584 488 OFFCURVE",
"550 498 OFFCURVE",
"503 498 CURVE SMOOTH",
"354 498 OFFCURVE",
"164 422 OFFCURVE",
"65 298 CURVE SMOOTH",
"54 284 OFFCURVE",
"39 261 OFFCURVE",
"31 244 CURVE SMOOTH",
"13 208 OFFCURVE",
"4 174 OFFCURVE",
"4 142 CURVE SMOOTH",
"4 42 OFFCURVE",
"91 -32 OFFCURVE",
"237 -32 CURVE",
"237 -32 LINE"
);
},
{
closed = 1;
nodes = (
"117 -116 OFFCURVE",
"126 -110 OFFCURVE",
"131 -100 CURVE",
"566 569 LINE SMOOTH",
"568 572 OFFCURVE",
"568 575 OFFCURVE",
"568 578 CURVE SMOOTH",
"568 583 OFFCURVE",
"565 585 OFFCURVE",
"561 585 CURVE SMOOTH",
"554 585 OFFCURVE",
"544 579 OFFCURVE",
"539 569 CURVE",
"104 -100 LINE SMOOTH",
"102 -103 OFFCURVE",
"102 -106 OFFCURVE",
"102 -109 CURVE SMOOTH",
"102 -114 OFFCURVE",
"105 -116 OFFCURVE",
"110 -116 CURVE",
"110 -116 LINE"
);
},
{
closed = 1;
nodes = (
"606 187 OFFCURVE",
"624 189 OFFCURVE",
"623 194 CURVE",
"624 212 OFFCURVE",
"613 218 OFFCURVE",
"472 218 CURVE SMOOTH",
"436 218 OFFCURVE",
"378 216 OFFCURVE",
"295 212 CURVE SMOOTH",
"261 210 OFFCURVE",
"245 208 OFFCURVE",
"245 204 CURVE SMOOTH",
"245 200 OFFCURVE",
"261 198 OFFCURVE",
"295 198 CURVE SMOOTH",
"355 197 OFFCURVE",
"401 195 OFFCURVE",
"436 193 CURVE SMOOTH",
"473 191 OFFCURVE",
"521 189 OFFCURVE",
"576 188 CURVE",
"576 188 LINE"
);
}
);
width = 600;
}
);
unicode = 20B2;
},
{
glyphname = kip;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"55 -11 OFFCURVE",
"62 -8 OFFCURVE",
"71 -3 CURVE",
"66 3 OFFCURVE",
"64 13 OFFCURVE",
"64 27 CURVE SMOOTH",
"64 80 OFFCURVE",
"94 181 OFFCURVE",
"121 246 CURVE",
"139 175 OFFCURVE",
"220 9 OFFCURVE",
"291 9 CURVE SMOOTH",
"316 9 OFFCURVE",
"347 28 OFFCURVE",
"383 50 CURVE SMOOTH",
"389 54 OFFCURVE",
"394 59 OFFCURVE",
"394 62 CURVE SMOOTH",
"394 63 OFFCURVE",
"394 64 OFFCURVE",
"392 64 CURVE SMOOTH",
"390 64 OFFCURVE",
"385 63 OFFCURVE",
"377 58 CURVE SMOOTH",
"357 45 OFFCURVE",
"339 39 OFFCURVE",
"322 39 CURVE SMOOTH",
"289 39 OFFCURVE",
"259 63 OFFCURVE",
"224 108 CURVE SMOOTH",
"200 139 OFFCURVE",
"150 205 OFFCURVE",
"138 297 CURVE",
"166 373 OFFCURVE",
"211 454 OFFCURVE",
"245 524 CURVE",
"248 547 OFFCURVE",
"240 557 OFFCURVE",
"230 557 CURVE SMOOTH",
"220 557 OFFCURVE",
"206 545 OFFCURVE",
"197 524 CURVE SMOOTH",
"173 470 OFFCURVE",
"147 404 OFFCURVE",
"117 327 CURVE SMOOTH",
"72 213 OFFCURVE",
"41 122 OFFCURVE",
"23 56 CURVE SMOOTH",
"21 50 OFFCURVE",
"19 42 OFFCURVE",
"19 33 CURVE SMOOTH",
"19 4 OFFCURVE",
"28 -11 OFFCURVE",
"47 -11 CURVE",
"47 -11 LINE"
);
},
{
closed = 1;
nodes = (
"59 253 LINE SMOOTH",
"204 260 OFFCURVE",
"249 263 OFFCURVE",
"322 263 CURVE SMOOTH",
"336 263 OFFCURVE",
"345 265 OFFCURVE",
"345 270 CURVE SMOOTH",
"345 279 OFFCURVE",
"302 283 OFFCURVE",
"245 283 CURVE SMOOTH",
"59 283 LINE SMOOTH",
"46 283 OFFCURVE",
"37 279 OFFCURVE",
"37 271 CURVE SMOOTH",
"37 260 OFFCURVE",
"45 253 OFFCURVE",
"57 253 CURVE",
"57 253 LINE"
);
},
{
closed = 1;
nodes = (
"129 264 LINE",
"148 286 OFFCURVE",
"160 297 OFFCURVE",
"186 322 CURVE SMOOTH",
"235 370 OFFCURVE",
"276 388 OFFCURVE",
"308 388 CURVE SMOOTH",
"328 388 OFFCURVE",
"350 370 OFFCURVE",
"350 345 CURVE SMOOTH",
"349 332 OFFCURVE",
"350 327 OFFCURVE",
"358 327 CURVE SMOOTH",
"369 327 OFFCURVE",
"380 365 OFFCURVE",
"380 383 CURVE SMOOTH",
"380 409 OFFCURVE",
"363 429 OFFCURVE",
"333 429 CURVE SMOOTH",
"301 429 OFFCURVE",
"261 408 OFFCURVE",
"216 368 CURVE SMOOTH",
"183 337 OFFCURVE",
"149 302 OFFCURVE",
"116 266 CURVE",
"129 264 LINE"
);
}
);
width = 431;
}
);
unicode = 20AD;
},
{
glyphname = lira;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"653 -118 OFFCURVE",
"694 -90 OFFCURVE",
"694 -34 CURVE SMOOTH",
"694 -15 OFFCURVE",
"680 5 OFFCURVE",
"651 27 CURVE SMOOTH",
"650 28 OFFCURVE",
"648 29 OFFCURVE",
"646 29 CURVE SMOOTH",
"644 29 OFFCURVE",
"642 28 OFFCURVE",
"643 25 CURVE SMOOTH",
"644 20 LINE",
"651 12 OFFCURVE",
"657 3 OFFCURVE",
"664 -6 CURVE SMOOTH",
"672 -16 OFFCURVE",
"676 -26 OFFCURVE",
"676 -35 CURVE SMOOTH",
"676 -70 OFFCURVE",
"648 -88 OFFCURVE",
"593 -88 CURVE SMOOTH",
"536 -88 OFFCURVE",
"449 -62 OFFCURVE",
"331 -9 CURVE",
"378 22 OFFCURVE",
"405 82 OFFCURVE",
"451 210 CURVE SMOOTH",
"481 295 OFFCURVE",
"508 363 OFFCURVE",
"531 412 CURVE SMOOTH",
"558 471 OFFCURVE",
"609 534 OFFCURVE",
"656 534 CURVE SMOOTH",
"686 534 OFFCURVE",
"701 508 OFFCURVE",
"701 456 CURVE SMOOTH",
"701 400 OFFCURVE",
"687 333 OFFCURVE",
"659 286 CURVE",
"656 279 OFFCURVE",
"658 276 OFFCURVE",
"662 276 CURVE SMOOTH",
"667 276 OFFCURVE",
"675 281 OFFCURVE",
"683 290 CURVE",
"713 339 OFFCURVE",
"728 395 OFFCURVE",
"728 459 CURVE SMOOTH",
"728 514 OFFCURVE",
"704 549 OFFCURVE",
"662 549 CURVE SMOOTH",
"578 549 OFFCURVE",
"518 495 OFFCURVE",
"482 412 CURVE SMOOTH",
"472 388 OFFCURVE",
"457 346 OFFCURVE",
"438 285 CURVE SMOOTH",
"404 179 OFFCURVE",
"351 13 OFFCURVE",
"305 5 CURVE",
"281 20 OFFCURVE",
"238 53 OFFCURVE",
"186 94 CURVE SMOOTH",
"157 117 OFFCURVE",
"135 133 OFFCURVE",
"118 143 CURVE SMOOTH",
"97 155 OFFCURVE",
"77 161 OFFCURVE",
"60 161 CURVE SMOOTH",
"47 161 OFFCURVE",
"34 157 OFFCURVE",
"24 149 CURVE SMOOTH",
"4 134 OFFCURVE",
"-6 110 OFFCURVE",
"-6 76 CURVE SMOOTH",
"-6 46 OFFCURVE",
"2 21 OFFCURVE",
"18 0 CURVE SMOOTH",
"35 -22 OFFCURVE",
"59 -39 OFFCURVE",
"92 -50 CURVE SMOOTH",
"120 -60 OFFCURVE",
"149 -65 OFFCURVE",
"180 -65 CURVE SMOOTH",
"221 -65 OFFCURVE",
"264 -53 OFFCURVE",
"309 -24 CURVE",
"388 -65 OFFCURVE",
"430 -86 OFFCURVE",
"435 -88 CURVE SMOOTH",
"482 -108 OFFCURVE",
"527 -118 OFFCURVE",
"570 -118 CURVE",
"570 -118 LINE"
);
},
{
closed = 1;
nodes = (
"134 -44 OFFCURVE",
"108 -39 OFFCURVE",
"85 -29 CURVE SMOOTH",
"36 -8 OFFCURVE",
"11 40 OFFCURVE",
"11 73 CURVE SMOOTH",
"11 102 OFFCURVE",
"25 116 OFFCURVE",
"54 116 CURVE SMOOTH",
"76 116 OFFCURVE",
"108 103 OFFCURVE",
"149 76 CURVE",
"177 54 OFFCURVE",
"240 8 OFFCURVE",
"275 -13 CURVE",
"242 -34 OFFCURVE",
"205 -44 OFFCURVE",
"163 -44 CURVE",
"163 -44 LINE"
);
},
{
closed = 1;
nodes = (
"385 128 LINE SMOOTH",
"430 131 OFFCURVE",
"473 133 OFFCURVE",
"517 133 CURVE SMOOTH",
"527 133 OFFCURVE",
"533 135 OFFCURVE",
"533 140 CURVE SMOOTH",
"533 148 OFFCURVE",
"503.006 152 OFFCURVE",
"445 152 CURVE SMOOTH",
"317 152 LINE SMOOTH",
"307 152 OFFCURVE",
"302 148 OFFCURVE",
"302 140 CURVE SMOOTH",
"302 128 OFFCURVE",
"307 122 OFFCURVE",
"317 122 CURVE",
"317 122 LINE"
);
},
{
closed = 1;
nodes = (
"385 190 LINE SMOOTH",
"430 193 OFFCURVE",
"473 195 OFFCURVE",
"517 195 CURVE SMOOTH",
"527 195 OFFCURVE",
"533 197 OFFCURVE",
"533 202 CURVE SMOOTH",
"533 211 OFFCURVE",
"503.006 215 OFFCURVE",
"445 215 CURVE SMOOTH",
"317 215 LINE SMOOTH",
"307 215 OFFCURVE",
"302 211 OFFCURVE",
"302 203 CURVE SMOOTH",
"302 191 OFFCURVE",
"307 185 OFFCURVE",
"317 185 CURVE",
"317 185 LINE"
);
}
);
width = 701;
}
);
unicode = 20A4;
},
{
glyphname = liraTurkish;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"196 0 OFFCURVE",
"287 67 OFFCURVE",
"391 225 CURVE",
"398 234 OFFCURVE",
"401 244 OFFCURVE",
"401 250 CURVE SMOOTH",
"401 256 OFFCURVE",
"399 259 OFFCURVE",
"396 259 CURVE SMOOTH",
"392 259 OFFCURVE",
"387 255 OFFCURVE",
"382 245 CURVE SMOOTH",
"340 168 OFFCURVE",
"226 66 OFFCURVE",
"188 42 CURVE SMOOTH",
"165 27 OFFCURVE",
"146 19 OFFCURVE",
"132 19 CURVE SMOOTH",
"111 19 OFFCURVE",
"101 36 OFFCURVE",
"101 69 CURVE SMOOTH",
"101 152 OFFCURVE",
"203 367 OFFCURVE",
"273 486 CURVE SMOOTH",
"291 518 OFFCURVE",
"308 533 OFFCURVE",
"322 533 CURVE SMOOTH",
"331 533 OFFCURVE",
"336 527 OFFCURVE",
"336 513 CURVE SMOOTH",
"336 504 OFFCURVE",
"341 499 OFFCURVE",
"346 499 CURVE SMOOTH",
"351 499 OFFCURVE",
"356 503 OFFCURVE",
"356 512 CURVE SMOOTH",
"356 539 OFFCURVE",
"348 553 OFFCURVE",
"325 553 CURVE SMOOTH",
"284 553 OFFCURVE",
"233 498 OFFCURVE",
"174 388 CURVE SMOOTH",
"128 305 OFFCURVE",
"97 233 OFFCURVE",
"80 175 CURVE SMOOTH",
"69 130 OFFCURVE",
"62 96 OFFCURVE",
"62 72 CURVE SMOOTH",
"62 24 OFFCURVE",
"83 0 OFFCURVE",
"123 0 CURVE",
"123 0 LINE"
);
},
{
closed = 1;
nodes = (
"42 172 OFFCURVE",
"44 172 OFFCURVE",
"46 173 CURVE SMOOTH",
"109 197 LINE SMOOTH",
"152 212 OFFCURVE",
"193 226 OFFCURVE",
"235 238 CURVE SMOOTH",
"244 241 OFFCURVE",
"248 244 OFFCURVE",
"248 247 CURVE SMOOTH",
"248 249 LINE",
"247 252 OFFCURVE",
"244 253 OFFCURVE",
"237 253 CURVE SMOOTH",
"224 253 OFFCURVE",
"198 248 OFFCURVE",
"161 237 CURVE SMOOTH",
"38 202 LINE SMOOTH",
"30 200 OFFCURVE",
"26 195 OFFCURVE",
"26 189 CURVE",
"25 188 OFFCURVE",
"26 187 OFFCURVE",
"26 186 CURVE",
"29 177 OFFCURVE",
"34 172 OFFCURVE",
"41 172 CURVE",
"41 172 LINE"
);
},
{
closed = 1;
nodes = (
"52 260 OFFCURVE",
"54 260 OFFCURVE",
"56 261 CURVE SMOOTH",
"119 285 LINE SMOOTH",
"162 301 OFFCURVE",
"203 314 OFFCURVE",
"245 326 CURVE SMOOTH",
"254 329 OFFCURVE",
"258 331 OFFCURVE",
"258 335 CURVE SMOOTH",
"258 337 LINE",
"257 340 OFFCURVE",
"254 341 OFFCURVE",
"247 341 CURVE SMOOTH",
"233 341 OFFCURVE",
"208 336 OFFCURVE",
"171 325 CURVE SMOOTH",
"47 290 LINE SMOOTH",
"40 288 OFFCURVE",
"35 284 OFFCURVE",
"35 278 CURVE",
"36 274 LINE SMOOTH",
"38 265 OFFCURVE",
"43 260 OFFCURVE",
"50 260 CURVE",
"50 260 LINE"
);
}
);
width = 351;
}
);
unicode = 20BA;
},
{
glyphname = manat;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"522 0 OFFCURVE",
"539 12 OFFCURVE",
"544 24 CURVE",
"564 92 OFFCURVE",
"593 222 OFFCURVE",
"593 329 CURVE SMOOTH",
"593 477 OFFCURVE",
"531 537 OFFCURVE",
"426 537 CURVE SMOOTH",
"365 537 OFFCURVE",
"300 513 OFFCURVE",
"232 460 CURVE SMOOTH",
"161 405 OFFCURVE",
"110 336 OFFCURVE",
"80 253 CURVE SMOOTH",
"64 207 OFFCURVE",
"55 162 OFFCURVE",
"55 117 CURVE SMOOTH",
"55 68 OFFCURVE",
"74 12 OFFCURVE",
"88 2 CURVE SMOOTH",
"101 -8 OFFCURVE",
"92 6 OFFCURVE",
"92 92 CURVE SMOOTH",
"92 140 OFFCURVE",
"103 189 OFFCURVE",
"124 240 CURVE SMOOTH",
"153 310 OFFCURVE",
"193 370 OFFCURVE",
"243 420 CURVE SMOOTH",
"298 477 OFFCURVE",
"356 510 OFFCURVE",
"414 517 CURVE SMOOTH",
"422 518 OFFCURVE",
"429 518 OFFCURVE",
"437 518 CURVE SMOOTH",
"507 518 OFFCURVE",
"543 474 OFFCURVE",
"558 370 CURVE",
"558 306 OFFCURVE",
"551 239 OFFCURVE",
"536 166 CURVE SMOOTH",
"524 99 OFFCURVE",
"510 47 OFFCURVE",
"491 8 CURVE",
"494 3 OFFCURVE",
"501 0 OFFCURVE",
"506 0 CURVE",
"506 0 LINE"
);
},
{
closed = 1;
nodes = (
"306 -31 OFFCURVE",
"316 -24 OFFCURVE",
"316 -14 CURVE",
"451 579 LINE",
"451 586 OFFCURVE",
"448 589 OFFCURVE",
"443 589 CURVE SMOOTH",
"435 589 OFFCURVE",
"424 581 OFFCURVE",
"424 570 CURVE",
"289 -21 LINE",
"289 -28 OFFCURVE",
"293 -31 OFFCURVE",
"298 -31 CURVE",
"298 -31 LINE"
);
}
);
width = 600;
}
);
unicode = 20BC;
},
{
glyphname = naira;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"369 -140 OFFCURVE",
"381 -138 OFFCURVE",
"394 -133 CURVE SMOOTH",
"409 -128 OFFCURVE",
"422 -120 OFFCURVE",
"432 -110 CURVE SMOOTH",
"439 -103 OFFCURVE",
"442 -96 OFFCURVE",
"442 -89 CURVE SMOOTH",
"442 -86 OFFCURVE",
"441 -86 OFFCURVE",
"438 -87 CURVE",
"438 -95 OFFCURVE",
"403 -114 OFFCURVE",
"388 -114 CURVE SMOOTH",
"365 -114 OFFCURVE",
"353 -95 OFFCURVE",
"353 -58 CURVE SMOOTH",
"353 -17 OFFCURVE",
"366 44 OFFCURVE",
"393 123 CURVE SMOOTH",
"409 170 OFFCURVE",
"441 244 OFFCURVE",
"490 344 CURVE SMOOTH",
"505 375 OFFCURVE",
"513 400 OFFCURVE",
"513 421 CURVE SMOOTH",
"513 443 OFFCURVE",
"503 454 OFFCURVE",
"484 454 CURVE SMOOTH",
"477 454 OFFCURVE",
"468 452 OFFCURVE",
"458 449 CURVE SMOOTH",
"441 444 OFFCURVE",
"416 430 OFFCURVE",
"385 408 CURVE SMOOTH",
"311 355 OFFCURVE",
"225 270 OFFCURVE",
"127 154 CURVE",
"161 258 OFFCURVE",
"178 337 OFFCURVE",
"178 390 CURVE SMOOTH",
"178 464 OFFCURVE",
"151 506 OFFCURVE",
"98 518 CURVE SMOOTH",
"90 519 OFFCURVE",
"86 518 OFFCURVE",
"86 516 CURVE SMOOTH",
"86 513 OFFCURVE",
"90 509 OFFCURVE",
"101 504 CURVE SMOOTH",
"130 491 OFFCURVE",
"147 457 OFFCURVE",
"147 411 CURVE SMOOTH",
"147 351 OFFCURVE",
"129 263 OFFCURVE",
"83 150 CURVE SMOOTH",
"39 41 OFFCURVE",
"32 24 OFFCURVE",
"27 9 CURVE SMOOTH",
"23 0 OFFCURVE",
"21 -7 OFFCURVE",
"21 -13 CURVE SMOOTH",
"21 -18 OFFCURVE",
"23 -21 OFFCURVE",
"28 -21 CURVE SMOOTH",
"33 -21 OFFCURVE",
"39 -18 OFFCURVE",
"48 -12 CURVE SMOOTH",
"56 -7 OFFCURVE",
"61 -2 OFFCURVE",
"63 1 CURVE SMOOTH",
"82 36 OFFCURVE",
"96 62 OFFCURVE",
"105 81 CURVE",
"135 128 OFFCURVE",
"165 167 OFFCURVE",
"208 213 CURVE SMOOTH",
"231 237 OFFCURVE",
"267 273 OFFCURVE",
"318 321 CURVE SMOOTH",
"355 356 OFFCURVE",
"392 385 OFFCURVE",
"429 408 CURVE SMOOTH",
"440 415 OFFCURVE",
"449 418 OFFCURVE",
"456 418 CURVE SMOOTH",
"464 418 OFFCURVE",
"468 413 OFFCURVE",
"468 402 CURVE SMOOTH",
"468 396 OFFCURVE",
"466 388 OFFCURVE",
"463 377 CURVE",
"426 276 OFFCURVE",
"395 195 OFFCURVE",
"372 134 CURVE SMOOTH",
"340 47 LINE SMOOTH",
"322 -1 OFFCURVE",
"317 -41 OFFCURVE",
"317 -71 CURVE SMOOTH",
"317 -112 OFFCURVE",
"331 -134 OFFCURVE",
"360 -139 CURVE",
"360 -139 LINE"
);
},
{
closed = 1;
nodes = (
"208 186 LINE SMOOTH",
"302 189 OFFCURVE",
"393 191 OFFCURVE",
"482 191 CURVE SMOOTH",
"503 191 OFFCURVE",
"516 193 OFFCURVE",
"516 198 CURVE SMOOTH",
"516 206 OFFCURVE",
"453 210 OFFCURVE",
"335 210 CURVE SMOOTH",
"67 210 LINE SMOOTH",
"48 210 OFFCURVE",
"36 206 OFFCURVE",
"36 198 CURVE SMOOTH",
"36 186 OFFCURVE",
"48 180 OFFCURVE",
"67 180 CURVE",
"67 180 LINE"
);
},
{
closed = 1;
nodes = (
"231 280 LINE SMOOTH",
"325 283 OFFCURVE",
"416 285 OFFCURVE",
"505 285 CURVE SMOOTH",
"526 285 OFFCURVE",
"539 287 OFFCURVE",
"539 292 CURVE SMOOTH",
"539 301 OFFCURVE",
"476 305 OFFCURVE",
"358 305 CURVE SMOOTH",
"90 305 LINE SMOOTH",
"71 305 OFFCURVE",
"59 301 OFFCURVE",
"59 293 CURVE SMOOTH",
"59 281 OFFCURVE",
"71 274 OFFCURVE",
"90 275 CURVE",
"90 275 LINE"
);
}
);
width = 480;
}
);
unicode = 20A6;
},
{
glyphname = peseta;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"158 -61 OFFCURVE",
"160 -59 OFFCURVE",
"160 -56 CURVE SMOOTH",
"160 -52 OFFCURVE",
"158 -49 OFFCURVE",
"155 -49 CURVE SMOOTH",
"153 -49 OFFCURVE",
"152 -50 OFFCURVE",
"150 -50 CURVE",
"143 -52 LINE SMOOTH",
"129 -56 OFFCURVE",
"117 -44 OFFCURVE",
"110 -30 CURVE SMOOTH",
"102 -17 OFFCURVE",
"99 -2 OFFCURVE",
"99 16 CURVE SMOOTH",
"99 42 OFFCURVE",
"115 88 OFFCURVE",
"147 153 CURVE",
"163 152 OFFCURVE",
"180 151 OFFCURVE",
"197 151 CURVE SMOOTH",
"298 151 OFFCURVE",
"464 198 OFFCURVE",
"547 260 CURVE SMOOTH",
"602 300 OFFCURVE",
"630 344 OFFCURVE",
"630 393 CURVE SMOOTH",
"630 453 OFFCURVE",
"574 490 OFFCURVE",
"463 504 CURVE SMOOTH",
"433 507 OFFCURVE",
"401 509 OFFCURVE",
"368 509 CURVE SMOOTH",
"322 509 OFFCURVE",
"281 506 OFFCURVE",
"246 500 CURVE SMOOTH",
"191 490 LINE SMOOTH",
"159 483 OFFCURVE",
"147 475 OFFCURVE",
"147 469 CURVE SMOOTH",
"147 463 OFFCURVE",
"156 459 OFFCURVE",
"171 459 CURVE SMOOTH",
"176 459 OFFCURVE",
"182 460 OFFCURVE",
"188 461 CURVE SMOOTH",
"218 468 OFFCURVE",
"240 472 OFFCURVE",
"256 475 CURVE SMOOTH",
"290 484 OFFCURVE",
"333 487 OFFCURVE",
"384 487 CURVE SMOOTH",
"412 487 OFFCURVE",
"437 486 OFFCURVE",
"460 484 CURVE SMOOTH",
"548 474 OFFCURVE",
"591 444 OFFCURVE",
"591 396 CURVE SMOOTH",
"591 331 OFFCURVE",
"509 252 OFFCURVE",
"388 205 CURVE SMOOTH",
"322 179 OFFCURVE",
"254 166 OFFCURVE",
"184 166 CURVE SMOOTH",
"174 166 OFFCURVE",
"163 167 OFFCURVE",
"155 168 CURVE",
"191 242 OFFCURVE",
"269 379 OFFCURVE",
"309 419 CURVE",
"312 423 OFFCURVE",
"313 425 OFFCURVE",
"313 427 CURVE SMOOTH",
"313 433 OFFCURVE",
"308 437 OFFCURVE",
"296 437 CURVE SMOOTH",
"278 437 OFFCURVE",
"266 431 OFFCURVE",
"258 419 CURVE SMOOTH",
"246 403 OFFCURVE",
"174 289 OFFCURVE",
"121 175 CURVE",
"111 178 OFFCURVE",
"101 181 OFFCURVE",
"92 186 CURVE",
"89 187 OFFCURVE",
"86 188 OFFCURVE",
"84 188 CURVE SMOOTH",
"78 188 OFFCURVE",
"73 184 OFFCURVE",
"73 180 CURVE SMOOTH",
"73 175 OFFCURVE",
"77 171 OFFCURVE",
"86 167 CURVE SMOOTH",
"94 164 OFFCURVE",
"104 162 OFFCURVE",
"114 160 CURVE",
"87 95 OFFCURVE",
"74 46 OFFCURVE",
"75 12 CURVE SMOOTH",
"79 -34 OFFCURVE",
"107 -64 OFFCURVE",
"155 -61 CURVE",
"155 -61 LINE"
);
},
{
closed = 1;
nodes = (
"303 311 LINE SMOOTH",
"415 314 OFFCURVE",
"524 316 OFFCURVE",
"630 316 CURVE SMOOTH",
"655 316 OFFCURVE",
"671 318 OFFCURVE",
"671 323 CURVE SMOOTH",
"671 331 OFFCURVE",
"596 335 OFFCURVE",
"455 335 CURVE SMOOTH",
"135 335 LINE SMOOTH",
"112 335 OFFCURVE",
"98 331 OFFCURVE",
"98 323 CURVE SMOOTH",
"98 311 OFFCURVE",
"112 305 OFFCURVE",
"135 305 CURVE",
"135 305 LINE"
);
}
);
width = 641;
}
);
unicode = 20A7;
},
{
glyphname = peso;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"103 -61 OFFCURVE",
"105 -59 OFFCURVE",
"105 -56 CURVE SMOOTH",
"105 -52 OFFCURVE",
"103 -49 OFFCURVE",
"100 -49 CURVE SMOOTH",
"98 -49 OFFCURVE",
"97 -50 OFFCURVE",
"95 -50 CURVE",
"88 -52 LINE SMOOTH",
"74 -56 OFFCURVE",
"62 -44 OFFCURVE",
"55 -30 CURVE SMOOTH",
"47 -17 OFFCURVE",
"44 -2 OFFCURVE",
"44 16 CURVE SMOOTH",
"44 42 OFFCURVE",
"60 88 OFFCURVE",
"92 153 CURVE",
"108 152 OFFCURVE",
"125 151 OFFCURVE",
"142 151 CURVE SMOOTH",
"243 151 OFFCURVE",
"409 198 OFFCURVE",
"492 260 CURVE SMOOTH",
"547 300 OFFCURVE",
"575 344 OFFCURVE",
"575 393 CURVE SMOOTH",
"575 453 OFFCURVE",
"519 490 OFFCURVE",
"408 504 CURVE SMOOTH",
"378 507 OFFCURVE",
"346 509 OFFCURVE",
"313 509 CURVE SMOOTH",
"267 509 OFFCURVE",
"226 506 OFFCURVE",
"191 500 CURVE SMOOTH",
"136 490 LINE SMOOTH",
"104 483 OFFCURVE",
"92 475 OFFCURVE",
"92 469 CURVE SMOOTH",
"92 463 OFFCURVE",
"101 459 OFFCURVE",
"116 459 CURVE SMOOTH",
"121 459 OFFCURVE",
"127 460 OFFCURVE",
"133 461 CURVE SMOOTH",
"163 468 OFFCURVE",
"185 472 OFFCURVE",
"201 475 CURVE SMOOTH",
"235 484 OFFCURVE",
"278 487 OFFCURVE",
"329 487 CURVE SMOOTH",
"357 487 OFFCURVE",
"382 486 OFFCURVE",
"405 484 CURVE SMOOTH",
"493 474 OFFCURVE",
"536 444 OFFCURVE",
"536 396 CURVE SMOOTH",
"536 331 OFFCURVE",
"454 252 OFFCURVE",
"333 205 CURVE SMOOTH",
"267 179 OFFCURVE",
"199 166 OFFCURVE",
"129 166 CURVE SMOOTH",
"119 166 OFFCURVE",
"108 167 OFFCURVE",
"100 168 CURVE",
"136 242 OFFCURVE",
"214 379 OFFCURVE",
"254 419 CURVE",
"257 423 OFFCURVE",
"258 425 OFFCURVE",
"258 427 CURVE SMOOTH",
"258 433 OFFCURVE",
"253 437 OFFCURVE",
"241 437 CURVE SMOOTH",
"223 437 OFFCURVE",
"211 431 OFFCURVE",
"203 419 CURVE SMOOTH",
"191 403 OFFCURVE",
"119 289 OFFCURVE",
"66 175 CURVE",
"56 178 OFFCURVE",
"46 181 OFFCURVE",
"37 186 CURVE",
"34 187 OFFCURVE",
"31 188 OFFCURVE",
"29 188 CURVE SMOOTH",
"23 188 OFFCURVE",
"18 184 OFFCURVE",
"18 180 CURVE SMOOTH",
"18 175 OFFCURVE",
"22 171 OFFCURVE",
"31 167 CURVE SMOOTH",
"39 164 OFFCURVE",
"49 162 OFFCURVE",
"59 160 CURVE",
"32 95 OFFCURVE",
"19 46 OFFCURVE",
"20 12 CURVE SMOOTH",
"24 -34 OFFCURVE",
"52 -64 OFFCURVE",
"100 -61 CURVE",
"100 -61 LINE"
);
},
{
closed = 1;
nodes = (
"241 262 LINE SMOOTH",
"353 265 OFFCURVE",
"462 267 OFFCURVE",
"568 267 CURVE SMOOTH",
"593 267 OFFCURVE",
"609 269 OFFCURVE",
"609 274 CURVE SMOOTH",
"609 282 OFFCURVE",
"534 286 OFFCURVE",
"393 286 CURVE SMOOTH",
"73 286 LINE SMOOTH",
"50 286 OFFCURVE",
"36 282 OFFCURVE",
"36 274 CURVE SMOOTH",
"36 262 OFFCURVE",
"50 256 OFFCURVE",
"73 256 CURVE",
"73 256 LINE"
);
},
{
closed = 1;
nodes = (
"269 356 LINE SMOOTH",
"381 359 OFFCURVE",
"489 361 OFFCURVE",
"596 361 CURVE SMOOTH",
"621 361 OFFCURVE",
"636 363 OFFCURVE",
"636 368 CURVE SMOOTH",
"636 377 OFFCURVE",
"561 381 OFFCURVE",
"420 381 CURVE SMOOTH",
"100 381 LINE SMOOTH",
"78 381 OFFCURVE",
"63 377 OFFCURVE",
"63 369 CURVE SMOOTH",
"63 357 OFFCURVE",
"78 350 OFFCURVE",
"100 351 CURVE",
"100 351 LINE"
);
}
);
width = 586;
}
);
unicode = 20B1;
},
{
glyphname = ruble;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
components = (
{
name = hyphen;
transform = "{1, 0, 0, 1, -16, -49}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"158 -67 OFFCURVE",
"160 -65 OFFCURVE",
"160 -62 CURVE SMOOTH",
"160 -58 OFFCURVE",
"158 -55 OFFCURVE",
"155 -55 CURVE SMOOTH",
"153 -55 OFFCURVE",
"152 -56 OFFCURVE",
"150 -56 CURVE",
"143 -58 LINE SMOOTH",
"129 -62 OFFCURVE",
"117 -50 OFFCURVE",
"110 -36 CURVE SMOOTH",
"102 -23 OFFCURVE",
"99 -8 OFFCURVE",
"99 10 CURVE SMOOTH",
"99 36 OFFCURVE",
"115 82 OFFCURVE",
"147 147 CURVE",
"163 146 OFFCURVE",
"180 145 OFFCURVE",
"197 145 CURVE SMOOTH",
"298 145 OFFCURVE",
"464 192 OFFCURVE",
"547 254 CURVE SMOOTH",
"602 294 OFFCURVE",
"630 338 OFFCURVE",
"630 387 CURVE SMOOTH",
"630 447 OFFCURVE",
"574 484 OFFCURVE",
"463 498 CURVE SMOOTH",
"433 501 OFFCURVE",
"401 503 OFFCURVE",
"368 503 CURVE SMOOTH",
"322 503 OFFCURVE",
"281 500 OFFCURVE",
"246 494 CURVE SMOOTH",
"191 484 LINE SMOOTH",
"159 477 OFFCURVE",
"147 469 OFFCURVE",
"147 463 CURVE SMOOTH",
"147 457 OFFCURVE",
"156 453 OFFCURVE",
"171 453 CURVE SMOOTH",
"176 453 OFFCURVE",
"182 454 OFFCURVE",
"188 455 CURVE SMOOTH",
"218 462 OFFCURVE",
"240 466 OFFCURVE",
"256 469 CURVE SMOOTH",
"290 478 OFFCURVE",
"333 481 OFFCURVE",
"384 481 CURVE SMOOTH",
"412 481 OFFCURVE",
"437 480 OFFCURVE",
"460 478 CURVE SMOOTH",
"548 468 OFFCURVE",
"591 438 OFFCURVE",
"591 390 CURVE SMOOTH",
"591 325 OFFCURVE",
"509 246 OFFCURVE",
"388 199 CURVE SMOOTH",
"322 173 OFFCURVE",
"254 160 OFFCURVE",
"184 160 CURVE SMOOTH",
"174 160 OFFCURVE",
"163 161 OFFCURVE",
"155 162 CURVE",
"191 236 OFFCURVE",
"269 373 OFFCURVE",
"309 413 CURVE",
"312 417 OFFCURVE",
"313 419 OFFCURVE",
"313 421 CURVE SMOOTH",
"313 427 OFFCURVE",
"308 431 OFFCURVE",
"296 431 CURVE SMOOTH",
"278 431 OFFCURVE",
"266 425 OFFCURVE",
"258 413 CURVE SMOOTH",
"246 397 OFFCURVE",
"172 281 OFFCURVE",
"119 167 CURVE",
"96 167 OFFCURVE",
"43 177 OFFCURVE",
"31 180 CURVE SMOOTH",
"24 182 OFFCURVE",
"18 180 OFFCURVE",
"18 176 CURVE SMOOTH",
"18 173 OFFCURVE",
"22 169 OFFCURVE",
"33 165 CURVE SMOOTH",
"41 162 OFFCURVE",
"88 150 OFFCURVE",
"112 150 CURVE",
"85 85 OFFCURVE",
"74 40 OFFCURVE",
"75 6 CURVE SMOOTH",
"79 -40 OFFCURVE",
"107 -70 OFFCURVE",
"155 -67 CURVE",
"155 -67 LINE"
);
}
);
width = 600;
}
);
unicode = 20BD;
},
{
glyphname = rupeeIndian;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"534 -78 OFFCURVE",
"538 -73 OFFCURVE",
"541 -64 CURVE SMOOTH",
"546 -44 OFFCURVE",
"549 -25 OFFCURVE",
"549 -6 CURVE SMOOTH",
"549 65 OFFCURVE",
"507 124 OFFCURVE",
"424 169 CURVE",
"443 176 OFFCURVE",
"460 183 OFFCURVE",
"477 190 CURVE SMOOTH",
"531 214 OFFCURVE",
"573 244 OFFCURVE",
"604 279 CURVE SMOOTH",
"633 312 OFFCURVE",
"648 346 OFFCURVE",
"648 379 CURVE SMOOTH",
"648 419 OFFCURVE",
"627 451 OFFCURVE",
"586 476 CURVE SMOOTH",
"544 500 OFFCURVE",
"487 512 OFFCURVE",
"413 512 CURVE SMOOTH",
"382 512 OFFCURVE",
"346 510 OFFCURVE",
"308 506 CURVE",
"297 489 LINE",
"342 495 OFFCURVE",
"383 500 OFFCURVE",
"421 500 CURVE SMOOTH",
"478 500 OFFCURVE",
"522 490 OFFCURVE",
"554 471 CURVE SMOOTH",
"588 452 OFFCURVE",
"605 424 OFFCURVE",
"605 389 CURVE SMOOTH",
"605 360 OFFCURVE",
"593 330 OFFCURVE",
"568 299 CURVE SMOOTH",
"543 267 OFFCURVE",
"508 239 OFFCURVE",
"463 216 CURVE SMOOTH",
"441 205 OFFCURVE",
"417 194 OFFCURVE",
"391 185 CURVE",
"340 208 OFFCURVE",
"226 251 OFFCURVE",
"125 251 CURVE SMOOTH",
"82 251 OFFCURVE",
"33 246 OFFCURVE",
"33 211 CURVE SMOOTH",
"33 179 OFFCURVE",
"79 141 OFFCURVE",
"171 134 CURVE SMOOTH",
"182 133 OFFCURVE",
"193 133 OFFCURVE",
"204 133 CURVE SMOOTH",
"251 133 OFFCURVE",
"303 139 OFFCURVE",
"344 148 CURVE SMOOTH",
"367 153 LINE",
"476 98 OFFCURVE",
"530 37 OFFCURVE",
"530 -31 CURVE SMOOTH",
"530 -42 OFFCURVE",
"527 -53 OFFCURVE",
"525 -64 CURVE SMOOTH",
"524 -71 LINE SMOOTH",
"523 -76 OFFCURVE",
"526 -78 OFFCURVE",
"529 -78 CURVE",
"529 -78 LINE"
);
},
{
closed = 1;
nodes = (
"183 157 OFFCURVE",
"128 162 OFFCURVE",
"86 178 CURVE",
"73 188 OFFCURVE",
"66 197 OFFCURVE",
"66 206 CURVE SMOOTH",
"66 219 OFFCURVE",
"80 226 OFFCURVE",
"108 227 CURVE SMOOTH",
"165 227 OFFCURVE",
"252 206 OFFCURVE",
"334 168 CURVE",
"329 167 OFFCURVE",
"324 165 OFFCURVE",
"319 164 CURVE SMOOTH",
"303 160 OFFCURVE",
"269 157 OFFCURVE",
"231 157 CURVE",
"231 157 LINE"
);
},
{
closed = 1;
nodes = (
"308 347 LINE SMOOTH",
"420 350 OFFCURVE",
"529 352 OFFCURVE",
"635 352 CURVE SMOOTH",
"660 352 OFFCURVE",
"676 354 OFFCURVE",
"676 359 CURVE SMOOTH",
"676 367 OFFCURVE",
"601 371 OFFCURVE",
"460 371 CURVE SMOOTH",
"140 371 LINE SMOOTH",
"117 371 OFFCURVE",
"103 367 OFFCURVE",
"103 359 CURVE SMOOTH",
"103 347 OFFCURVE",
"117 341 OFFCURVE",
"140 341 CURVE",
"140 341 LINE"
);
},
{
closed = 1;
nodes = (
"327 489 LINE SMOOTH",
"439 492 OFFCURVE",
"547 494 OFFCURVE",
"654 494 CURVE SMOOTH",
"679 494 OFFCURVE",
"694 496 OFFCURVE",
"694 501 CURVE SMOOTH",
"694 510 OFFCURVE",
"619 514 OFFCURVE",
"478 514 CURVE SMOOTH",
"158 514 LINE SMOOTH",
"136 514 OFFCURVE",
"121 510 OFFCURVE",
"121 502 CURVE SMOOTH",
"121 490 OFFCURVE",
"136 483 OFFCURVE",
"158 484 CURVE",
"158 484 LINE"
);
}
);
width = 604;
}
);
unicode = 20B9;
},
{
glyphname = sterling;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"340 -38 OFFCURVE",
"362 -35 OFFCURVE",
"379 -28 CURVE SMOOTH",
"403 -19 OFFCURVE",
"414 -2 OFFCURVE",
"414 18 CURVE SMOOTH",
"414 30 OFFCURVE",
"404 41 OFFCURVE",
"391 53 CURVE SMOOTH",
"390 54 OFFCURVE",
"388 54 OFFCURVE",
"387 54 CURVE SMOOTH",
"385 54 OFFCURVE",
"384 53 OFFCURVE",
"384 51 CURVE SMOOTH",
"384 50 OFFCURVE",
"387 46 OFFCURVE",
"393 41 CURVE SMOOTH",
"400 34 OFFCURVE",
"400 29 OFFCURVE",
"400 22 CURVE SMOOTH",
"400 7 OFFCURVE",
"389 -5 OFFCURVE",
"368 -12 CURVE SMOOTH",
"352 -17 OFFCURVE",
"334 -19 OFFCURVE",
"314 -19 CURVE SMOOTH",
"295 -19 OFFCURVE",
"273 -16 OFFCURVE",
"247 -10 CURVE SMOOTH",
"220 -3 OFFCURVE",
"198 5 OFFCURVE",
"183 14 CURVE",
"196 26 OFFCURVE",
"212 47 OFFCURVE",
"228 76 CURVE SMOOTH",
"231 83 OFFCURVE",
"235 92 OFFCURVE",
"239 104 CURVE SMOOTH",
"243 115 OFFCURVE",
"249 129 OFFCURVE",
"256 146 CURVE",
"353 146 LINE SMOOTH",
"361 146 OFFCURVE",
"369 153 OFFCURVE",
"369 161 CURVE SMOOTH",
"369 163 OFFCURVE",
"368 164 OFFCURVE",
"365 164 CURVE SMOOTH",
"260 164 LINE",
"279 211 OFFCURVE",
"294 239 OFFCURVE",
"303 256 CURVE SMOOTH",
"327 299 OFFCURVE",
"359 328 OFFCURVE",
"375 328 CURVE SMOOTH",
"387 328 OFFCURVE",
"395 323 OFFCURVE",
"395 310 CURVE SMOOTH",
"395 308 OFFCURVE",
"395 305 OFFCURVE",
"394 302 CURVE SMOOTH",
"390 282 OFFCURVE",
"376 263 OFFCURVE",
"361 248 CURVE SMOOTH",
"356 243 OFFCURVE",
"350 239 OFFCURVE",
"347 238 CURVE",
"340 233 OFFCURVE",
"337 229 OFFCURVE",
"337 225 CURVE SMOOTH",
"337 224 OFFCURVE",
"338 224 OFFCURVE",
"339 224 CURVE SMOOTH",
"340 224 OFFCURVE",
"343 225 OFFCURVE",
"346 226 CURVE",
"380 244 OFFCURVE",
"414 274 OFFCURVE",
"414 304 CURVE SMOOTH",
"414 331 OFFCURVE",
"400 345 OFFCURVE",
"372 345 CURVE SMOOTH",
"353 345 OFFCURVE",
"332 333 OFFCURVE",
"309 308 CURVE SMOOTH",
"281 278 OFFCURVE",
"248 198 OFFCURVE",
"239 164 CURVE",
"181 164 LINE SMOOTH",
"174 164 OFFCURVE",
"168 157 OFFCURVE",
"168 150 CURVE SMOOTH",
"168 147 OFFCURVE",
"170 146 OFFCURVE",
"173 146 CURVE SMOOTH",
"232 146 LINE",
"212 89 OFFCURVE",
"193 48 OFFCURVE",
"172 19 CURVE",
"107 56 OFFCURVE",
"65 74 OFFCURVE",
"47 74 CURVE SMOOTH",
"34 74 OFFCURVE",
"19 69 OFFCURVE",
"19 56 CURVE SMOOTH",
"19 36 OFFCURVE",
"30 16 OFFCURVE",
"41 4 CURVE SMOOTH",
"56 -12 OFFCURVE",
"84 -17 OFFCURVE",
"103 -17 CURVE SMOOTH",
"125 -17 OFFCURVE",
"148 -9 OFFCURVE",
"172 6 CURVE",
"227 -22 OFFCURVE",
"273 -38 OFFCURVE",
"316 -38 CURVE",
"316 -38 LINE"
);
},
{
closed = 1;
nodes = (
"87 -6 OFFCURVE",
"73 -1 OFFCURVE",
"60 10 CURVE SMOOTH",
"47 21 OFFCURVE",
"41 33 OFFCURVE",
"41 47 CURVE SMOOTH",
"41 50 OFFCURVE",
"43 51 OFFCURVE",
"48 51 CURVE SMOOTH",
"59 51 OFFCURVE",
"77 46 OFFCURVE",
"103 36 CURVE SMOOTH",
"129 26 OFFCURVE",
"147 17 OFFCURVE",
"156 10 CURVE",
"141 -1 OFFCURVE",
"122 -6 OFFCURVE",
"101 -6 CURVE",
"101 -6 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012106 5 17 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01241 6 88 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01225 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01267 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01280 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 88 25 88 41 88 57 88 73 88 89 88 105 88 121 88 137 88 153 88 169 88 185 88 201 88 217 88 233 88 249 88 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 3 values pushed */\01297 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\012100 17 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 106 22 106 38 106 54 106 70 106 86 106 102 106 118 106 134 106 150 106 166 106 182 106 198 106 214 106 230 106 246 106 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 106 22 106 38 106 54 106 70 106 86 106 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 106 117 106 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01284 3 6 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01270 1 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01284 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01267 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01211 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\012110 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 421;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = won;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"299 -59 OFFCURVE",
"349 -28 OFFCURVE",
"412 35 CURVE SMOOTH",
"452 74 OFFCURVE",
"499 130 OFFCURVE",
"553 201 CURVE",
"548 174 OFFCURVE",
"546 148 OFFCURVE",
"546 123 CURVE SMOOTH",
"546 5 OFFCURVE",
"593 -54 OFFCURVE",
"687 -54 CURVE SMOOTH",
"742 -54 OFFCURVE",
"802 -30 OFFCURVE",
"863 23 CURVE SMOOTH",
"927 78 OFFCURVE",
"973 147 OFFCURVE",
"1000 230 CURVE SMOOTH",
"1015 276 OFFCURVE",
"1023 321 OFFCURVE",
"1023 366 CURVE SMOOTH",
"1023 415 OFFCURVE",
"1013 453 OFFCURVE",
"993 481 CURVE SMOOTH",
"970 516 OFFCURVE",
"933 533 OFFCURVE",
"883 533 CURVE SMOOTH",
"844 533 OFFCURVE",
"807 523 OFFCURVE",
"774 503 CURVE SMOOTH",
"772 502 OFFCURVE",
"771 500 OFFCURVE",
"771 497 CURVE SMOOTH",
"771 493 OFFCURVE",
"773 491 OFFCURVE",
"777 491 CURVE SMOOTH",
"780 491 LINE",
"812 510 OFFCURVE",
"846 520 OFFCURVE",
"883 520 CURVE SMOOTH",
"954 520 OFFCURVE",
"990 477 OFFCURVE",
"990 391 CURVE SMOOTH",
"990 343 OFFCURVE",
"980 294 OFFCURVE",
"961 243 CURVE SMOOTH",
"934 173 OFFCURVE",
"898 113 OFFCURVE",
"853 63 CURVE SMOOTH",
"803 6 OFFCURVE",
"751 -27 OFFCURVE",
"698 -34 CURVE SMOOTH",
"691 -35 OFFCURVE",
"685 -35 OFFCURVE",
"678 -35 CURVE SMOOTH",
"614 -35 OFFCURVE",
"582 9 OFFCURVE",
"582 96 CURVE SMOOTH",
"582 137 OFFCURVE",
"589 181 OFFCURVE",
"604 228 CURVE SMOOTH",
"617 272 OFFCURVE",
"633 306 OFFCURVE",
"652 331 CURVE",
"648 334 OFFCURVE",
"642 336 OFFCURVE",
"635 336 CURVE SMOOTH",
"620 336 OFFCURVE",
"601 328 OFFCURVE",
"597 321 CURVE SMOOTH",
"528 200 OFFCURVE",
"462 110 OFFCURVE",
"398 49 CURVE SMOOTH",
"346 0 OFFCURVE",
"310 -24 OFFCURVE",
"289 -24 CURVE SMOOTH",
"275 -24 OFFCURVE",
"268 -13 OFFCURVE",
"268 8 CURVE SMOOTH",
"268 50 OFFCURVE",
"297 134 OFFCURVE",
"326 204 CURVE SMOOTH",
"360 285 LINE SMOOTH",
"387 348 OFFCURVE",
"400 400 OFFCURVE",
"400 441 CURVE SMOOTH",
"400 503 OFFCURVE",
"373 534 OFFCURVE",
"320 534 CURVE SMOOTH",
"261 534 OFFCURVE",
"225 516 OFFCURVE",
"153 469 CURVE SMOOTH",
"120 448 OFFCURVE",
"93 425 OFFCURVE",
"70 399 CURVE SMOOTH",
"30 350 OFFCURVE",
"12 320 OFFCURVE",
"12 276 CURVE SMOOTH",
"12 238 OFFCURVE",
"30 205 OFFCURVE",
"65 176 CURVE",
"70 173 OFFCURVE",
"75 171 OFFCURVE",
"79 171 CURVE SMOOTH",
"82 171 OFFCURVE",
"84 172 OFFCURVE",
"84 174 CURVE SMOOTH",
"84 177 OFFCURVE",
"81 181 OFFCURVE",
"74 185 CURVE SMOOTH",
"47 201 OFFCURVE",
"33 224 OFFCURVE",
"33 253 CURVE SMOOTH",
"33 316 OFFCURVE",
"99 397 OFFCURVE",
"171 449 CURVE SMOOTH",
"232 495 OFFCURVE",
"280 516 OFFCURVE",
"315 516 CURVE SMOOTH",
"348 516 OFFCURVE",
"359 498 OFFCURVE",
"359 452 CURVE SMOOTH",
"359 417 OFFCURVE",
"350 367 OFFCURVE",
"324 306 CURVE SMOOTH",
"246 124 OFFCURVE",
"211 49 OFFCURVE",
"211 6 CURVE SMOOTH",
"211 -37 OFFCURVE",
"228 -59 OFFCURVE",
"261 -59 CURVE",
"261 -59 LINE"
);
},
{
closed = 1;
nodes = (
"499 198 LINE SMOOTH",
"665 201 OFFCURVE",
"826 203 OFFCURVE",
"983 203 CURVE SMOOTH",
"1020 203 OFFCURVE",
"1044 205 OFFCURVE",
"1044 210 CURVE SMOOTH",
"1044 218 OFFCURVE",
"933 222 OFFCURVE",
"724 222 CURVE SMOOTH",
"251 222 LINE SMOOTH",
"217 222 OFFCURVE",
"196 218 OFFCURVE",
"196 210 CURVE SMOOTH",
"196 198 OFFCURVE",
"217 192 OFFCURVE",
"251 192 CURVE",
"251 192 LINE"
);
},
{
closed = 1;
nodes = (
"541 292 LINE SMOOTH",
"706 295 OFFCURVE",
"866 297 OFFCURVE",
"1025 297 CURVE SMOOTH",
"1061 297 OFFCURVE",
"1084 299 OFFCURVE",
"1084 304 CURVE SMOOTH",
"1084 313 OFFCURVE",
"973 317 OFFCURVE",
"764 317 CURVE SMOOTH",
"291 317 LINE SMOOTH",
"258 317 OFFCURVE",
"236 313 OFFCURVE",
"236 305 CURVE SMOOTH",
"236 293 OFFCURVE",
"258 286 OFFCURVE",
"291 287 CURVE",
"291 287 LINE"
);
}
);
width = 1084;
}
);
unicode = 20A9;
},
{
glyphname = yen;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"125 6 OFFCURVE",
"155 33 OFFCURVE",
"191 73 CURVE SMOOTH",
"218 101 OFFCURVE",
"231 120 OFFCURVE",
"238 131 CURVE",
"284 131 LINE SMOOTH",
"289 131 OFFCURVE",
"300 131 OFFCURVE",
"300 140 CURVE SMOOTH",
"300 142 OFFCURVE",
"297 143 OFFCURVE",
"292 144 CURVE",
"246 144 LINE",
"250 148 OFFCURVE",
"272 177 OFFCURVE",
"274 181 CURVE",
"313 181 LINE SMOOTH",
"317 181 OFFCURVE",
"325 181 OFFCURVE",
"325 188 CURVE SMOOTH",
"325 194 OFFCURVE",
"322 194 OFFCURVE",
"317 194 CURVE SMOOTH",
"314 194 LINE",
"284 194 LINE",
"308 227 OFFCURVE",
"346 272 OFFCURVE",
"383 306 CURVE SMOOTH",
"416 336 OFFCURVE",
"457 371 OFFCURVE",
"482 371 CURVE SMOOTH",
"490 371 OFFCURVE",
"493 369 OFFCURVE",
"497 366 CURVE SMOOTH",
"505 360 LINE SMOOTH",
"506 359 OFFCURVE",
"507 359 OFFCURVE",
"508 359 CURVE SMOOTH",
"512 359 OFFCURVE",
"512 364 OFFCURVE",
"512 368 CURVE SMOOTH",
"512 383 OFFCURVE",
"505 385 OFFCURVE",
"496 385 CURVE SMOOTH",
"444 385 OFFCURVE",
"412 362 OFFCURVE",
"346 291 CURVE SMOOTH",
"334 279 OFFCURVE",
"289 224 OFFCURVE",
"272 202 CURVE",
"270 197 OFFCURVE",
"267 195 OFFCURVE",
"265 195 CURVE",
"265 195 OFFCURVE",
"264 196 OFFCURVE",
"264 197 CURVE SMOOTH",
"264 198 OFFCURVE",
"264 200 OFFCURVE",
"266 203 CURVE",
"283 240 OFFCURVE",
"287 275 OFFCURVE",
"287 288 CURVE SMOOTH",
"287 348 OFFCURVE",
"268 372 OFFCURVE",
"229 372 CURVE SMOOTH",
"221 372 OFFCURVE",
"213 371 OFFCURVE",
"203 369 CURVE SMOOTH",
"149 362 OFFCURVE",
"72 308 OFFCURVE",
"72 257 CURVE SMOOTH",
"72 250 OFFCURVE",
"73 244 OFFCURVE",
"76 237 CURVE SMOOTH",
"89 208 OFFCURVE",
"123 200 OFFCURVE",
"136 200 CURVE",
"140 201 OFFCURVE",
"141 204 OFFCURVE",
"140 207 CURVE SMOOTH",
"139 209 OFFCURVE",
"137 210 OFFCURVE",
"133 211 CURVE SMOOTH",
"125 214 OFFCURVE",
"110 216 OFFCURVE",
"101 235 CURVE SMOOTH",
"97 244 OFFCURVE",
"96 252 OFFCURVE",
"96 260 CURVE SMOOTH",
"96 307 OFFCURVE",
"146 346 OFFCURVE",
"192 354 CURVE SMOOTH",
"203 356 OFFCURVE",
"212 357 OFFCURVE",
"219 357 CURVE SMOOTH",
"250 357 OFFCURVE",
"260 340 OFFCURVE",
"260 285 CURVE SMOOTH",
"260 246 OFFCURVE",
"252 233 OFFCURVE",
"240 193 CURVE",
"197 193 LINE SMOOTH",
"193 193 OFFCURVE",
"191 192 OFFCURVE",
"190 190 CURVE SMOOTH",
"189 186 LINE SMOOTH",
"189 182 OFFCURVE",
"193 181 OFFCURVE",
"196 181 CURVE SMOOTH",
"236 181 LINE",
"231 169 OFFCURVE",
"229 164 OFFCURVE",
"217 143 CURVE",
"174 143 LINE SMOOTH",
"169 143 OFFCURVE",
"167 142 OFFCURVE",
"166 141 CURVE SMOOTH",
"165 139 OFFCURVE",
"164 137 OFFCURVE",
"164 136 CURVE SMOOTH",
"164 132 OFFCURVE",
"170 131 OFFCURVE",
"174 131 CURVE SMOOTH",
"211 131 LINE",
"167 48 OFFCURVE",
"116 15 OFFCURVE",
"81 15 CURVE SMOOTH",
"57 15 OFFCURVE",
"41 30 OFFCURVE",
"33 53 CURVE SMOOTH",
"30 63 LINE",
"29 64 OFFCURVE",
"29 64 OFFCURVE",
"28 64 CURVE SMOOTH",
"27 64 OFFCURVE",
"24 62 OFFCURVE",
"21 58 CURVE SMOOTH",
"18 54 OFFCURVE",
"16 49 OFFCURVE",
"16 42 CURVE SMOOTH",
"16 21 OFFCURVE",
"38 6 OFFCURVE",
"78 6 CURVE",
"78 6 LINE"
);
}
);
width = 386;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = bulletoperator;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = bullet;
transform = "{0.6821, 0, 0, 0.6821, 37, 143}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 304;
}
);
unicode = 2219;
},
{
glyphname = commercialMinusSign;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = slash;
},
{
name = period;
transform = "{1.84463, 0, 0, 1.84463, 161, 118}";
},
{
name = period;
transform = "{1.84463, 0, 0, 1.84463, -16, 286}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 487;
}
);
unicode = 2052;
},
{
glyphname = divisionslash;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = slash;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 343;
}
);
unicode = 2215;
},
{
glyphname = plus;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"176 32 OFFCURVE",
"188 38 OFFCURVE",
"189 43 CURVE SMOOTH",
"203 128 LINE",
"246 131 OFFCURVE",
"274 132 OFFCURVE",
"286 132 CURVE SMOOTH",
"295 132 OFFCURVE",
"299 135 OFFCURVE",
"299 140 CURVE SMOOTH",
"299 146 OFFCURVE",
"295 149 OFFCURVE",
"288 149 CURVE SMOOTH",
"207 149 LINE",
"215 196 OFFCURVE",
"221 227 OFFCURVE",
"226 243 CURVE",
"227 250 OFFCURVE",
"226 253 OFFCURVE",
"221 253 CURVE SMOOTH",
"214 253 OFFCURVE",
"210 249 OFFCURVE",
"208 240 CURVE SMOOTH",
"186 149 LINE",
"175 149 OFFCURVE",
"159 150 OFFCURVE",
"136 151 CURVE SMOOTH",
"99 151 LINE SMOOTH",
"90 151 OFFCURVE",
"85 145 OFFCURVE",
"85 134 CURVE SMOOTH",
"85 125 OFFCURVE",
"87 121 OFFCURVE",
"92 121 CURVE SMOOTH",
"180 127 LINE",
"159 43 LINE SMOOTH",
"157 36 OFFCURVE",
"160 32 OFFCURVE",
"168 32 CURVE",
"168 32 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0120 11 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 11 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = minus;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 265;
}
);
unicode = 2212;
},
{
glyphname = multiply;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"63 92 OFFCURVE",
"70 94 OFFCURVE",
"79 99 CURVE SMOOTH",
"95 108 OFFCURVE",
"115 124 OFFCURVE",
"139 143 CURVE SMOOTH",
"164 163 OFFCURVE",
"234 215 OFFCURVE",
"287 261 CURVE SMOOTH",
"294 266 OFFCURVE",
"297 271 OFFCURVE",
"297 274 CURVE SMOOTH",
"297 276 OFFCURVE",
"295 277 OFFCURVE",
"293 277 CURVE SMOOTH",
"290 277 OFFCURVE",
"284 274 OFFCURVE",
"276 269 CURVE",
"235 237 OFFCURVE",
"178 195 OFFCURVE",
"153 178 CURVE SMOOTH",
"126 158 OFFCURVE",
"94 134 OFFCURVE",
"56 105 CURVE SMOOTH",
"52 102 OFFCURVE",
"51 99 OFFCURVE",
"51 97 CURVE SMOOTH",
"51 94 OFFCURVE",
"53 92 OFFCURVE",
"58 92 CURVE",
"58 92 LINE"
);
},
{
closed = 1;
nodes = (
"242 94 OFFCURVE",
"245 97 OFFCURVE",
"245 101 CURVE SMOOTH",
"245 103 OFFCURVE",
"244 105 OFFCURVE",
"242 108 CURVE SMOOTH",
"213 155 OFFCURVE",
"181 191 OFFCURVE",
"166 211 CURVE SMOOTH",
"152 230 OFFCURVE",
"139 245 OFFCURVE",
"130 255 CURVE SMOOTH",
"123 262 OFFCURVE",
"117 265 OFFCURVE",
"111 265 CURVE SMOOTH",
"105 265 OFFCURVE",
"101 261 OFFCURVE",
"101 256 CURVE SMOOTH",
"101 253 OFFCURVE",
"101 251 OFFCURVE",
"103 249 CURVE SMOOTH",
"126 219 OFFCURVE",
"146 196 OFFCURVE",
"162 177 CURVE SMOOTH",
"177 159 OFFCURVE",
"197 136 OFFCURVE",
"222 104 CURVE SMOOTH",
"228 97 OFFCURVE",
"234 94 OFFCURVE",
"238 94 CURVE",
"238 94 LINE"
);
}
);
width = 347;
}
);
unicode = 00D7;
},
{
glyphname = divide;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"41 164 LINE SMOOTH",
"71 165 OFFCURVE",
"97 168 OFFCURVE",
"118 171 CURVE SMOOTH",
"137 174 OFFCURVE",
"162 176 OFFCURVE",
"195 177 CURVE SMOOTH",
"214 178 OFFCURVE",
"223 180 OFFCURVE",
"223 185 CURVE SMOOTH",
"223 190 OFFCURVE",
"214 194 OFFCURVE",
"195 196 CURVE SMOOTH",
"150 201 OFFCURVE",
"118 204 OFFCURVE",
"98 204 CURVE SMOOTH",
"78 204 OFFCURVE",
"62 202 OFFCURVE",
"51 198 CURVE SMOOTH",
"35 193 OFFCURVE",
"15 180 OFFCURVE",
"15 172 CURVE SMOOTH",
"15 167 OFFCURVE",
"22 164 OFFCURVE",
"36 164 CURVE",
"36 164 LINE"
);
},
{
closed = 1;
nodes = (
"107 69 OFFCURVE",
"121 82 OFFCURVE",
"121 98 CURVE SMOOTH",
"121 114 OFFCURVE",
"107 127 OFFCURVE",
"91 127 CURVE SMOOTH",
"74 127 OFFCURVE",
"61 114 OFFCURVE",
"61 98 CURVE SMOOTH",
"61 82 OFFCURVE",
"74 69 OFFCURVE",
"91 69 CURVE",
"91 69 LINE"
);
},
{
closed = 1;
nodes = (
"154 239 OFFCURVE",
"168 252 OFFCURVE",
"168 268 CURVE SMOOTH",
"168 283 OFFCURVE",
"154 296 OFFCURVE",
"138 296 CURVE SMOOTH",
"121 296 OFFCURVE",
"108 283 OFFCURVE",
"108 268 CURVE SMOOTH",
"108 252 OFFCURVE",
"121 239 OFFCURVE",
"138 239 CURVE",
"138 239 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 8 18 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 214 12 230 12 246 12 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 12 117 12 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0126 18 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 6 122 6 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 105 6 121 6 137 6 153 6 169 6 185 6 201 6 217 6 233 6 249 6 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 6 25 6 41 6 57 6 73 6 89 6 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 2 values pushed */\0120 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 3 values pushed */\01221 15 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0129 3 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01224 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01228 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 28 24 28 40 28 56 28 72 28 88 28 104 28 120 28 136 28 152 28 168 28 184 28 200 28 216 28 232 28 248 28 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 150;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = equal;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"151 189 LINE SMOOTH",
"183 192 OFFCURVE",
"214 194 OFFCURVE",
"245 194 CURVE SMOOTH",
"252 194 OFFCURVE",
"256 196 OFFCURVE",
"256 201 CURVE SMOOTH",
"256 210 OFFCURVE",
"235 214 OFFCURVE",
"194 214 CURVE SMOOTH",
"103 214 LINE SMOOTH",
"96 214 OFFCURVE",
"92 210 OFFCURVE",
"92 202 CURVE SMOOTH",
"92 190 OFFCURVE",
"96 184 OFFCURVE",
"103 184 CURVE",
"103 184 LINE"
);
},
{
closed = 1;
nodes = (
"151 127 LINE SMOOTH",
"183 130 OFFCURVE",
"214 132 OFFCURVE",
"245 132 CURVE SMOOTH",
"252 132 OFFCURVE",
"256 134 OFFCURVE",
"256 139 CURVE SMOOTH",
"256 147 OFFCURVE",
"235 151 OFFCURVE",
"194 151 CURVE SMOOTH",
"103 151 LINE SMOOTH",
"96 151 OFFCURVE",
"92 147 OFFCURVE",
"92 139 CURVE SMOOTH",
"92 127 OFFCURVE",
"96 121 OFFCURVE",
"103 121 CURVE",
"103 121 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01224 4 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01211 4 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = notequal;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 85 OFFCURVE",
"118 88 OFFCURVE",
"121 93 CURVE",
"147 126 LINE",
"182 130 OFFCURVE",
"215 132 OFFCURVE",
"245 132 CURVE SMOOTH",
"252 132 OFFCURVE",
"256 134 OFFCURVE",
"256 139 CURVE SMOOTH",
"256 146 OFFCURVE",
"252 149 OFFCURVE",
"243 149 CURVE SMOOTH",
"166 151 LINE",
"200 193 LINE",
"215 194 OFFCURVE",
"230 194 OFFCURVE",
"245 194 CURVE SMOOTH",
"252 194 OFFCURVE",
"256 196 OFFCURVE",
"256 201 CURVE SMOOTH",
"256 208 OFFCURVE",
"252 211 OFFCURVE",
"243 211 CURVE SMOOTH",
"214 212 LINE",
"221 221 OFFCURVE",
"228 230 OFFCURVE",
"234 239 CURVE SMOOTH",
"235 241 OFFCURVE",
"236 243 OFFCURVE",
"236 244 CURVE SMOOTH",
"236 245 OFFCURVE",
"235 246 OFFCURVE",
"233 246 CURVE SMOOTH",
"227 246 OFFCURVE",
"222 243 OFFCURVE",
"218 238 CURVE SMOOTH",
"212 229 OFFCURVE",
"206 221 OFFCURVE",
"199 213 CURVE",
"103 214 LINE SMOOTH",
"96 214 OFFCURVE",
"92 210 OFFCURVE",
"92 202 CURVE SMOOTH",
"92 194 OFFCURVE",
"97 184 OFFCURVE",
"102 184 CURVE SMOOTH",
"103 184 LINE SMOOTH",
"141 189 OFFCURVE",
"168 191 OFFCURVE",
"184 192 CURVE",
"150 151 LINE",
"103 151 LINE SMOOTH",
"96 151 OFFCURVE",
"92 147 OFFCURVE",
"92 139 CURVE SMOOTH",
"92 131 OFFCURVE",
"98 121 OFFCURVE",
"103 121 CURVE SMOOTH",
"129 124 LINE",
"104 93 LINE",
"103 88 LINE SMOOTH",
"103 86 OFFCURVE",
"104 85 OFFCURVE",
"107 85 CURVE",
"107 85 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01236 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01250 3 0 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01230 4 47 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01212 6 34 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01228 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01247 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01245 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = greater;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"23 13 LINE",
"27 14 LINE",
"155 94 LINE",
"152 110 OFFCURVE",
"149 126 OFFCURVE",
"146 142 CURVE SMOOTH",
"142 162 OFFCURVE",
"138 178 OFFCURVE",
"133 189 CURVE",
"127 192 LINE",
"122 189 LINE",
"119 184 LINE",
"118 99 LINE",
"67 62 LINE SMOOTH",
"34 37 OFFCURVE",
"17 22 OFFCURVE",
"17 17 CURVE",
"18 14 LINE",
"23 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = less;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"99 13 LINE",
"103 15 LINE",
"106 21 LINE",
"107 106 LINE",
"160 144 LINE SMOOTH",
"187 164 OFFCURVE",
"203 178 OFFCURVE",
"208 186 CURVE",
"208 190 LINE",
"203 192 LINE SMOOTH",
"201 193 OFFCURVE",
"157 166 OFFCURVE",
"70 112 CURVE",
"81 63 LINE SMOOTH",
"85 43 OFFCURVE",
"89 27 OFFCURVE",
"94 15 CURVE",
"99 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0127 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 206;
}
);
note = less;
unicode = 003C;
},
{
glyphname = greaterequal;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"44 53 OFFCURVE",
"121 102 OFFCURVE",
"133 111 CURVE SMOOTH",
"136 113 OFFCURVE",
"137 118 OFFCURVE",
"137 125 CURVE SMOOTH",
"137 132 OFFCURVE",
"136 137 OFFCURVE",
"133 140 CURVE SMOOTH",
"119 153 OFFCURVE",
"108 163 OFFCURVE",
"101 169 CURVE SMOOTH",
"41 225 LINE",
"40 226 LINE",
"39 225 OFFCURVE",
"38 223 OFFCURVE",
"38 219 CURVE SMOOTH",
"38 216 OFFCURVE",
"38 213 OFFCURVE",
"39 210 CURVE",
"49 196 OFFCURVE",
"58 185 OFFCURVE",
"66 177 CURVE SMOOTH",
"79 162 OFFCURVE",
"92 148 OFFCURVE",
"106 133 CURVE",
"41 69 LINE SMOOTH",
"36 64 OFFCURVE",
"33 60 OFFCURVE",
"33 57 CURVE SMOOTH",
"33 54 OFFCURVE",
"34 53 OFFCURVE",
"37 53 CURVE",
"37 53 LINE"
);
},
{
closed = 1;
nodes = (
"9 13 LINE",
"131 13 LINE",
"131 26 LINE",
"129 27 LINE",
"11 27 LINE",
"9 26 LINE",
"9 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01218 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01229 1 25 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 158;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lessequal;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"132 53 OFFCURVE",
"133 54 OFFCURVE",
"133 57 CURVE SMOOTH",
"133 60 OFFCURVE",
"130 64 OFFCURVE",
"124 69 CURVE SMOOTH",
"59 133 LINE",
"74 149 OFFCURVE",
"88 164 OFFCURVE",
"99 177 CURVE",
"106 183 OFFCURVE",
"112 189 OFFCURVE",
"118 196 CURVE SMOOTH",
"125 205 OFFCURVE",
"128 212 OFFCURVE",
"128 219 CURVE SMOOTH",
"128 224 OFFCURVE",
"127 226 OFFCURVE",
"126 226 CURVE SMOOTH",
"123 226 OFFCURVE",
"41 149 OFFCURVE",
"33 140 CURVE SMOOTH",
"30 137 OFFCURVE",
"29 132 OFFCURVE",
"29 125 CURVE SMOOTH",
"29 118 OFFCURVE",
"30 113 OFFCURVE",
"33 111 CURVE SMOOTH",
"40 106 OFFCURVE",
"56 95 OFFCURVE",
"82 79 CURVE SMOOTH",
"110 62 OFFCURVE",
"126 53 OFFCURVE",
"129 53 CURVE",
"129 53 LINE"
);
},
{
closed = 1;
nodes = (
"9 13 LINE",
"131 13 LINE",
"131 26 LINE",
"129 27 LINE",
"11 27 LINE",
"9 26 LINE",
"9 13 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01213 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01229 1 25 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 158;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = plusminus;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"180 63 OFFCURVE",
"192 68 OFFCURVE",
"193 73 CURVE SMOOTH",
"198 108 OFFCURVE",
"203 136 OFFCURVE",
"207 159 CURVE",
"250 162 OFFCURVE",
"277 163 OFFCURVE",
"290 163 CURVE SMOOTH",
"299 163 OFFCURVE",
"303 166 OFFCURVE",
"303 171 CURVE SMOOTH",
"303 176 OFFCURVE",
"299 179 OFFCURVE",
"292 179 CURVE SMOOTH",
"211 180 LINE",
"229 273 LINE SMOOTH",
"231 280 OFFCURVE",
"230 284 OFFCURVE",
"225 284 CURVE SMOOTH",
"218 284 OFFCURVE",
"214 280 OFFCURVE",
"212 271 CURVE SMOOTH",
"190 180 LINE",
"139 181 LINE",
"103 182 LINE SMOOTH",
"94 182 OFFCURVE",
"89 176 OFFCURVE",
"89 164 CURVE SMOOTH",
"89 156 OFFCURVE",
"91 152 OFFCURVE",
"95 152 CURVE",
"95 152 OFFCURVE",
"96 152 OFFCURVE",
"96 152 CURVE",
"184 158 LINE",
"163 73 LINE SMOOTH",
"161 66 OFFCURVE",
"164 63 OFFCURVE",
"172 63 CURVE",
"172 63 LINE"
);
},
{
closed = 1;
nodes = (
"93 14 LINE SMOOTH",
"140 19 OFFCURVE",
"195 22 OFFCURVE",
"258 22 CURVE SMOOTH",
"265 22 OFFCURVE",
"269 24 OFFCURVE",
"269 29 CURVE SMOOTH",
"269 36 OFFCURVE",
"265 39 OFFCURVE",
"256 39 CURVE SMOOTH",
"231 39 OFFCURVE",
"198 40 OFFCURVE",
"157 42 CURVE SMOOTH",
"93 44 LINE SMOOTH",
"86 44 OFFCURVE",
"83 40 OFFCURVE",
"83 32 CURVE SMOOTH",
"83 24 OFFCURVE",
"87 14 OFFCURVE",
"92 14 CURVE",
"92 14 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01244 4 35 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0120 11 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01215 11 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01223 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01233 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01242 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01244 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01246 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 286;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = approxequal;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"149 151 OFFCURVE",
"153 152 OFFCURVE",
"157 153 CURVE SMOOTH",
"164 155 OFFCURVE",
"172 160 OFFCURVE",
"181 167 CURVE SMOOTH",
"192 176 OFFCURVE",
"198 183 OFFCURVE",
"198 189 CURVE",
"197 190 OFFCURVE",
"196 190 OFFCURVE",
"196 191 CURVE",
"185 180 LINE SMOOTH",
"178 173 OFFCURVE",
"168 169 OFFCURVE",
"157 169 CURVE SMOOTH",
"146 169 OFFCURVE",
"132 173 OFFCURVE",
"113 181 CURVE SMOOTH",
"94 189 OFFCURVE",
"79 193 OFFCURVE",
"69 193 CURVE SMOOTH",
"53 193 OFFCURVE",
"23 172 OFFCURVE",
"23 156 CURVE SMOOTH",
"23 155 OFFCURVE",
"24 154 OFFCURVE",
"26 154 CURVE SMOOTH",
"27 154 OFFCURVE",
"30 157 OFFCURVE",
"35 164 CURVE SMOOTH",
"40 171 OFFCURVE",
"48 174 OFFCURVE",
"59 174 CURVE SMOOTH",
"70 174 OFFCURVE",
"85 170 OFFCURVE",
"104 163 CURVE SMOOTH",
"123 155 OFFCURVE",
"137 151 OFFCURVE",
"146 151 CURVE",
"146 151 LINE"
);
},
{
closed = 1;
nodes = (
"149 91 OFFCURVE",
"153 92 OFFCURVE",
"157 93 CURVE SMOOTH",
"164 95 OFFCURVE",
"172 100 OFFCURVE",
"181 107 CURVE SMOOTH",
"192 116 OFFCURVE",
"198 123 OFFCURVE",
"198 129 CURVE",
"197 130 OFFCURVE",
"196 130 OFFCURVE",
"196 131 CURVE",
"185 120 LINE SMOOTH",
"178 113 OFFCURVE",
"168 109 OFFCURVE",
"157 109 CURVE SMOOTH",
"146 109 OFFCURVE",
"132 113 OFFCURVE",
"113 121 CURVE SMOOTH",
"94 129 OFFCURVE",
"79 133 OFFCURVE",
"69 133 CURVE SMOOTH",
"53 133 OFFCURVE",
"23 112 OFFCURVE",
"23 96 CURVE SMOOTH",
"23 95 OFFCURVE",
"24 94 OFFCURVE",
"26 94 CURVE SMOOTH",
"27 94 OFFCURVE",
"30 97 OFFCURVE",
"35 104 CURVE SMOOTH",
"40 111 OFFCURVE",
"48 114 OFFCURVE",
"59 114 CURVE SMOOTH",
"70 114 OFFCURVE",
"85 110 OFFCURVE",
"104 103 CURVE SMOOTH",
"123 95 OFFCURVE",
"137 91 OFFCURVE",
"146 91 CURVE",
"146 91 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01234 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01218 3 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = asciitilde;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"245 257 OFFCURVE",
"266 274 OFFCURVE",
"283 309 CURVE",
"284 310 OFFCURVE",
"282 311 OFFCURVE",
"278 311 CURVE SMOOTH",
"273 312 OFFCURVE",
"271 312 OFFCURVE",
"270 310 CURVE SMOOTH",
"263 295 OFFCURVE",
"253 288 OFFCURVE",
"239 288 CURVE SMOOTH",
"231 288 OFFCURVE",
"217 291 OFFCURVE",
"199 299 CURVE SMOOTH",
"180 307 OFFCURVE",
"166 311 OFFCURVE",
"156 311 CURVE SMOOTH",
"136 311 OFFCURVE",
"117 295 OFFCURVE",
"99 264 CURVE SMOOTH",
"98 262 OFFCURVE",
"101 261 OFFCURVE",
"109 261 CURVE SMOOTH",
"111 261 OFFCURVE",
"113 262 OFFCURVE",
"113 263 CURVE",
"121 276 OFFCURVE",
"131 283 OFFCURVE",
"143 283 CURVE SMOOTH",
"150 283 OFFCURVE",
"164 280 OFFCURVE",
"183 272 CURVE SMOOTH",
"200 264 OFFCURVE",
"212 260 OFFCURVE",
"221 259 CURVE",
"221 259 LINE"
);
}
);
width = 304;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = logicalnot;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"379 9 OFFCURVE",
"385 14 OFFCURVE",
"386 23 CURVE",
"418 173 LINE",
"63 173 LINE SMOOTH",
"56 173 OFFCURVE",
"44 159 OFFCURVE",
"44 151 CURVE SMOOTH",
"44 146 OFFCURVE",
"48 143 OFFCURVE",
"57 143 CURVE SMOOTH",
"383 143 LINE",
"358 23 LINE SMOOTH",
"357 16 OFFCURVE",
"362 9 OFFCURVE",
"369 9 CURVE",
"369 9 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\0120 4 7 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 505;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = asciicircum;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"249 239 OFFCURVE",
"252 240 OFFCURVE",
"252 243 CURVE SMOOTH",
"252 244 LINE",
"249 249 LINE",
"220 273 OFFCURVE",
"197 297 OFFCURVE",
"180 321 CURVE",
"176 323 LINE",
"163 320 OFFCURVE",
"75 257 OFFCURVE",
"74 246 CURVE",
"78 241 LINE",
"86 243 OFFCURVE",
"114 261 OFFCURVE",
"163 296 CURVE",
"170 287 OFFCURVE",
"182 275 OFFCURVE",
"201 262 CURVE SMOOTH",
"221 247 OFFCURVE",
"235 239 OFFCURVE",
"244 239 CURVE",
"244 239 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0128 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 231;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = infinity;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"105 96 OFFCURVE",
"128 102 OFFCURVE",
"151 115 CURVE SMOOTH",
"158 118 OFFCURVE",
"179 131 OFFCURVE",
"213 154 CURVE SMOOTH",
"223 161 LINE",
"233 169 LINE",
"233 128 OFFCURVE",
"251 108 OFFCURVE",
"288 108 CURVE SMOOTH",
"319 108 OFFCURVE",
"352 122 OFFCURVE",
"386 151 CURVE SMOOTH",
"422 182 OFFCURVE",
"440 212 OFFCURVE",
"440 243 CURVE SMOOTH",
"440 257 OFFCURVE",
"436 270 OFFCURVE",
"428 282 CURVE SMOOTH",
"419 295 OFFCURVE",
"407 301 OFFCURVE",
"393 301 CURVE SMOOTH",
"360 301 OFFCURVE",
"315 272 OFFCURVE",
"258 214 CURVE",
"257 247 OFFCURVE",
"247 269 OFFCURVE",
"229 281 CURVE SMOOTH",
"214 290 OFFCURVE",
"198 294 OFFCURVE",
"179 294 CURVE SMOOTH",
"142 294 OFFCURVE",
"105 279 OFFCURVE",
"70 250 CURVE SMOOTH",
"32 219 OFFCURVE",
"13 186 OFFCURVE",
"13 150 CURVE SMOOTH",
"13 114 OFFCURVE",
"36 96 OFFCURVE",
"82 96 CURVE",
"82 96 LINE"
);
},
{
closed = 1;
nodes = (
"41 107 OFFCURVE",
"26 119 OFFCURVE",
"26 143 CURVE SMOOTH",
"26 158 OFFCURVE",
"34 178 OFFCURVE",
"49 203 CURVE SMOOTH",
"61 222 OFFCURVE",
"78 239 OFFCURVE",
"101 254 CURVE SMOOTH",
"124 269 OFFCURVE",
"147 276 OFFCURVE",
"169 276 CURVE SMOOTH",
"186 276 OFFCURVE",
"200 272 OFFCURVE",
"212 265 CURVE SMOOTH",
"227 256 OFFCURVE",
"234 238 OFFCURVE",
"234 211 CURVE SMOOTH",
"234 202 LINE",
"234 191 LINE",
"211 168 OFFCURVE",
"186 150 OFFCURVE",
"159 134 CURVE SMOOTH",
"126 116 OFFCURVE",
"97 107 OFFCURVE",
"70 107 CURVE",
"70 107 LINE"
);
},
{
closed = 1;
nodes = (
"275 128 OFFCURVE",
"259 149 OFFCURVE",
"258 191 CURVE",
"267 200 OFFCURVE",
"277 209 OFFCURVE",
"286 218 CURVE SMOOTH",
"295 227 OFFCURVE",
"304 236 OFFCURVE",
"314 245 CURVE SMOOTH",
"341 270 OFFCURVE",
"362 282 OFFCURVE",
"377 282 CURVE SMOOTH",
"408 282 OFFCURVE",
"423 266 OFFCURVE",
"423 233 CURVE SMOOTH",
"423 217 OFFCURVE",
"420 204 OFFCURVE",
"414 195 CURVE SMOOTH",
"404 178 OFFCURVE",
"389 162 OFFCURVE",
"368 149 CURVE SMOOTH",
"345 135 OFFCURVE",
"324 128 OFFCURVE",
"306 128 CURVE",
"306 128 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 1 value pushed */\01264 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 29 25 29 41 29 57 29 73 29 89 29 105 29 121 29 137 29 153 29 169 29 185 29 201 29 217 29 233 29 249 29 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 2 values pushed */\0120 7 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01264 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0126 15 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01223 15 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 2 values pushed */\01254 6 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 54 22 54 38 54 54 54 70 54 86 54 102 54 118 54 134 54 150 54 166 54 182 54 198 54 214 54 230 54 246 54 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01265 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01256 1 13 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01219 3 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01256 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0124 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 2 values pushed */\01238 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 455;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"57 -78 OFFCURVE",
"70 -58 OFFCURVE",
"81 -17 CURVE SMOOTH",
"142 204 LINE SMOOTH",
"151 240 OFFCURVE",
"164 253 OFFCURVE",
"184 253 CURVE SMOOTH",
"193 253 OFFCURVE",
"202 251 OFFCURVE",
"211 246 CURVE",
"211 261 LINE",
"200 266 OFFCURVE",
"188 268 OFFCURVE",
"177 268 CURVE SMOOTH",
"144 268 OFFCURVE",
"123 246 OFFCURVE",
"112 202 CURVE SMOOTH",
"60 -16 LINE SMOOTH",
"52 -49 OFFCURVE",
"39 -66 OFFCURVE",
"21 -66 CURVE SMOOTH",
"13 -66 OFFCURVE",
"5 -64 OFFCURVE",
"-4 -60 CURVE",
"-13 -71 LINE",
"0 -76 OFFCURVE",
"11 -78 OFFCURVE",
"21 -78 CURVE",
"21 -78 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0129 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01219 2 2 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 223;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = Ohm;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"228 -5 OFFCURVE",
"229 -5 OFFCURVE",
"230 -4 CURVE",
"230 -3 LINE",
"231 -3 LINE",
"237 1 OFFCURVE",
"242 2 OFFCURVE",
"248 2 CURVE SMOOTH",
"262 2 OFFCURVE",
"277 -5 OFFCURVE",
"296 -5 CURVE SMOOTH",
"312 -5 OFFCURVE",
"330 2 OFFCURVE",
"342 38 CURVE SMOOTH",
"344 45 OFFCURVE",
"343 49 OFFCURVE",
"341 49 CURVE SMOOTH",
"339 49 OFFCURVE",
"337 45 OFFCURVE",
"334 39 CURVE SMOOTH",
"326 18 OFFCURVE",
"315 11 OFFCURVE",
"300 11 CURVE SMOOTH",
"292 11 OFFCURVE",
"284 12 OFFCURVE",
"275 15 CURVE SMOOTH",
"266 18 OFFCURVE",
"257 20 OFFCURVE",
"248 21 CURVE",
"276 63 LINE SMOOTH",
"286 78 OFFCURVE",
"295 93 OFFCURVE",
"302 109 CURVE SMOOTH",
"313 132 OFFCURVE",
"322 164 OFFCURVE",
"329 191 CURVE SMOOTH",
"334 211 OFFCURVE",
"336 230 OFFCURVE",
"336 249 CURVE SMOOTH",
"336 302 OFFCURVE",
"316 343 OFFCURVE",
"288 367 CURVE SMOOTH",
"268 383 OFFCURVE",
"243 391 OFFCURVE",
"218 391 CURVE SMOOTH",
"171 391 OFFCURVE",
"123 364 OFFCURVE",
"94 323 CURVE SMOOTH",
"73 291 OFFCURVE",
"65 254 OFFCURVE",
"65 214 CURVE SMOOTH",
"65 142 OFFCURVE",
"91 71 OFFCURVE",
"126 16 CURVE",
"116 16 OFFCURVE",
"63 34 OFFCURVE",
"42 34 CURVE SMOOTH",
"25 34 OFFCURVE",
"14 29 OFFCURVE",
"10 16 CURVE SMOOTH",
"6 5 OFFCURVE",
"14 -3 OFFCURVE",
"18 -3 CURVE SMOOTH",
"20 -3 OFFCURVE",
"21 -2 OFFCURVE",
"21 1 CURVE SMOOTH",
"21 5 OFFCURVE",
"21 14 OFFCURVE",
"28 15 CURVE SMOOTH",
"32 16 OFFCURVE",
"37 16 OFFCURVE",
"41 16 CURVE SMOOTH",
"65 16 OFFCURVE",
"91 5 OFFCURVE",
"115 5 CURVE SMOOTH",
"122 5 OFFCURVE",
"129 6 OFFCURVE",
"136 8 CURVE",
"139 10 OFFCURVE",
"141 14 OFFCURVE",
"141 17 CURVE SMOOTH",
"141 20 OFFCURVE",
"140 22 OFFCURVE",
"138 25 CURVE SMOOTH",
"109 72 OFFCURVE",
"89 140 OFFCURVE",
"89 204 CURVE SMOOTH",
"89 236 OFFCURVE",
"95 266 OFFCURVE",
"106 289 CURVE SMOOTH",
"130 333 OFFCURVE",
"170 354 OFFCURVE",
"209 354 CURVE SMOOTH",
"254 354 OFFCURVE",
"291 327 OFFCURVE",
"304 280 CURVE SMOOTH",
"307 265 OFFCURVE",
"309 251 OFFCURVE",
"309 234 CURVE SMOOTH",
"309 156 OFFCURVE",
"268 52 OFFCURVE",
"221 13 CURVE",
"218 4 OFFCURVE",
"221 -5 OFFCURVE",
"227 -5 CURVE",
"227 -5 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0120 1 59 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01247 1 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01250 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 355;
}
);
note = Omega;
unicode = 2126;
},
{
glyphname = increment;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"267 -3 LINE",
"278 5 OFFCURVE",
"291 18 OFFCURVE",
"291 34 CURVE SMOOTH",
"291 35 OFFCURVE",
"290 37 OFFCURVE",
"289 38 CURVE",
"188 275 LINE",
"187 276 OFFCURVE",
"185 276 OFFCURVE",
"184 276 CURVE SMOOTH",
"180 276 OFFCURVE",
"171 266 OFFCURVE",
"168 258 CURVE",
"167 258 LINE",
"50 19 LINE",
"49 18 OFFCURVE",
"48 17 OFFCURVE",
"48 14 CURVE SMOOTH",
"48 7 OFFCURVE",
"53 -3 OFFCURVE",
"58 -3 CURVE",
"58 -3 LINE"
);
},
{
closed = 1;
nodes = (
"68 22 LINE",
"172 234 LINE",
"261 22 LINE",
"68 22 LINE"
);
}
);
width = 346;
}
);
note = Delta;
unicode = 2206;
},
{
glyphname = product;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"186 -14 OFFCURVE",
"191 -13 OFFCURVE",
"197 -11 CURVE SMOOTH",
"206 -9 OFFCURVE",
"220 3 OFFCURVE",
"238 26 CURVE SMOOTH",
"255 49 OFFCURVE",
"263 64 OFFCURVE",
"263 73 CURVE SMOOTH",
"263 74 OFFCURVE",
"262 74 OFFCURVE",
"261 75 CURVE",
"259 75 OFFCURVE",
"257 73 OFFCURVE",
"255 68 CURVE SMOOTH",
"238 36 OFFCURVE",
"224 16 OFFCURVE",
"214 9 CURVE SMOOTH",
"203 0 OFFCURVE",
"194 -4 OFFCURVE",
"186 -4 CURVE SMOOTH",
"175 -4 OFFCURVE",
"169 8 OFFCURVE",
"169 32 CURVE SMOOTH",
"169 51 OFFCURVE",
"171 73 OFFCURVE",
"178 98 CURVE SMOOTH",
"182 114 OFFCURVE",
"201 199 OFFCURVE",
"206 223 CURVE",
"233 221 OFFCURVE",
"256 229 OFFCURVE",
"275 246 CURVE SMOOTH",
"280 251 OFFCURVE",
"283 255 OFFCURVE",
"283 259 CURVE SMOOTH",
"283 262 OFFCURVE",
"282 263 OFFCURVE",
"279 263 CURVE",
"258 248 OFFCURVE",
"241 241 OFFCURVE",
"226 241 CURVE SMOOTH",
"213 241 OFFCURVE",
"192 245 OFFCURVE",
"165 254 CURVE SMOOTH",
"139 263 OFFCURVE",
"119 267 OFFCURVE",
"104 267 CURVE SMOOTH",
"77 267 OFFCURVE",
"51 255 OFFCURVE",
"26 231 CURVE",
"22 226 OFFCURVE",
"20 222 OFFCURVE",
"20 218 CURVE SMOOTH",
"20 216 OFFCURVE",
"21 215 OFFCURVE",
"23 215 CURVE",
"28 217 LINE",
"47 234 OFFCURVE",
"70 243 OFFCURVE",
"97 243 CURVE SMOOTH",
"99 243 LINE",
"99 193 OFFCURVE",
"85 83 OFFCURVE",
"79 51 CURVE",
"72 31 LINE SMOOTH",
"68 20 OFFCURVE",
"66 12 OFFCURVE",
"66 9 CURVE SMOOTH",
"66 8 OFFCURVE",
"68 7 OFFCURVE",
"71 7 CURVE SMOOTH",
"73 7 OFFCURVE",
"75 8 OFFCURVE",
"76 9 CURVE",
"99 55 OFFCURVE",
"121 176 OFFCURVE",
"121 241 CURVE",
"156 233 LINE",
"181 226 LINE",
"167 187 OFFCURVE",
"151 81 OFFCURVE",
"151 30 CURVE SMOOTH",
"151 1 OFFCURVE",
"161 -14 OFFCURVE",
"181 -14 CURVE",
"181 -14 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01212 7 30 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 30 25 30 41 30 57 30 73 30 89 30 105 30 121 30 137 30 153 30 169 30 185 30 201 30 217 30 233 30 249 30 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01214 1 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01266 4 55 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01270 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01266 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01272 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"13 0 LINE",
"232 0 LINE",
"216 19 LINE",
"49 16 LINE",
"176 141 LINE",
"82 257 LINE",
"221 251 LINE",
"232 271 LINE",
"33 271 LINE",
"145 134 LINE",
"13 0 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\0125 9 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 2 values pushed */\0123 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 250;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = radical;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"124 8 LINE",
"132 20 OFFCURVE",
"156 61 OFFCURVE",
"176 96 CURVE SMOOTH",
"218 166 LINE SMOOTH",
"242 206 OFFCURVE",
"279 269 OFFCURVE",
"299 303 CURVE SMOOTH",
"326 348 LINE",
"323 349 OFFCURVE",
"319 351 OFFCURVE",
"318 351 CURVE SMOOTH",
"316 351 OFFCURVE",
"315 350 OFFCURVE",
"314 348 CURVE SMOOTH",
"264 279 OFFCURVE",
"167 124 OFFCURVE",
"131 59 CURVE",
"123 75 OFFCURVE",
"109 147 OFFCURVE",
"100 159 CURVE",
"99 158 LINE",
"99 158 OFFCURVE",
"37 99 OFFCURVE",
"37 96 CURVE",
"36 93 OFFCURVE",
"40 90 OFFCURVE",
"41 91 CURVE SMOOTH",
"49 96 OFFCURVE",
"58 104 OFFCURVE",
"67 113 CURVE SMOOTH",
"76 122 OFFCURVE",
"84 129 OFFCURVE",
"92 135 CURVE SMOOTH",
"93 136 LINE",
"124 8 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01210 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01212 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01215 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01222 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\0125 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01224 22 12 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 330;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = micro;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-34 -184 OFFCURVE",
"-27 -173 OFFCURVE",
"-24 -151 CURVE SMOOTH",
"-13 -84 OFFCURVE",
"-1 -31 OFFCURVE",
"11 10 CURVE",
"16 5 OFFCURVE",
"23 3 OFFCURVE",
"33 3 CURVE SMOOTH",
"40 3 OFFCURVE",
"49 5 OFFCURVE",
"59 10 CURVE SMOOTH",
"76 18 OFFCURVE",
"99 40 OFFCURVE",
"129 76 CURVE",
"126 58 LINE SMOOTH",
"125 50 OFFCURVE",
"124 44 OFFCURVE",
"124 40 CURVE",
"121 31 OFFCURVE",
"119 21 OFFCURVE",
"119 13 CURVE SMOOTH",
"119 9 OFFCURVE",
"120 6 OFFCURVE",
"121 4 CURVE",
"123 -8 OFFCURVE",
"131 -13 OFFCURVE",
"138 -13 CURVE SMOOTH",
"146 -13 OFFCURVE",
"154 -7 OFFCURVE",
"154 3 CURVE SMOOTH",
"154 5 OFFCURVE",
"153 6 OFFCURVE",
"153 8 CURVE",
"150 14 OFFCURVE",
"156 60 OFFCURVE",
"158 68 CURVE SMOOTH",
"159 77 OFFCURVE",
"162 89 OFFCURVE",
"167 103 CURVE SMOOTH",
"171 116 OFFCURVE",
"179 135 OFFCURVE",
"191 159 CURVE",
"192 160 OFFCURVE",
"193 162 OFFCURVE",
"193 163 CURVE SMOOTH",
"193 166 OFFCURVE",
"190 168 OFFCURVE",
"183 168 CURVE SMOOTH",
"172 168 OFFCURVE",
"164 165 OFFCURVE",
"159 159 CURVE",
"147 128 OFFCURVE",
"130 98 OFFCURVE",
"109 69 CURVE SMOOTH",
"85 36 OFFCURVE",
"64 19 OFFCURVE",
"46 19 CURVE SMOOTH",
"39 19 OFFCURVE",
"35 27 OFFCURVE",
"35 43 CURVE SMOOTH",
"35 57 OFFCURVE",
"41 75 OFFCURVE",
"53 98 CURVE SMOOTH",
"64 118 OFFCURVE",
"72 132 OFFCURVE",
"72 139 CURVE SMOOTH",
"72 143 OFFCURVE",
"70 145 OFFCURVE",
"65 145 CURVE SMOOTH",
"40 145 OFFCURVE",
"35 127 OFFCURVE",
"26 108 CURVE",
"2 68 OFFCURVE",
"-19 -12 OFFCURVE",
"-33 -69 CURVE",
"-39 -108 LINE SMOOTH",
"-41 -121 OFFCURVE",
"-43 -135 OFFCURVE",
"-46 -149 CURVE SMOOTH",
"-47 -155 OFFCURVE",
"-47 -160 OFFCURVE",
"-47 -164 CURVE SMOOTH",
"-47 -177 OFFCURVE",
"-44 -184 OFFCURVE",
"-39 -184 CURVE",
"-39 -184 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01255 2 23 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01225 23 55 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 270;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = partialdiff;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"75 -24 OFFCURVE",
"113 13 OFFCURVE",
"138 54 CURVE SMOOTH",
"160 90 OFFCURVE",
"184 153 OFFCURVE",
"189 188 CURVE SMOOTH",
"195 214 OFFCURVE",
"201 268 OFFCURVE",
"201 302 CURVE SMOOTH",
"201 370 OFFCURVE",
"178 406 OFFCURVE",
"136 406 CURVE SMOOTH",
"125 406 OFFCURVE",
"116 405 OFFCURVE",
"111 402 CURVE SMOOTH",
"106 399 OFFCURVE",
"102 396 OFFCURVE",
"101 392 CURVE SMOOTH",
"101 389 OFFCURVE",
"103 388 OFFCURVE",
"106 389 CURVE SMOOTH",
"109 390 OFFCURVE",
"114 391 OFFCURVE",
"121 391 CURVE SMOOTH",
"134 391 OFFCURVE",
"144 381 OFFCURVE",
"151 360 CURVE SMOOTH",
"158 339 OFFCURVE",
"161 310 OFFCURVE",
"161 273 CURVE SMOOTH",
"161 216 OFFCURVE",
"158 170 OFFCURVE",
"147 133 CURVE",
"139 88 OFFCURVE",
"89 -9 OFFCURVE",
"46 -9 CURVE SMOOTH",
"35 -9 OFFCURVE",
"30 0 OFFCURVE",
"30 13 CURVE SMOOTH",
"30 40 OFFCURVE",
"50 87 OFFCURVE",
"64 108 CURVE SMOOTH",
"85 145 OFFCURVE",
"113 172 OFFCURVE",
"136 173 CURVE SMOOTH",
"144 174 OFFCURVE",
"148 178 OFFCURVE",
"148 181 CURVE SMOOTH",
"148 185 OFFCURVE",
"144 188 OFFCURVE",
"135 188 CURVE SMOOTH",
"77 188 OFFCURVE",
"29 127 OFFCURVE",
"14 83 CURVE SMOOTH",
"7 65 OFFCURVE",
"3 24 OFFCURVE",
"3 11 CURVE SMOOTH",
"3 -12 OFFCURVE",
"14 -24 OFFCURVE",
"35 -24 CURVE",
"35 -24 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 8 45 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 45 122 45 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 105 45 121 45 137 45 153 45 169 45 185 45 201 45 217 45 233 45 249 45 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 45 25 45 41 45 57 45 73 45 89 45 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01237 1 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01254 1 48 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 210;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = percent;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-20 -53 LINE",
"3 -53 LINE",
"388 413 LINE",
"388 416 OFFCURVE",
"385 418 OFFCURVE",
"380 418 CURVE",
"376 417 OFFCURVE",
"373 417 OFFCURVE",
"371 416 CURVE SMOOTH",
"369 415 OFFCURVE",
"353 397 OFFCURVE",
"322 363 CURVE SMOOTH",
"290 327 OFFCURVE",
"269 305 OFFCURVE",
"258 298 CURVE",
"222 269 OFFCURVE",
"194 255 OFFCURVE",
"174 255 CURVE SMOOTH",
"163 255 OFFCURVE",
"154 260 OFFCURVE",
"149 270 CURVE",
"164 284 OFFCURVE",
"179 305 OFFCURVE",
"193 333 CURVE SMOOTH",
"208 364 OFFCURVE",
"216 390 OFFCURVE",
"216 411 CURVE SMOOTH",
"216 441 OFFCURVE",
"201 457 OFFCURVE",
"171 458 CURVE SMOOTH",
"128 458 OFFCURVE",
"77 410 OFFCURVE",
"52 353 CURVE SMOOTH",
"43 332 OFFCURVE",
"39 312 OFFCURVE",
"39 294 CURVE SMOOTH",
"39 257 OFFCURVE",
"54 239 OFFCURVE",
"83 238 CURVE SMOOTH",
"100 238 OFFCURVE",
"118 245 OFFCURVE",
"137 259 CURVE",
"146 249 OFFCURVE",
"158 244 OFFCURVE",
"173 244 CURVE SMOOTH",
"200 244 OFFCURVE",
"233 261 OFFCURVE",
"273 296 CURVE",
"144 137 OFFCURVE",
"46 22 OFFCURVE",
"-21 -49 CURVE",
"-20 -53 LINE"
);
},
{
closed = 1;
nodes = (
"248 -19 OFFCURVE",
"278 1 OFFCURVE",
"308 42 CURVE SMOOTH",
"338 81 OFFCURVE",
"353 118 OFFCURVE",
"353 153 CURVE SMOOTH",
"353 184 OFFCURVE",
"337 201 OFFCURVE",
"304 201 CURVE SMOOTH",
"263 201 OFFCURVE",
"212 153 OFFCURVE",
"188 96 CURVE SMOOTH",
"179 75 OFFCURVE",
"174 56 OFFCURVE",
"174 37 CURVE SMOOTH",
"174 1 OFFCURVE",
"189 -17 OFFCURVE",
"218 -18 CURVE",
"218 -18 LINE"
);
},
{
closed = 1;
nodes = (
"216 -5 OFFCURVE",
"209 4 OFFCURVE",
"209 23 CURVE SMOOTH",
"209 42 OFFCURVE",
"216 67 OFFCURVE",
"231 98 CURVE SMOOTH",
"254 145 OFFCURVE",
"286 181 OFFCURVE",
"313 181 CURVE SMOOTH",
"328 181 OFFCURVE",
"336 172 OFFCURVE",
"336 153 CURVE SMOOTH",
"336 124 OFFCURVE",
"312 65 OFFCURVE",
"295 44 CURVE SMOOTH",
"269 11 OFFCURVE",
"248 -5 OFFCURVE",
"231 -5 CURVE",
"231 -5 LINE"
);
},
{
closed = 1;
nodes = (
"81 252 OFFCURVE",
"74 261 OFFCURVE",
"74 279 CURVE SMOOTH",
"74 298 OFFCURVE",
"81 323 OFFCURVE",
"95 354 CURVE SMOOTH",
"118 401 OFFCURVE",
"152 437 OFFCURVE",
"177 437 CURVE SMOOTH",
"192 437 OFFCURVE",
"200 428 OFFCURVE",
"200 409 CURVE SMOOTH",
"200 394 OFFCURVE",
"195 373 OFFCURVE",
"184 348 CURVE SMOOTH",
"176 328 OFFCURVE",
"168 312 OFFCURVE",
"159 300 CURVE",
"160 303 OFFCURVE",
"161 305 OFFCURVE",
"161 307 CURVE SMOOTH",
"161 320 OFFCURVE",
"155 326 OFFCURVE",
"142 326 CURVE SMOOTH",
"127 326 OFFCURVE",
"121 316 OFFCURVE",
"121 296 CURVE SMOOTH",
"121 286 OFFCURVE",
"124 277 OFFCURVE",
"130 268 CURVE",
"117 257 OFFCURVE",
"106 252 OFFCURVE",
"95 252 CURVE",
"95 252 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01253 8 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 7 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012106 43 122 43 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 105 43 121 43 137 43 153 43 169 43 185 43 201 43 217 43 233 43 249 43 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 43 25 43 41 43 57 43 73 43 89 43 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 53 117 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01265 12 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01286 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01217 4 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 389;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = perthousand;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"-20 -53 LINE",
"3 -53 LINE",
"388 413 LINE",
"388 416 OFFCURVE",
"385 418 OFFCURVE",
"380 418 CURVE",
"376 417 OFFCURVE",
"373 417 OFFCURVE",
"371 416 CURVE SMOOTH",
"369 415 OFFCURVE",
"353 397 OFFCURVE",
"322 363 CURVE SMOOTH",
"290 327 OFFCURVE",
"269 305 OFFCURVE",
"258 298 CURVE",
"222 269 OFFCURVE",
"194 255 OFFCURVE",
"174 255 CURVE SMOOTH",
"163 255 OFFCURVE",
"154 260 OFFCURVE",
"149 270 CURVE",
"164 284 OFFCURVE",
"179 305 OFFCURVE",
"193 333 CURVE SMOOTH",
"208 364 OFFCURVE",
"216 390 OFFCURVE",
"216 411 CURVE SMOOTH",
"216 441 OFFCURVE",
"201 457 OFFCURVE",
"171 458 CURVE SMOOTH",
"128 458 OFFCURVE",
"77 410 OFFCURVE",
"52 353 CURVE SMOOTH",
"43 332 OFFCURVE",
"39 312 OFFCURVE",
"39 294 CURVE SMOOTH",
"39 257 OFFCURVE",
"54 239 OFFCURVE",
"83 238 CURVE SMOOTH",
"100 238 OFFCURVE",
"118 245 OFFCURVE",
"137 259 CURVE",
"146 249 OFFCURVE",
"158 244 OFFCURVE",
"173 244 CURVE SMOOTH",
"200 244 OFFCURVE",
"233 261 OFFCURVE",
"273 296 CURVE",
"144 137 OFFCURVE",
"46 22 OFFCURVE",
"-21 -49 CURVE",
"-20 -53 LINE"
);
},
{
closed = 1;
nodes = (
"248 -19 OFFCURVE",
"278 1 OFFCURVE",
"308 42 CURVE SMOOTH",
"338 81 OFFCURVE",
"353 118 OFFCURVE",
"353 153 CURVE SMOOTH",
"353 184 OFFCURVE",
"337 201 OFFCURVE",
"304 201 CURVE SMOOTH",
"263 201 OFFCURVE",
"212 153 OFFCURVE",
"188 96 CURVE SMOOTH",
"179 75 OFFCURVE",
"174 56 OFFCURVE",
"174 37 CURVE SMOOTH",
"174 1 OFFCURVE",
"189 -17 OFFCURVE",
"218 -18 CURVE",
"218 -18 LINE"
);
},
{
closed = 1;
nodes = (
"216 -5 OFFCURVE",
"209 4 OFFCURVE",
"209 23 CURVE SMOOTH",
"209 42 OFFCURVE",
"216 67 OFFCURVE",
"231 98 CURVE SMOOTH",
"254 145 OFFCURVE",
"286 181 OFFCURVE",
"313 181 CURVE SMOOTH",
"328 181 OFFCURVE",
"336 172 OFFCURVE",
"336 153 CURVE SMOOTH",
"336 124 OFFCURVE",
"312 65 OFFCURVE",
"295 44 CURVE SMOOTH",
"269 11 OFFCURVE",
"248 -5 OFFCURVE",
"231 -5 CURVE",
"231 -5 LINE"
);
},
{
closed = 1;
nodes = (
"81 252 OFFCURVE",
"74 261 OFFCURVE",
"74 279 CURVE SMOOTH",
"74 298 OFFCURVE",
"81 323 OFFCURVE",
"95 354 CURVE SMOOTH",
"118 401 OFFCURVE",
"152 437 OFFCURVE",
"177 437 CURVE SMOOTH",
"192 437 OFFCURVE",
"200 428 OFFCURVE",
"200 409 CURVE SMOOTH",
"200 394 OFFCURVE",
"195 373 OFFCURVE",
"184 348 CURVE SMOOTH",
"176 328 OFFCURVE",
"168 312 OFFCURVE",
"159 300 CURVE",
"160 303 OFFCURVE",
"161 305 OFFCURVE",
"161 307 CURVE SMOOTH",
"161 320 OFFCURVE",
"155 326 OFFCURVE",
"142 326 CURVE SMOOTH",
"127 326 OFFCURVE",
"121 316 OFFCURVE",
"121 296 CURVE SMOOTH",
"121 286 OFFCURVE",
"124 277 OFFCURVE",
"130 268 CURVE",
"117 257 OFFCURVE",
"106 252 OFFCURVE",
"95 252 CURVE",
"95 252 LINE"
);
},
{
closed = 1;
nodes = (
"435 -19 OFFCURVE",
"465 1 OFFCURVE",
"496 42 CURVE SMOOTH",
"525 81 OFFCURVE",
"540 118 OFFCURVE",
"540 153 CURVE SMOOTH",
"540 184 OFFCURVE",
"524 201 OFFCURVE",
"492 201 CURVE SMOOTH",
"451 201 OFFCURVE",
"400 153 OFFCURVE",
"375 96 CURVE SMOOTH",
"366 75 OFFCURVE",
"362 56 OFFCURVE",
"362 37 CURVE SMOOTH",
"362 1 OFFCURVE",
"377 -17 OFFCURVE",
"406 -18 CURVE",
"406 -18 LINE"
);
},
{
closed = 1;
nodes = (
"404 -5 OFFCURVE",
"397 4 OFFCURVE",
"397 23 CURVE SMOOTH",
"397 42 OFFCURVE",
"404 67 OFFCURVE",
"418 98 CURVE SMOOTH",
"441 145 OFFCURVE",
"475 181 OFFCURVE",
"500 181 CURVE SMOOTH",
"515 181 OFFCURVE",
"523 172 OFFCURVE",
"523 153 CURVE SMOOTH",
"523 124 OFFCURVE",
"500 65 OFFCURVE",
"483 44 CURVE SMOOTH",
"457 11 OFFCURVE",
"436 -5 OFFCURVE",
"419 -5 CURVE",
"419 -5 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01253 8 12 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01287 7 98 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012105 8 93 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01237 7 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01278 8 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0124 12 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 102 53 118 53 134 53 150 53 166 53 182 53 198 53 214 53 230 53 246 53 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 53 22 53 38 53 54 53 70 53 86 53 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 53 117 53 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01265 12 87 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012NPUSHW[ ]	/* 33 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 102 78 118 78 134 78 150 78 166 78 182 78 198 78 214 78 230 78 246 78 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 78 22 78 38 78 54 78 70 78 86 78 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 78 117 78 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012106 93 122 93 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 93 25 93 41 93 57 93 73 93 89 93 105 93 121 93 137 93 153 93 169 93 185 93 201 93 217 93 233 93 249 93 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 93 25 93 41 93 57 93 73 93 89 93 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 98 25 98 41 98 57 98 73 98 89 98 105 98 121 98 137 98 153 98 169 98 185 98 201 98 217 98 233 98 249 98 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01287 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01235 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 1 value pushed */\0120 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\01285 \012MDAP[1]	/* MoveDirectAbsPt */\012ELSE[ ]	/* Else */\012PUSHW[ ]	/* 2 values pushed */\01285 13 \012MIAP[0]	/* MoveIndirectAbsPt */\012EIF[ ]	/* EndIf */\012PUSHW[ ]	/* 4 values pushed */\01217 4 48 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01280 1 41 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01255 1 10 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01210 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01261 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 3 values pushed */\0124 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01255 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01225 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01265 10 61 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01235 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01273 4 \012MIRP[10100]	/* MoveIndirectRelPt */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0128 73 24 73 40 73 56 73 72 73 88 73 104 73 120 73 136 73 152 73 168 73 184 73 200 73 216 73 232 73 248 73 16 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012PUSHW[ ]	/* 1 value pushed */\01241 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01291 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01273 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012100 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012107 \012MDRP[10000]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 568;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = lozenge;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"192 -6 OFFCURVE",
"202 3 OFFCURVE",
"205 11 CURVE",
"206 11 LINE",
"323 221 LINE",
"326 228 OFFCURVE",
"328 234 OFFCURVE",
"328 240 CURVE SMOOTH",
"328 243 OFFCURVE",
"327 247 OFFCURVE",
"326 250 CURVE SMOOTH",
"325 252 LINE",
"325 253 OFFCURVE",
"325 253 OFFCURVE",
"324 253 CURVE",
"223 462 LINE",
"222 463 OFFCURVE",
"220 463 OFFCURVE",
"219 463 CURVE SMOOTH",
"215 463 OFFCURVE",
"206 455 OFFCURVE",
"203 447 CURVE",
"202 446 LINE",
"84 237 LINE SMOOTH",
"81 231 OFFCURVE",
"79 225 OFFCURVE",
"79 220 CURVE SMOOTH",
"79 213 OFFCURVE",
"81 207 OFFCURVE",
"83 204 CURVE SMOOTH",
"185 -4 LINE",
"186 -5 OFFCURVE",
"187 -6 OFFCURVE",
"188 -6 CURVE",
"188 -6 LINE"
);
},
{
closed = 1;
nodes = (
"201 32 LINE",
"190 53 OFFCURVE",
"154 129 OFFCURVE",
"140 160 CURVE SMOOTH",
"129 181 OFFCURVE",
"104 237 OFFCURVE",
"102 239 CURVE",
"207 426 LINE",
"239 359 OFFCURVE",
"277 279 OFFCURVE",
"288 257 CURVE SMOOTH",
"296 241 OFFCURVE",
"304 222 OFFCURVE",
"305 218 CURVE",
"201 32 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01214 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0123 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01229 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01237 3 14 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 390;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = apple;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"113 -7 OFFCURVE",
"121 -2 OFFCURVE",
"126 2 CURVE SMOOTH",
"133 6 OFFCURVE",
"141 8 OFFCURVE",
"151 8 CURVE SMOOTH",
"161 8 OFFCURVE",
"170 6 OFFCURVE",
"177 2 CURVE SMOOTH",
"182 -2 OFFCURVE",
"190 -7 OFFCURVE",
"206 -7 CURVE SMOOTH",
"223 -7 OFFCURVE",
"235 6 OFFCURVE",
"251 26 CURVE SMOOTH",
"263 39 OFFCURVE",
"275 59 OFFCURVE",
"282 79 CURVE",
"255 90 OFFCURVE",
"238 117 OFFCURVE",
"238 148 CURVE SMOOTH",
"238 181 OFFCURVE",
"257 201 OFFCURVE",
"273 210 CURVE",
"256 237 OFFCURVE",
"230 244 OFFCURVE",
"212 244 CURVE SMOOTH",
"207 244 OFFCURVE",
"203 244 OFFCURVE",
"199 243 CURVE SMOOTH",
"165 231 LINE",
"160 230 OFFCURVE",
"156 229 OFFCURVE",
"152 229 CURVE SMOOTH",
"148 229 OFFCURVE",
"143 230 OFFCURVE",
"138 231 CURVE",
"104 243 LINE SMOOTH",
"101 244 OFFCURVE",
"97 244 OFFCURVE",
"93 244 CURVE SMOOTH",
"71 244 OFFCURVE",
"43 231 OFFCURVE",
"26 200 CURVE SMOOTH",
"17 183 OFFCURVE",
"13 161 OFFCURVE",
"13 140 CURVE SMOOTH",
"13 97 OFFCURVE",
"28 54 OFFCURVE",
"52 26 CURVE SMOOTH",
"67 6 OFFCURVE",
"80 -7 OFFCURVE",
"97 -7 CURVE",
"97 -7 LINE"
);
},
{
closed = 1;
nodes = (
"165 238 OFFCURVE",
"184 242 OFFCURVE",
"200 265 CURVE SMOOTH",
"208 277 OFFCURVE",
"213 288 OFFCURVE",
"214 299 CURVE SMOOTH",
"215 309 OFFCURVE",
"215 316 OFFCURVE",
"213 319 CURVE",
"204 322 OFFCURVE",
"178 310 OFFCURVE",
"166 291 CURVE SMOOTH",
"156 276 OFFCURVE",
"152 259 OFFCURVE",
"152 248 CURVE SMOOTH",
"152 244 OFFCURVE",
"152 241 OFFCURVE",
"153 239 CURVE",
"153 239 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0126 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01216 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 310;
}
);
note = apple;
unicode = F8FF;
},
{
glyphname = at;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"265 -89 OFFCURVE",
"292 -83 OFFCURVE",
"319 -70 CURVE SMOOTH",
"348 -54 OFFCURVE",
"378 -29 OFFCURVE",
"409 10 CURVE SMOOTH",
"442 52 OFFCURVE",
"459 88 OFFCURVE",
"459 117 CURVE SMOOTH",
"459 121 OFFCURVE",
"458 123 OFFCURVE",
"456 123 CURVE SMOOTH",
"455 123 OFFCURVE",
"453 121 OFFCURVE",
"451 118 CURVE",
"424 40 OFFCURVE",
"382 -13 OFFCURVE",
"326 -40 CURVE SMOOTH",
"295 -55 OFFCURVE",
"262 -62 OFFCURVE",
"223 -62 CURVE SMOOTH",
"183 -62 OFFCURVE",
"148 -53 OFFCURVE",
"118 -35 CURVE SMOOTH",
"86 -15 OFFCURVE",
"72 13 OFFCURVE",
"72 43 CURVE SMOOTH",
"72 67 OFFCURVE",
"81 93 OFFCURVE",
"95 119 CURVE SMOOTH",
"124 170 OFFCURVE",
"177 223 OFFCURVE",
"219 242 CURVE SMOOTH",
"248 255 OFFCURVE",
"278 261 OFFCURVE",
"311 261 CURVE SMOOTH",
"342 261 OFFCURVE",
"367 255 OFFCURVE",
"386 243 CURVE SMOOTH",
"410 229 OFFCURVE",
"422 208 OFFCURVE",
"422 180 CURVE SMOOTH",
"422 153 OFFCURVE",
"413 126 OFFCURVE",
"396 99 CURVE SMOOTH",
"380 71 OFFCURVE",
"359 51 OFFCURVE",
"338 39 CURVE SMOOTH",
"328 34 OFFCURVE",
"319 31 OFFCURVE",
"311 31 CURVE SMOOTH",
"293 31 OFFCURVE",
"284 45 OFFCURVE",
"284 74 CURVE SMOOTH",
"284 85 OFFCURVE",
"286 100 OFFCURVE",
"290 119 CURVE SMOOTH",
"294 140 OFFCURVE",
"300 154 OFFCURVE",
"304 161 CURVE",
"309 164 OFFCURVE",
"314 167 OFFCURVE",
"315 168 CURVE",
"315 173 OFFCURVE",
"310 178 OFFCURVE",
"301 183 CURVE SMOOTH",
"292 187 OFFCURVE",
"285 189 OFFCURVE",
"278 189 CURVE SMOOTH",
"275 189 OFFCURVE",
"271 189 OFFCURVE",
"268 188 CURVE SMOOTH",
"256 185 LINE SMOOTH",
"234 178 OFFCURVE",
"211 157 OFFCURVE",
"188 123 CURVE SMOOTH",
"167 88 OFFCURVE",
"155 60 OFFCURVE",
"155 36 CURVE SMOOTH",
"155 20 OFFCURVE",
"162 12 OFFCURVE",
"177 12 CURVE SMOOTH",
"200 12 OFFCURVE",
"227 39 OFFCURVE",
"258 94 CURVE",
"257 87 OFFCURVE",
"256 79 OFFCURVE",
"256 72 CURVE SMOOTH",
"256 32 OFFCURVE",
"271 12 OFFCURVE",
"301 12 CURVE SMOOTH",
"326 12 OFFCURVE",
"351 27 OFFCURVE",
"378 56 CURVE SMOOTH",
"402 81 OFFCURVE",
"418 107 OFFCURVE",
"426 134 CURVE SMOOTH",
"430 149 OFFCURVE",
"432 164 OFFCURVE",
"432 178 CURVE SMOOTH",
"432 213 OFFCURVE",
"419 241 OFFCURVE",
"392 260 CURVE SMOOTH",
"368 279 OFFCURVE",
"338 288 OFFCURVE",
"302 288 CURVE SMOOTH",
"273 288 OFFCURVE",
"245 282 OFFCURVE",
"219 270 CURVE SMOOTH",
"178 252 OFFCURVE",
"141 225 OFFCURVE",
"110 188 CURVE SMOOTH",
"75 147 OFFCURVE",
"53 97 OFFCURVE",
"53 51 CURVE SMOOTH",
"53 13 OFFCURVE",
"67 -22 OFFCURVE",
"101 -47 CURVE SMOOTH",
"134 -74 OFFCURVE",
"186 -89 OFFCURVE",
"233 -89 CURVE",
"233 -89 LINE"
);
},
{
closed = 1;
nodes = (
"182 34 OFFCURVE",
"179 39 OFFCURVE",
"179 48 CURVE SMOOTH",
"179 68 OFFCURVE",
"190 93 OFFCURVE",
"213 123 CURVE SMOOTH",
"236 153 OFFCURVE",
"258 168 OFFCURVE",
"277 168 CURVE SMOOTH",
"280 168 OFFCURVE",
"282 168 OFFCURVE",
"283 167 CURVE",
"274 140 OFFCURVE",
"260 116 OFFCURVE",
"244 89 CURVE SMOOTH",
"222 52 OFFCURVE",
"203 34 OFFCURVE",
"188 34 CURVE",
"188 34 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\012100 5 39 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01260 5 33 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0120 8 69 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 33 122 33 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 105 33 121 33 137 33 153 33 169 33 185 33 201 33 217 33 233 33 249 33 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 33 25 33 41 33 57 33 73 33 89 33 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01233 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDAP[1]	/* MoveDirectAbsPt */\012NPUSHW[ ]	/* 5 values pushed */\012106 69 122 69 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 69 25 69 41 69 57 69 73 69 89 69 105 69 121 69 137 69 153 69 169 69 185 69 201 69 217 69 233 69 249 69 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 69 25 69 41 69 57 69 73 69 89 69 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 102 100 118 100 134 100 150 100 166 100 182 100 198 100 214 100 230 100 246 100 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 100 22 100 38 100 54 100 70 100 86 100 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 100 117 100 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01285 4 8 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01220 4 73 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\012102 4 37 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01237 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01231 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\012102 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01262 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 479;
}
);
note = at;
unicode = 0040;
},
{
glyphname = ampersand;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"214 -28 OFFCURVE",
"258 -13 OFFCURVE",
"295 18 CURVE SMOOTH",
"330 45 OFFCURVE",
"347 75 OFFCURVE",
"347 108 CURVE SMOOTH",
"347 128 OFFCURVE",
"339 144 OFFCURVE",
"324 157 CURVE",
"396 156 OFFCURVE",
"466 192 OFFCURVE",
"466 235 CURVE SMOOTH",
"466 244 OFFCURVE",
"463 254 OFFCURVE",
"457 263 CURVE SMOOTH",
"456 265 OFFCURVE",
"454 266 OFFCURVE",
"452 266 CURVE SMOOTH",
"447 266 OFFCURVE",
"446 263 OFFCURVE",
"450 258 CURVE SMOOTH",
"454 252 OFFCURVE",
"456 246 OFFCURVE",
"456 240 CURVE SMOOTH",
"456 223 OFFCURVE",
"439 207 OFFCURVE",
"406 194 CURVE SMOOTH",
"379 183 OFFCURVE",
"356 177 OFFCURVE",
"337 177 CURVE SMOOTH",
"226 177 LINE SMOOTH",
"191 177 OFFCURVE",
"162 170 OFFCURVE",
"140 157 CURVE SMOOTH",
"120 144 OFFCURVE",
"110 128 OFFCURVE",
"110 109 CURVE SMOOTH",
"110 79 OFFCURVE",
"132 52 OFFCURVE",
"176 28 CURVE",
"179 28 LINE SMOOTH",
"181 28 OFFCURVE",
"182 29 OFFCURVE",
"182 31 CURVE SMOOTH",
"182 36 OFFCURVE",
"180 39 OFFCURVE",
"176 41 CURVE SMOOTH",
"148 56 OFFCURVE",
"135 73 OFFCURVE",
"135 93 CURVE SMOOTH",
"135 112 OFFCURVE",
"147 128 OFFCURVE",
"169 139 CURVE SMOOTH",
"187 148 OFFCURVE",
"208 153 OFFCURVE",
"233 153 CURVE SMOOTH",
"256 153 OFFCURVE",
"275 149 OFFCURVE",
"290 140 CURVE SMOOTH",
"306 131 OFFCURVE",
"314 120 OFFCURVE",
"314 105 CURVE SMOOTH",
"314 77 OFFCURVE",
"300 49 OFFCURVE",
"271 23 CURVE SMOOTH",
"240 -6 OFFCURVE",
"204 -20 OFFCURVE",
"163 -20 CURVE SMOOTH",
"132 -20 OFFCURVE",
"108 -10 OFFCURVE",
"91 11 CURVE SMOOTH",
"76 29 OFFCURVE",
"68 52 OFFCURVE",
"68 81 CURVE SMOOTH",
"68 118 OFFCURVE",
"79 151 OFFCURVE",
"101 180 CURVE SMOOTH",
"126 213 OFFCURVE",
"157 232 OFFCURVE",
"196 238 CURVE",
"215 220 OFFCURVE",
"236 211 OFFCURVE",
"259 211 CURVE SMOOTH",
"280 211 OFFCURVE",
"291 217 OFFCURVE",
"291 229 CURVE SMOOTH",
"291 243 OFFCURVE",
"278 250 OFFCURVE",
"252 250 CURVE SMOOTH",
"243 250 OFFCURVE",
"229 250 OFFCURVE",
"209 249 CURVE",
"206 256 OFFCURVE",
"204 265 OFFCURVE",
"204 274 CURVE SMOOTH",
"204 291 OFFCURVE",
"210 309 OFFCURVE",
"221 328 CURVE SMOOTH",
"231 345 OFFCURVE",
"242 360 OFFCURVE",
"255 371 CURVE SMOOTH",
"294 406 OFFCURVE",
"334 423 OFFCURVE",
"375 423 CURVE SMOOTH",
"404 423 OFFCURVE",
"419 413 OFFCURVE",
"419 393 CURVE SMOOTH",
"419 385 LINE",
"416 393 OFFCURVE",
"409 396 OFFCURVE",
"396 396 CURVE SMOOTH",
"378 396 OFFCURVE",
"369 387 OFFCURVE",
"368 368 CURVE SMOOTH",
"368 352 OFFCURVE",
"381 338 OFFCURVE",
"398 338 CURVE SMOOTH",
"418 338 OFFCURVE",
"436 360 OFFCURVE",
"436 384 CURVE SMOOTH",
"436 403 OFFCURVE",
"428 418 OFFCURVE",
"411 428 CURVE SMOOTH",
"396 436 OFFCURVE",
"377 439 OFFCURVE",
"354 439 CURVE SMOOTH",
"313 439 OFFCURVE",
"274 428 OFFCURVE",
"238 405 CURVE SMOOTH",
"193 377 OFFCURVE",
"171 342 OFFCURVE",
"171 300 CURVE SMOOTH",
"171 280 OFFCURVE",
"177 262 OFFCURVE",
"188 247 CURVE",
"132 241 OFFCURVE",
"87 222 OFFCURVE",
"53 189 CURVE SMOOTH",
"22 160 OFFCURVE",
"7 126 OFFCURVE",
"7 89 CURVE SMOOTH",
"7 56 OFFCURVE",
"20 29 OFFCURVE",
"46 8 CURVE SMOOTH",
"74 -16 OFFCURVE",
"113 -28 OFFCURVE",
"163 -28 CURVE",
"163 -28 LINE"
);
},
{
closed = 1;
nodes = (
"240 221 OFFCURVE",
"225 227 OFFCURVE",
"214 240 CURVE",
"229 241 OFFCURVE",
"245 240 OFFCURVE",
"261 239 CURVE SMOOTH",
"274 238 OFFCURVE",
"280 235 OFFCURVE",
"280 229 CURVE SMOOTH",
"280 224 OFFCURVE",
"273 221 OFFCURVE",
"259 221 CURVE",
"259 221 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01263 8 15 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01249 8 21 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\0127 8 71 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01229 35 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 71 122 71 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 105 71 121 71 137 71 153 71 169 71 185 71 201 71 217 71 233 71 249 71 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 71 25 71 41 71 57 71 73 71 89 71 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\0125 71 7 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 102 49 118 49 134 49 150 49 166 49 182 49 198 49 214 49 230 49 246 49 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 49 22 49 38 49 54 49 70 49 86 49 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 49 117 49 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\01219 21 49 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 5 values pushed */\012218 35 234 35 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 35 25 35 41 35 57 35 73 35 89 35 105 35 121 35 137 35 153 35 169 35 185 35 201 35 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01239 35 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012NPUSHW[ ]	/* 33 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 102 63 118 63 134 63 150 63 166 63 182 63 198 63 214 63 230 63 246 63 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0126 63 22 63 38 63 54 63 70 63 86 63 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 5 values pushed */\012101 63 117 63 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 3 values pushed */\012106 15 29 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012113 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\01211 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 4 values pushed */\01225 3 43 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\01237 32 3 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01293 4 75 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01251 4 57 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0125 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01219 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\01239 32 37 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01251 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 3 values pushed */\012106 57 51 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01275 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\012108 \012MDRP[11100]	/* MoveDirectRelPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 379;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = paragraph;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"8 -111 OFFCURVE",
"42 -84 OFFCURVE",
"79 -29 CURVE SMOOTH",
"106 11 OFFCURVE",
"128 52 OFFCURVE",
"143 95 CURVE SMOOTH",
"170 167 OFFCURVE",
"190 219 OFFCURVE",
"206 254 CURVE SMOOTH",
"244 331 OFFCURVE",
"277 370 OFFCURVE",
"305 370 CURVE SMOOTH",
"311 370 LINE",
"288 343 OFFCURVE",
"268 306 OFFCURVE",
"249 255 CURVE SMOOTH",
"234 214 OFFCURVE",
"221 173 OFFCURVE",
"208 130 CURVE SMOOTH",
"180 49 OFFCURVE",
"155 -3 OFFCURVE",
"133 -24 CURVE SMOOTH",
"128 -29 OFFCURVE",
"125 -32 OFFCURVE",
"124 -34 CURVE",
"124 -36 OFFCURVE",
"125 -37 OFFCURVE",
"128 -37 CURVE SMOOTH",
"131 -37 OFFCURVE",
"133 -36 OFFCURVE",
"135 -35 CURVE SMOOTH",
"155 -24 OFFCURVE",
"179 16 OFFCURVE",
"207 83 CURVE SMOOTH",
"245 175 LINE SMOOTH",
"257 206 OFFCURVE",
"270 236 OFFCURVE",
"283 266 CURVE SMOOTH",
"312 335 OFFCURVE",
"340 375 OFFCURVE",
"363 388 CURVE SMOOTH",
"367 391 OFFCURVE",
"372 393 OFFCURVE",
"379 394 CURVE SMOOTH",
"385 394 OFFCURVE",
"389 395 OFFCURVE",
"391 397 CURVE",
"388 402 OFFCURVE",
"382 405 OFFCURVE",
"371 405 CURVE SMOOTH",
"352 405 OFFCURVE",
"335 396 OFFCURVE",
"318 379 CURVE",
"312 380 OFFCURVE",
"304 381 OFFCURVE",
"293 381 CURVE SMOOTH",
"280 381 LINE",
"259 380 LINE",
"240 379 LINE",
"226 379 LINE SMOOTH",
"188 379 OFFCURVE",
"151 367 OFFCURVE",
"114 343 CURVE SMOOTH",
"74 316 OFFCURVE",
"54 285 OFFCURVE",
"54 249 CURVE SMOOTH",
"54 207 OFFCURVE",
"86 183 OFFCURVE",
"150 178 CURVE",
"110 73 LINE SMOOTH",
"99 45 OFFCURVE",
"91 25 OFFCURVE",
"85 13 CURVE SMOOTH",
"48 -63 OFFCURVE",
"11 -101 OFFCURVE",
"-26 -101 CURVE SMOOTH",
"-29 -101 OFFCURVE",
"-32 -102 OFFCURVE",
"-33 -105 CURVE",
"-32 -109 OFFCURVE",
"-29 -111 OFFCURVE",
"-23 -111 CURVE",
"-23 -111 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01242 1 38 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01259 1 28 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01253 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01259 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01256 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 343;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = section;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"115 -75 OFFCURVE",
"149 -68 OFFCURVE",
"184 -54 CURVE SMOOTH",
"222 -40 OFFCURVE",
"252 -22 OFFCURVE",
"273 1 CURVE SMOOTH",
"287 16 OFFCURVE",
"294 31 OFFCURVE",
"294 46 CURVE SMOOTH",
"294 62 OFFCURVE",
"286 76 OFFCURVE",
"269 88 CURVE",
"289 96 OFFCURVE",
"314 112 OFFCURVE",
"331 129 CURVE SMOOTH",
"345 144 OFFCURVE",
"352 159 OFFCURVE",
"352 174 CURVE SMOOTH",
"352 196 OFFCURVE",
"337 214 OFFCURVE",
"306 228 CURVE",
"221 256 LINE SMOOTH",
"191 266 OFFCURVE",
"176 277 OFFCURVE",
"176 288 CURVE SMOOTH",
"176 300 OFFCURVE",
"189 313 OFFCURVE",
"215 326 CURVE SMOOTH",
"232 335 OFFCURVE",
"249 342 OFFCURVE",
"269 346 CURVE",
"284 351 OFFCURVE",
"299 353 OFFCURVE",
"312 353 CURVE SMOOTH",
"335 353 OFFCURVE",
"346 346 OFFCURVE",
"346 331 CURVE SMOOTH",
"346 325 OFFCURVE",
"343 318 OFFCURVE",
"338 310 CURVE SMOOTH",
"329 298 LINE",
"329 295 OFFCURVE",
"331 294 OFFCURVE",
"334 294 CURVE SMOOTH",
"341 294 OFFCURVE",
"348 300 OFFCURVE",
"354 312 CURVE SMOOTH",
"361 323 OFFCURVE",
"364 333 OFFCURVE",
"364 342 CURVE SMOOTH",
"364 361 OFFCURVE",
"347 371 OFFCURVE",
"313 371 CURVE SMOOTH",
"286 371 OFFCURVE",
"256 363 OFFCURVE",
"223 348 CURVE SMOOTH",
"184 330 OFFCURVE",
"164 309 OFFCURVE",
"164 284 CURVE SMOOTH",
"164 271 OFFCURVE",
"171 260 OFFCURVE",
"184 251 CURVE SMOOTH",
"193 244 OFFCURVE",
"204 240 OFFCURVE",
"216 236 CURVE",
"199 233 OFFCURVE",
"182 227 OFFCURVE",
"166 220 CURVE SMOOTH",
"126 202 OFFCURVE",
"106 181 OFFCURVE",
"106 156 CURVE SMOOTH",
"106 143 OFFCURVE",
"113 132 OFFCURVE",
"127 123 CURVE SMOOTH",
"135 117 OFFCURVE",
"146 112 OFFCURVE",
"160 108 CURVE",
"166 105 OFFCURVE",
"172 103 OFFCURVE",
"178 102 CURVE SMOOTH",
"195 97 LINE SMOOTH",
"250 78 OFFCURVE",
"278 58 OFFCURVE",
"278 35 CURVE SMOOTH",
"278 29 OFFCURVE",
"276 23 OFFCURVE",
"272 17 CURVE SMOOTH",
"260 -4 OFFCURVE",
"231 -21 OFFCURVE",
"186 -36 CURVE SMOOTH",
"148 -48 OFFCURVE",
"114 -54 OFFCURVE",
"84 -54 CURVE SMOOTH",
"44 -54 OFFCURVE",
"24 -44 OFFCURVE",
"24 -25 CURVE SMOOTH",
"24 -4 OFFCURVE",
"37 16 OFFCURVE",
"63 35 CURVE SMOOTH",
"86 52 OFFCURVE",
"108 61 OFFCURVE",
"128 61 CURVE SMOOTH",
"131 61 OFFCURVE",
"132 60 OFFCURVE",
"132 58 CURVE",
"131 55 LINE",
"128 49 LINE SMOOTH",
"121 34 OFFCURVE",
"108 20 OFFCURVE",
"89 9 CURVE SMOOTH",
"82 4 OFFCURVE",
"79 1 OFFCURVE",
"79 -2 CURVE SMOOTH",
"79 -3 OFFCURVE",
"80 -4 OFFCURVE",
"83 -4 CURVE SMOOTH",
"86 -4 OFFCURVE",
"92 -1 OFFCURVE",
"101 5 CURVE SMOOTH",
"134 26 OFFCURVE",
"151 47 OFFCURVE",
"151 68 CURVE SMOOTH",
"151 75 OFFCURVE",
"145 79 OFFCURVE",
"134 79 CURVE SMOOTH",
"110 79 OFFCURVE",
"84 68 OFFCURVE",
"56 46 CURVE SMOOTH",
"27 21 OFFCURVE",
"12 -4 OFFCURVE",
"12 -30 CURVE SMOOTH",
"12 -60 OFFCURVE",
"36 -75 OFFCURVE",
"83 -75 CURVE",
"83 -75 LINE"
);
},
{
closed = 1;
nodes = (
"253 97 OFFCURVE",
"251 98 OFFCURVE",
"248 99 CURVE",
"245 101 OFFCURVE",
"217 111 OFFCURVE",
"164 128 CURVE SMOOTH",
"133 138 OFFCURVE",
"118 148 OFFCURVE",
"118 159 CURVE SMOOTH",
"118 172 OFFCURVE",
"131 185 OFFCURVE",
"158 198 CURVE SMOOTH",
"175 207 OFFCURVE",
"192 214 OFFCURVE",
"211 218 CURVE SMOOTH",
"218 220 OFFCURVE",
"225 221 OFFCURVE",
"234 221 CURVE SMOOTH",
"277 221 OFFCURVE",
"335 194 OFFCURVE",
"335 163 CURVE SMOOTH",
"335 157 OFFCURVE",
"333 151 OFFCURVE",
"329 145 CURVE",
"321 127 OFFCURVE",
"270 95 OFFCURVE",
"254 97 CURVE",
"254 97 LINE"
);
}
);
width = 356;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = copyright;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"218 2 OFFCURVE",
"270 27 OFFCURVE",
"319 78 CURVE SMOOTH",
"362 122 OFFCURVE",
"384 166 OFFCURVE",
"384 212 CURVE SMOOTH",
"384 255 OFFCURVE",
"368 289 OFFCURVE",
"336 313 CURVE SMOOTH",
"309 334 OFFCURVE",
"280 344 OFFCURVE",
"248 344 CURVE SMOOTH",
"193 344 OFFCURVE",
"141 319 OFFCURVE",
"91 269 CURVE SMOOTH",
"48 224 OFFCURVE",
"24 180 OFFCURVE",
"24 133 CURVE SMOOTH",
"24 90 OFFCURVE",
"40 56 OFFCURVE",
"74 31 CURVE SMOOTH",
"101 12 OFFCURVE",
"130 2 OFFCURVE",
"163 2 CURVE",
"163 2 LINE"
);
},
{
closed = 1;
nodes = (
"190 71 OFFCURVE",
"214 75 OFFCURVE",
"234 90 CURVE",
"243 95 OFFCURVE",
"258 107 OFFCURVE",
"265 114 CURVE SMOOTH",
"269 119 OFFCURVE",
"271 122 OFFCURVE",
"271 124 CURVE SMOOTH",
"271 126 OFFCURVE",
"270 127 OFFCURVE",
"268 127 CURVE SMOOTH",
"266 127 OFFCURVE",
"263 126 OFFCURVE",
"259 123 CURVE SMOOTH",
"235 104 OFFCURVE",
"201 92 OFFCURVE",
"181 92 CURVE SMOOTH",
"148 92 OFFCURVE",
"135 116 OFFCURVE",
"135 145 CURVE SMOOTH",
"135 168 OFFCURVE",
"143 194 OFFCURVE",
"155 214 CURVE SMOOTH",
"172 239 OFFCURVE",
"201 256 OFFCURVE",
"221 256 CURVE SMOOTH",
"232 256 OFFCURVE",
"239 252 OFFCURVE",
"239 243 CURVE SMOOTH",
"239 238 OFFCURVE",
"237 231 OFFCURVE",
"231 222 CURVE SMOOTH",
"228 218 OFFCURVE",
"229 216 OFFCURVE",
"235 216 CURVE SMOOTH",
"240 216 OFFCURVE",
"246 220 OFFCURVE",
"252 228 CURVE SMOOTH",
"260 236 OFFCURVE",
"264 251 OFFCURVE",
"264 256 CURVE SMOOTH",
"264 271 OFFCURVE",
"255 278 OFFCURVE",
"237 278 CURVE SMOOTH",
"210 278 OFFCURVE",
"181 261 OFFCURVE",
"150 228 CURVE SMOOTH",
"123 198 OFFCURVE",
"105 159 OFFCURVE",
"105 127 CURVE SMOOTH",
"105 95 OFFCURVE",
"123 71 OFFCURVE",
"167 71 CURVE",
"167 71 LINE"
);
},
{
closed = 1;
nodes = (
"142 17 OFFCURVE",
"117 25 OFFCURVE",
"94 42 CURVE SMOOTH",
"69 60 OFFCURVE",
"54 82 OFFCURVE",
"51 109 CURVE SMOOTH",
"50 117 OFFCURVE",
"49 125 OFFCURVE",
"49 133 CURVE SMOOTH",
"49 177 OFFCURVE",
"67 218 OFFCURVE",
"103 258 CURVE SMOOTH",
"144 305 OFFCURVE",
"190 329 OFFCURVE",
"243 329 CURVE SMOOTH",
"272 329 OFFCURVE",
"298 321 OFFCURVE",
"319 301 CURVE SMOOTH",
"346 278 OFFCURVE",
"358 246 OFFCURVE",
"358 206 CURVE SMOOTH",
"358 165 OFFCURVE",
"340 125 OFFCURVE",
"305 86 CURVE SMOOTH",
"264 40 OFFCURVE",
"220 17 OFFCURVE",
"171 17 CURVE",
"171 17 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1 30 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 3 values pushed */\0122 43 3 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = registered;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"218 2 OFFCURVE",
"270 27 OFFCURVE",
"319 78 CURVE SMOOTH",
"362 122 OFFCURVE",
"384 166 OFFCURVE",
"384 212 CURVE SMOOTH",
"384 255 OFFCURVE",
"368 289 OFFCURVE",
"336 313 CURVE SMOOTH",
"309 334 OFFCURVE",
"280 344 OFFCURVE",
"248 344 CURVE SMOOTH",
"193 344 OFFCURVE",
"141 319 OFFCURVE",
"91 269 CURVE SMOOTH",
"48 224 OFFCURVE",
"24 180 OFFCURVE",
"24 133 CURVE SMOOTH",
"24 90 OFFCURVE",
"40 56 OFFCURVE",
"74 31 CURVE SMOOTH",
"101 12 OFFCURVE",
"130 2 OFFCURVE",
"163 2 CURVE",
"163 2 LINE"
);
},
{
closed = 1;
nodes = (
"106 67 OFFCURVE",
"109 68 OFFCURVE",
"111 71 CURVE SMOOTH",
"122 89 OFFCURVE",
"142 134 OFFCURVE",
"151 155 CURVE",
"167 127 OFFCURVE",
"194 92 OFFCURVE",
"234 92 CURVE SMOOTH",
"248 92 OFFCURVE",
"276 104 OFFCURVE",
"280 127 CURVE SMOOTH",
"281 136 OFFCURVE",
"276 130 OFFCURVE",
"273 125 CURVE SMOOTH",
"269 116 OFFCURVE",
"259 104 OFFCURVE",
"243 103 CURVE SMOOTH",
"215 103 OFFCURVE",
"187 141 OFFCURVE",
"175 163 CURVE",
"236 166 OFFCURVE",
"313 192 OFFCURVE",
"313 243 CURVE SMOOTH",
"313 272 OFFCURVE",
"275 283 OFFCURVE",
"238 283 CURVE SMOOTH",
"206 283 OFFCURVE",
"169 276 OFFCURVE",
"149 272 CURVE SMOOTH",
"139 269 OFFCURVE",
"134 265 OFFCURVE",
"134 262 CURVE SMOOTH",
"134 261 OFFCURVE",
"135 260 OFFCURVE",
"139 260 CURVE SMOOTH",
"141 260 OFFCURVE",
"143 260 OFFCURVE",
"146 261 CURVE SMOOTH",
"181 270 OFFCURVE",
"204 270 OFFCURVE",
"236 270 CURVE",
"271 267 OFFCURVE",
"291 254 OFFCURVE",
"291 237 CURVE SMOOTH",
"291 224 OFFCURVE",
"280 210 OFFCURVE",
"258 194 CURVE SMOOTH",
"241 183 OFFCURVE",
"191 173 OFFCURVE",
"174 173 CURVE SMOOTH",
"167 173 OFFCURVE",
"164 178 OFFCURVE",
"164 183 CURVE SMOOTH",
"164 185 LINE",
"169 201 OFFCURVE",
"206 258 OFFCURVE",
"218 260 CURVE",
"220 261 OFFCURVE",
"222 262 OFFCURVE",
"224 265 CURVE SMOOTH",
"225 267 OFFCURVE",
"225 268 OFFCURVE",
"222 267 CURVE",
"205 266 OFFCURVE",
"189 259 OFFCURVE",
"182 246 CURVE SMOOTH",
"154 191 LINE",
"151 191 OFFCURVE",
"144 190 OFFCURVE",
"143 186 CURVE SMOOTH",
"143 185 OFFCURVE",
"144 183 OFFCURVE",
"145 181 CURVE SMOOTH",
"146 179 OFFCURVE",
"146 177 OFFCURVE",
"146 176 CURVE",
"90 81 LINE SMOOTH",
"85 74 OFFCURVE",
"94 67 OFFCURVE",
"102 67 CURVE",
"102 67 LINE"
);
},
{
closed = 1;
nodes = (
"142 17 OFFCURVE",
"117 25 OFFCURVE",
"94 42 CURVE SMOOTH",
"69 60 OFFCURVE",
"54 82 OFFCURVE",
"51 109 CURVE SMOOTH",
"50 117 OFFCURVE",
"49 125 OFFCURVE",
"49 133 CURVE SMOOTH",
"49 177 OFFCURVE",
"67 218 OFFCURVE",
"103 258 CURVE SMOOTH",
"144 305 OFFCURVE",
"190 329 OFFCURVE",
"243 329 CURVE SMOOTH",
"272 329 OFFCURVE",
"298 321 OFFCURVE",
"319 301 CURVE SMOOTH",
"346 278 OFFCURVE",
"358 246 OFFCURVE",
"358 206 CURVE SMOOTH",
"358 165 OFFCURVE",
"340 125 OFFCURVE",
"305 86 CURVE SMOOTH",
"264 40 OFFCURVE",
"220 17 OFFCURVE",
"171 17 CURVE",
"171 17 LINE"
);
}
);
userData = {
assembly = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\0126 1 30 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 399;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = trademark;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"173 205 OFFCURVE",
"178 208 OFFCURVE",
"183 215 CURVE SMOOTH",
"188 224 OFFCURVE",
"195 242 OFFCURVE",
"202 269 CURVE SMOOTH",
"209 297 OFFCURVE",
"215 316 OFFCURVE",
"220 326 CURVE",
"235 270 OFFCURVE",
"254 242 OFFCURVE",
"276 242 CURVE SMOOTH",
"296 242 OFFCURVE",
"328 270 OFFCURVE",
"371 326 CURVE",
"362 281 OFFCURVE",
"355 247 OFFCURVE",
"351 223 CURVE",
"351 218 LINE SMOOTH",
"351 215 OFFCURVE",
"353 213 OFFCURVE",
"358 213 CURVE SMOOTH",
"368 213 OFFCURVE",
"375 216 OFFCURVE",
"379 223 CURVE",
"384 260 OFFCURVE",
"387 296 OFFCURVE",
"388 329 CURVE SMOOTH",
"388 331 OFFCURVE",
"389 334 OFFCURVE",
"390 338 CURVE SMOOTH",
"393 352 LINE SMOOTH",
"396 361 OFFCURVE",
"396 369 OFFCURVE",
"396 373 CURVE SMOOTH",
"396 384 OFFCURVE",
"394 390 OFFCURVE",
"389 390 CURVE SMOOTH",
"388 390 OFFCURVE",
"373 368 OFFCURVE",
"344 323 CURVE SMOOTH",
"315 278 OFFCURVE",
"295 255 OFFCURVE",
"282 255 CURVE SMOOTH",
"267 255 OFFCURVE",
"256 273 OFFCURVE",
"249 309 CURVE SMOOTH",
"246 321 OFFCURVE",
"244 333 OFFCURVE",
"243 346 CURVE SMOOTH",
"237 382 LINE",
"234 391 OFFCURVE",
"232 396 OFFCURVE",
"229 396 CURVE SMOOTH",
"221 396 OFFCURVE",
"216 389 OFFCURVE",
"214 374 CURVE SMOOTH",
"212 359 LINE SMOOTH",
"211 354 OFFCURVE",
"211 348 OFFCURVE",
"211 343 CURVE",
"202 321 LINE",
"183 271 LINE SMOOTH",
"167 231 OFFCURVE",
"159 210 OFFCURVE",
"159 209 CURVE SMOOTH",
"159 206 OFFCURVE",
"161 205 OFFCURVE",
"166 205 CURVE",
"166 205 LINE"
);
},
{
closed = 1;
nodes = (
"51 201 OFFCURVE",
"55 203 OFFCURVE",
"58 207 CURVE",
"65 224 OFFCURVE",
"71 238 OFFCURVE",
"74 249 CURVE SMOOTH",
"84 280 LINE",
"93 311 LINE SMOOTH",
"102 338 OFFCURVE",
"110 358 OFFCURVE",
"117 371 CURVE SMOOTH",
"120 376 OFFCURVE",
"137 381 OFFCURVE",
"168 384 CURVE SMOOTH",
"197 387 OFFCURVE",
"211 392 OFFCURVE",
"211 397 CURVE SMOOTH",
"211 400 OFFCURVE",
"206 402 OFFCURVE",
"197 402 CURVE SMOOTH",
"173 402 OFFCURVE",
"142 400 OFFCURVE",
"101 397 CURVE SMOOTH",
"48 393 OFFCURVE",
"20 388 OFFCURVE",
"17 383 CURVE",
"18 378 OFFCURVE",
"24 375 OFFCURVE",
"33 375 CURVE SMOOTH",
"38 375 OFFCURVE",
"45 376 OFFCURVE",
"55 377 CURVE SMOOTH",
"69 378 LINE",
"78 378 LINE SMOOTH",
"89 378 OFFCURVE",
"95 376 OFFCURVE",
"95 373 CURVE SMOOTH",
"95 371 OFFCURVE",
"95 368 OFFCURVE",
"94 364 CURVE SMOOTH",
"93 359 OFFCURVE",
"91 353 OFFCURVE",
"88 346 CURVE SMOOTH",
"57 275 LINE SMOOTH",
"41 236 OFFCURVE",
"33 214 OFFCURVE",
"33 209 CURVE SMOOTH",
"33 204 OFFCURVE",
"37 201 OFFCURVE",
"44 201 CURVE",
"44 201 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\0120 53 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012218 53 234 53 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 27 values pushed */\0129 53 25 53 41 53 57 53 73 53 89 53 105 53 121 53 137 53 153 53 169 53 185 53 201 53 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 3 values pushed */\01218 53 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 3 values pushed */\01222 53 0 \012SRP1[ ]	/* SetRefPoint1 */\012SRP2[ ]	/* SetRefPoint2 */\012IP[ ]	/* InterpolatePts */\012PUSHW[ ]	/* 1 value pushed */\01253 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01235 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01286 3 77 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01247 1 20 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\01286 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01240 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01280 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\01277 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01282 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 410;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = degree;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 308 OFFCURVE",
"134 322 OFFCURVE",
"154 342 CURVE SMOOTH",
"170 358 OFFCURVE",
"176 375 OFFCURVE",
"176 392 CURVE SMOOTH",
"176 420 OFFCURVE",
"161 425 OFFCURVE",
"133 425 CURVE SMOOTH",
"119 425 OFFCURVE",
"105 423 OFFCURVE",
"93 416 CURVE SMOOTH",
"58 399 OFFCURVE",
"36 372 OFFCURVE",
"39 345 CURVE",
"39 323 OFFCURVE",
"56 308 OFFCURVE",
"79 308 CURVE",
"79 308 LINE"
);
},
{
closed = 1;
nodes = (
"75 329 OFFCURVE",
"66 336 OFFCURVE",
"66 349 CURVE SMOOTH",
"66 359 OFFCURVE",
"75 380 OFFCURVE",
"85 386 CURVE",
"99 398 OFFCURVE",
"113 403 OFFCURVE",
"132 403 CURVE SMOOTH",
"142 403 OFFCURVE",
"149 399 OFFCURVE",
"149 385 CURVE SMOOTH",
"149 380 OFFCURVE",
"149 374 OFFCURVE",
"144 367 CURVE",
"134 347 OFFCURVE",
"105 329 OFFCURVE",
"88 329 CURVE",
"88 329 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\01222 5 41 4 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 5 values pushed */\012106 41 122 41 2 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012NPUSHW[ ]	/* 33 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 105 41 121 41 137 41 153 41 169 41 185 41 201 41 217 41 233 41 249 41 16 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 13 values pushed */\0129 41 25 41 41 41 57 41 73 41 89 41 6 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012PUSHW[ ]	/* 1 value pushed */\01222 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01249 \012MDRP[11100]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01233 4 5 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01217 4 44 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 199;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = minute;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 184, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 136;
}
);
unicode = 2032;
},
{
glyphname = second;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 244, 47}";
},
{
name = acutecomb;
transform = "{0.88295, 0.46947, -0.46947, 0.88295, 184, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 164;
}
);
unicode = 2033;
},
{
glyphname = bar;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"138 -144 LINE",
"165 -144 LINE",
"165 468 LINE",
"138 468 LINE",
"138 -144 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0120 5 1 4 \012CALL[ ]	/* CallFunction */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0120 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = brokenbar;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"138 -144 LINE",
"165 -144 LINE",
"165 120 LINE",
"138 120 LINE",
"138 -144 LINE"
);
},
{
closed = 1;
nodes = (
"138 232 LINE",
"165 232 LINE",
"165 468 LINE",
"138 468 LINE",
"138 232 LINE"
);
}
);
width = 304;
}
);
unicode = 00A6;
},
{
glyphname = dagger;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"156 -149 OFFCURVE",
"161 -147 OFFCURVE",
"165 -144 CURVE",
"165 -97 OFFCURVE",
"168 -13 OFFCURVE",
"170 42 CURVE SMOOTH",
"172 108 OFFCURVE",
"173 175 OFFCURVE",
"176 236 CURVE",
"191 237 OFFCURVE",
"210 238 OFFCURVE",
"231 239 CURVE SMOOTH",
"249 240 OFFCURVE",
"258 243 OFFCURVE",
"258 248 CURVE SMOOTH",
"258 253 OFFCURVE",
"249 256 OFFCURVE",
"231 258 CURVE SMOOTH",
"177 264 LINE",
"179 324 OFFCURVE",
"180 377 OFFCURVE",
"180 417 CURVE SMOOTH",
"180 437 OFFCURVE",
"180 454 OFFCURVE",
"179 466 CURVE SMOOTH",
"177 478 OFFCURVE",
"172 482 OFFCURVE",
"166 482 CURVE SMOOTH",
"159 482 OFFCURVE",
"149 476 OFFCURVE",
"138 468 CURVE",
"138 266 LINE",
"134 266 LINE SMOOTH",
"114 266 OFFCURVE",
"98 264 OFFCURVE",
"87 261 CURVE",
"70 254 OFFCURVE",
"51 242 OFFCURVE",
"51 234 CURVE SMOOTH",
"51 229 OFFCURVE",
"58 227 OFFCURVE",
"72 227 CURVE SMOOTH",
"77 227 LINE SMOOTH",
"100 228 OFFCURVE",
"120 229 OFFCURVE",
"138 231 CURVE",
"138 -144 LINE",
"143 -147 OFFCURVE",
"147 -149 OFFCURVE",
"152 -149 CURVE",
"152 -149 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 4 values pushed */\0127 5 9 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01229 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\0122 \012MDAP[1]	/* MoveDirectAbsPt */\012PUSHW[ ]	/* 1 value pushed */\0129 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01220 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01229 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01226 \012MDAP[1]	/* MoveDirectAbsPt */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"156 -149 OFFCURVE",
"161 -147 OFFCURVE",
"165 -144 CURVE",
"165 -87 OFFCURVE",
"169 17 OFFCURVE",
"171 84 CURVE SMOOTH",
"175 203 LINE SMOOTH",
"178 293 OFFCURVE",
"180 372 OFFCURVE",
"180 428 CURVE SMOOTH",
"180 443 OFFCURVE",
"179 456 OFFCURVE",
"179 466 CURVE",
"177 478 OFFCURVE",
"172 482 OFFCURVE",
"166 482 CURVE SMOOTH",
"159 482 OFFCURVE",
"149 476 OFFCURVE",
"138 468 CURVE",
"138 -144 LINE",
"143 -147 OFFCURVE",
"147 -149 OFFCURVE",
"152 -149 CURVE",
"152 -149 LINE"
);
},
{
closed = 1;
nodes = (
"77 114 LINE SMOOTH",
"106 115 OFFCURVE",
"132 118 OFFCURVE",
"153 121 CURVE SMOOTH",
"172 124 OFFCURVE",
"198 125 OFFCURVE",
"231 126 CURVE SMOOTH",
"249 127 OFFCURVE",
"258 129 OFFCURVE",
"258 134 CURVE SMOOTH",
"258 139 OFFCURVE",
"249 143 OFFCURVE",
"231 145 CURVE SMOOTH",
"186 150 OFFCURVE",
"153 153 OFFCURVE",
"134 153 CURVE SMOOTH",
"114 153 OFFCURVE",
"98 151 OFFCURVE",
"87 148 CURVE",
"70 141 OFFCURVE",
"51 129 OFFCURVE",
"51 121 CURVE SMOOTH",
"51 116 OFFCURVE",
"58 114 OFFCURVE",
"72 114 CURVE",
"72 114 LINE"
);
},
{
closed = 1;
nodes = (
"77 274 LINE SMOOTH",
"106 275 OFFCURVE",
"132 278 OFFCURVE",
"153 281 CURVE SMOOTH",
"172 284 OFFCURVE",
"198 285 OFFCURVE",
"231 286 CURVE SMOOTH",
"249 287 OFFCURVE",
"258 289 OFFCURVE",
"258 294 CURVE SMOOTH",
"258 299 OFFCURVE",
"249 303 OFFCURVE",
"231 305 CURVE SMOOTH",
"186 310 OFFCURVE",
"153 313 OFFCURVE",
"134 313 CURVE SMOOTH",
"114 313 OFFCURVE",
"98 311 OFFCURVE",
"87 308 CURVE",
"70 301 OFFCURVE",
"51 289 OFFCURVE",
"51 281 CURVE SMOOTH",
"51 276 OFFCURVE",
"58 274 OFFCURVE",
"72 274 CURVE",
"72 274 LINE"
);
}
);
userData = {
assembly = "PUSHW[ ]	/* 3 values pushed */\01212 21 3 \012CALL[ ]	/* CallFunction */\012NPUSHW[ ]	/* 27 values pushed */\0126 12 22 12 38 12 54 12 70 12 86 12 102 12 118 12 134 12 150 12 166 12 182 12 198 12 13 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012NPUSHW[ ]	/* 5 values pushed */\012213 12 229 12 2 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012PUSHW[ ]	/* 1 value pushed */\01212 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 2 values pushed */\01214 5 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 2 values pushed */\0125 8 \012MIRP[10100]	/* MoveIndirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01214 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01247 \012MDRP[11100]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01230 \012MDRP[10000]	/* MoveDirectRelPt */\012PUSHW[ ]	/* 1 value pushed */\01221 \012SRP0[ ]	/* SetRefPoint0 */\012PUSHW[ ]	/* 1 value pushed */\01238 \012MDRP[10000]	/* MoveDirectRelPt */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHW[ ]	/* 4 values pushed */\01243 4 36 4 \012CALL[ ]	/* CallFunction */\012PUSHW[ ]	/* 4 values pushed */\01226 4 19 4 \012CALL[ ]	/* CallFunction */\012IUP[0]	/* InterpolateUntPts */\012IUP[1]	/* InterpolateUntPts */";
};
width = 304;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = numero;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
components = (
{
name = o;
transform = "{1, 0, 0, 1, 486, 101}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"369 -140 OFFCURVE",
"381 -138 OFFCURVE",
"394 -133 CURVE SMOOTH",
"409 -128 OFFCURVE",
"422 -120 OFFCURVE",
"432 -110 CURVE SMOOTH",
"439 -103 OFFCURVE",
"442 -96 OFFCURVE",
"442 -89 CURVE SMOOTH",
"442 -86 OFFCURVE",
"441 -86 OFFCURVE",
"438 -87 CURVE",
"438 -95 OFFCURVE",
"403 -114 OFFCURVE",
"388 -114 CURVE SMOOTH",
"365 -114 OFFCURVE",
"353 -95 OFFCURVE",
"353 -58 CURVE SMOOTH",
"353 -17 OFFCURVE",
"366 44 OFFCURVE",
"393 123 CURVE SMOOTH",
"409 170 OFFCURVE",
"441 244 OFFCURVE",
"490 344 CURVE SMOOTH",
"505 375 OFFCURVE",
"513 400 OFFCURVE",
"513 421 CURVE SMOOTH",
"513 443 OFFCURVE",
"503 454 OFFCURVE",
"484 454 CURVE SMOOTH",
"477 454 OFFCURVE",
"468 452 OFFCURVE",
"458 449 CURVE SMOOTH",
"441 444 OFFCURVE",
"416 430 OFFCURVE",
"385 408 CURVE SMOOTH",
"311 355 OFFCURVE",
"225 270 OFFCURVE",
"127 154 CURVE",
"161 258 OFFCURVE",
"178 337 OFFCURVE",
"178 390 CURVE SMOOTH",
"178 464 OFFCURVE",
"151 506 OFFCURVE",
"98 518 CURVE SMOOTH",
"90 519 OFFCURVE",
"86 518 OFFCURVE",
"86 516 CURVE SMOOTH",
"86 513 OFFCURVE",
"90 509 OFFCURVE",
"101 504 CURVE SMOOTH",
"130 491 OFFCURVE",
"147 457 OFFCURVE",
"147 411 CURVE SMOOTH",
"147 351 OFFCURVE",
"129 263 OFFCURVE",
"83 150 CURVE SMOOTH",
"39 41 OFFCURVE",
"32 24 OFFCURVE",
"27 9 CURVE SMOOTH",
"23 0 OFFCURVE",
"21 -7 OFFCURVE",
"21 -13 CURVE SMOOTH",
"21 -18 OFFCURVE",
"23 -21 OFFCURVE",
"28 -21 CURVE SMOOTH",
"33 -21 OFFCURVE",
"39 -18 OFFCURVE",
"48 -12 CURVE SMOOTH",
"56 -7 OFFCURVE",
"61 -2 OFFCURVE",
"63 1 CURVE SMOOTH",
"82 36 OFFCURVE",
"96 62 OFFCURVE",
"105 81 CURVE",
"135 128 OFFCURVE",
"165 167 OFFCURVE",
"208 213 CURVE SMOOTH",
"231 237 OFFCURVE",
"267 273 OFFCURVE",
"318 321 CURVE SMOOTH",
"355 356 OFFCURVE",
"392 385 OFFCURVE",
"429 408 CURVE SMOOTH",
"440 415 OFFCURVE",
"449 418 OFFCURVE",
"456 418 CURVE SMOOTH",
"464 418 OFFCURVE",
"468 413 OFFCURVE",
"468 402 CURVE SMOOTH",
"468 396 OFFCURVE",
"466 388 OFFCURVE",
"463 377 CURVE",
"426 276 OFFCURVE",
"395 195 OFFCURVE",
"372 134 CURVE SMOOTH",
"340 47 LINE SMOOTH",
"322 -1 OFFCURVE",
"317 -41 OFFCURVE",
"317 -71 CURVE SMOOTH",
"317 -112 OFFCURVE",
"331 -134 OFFCURVE",
"360 -139 CURVE",
"360 -139 LINE"
);
}
);
width = 761;
}
);
unicode = 2116;
},
{
glyphname = apostrophemod;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -85, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 74;
}
);
unicode = 02BC;
},
{
glyphname = doubleprimemod;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, 41, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, -30, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 200;
}
);
unicode = 02BA;
},
{
glyphname = primemod;
lastChange = "2021-10-05 03:17:34 +0000";
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -85, 0}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 74;
}
);
unicode = 02B9;
},
{
color = 6;
glyphname = dieresiscomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{44, 170}";
},
{
name = top;
position = "{64, 232}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"97 210 OFFCURVE",
"109 221 OFFCURVE",
"109 236 CURVE SMOOTH",
"109 245 OFFCURVE",
"103 253 OFFCURVE",
"95 253 CURVE SMOOTH",
"81 253 OFFCURVE",
"68 236 OFFCURVE",
"68 223 CURVE SMOOTH",
"68 214 OFFCURVE",
"73 210 OFFCURVE",
"82 210 CURVE",
"82 210 LINE"
);
},
{
closed = 1;
nodes = (
"29 210 OFFCURVE",
"41 221 OFFCURVE",
"41 236 CURVE SMOOTH",
"41 245 OFFCURVE",
"35 253 OFFCURVE",
"27 253 CURVE SMOOTH",
"13 253 OFFCURVE",
"0 236 OFFCURVE",
"0 223 CURVE SMOOTH",
"0 214 OFFCURVE",
"5 210 OFFCURVE",
"14 210 CURVE",
"14 210 LINE"
);
}
);
width = 109;
}
);
unicode = 0308;
},
{
color = 6;
glyphname = dotaccentcomb;
lastChange = "2021-10-05 05:17:02 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{3, 170}";
},
{
name = top;
position = "{22, 234}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"29 211 OFFCURVE",
"44 227 OFFCURVE",
"44 242 CURVE SMOOTH",
"44 251 OFFCURVE",
"38 259 OFFCURVE",
"30 259 CURVE SMOOTH",
"16 259 OFFCURVE",
"0 237 OFFCURVE",
"0 224 CURVE SMOOTH",
"0 215 OFFCURVE",
"5 211 OFFCURVE",
"14 211 CURVE"
);
}
);
width = 44;
}
);
unicode = 0307;
},
{
color = 6;
glyphname = gravecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{77, 170}";
},
{
name = _topviet;
position = "{118, 182}";
},
{
name = top;
position = "{53, 293}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 211 OFFCURVE",
"105 212 OFFCURVE",
"105 213 CURVE SMOOTH",
"105 216 OFFCURVE",
"104 218 OFFCURVE",
"102 219 CURVE SMOOTH",
"66 245 OFFCURVE",
"54 254 OFFCURVE",
"36 271 CURVE SMOOTH",
"31 276 OFFCURVE",
"26 278 OFFCURVE",
"22 278 CURVE SMOOTH",
"16 278 OFFCURVE",
"13 274 OFFCURVE",
"13 266 CURVE SMOOTH",
"13 259 OFFCURVE",
"18 254 OFFCURVE",
"22 250 CURVE",
"42 239 OFFCURVE",
"59 228 OFFCURVE",
"92 214 CURVE SMOOTH",
"94 213 OFFCURVE",
"99 211 OFFCURVE",
"101 211 CURVE",
"101 211 LINE"
);
}
);
width = 105;
}
);
unicode = 0300;
},
{
color = 6;
glyphname = acutecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{28, 170}";
},
{
name = top;
position = "{53, 292}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"19 211 OFFCURVE",
"24 213 OFFCURVE",
"26 214 CURVE SMOOTH",
"59 228 OFFCURVE",
"76 239 OFFCURVE",
"96 250 CURVE",
"100 254 OFFCURVE",
"105 259 OFFCURVE",
"105 266 CURVE SMOOTH",
"105 274 OFFCURVE",
"102 278 OFFCURVE",
"96 278 CURVE SMOOTH",
"92 278 OFFCURVE",
"87 276 OFFCURVE",
"82 271 CURVE SMOOTH",
"64 254 OFFCURVE",
"52 245 OFFCURVE",
"16 219 CURVE SMOOTH",
"14 218 OFFCURVE",
"13 216 OFFCURVE",
"13 213 CURVE SMOOTH",
"13 212 OFFCURVE",
"14 211 OFFCURVE",
"17 211 CURVE",
"17 211 LINE"
);
}
);
width = 105;
}
);
unicode = 0301;
},
{
color = 6;
glyphname = hungarumlautcomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{30, 170}";
},
{
name = top;
position = "{56, 309}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"55 210 OFFCURVE",
"65 209 OFFCURVE",
"67 213 CURVE SMOOTH",
"73 223 OFFCURVE",
"104 273 OFFCURVE",
"108 281 CURVE",
"111 291 OFFCURVE",
"108 300 OFFCURVE",
"96 300 CURVE SMOOTH",
"83 300 OFFCURVE",
"79 292 OFFCURVE",
"75 277 CURVE SMOOTH",
"69 250 OFFCURVE",
"67 242 OFFCURVE",
"56 213 CURVE",
"56 213 LINE"
);
},
{
closed = 1;
nodes = (
"-1 210 OFFCURVE",
"8 209 OFFCURVE",
"11 213 CURVE SMOOTH",
"17 223 OFFCURVE",
"48 273 OFFCURVE",
"51 281 CURVE SMOOTH",
"55 291 OFFCURVE",
"51 300 OFFCURVE",
"40 300 CURVE SMOOTH",
"27 300 OFFCURVE",
"22 292 OFFCURVE",
"19 277 CURVE SMOOTH",
"13 250 OFFCURVE",
"11 242 OFFCURVE",
"0 213 CURVE",
"0 213 LINE"
);
}
);
width = 112;
}
);
unicode = 030B;
},
{
color = 6;
glyphname = caroncomb.alt;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{11, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"4 71 OFFCURVE",
"8 73 OFFCURVE",
"15 77 CURVE SMOOTH",
"27 85 OFFCURVE",
"38 98 OFFCURVE",
"49 115 CURVE SMOOTH",
"58 129 OFFCURVE",
"64 143 OFFCURVE",
"64 154 CURVE SMOOTH",
"64 163 OFFCURVE",
"60 170 OFFCURVE",
"49 170 CURVE SMOOTH",
"39 170 OFFCURVE",
"34 160 OFFCURVE",
"34 150 CURVE SMOOTH",
"34 143 OFFCURVE",
"35 135 OFFCURVE",
"36 132 CURVE",
"27 114 OFFCURVE",
"18 98 OFFCURVE",
"8 86 CURVE SMOOTH",
"3 80 OFFCURVE",
"0 75 OFFCURVE",
"0 73 CURVE SMOOTH",
"0 72 OFFCURVE",
"0 71 OFFCURVE",
"2 71 CURVE",
"2 71 LINE"
);
}
);
width = 64;
}
);
},
{
color = 6;
glyphname = circumflexcomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{71, 170}";
},
{
name = top;
position = "{76, 243}";
},
{
name = topviet;
position = "{185, 242}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"140 210 OFFCURVE",
"140 212 OFFCURVE",
"140 213 CURVE",
"114 267 LINE SMOOTH",
"113 269 OFFCURVE",
"104 269 OFFCURVE",
"87 267 CURVE",
"15 213 LINE",
"14 212 LINE",
"14 210 OFFCURVE",
"16 209 OFFCURVE",
"21 210 CURVE SMOOTH",
"26 210 OFFCURVE",
"29 212 OFFCURVE",
"32 213 CURVE SMOOTH",
"93 243 LINE",
"126 213 LINE SMOOTH",
"129 210 OFFCURVE",
"134 209 OFFCURVE",
"138 209 CURVE",
"138 209 LINE"
);
}
);
width = 152;
}
);
unicode = 0302;
},
{
color = 6;
glyphname = caroncomb;
lastChange = "2021-10-05 03:59:25 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{28, 170}";
},
{
name = top;
position = "{58, 259}";
}
);
components = (
{
name = circumflexcomb;
transform = "{-1, 0, 0, -1, 146, 476}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
unicode = 030C;
},
{
color = 6;
glyphname = brevecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{37, 170}";
},
{
name = top;
position = "{66, 239}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"78 208 OFFCURVE",
"111 230 OFFCURVE",
"128 257 CURVE SMOOTH",
"131 262 OFFCURVE",
"127 264 OFFCURVE",
"124 264 CURVE SMOOTH",
"123 264 OFFCURVE",
"122 264 OFFCURVE",
"121 263 CURVE SMOOTH",
"97 235 OFFCURVE",
"76 230 OFFCURVE",
"53 230 CURVE SMOOTH",
"39 230 OFFCURVE",
"27 236 OFFCURVE",
"19 251 CURVE SMOOTH",
"15 259 OFFCURVE",
"14 263 OFFCURVE",
"12 263 CURVE SMOOTH",
"4 263 OFFCURVE",
"0 255 OFFCURVE",
"0 246 CURVE SMOOTH",
"0 235 OFFCURVE",
"5 223 OFFCURVE",
"15 216 CURVE SMOOTH",
"23 210 OFFCURVE",
"33 208 OFFCURVE",
"44 208 CURVE",
"44 208 LINE"
);
}
);
width = 133;
}
);
unicode = 0306;
},
{
color = 6;
glyphname = ringcomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{18, 170}";
},
{
name = top;
position = "{60, 268}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"59 214 OFFCURVE",
"93 225 OFFCURVE",
"93 263 CURVE SMOOTH",
"93 275 OFFCURVE",
"83 286 OFFCURVE",
"58 286 CURVE SMOOTH",
"27 286 OFFCURVE",
"-4 263 OFFCURVE",
"-4 236 CURVE SMOOTH",
"-4 221 OFFCURVE",
"12 214 OFFCURVE",
"28 214 CURVE",
"28 214 LINE"
);
},
{
closed = 1;
nodes = (
"25 224 OFFCURVE",
"22 232 OFFCURVE",
"22 240 CURVE SMOOTH",
"22 253 OFFCURVE",
"35 277 OFFCURVE",
"52 277 CURVE SMOOTH",
"65 277 OFFCURVE",
"67 269 OFFCURVE",
"67 261 CURVE SMOOTH",
"67 246 OFFCURVE",
"52 224 OFFCURVE",
"33 224 CURVE",
"33 224 LINE"
);
}
);
width = 88;
}
);
unicode = 030A;
},
{
color = 6;
glyphname = tildecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{72, 170}";
},
{
name = _topviet;
position = "{148, 162}";
},
{
name = top;
position = "{78, 237}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"121 209 OFFCURVE",
"137 223 OFFCURVE",
"152 251 CURVE",
"152 253 OFFCURVE",
"149 254 OFFCURVE",
"144 254 CURVE SMOOTH",
"142 254 OFFCURVE",
"141 254 OFFCURVE",
"141 253 CURVE",
"135 241 OFFCURVE",
"127 235 OFFCURVE",
"117 235 CURVE SMOOTH",
"110 235 OFFCURVE",
"99 238 OFFCURVE",
"84 244 CURVE SMOOTH",
"69 250 OFFCURVE",
"57 253 OFFCURVE",
"49 253 CURVE SMOOTH",
"33 253 OFFCURVE",
"18 241 OFFCURVE",
"4 215 CURVE",
"4 213 OFFCURVE",
"6 213 OFFCURVE",
"12 213 CURVE SMOOTH",
"14 213 OFFCURVE",
"16 213 OFFCURVE",
"16 214 CURVE",
"21 225 OFFCURVE",
"30 231 OFFCURVE",
"39 231 CURVE SMOOTH",
"47 231 OFFCURVE",
"57 227 OFFCURVE",
"72 222 CURVE",
"86 215 OFFCURVE",
"95 212 OFFCURVE",
"102 212 CURVE",
"102 212 LINE"
);
}
);
width = 156;
}
);
unicode = 0303;
},
{
color = 6;
glyphname = tildecomb_dotaccentcomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = tildecomb;
},
{
name = dotaccentcomb;
transform = "{1, 0, 0, 1, 75, 67}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 156;
}
);
},
{
color = 6;
glyphname = tildecomb_macroncomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{78, 170}";
},
{
name = top;
position = "{78, 298}";
}
);
components = (
{
name = tildecomb;
},
{
name = macroncomb;
transform = "{1, 0, 0, 1, 19, 67}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 156;
}
);
},
{
color = 6;
glyphname = macroncomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{59, 170}";
},
{
name = top;
position = "{79, 232}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"122 221 LINE SMOOTH",
"129 221 OFFCURVE",
"137 230 OFFCURVE",
"137 236 CURVE SMOOTH",
"137 238 OFFCURVE",
"136 240 OFFCURVE",
"135 241 CURVE",
"24 241 LINE SMOOTH",
"15 241 OFFCURVE",
"8 235 OFFCURVE",
"8 228 CURVE SMOOTH",
"8 226 OFFCURVE",
"9 223 OFFCURVE",
"10 221 CURVE",
"10 221 LINE"
);
}
);
width = 143;
}
);
unicode = 0304;
},
{
color = 6;
glyphname = hookabovecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{27, 178}";
},
{
name = _topviet;
position = "{49, 206}";
},
{
name = top;
position = "{52, 322}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"28 216 OFFCURVE",
"32 218 OFFCURVE",
"37 221 CURVE SMOOTH",
"48 228 OFFCURVE",
"82 241 OFFCURVE",
"82 269 CURVE SMOOTH",
"82 284 OFFCURVE",
"76 298 OFFCURVE",
"53 298 CURVE SMOOTH",
"34 298 OFFCURVE",
"21 289 OFFCURVE",
"12 280 CURVE SMOOTH",
"7 275 OFFCURVE",
"5 270 OFFCURVE",
"5 268 CURVE",
"4 266 OFFCURVE",
"5 265 OFFCURVE",
"7 265 CURVE SMOOTH",
"10 265 OFFCURVE",
"14 268 OFFCURVE",
"19 270 CURVE",
"27 275 OFFCURVE",
"36 278 OFFCURVE",
"45 278 CURVE SMOOTH",
"54 278 OFFCURVE",
"58 274 OFFCURVE",
"58 266 CURVE SMOOTH",
"58 247 OFFCURVE",
"44 238 OFFCURVE",
"25 225 CURVE SMOOTH",
"19 221 OFFCURVE",
"20 216 OFFCURVE",
"25 216 CURVE",
"25 216 LINE"
);
}
);
width = 104;
}
);
unicode = 0309;
},
{
color = 6;
glyphname = dblgravecomb;
lastChange = "2021-10-05 03:31:15 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{110, 170}";
},
{
name = top;
position = "{68, 293}";
}
);
components = (
{
name = gravecomb;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, 1, 53}";
},
{
name = gravecomb;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, -52, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 135;
}
);
unicode = 030F;
},
{
color = 6;
glyphname = breveinvertedcomb;
lastChange = "2021-10-05 03:30:38 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{56, 170}";
},
{
name = top;
position = "{68, 265}";
}
);
components = (
{
name = brevecomb;
transform = "{-0.99939, 0.0349, -0.12233, -0.99634, 165, 471}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 135;
}
);
unicode = 0311;
},
{
color = 6;
glyphname = commaturnedabovecomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{9, 170}";
},
{
name = top;
position = "{47, 285}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"35 211 OFFCURVE",
"44 219 OFFCURVE",
"44 232 CURVE SMOOTH",
"44 241 OFFCURVE",
"41 245 OFFCURVE",
"36 247 CURVE",
"44 262 OFFCURVE",
"59 277 OFFCURVE",
"68 285 CURVE SMOOTH",
"74 292 OFFCURVE",
"85 301 OFFCURVE",
"85 304 CURVE SMOOTH",
"85 305 OFFCURVE",
"84 306 OFFCURVE",
"83 306 CURVE SMOOTH",
"81 306 OFFCURVE",
"76 304 OFFCURVE",
"68 301 CURVE",
"54 293 OFFCURVE",
"40 280 OFFCURVE",
"25 264 CURVE",
"16 251 OFFCURVE",
"8 236 OFFCURVE",
"8 225 CURVE SMOOTH",
"8 217 OFFCURVE",
"12 211 OFFCURVE",
"23 211 CURVE",
"23 211 LINE"
);
}
);
width = 93;
}
);
unicode = 0312;
},
{
color = 6;
glyphname = horncomb;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{-20, 170}";
},
{
name = topright;
position = "{98, 224}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"51 148 OFFCURVE",
"69 153 OFFCURVE",
"74 163 CURVE SMOOTH",
"77 169 OFFCURVE",
"79 176 OFFCURVE",
"79 184 CURVE SMOOTH",
"79 190 OFFCURVE",
"78 196 OFFCURVE",
"76 203 CURVE SMOOTH",
"74 209 OFFCURVE",
"66 216 OFFCURVE",
"64 216 CURVE SMOOTH",
"61 216 OFFCURVE",
"59 213 OFFCURVE",
"59 206 CURVE SMOOTH",
"59 190 OFFCURVE",
"57 184 OFFCURVE",
"51 174 CURVE SMOOTH",
"45 164 OFFCURVE",
"37 160 OFFCURVE",
"29 160 CURVE SMOOTH",
"21 160 OFFCURVE",
"13 163 OFFCURVE",
"6 170 CURVE",
"1 173 OFFCURVE",
"-2 165 OFFCURVE",
"2 161 CURVE SMOOTH",
"11 152 OFFCURVE",
"24 148 OFFCURVE",
"36 148 CURVE",
"36 148 LINE"
);
}
);
width = 76;
}
);
unicode = 031B;
},
{
color = 6;
glyphname = dotbelowcomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{42, 0}";
},
{
name = bottom;
position = "{22, -85}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"29 -85 OFFCURVE",
"44 -69 OFFCURVE",
"44 -54 CURVE SMOOTH",
"44 -45 OFFCURVE",
"38 -37 OFFCURVE",
"30 -37 CURVE SMOOTH",
"16 -37 OFFCURVE",
"0 -59 OFFCURVE",
"0 -72 CURVE SMOOTH",
"0 -81 OFFCURVE",
"5 -85 OFFCURVE",
"14 -85 CURVE",
"14 -85 LINE"
);
}
);
width = 44;
}
);
unicode = 0323;
},
{
color = 6;
glyphname = dieresisbelowcomb;
lastChange = "2021-10-05 03:31:36 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{64, 0}";
},
{
name = bottom;
position = "{48, -76}";
}
);
components = (
{
name = dieresiscomb;
transform = "{1, 0, 0, 1, 0, -285}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 109;
}
);
unicode = 0324;
},
{
color = 6;
glyphname = commaaccentcomb;
lastChange = "2021-10-05 05:07:47 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{69, 0}";
},
{
name = bottom;
position = "{34, -161}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"5 -141 OFFCURVE",
"9 -140 OFFCURVE",
"15 -135 CURVE",
"28 -127 OFFCURVE",
"41 -115 OFFCURVE",
"53 -98 CURVE SMOOTH",
"64 -82 OFFCURVE",
"70 -71 OFFCURVE",
"69 -64 CURVE SMOOTH",
"67 -52 OFFCURVE",
"62 -47 OFFCURVE",
"53 -46 CURVE SMOOTH",
"38 -46 OFFCURVE",
"28 -57 OFFCURVE",
"28 -66 CURVE SMOOTH",
"28 -77 OFFCURVE",
"32 -83 OFFCURVE",
"39 -84 CURVE",
"26 -104 OFFCURVE",
"15 -119 OFFCURVE",
"7 -127 CURVE SMOOTH",
"2 -133 OFFCURVE",
"0 -137 OFFCURVE",
"0 -140 CURVE",
"2 -141 LINE"
);
}
);
width = 69;
}
);
unicode = 0326;
},
{
color = 6;
glyphname = cedillacomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{88, 0}";
},
{
name = bottom;
position = "{63, -130}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"117 -84 OFFCURVE",
"138 -61 OFFCURVE",
"138 -44 CURVE SMOOTH",
"138 -24 OFFCURVE",
"122 -15 OFFCURVE",
"100 -15 CURVE SMOOTH",
"96 -15 OFFCURVE",
"92 -16 OFFCURVE",
"87 -16 CURVE",
"104 3 LINE SMOOTH",
"108 7 OFFCURVE",
"104 9 OFFCURVE",
"96 11 CURVE",
"64 -24 LINE SMOOTH",
"62 -26 OFFCURVE",
"62 -28 OFFCURVE",
"62 -30 CURVE SMOOTH",
"62 -33 OFFCURVE",
"63 -35 OFFCURVE",
"67 -35 CURVE",
"67 -35 OFFCURVE",
"68 -35 OFFCURVE",
"70 -34 CURVE SMOOTH",
"77 -29 OFFCURVE",
"85 -25 OFFCURVE",
"97 -25 CURVE SMOOTH",
"105 -25 OFFCURVE",
"115 -29 OFFCURVE",
"115 -42 CURVE SMOOTH",
"115 -62 OFFCURVE",
"96 -73 OFFCURVE",
"78 -73 CURVE SMOOTH",
"70 -73 OFFCURVE",
"62 -71 OFFCURVE",
"55 -66 CURVE SMOOTH",
"51 -63 OFFCURVE",
"48 -61 OFFCURVE",
"48 -61 CURVE",
"46 -61 OFFCURVE",
"45 -61 OFFCURVE",
"45 -63 CURVE SMOOTH",
"45 -76 OFFCURVE",
"68 -85 OFFCURVE",
"80 -85 CURVE",
"80 -85 LINE"
);
}
);
width = 126;
}
);
unicode = 0327;
},
{
color = 6;
glyphname = ogonekcomb;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{90, 4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"71 -91 OFFCURVE",
"107 -82 OFFCURVE",
"109 -70 CURVE SMOOTH",
"110 -65 OFFCURVE",
"108 -63 OFFCURVE",
"103 -63 CURVE",
"103 -63 OFFCURVE",
"86 -71 OFFCURVE",
"69 -71 CURVE SMOOTH",
"51 -71 OFFCURVE",
"39 -66 OFFCURVE",
"39 -53 CURVE SMOOTH",
"39 -35 OFFCURVE",
"54 -19 OFFCURVE",
"69 -2 CURVE SMOOTH",
"75 5 OFFCURVE",
"68 4 OFFCURVE",
"63 4 CURVE SMOOTH",
"55 4 OFFCURVE",
"13 -46 OFFCURVE",
"13 -68 CURVE SMOOTH",
"13 -83 OFFCURVE",
"26 -91 OFFCURVE",
"50 -91 CURVE",
"50 -91 LINE"
);
}
);
width = 122;
}
);
unicode = 0328;
},
{
color = 6;
glyphname = brevebelowcomb;
lastChange = "2021-10-05 03:30:38 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{72, 0}";
},
{
name = bottom;
position = "{72, -92}";
}
);
components = (
{
name = brevecomb;
transform = "{1, 0, 0, 1, 0, -300}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
unicode = 032E;
},
{
color = 6;
glyphname = macronbelowcomb;
lastChange = "2021-10-05 03:31:51 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{83, 0}";
},
{
name = bottom;
position = "{148, -63}";
}
);
components = (
{
name = macroncomb;
transform = "{1, 0, 0, 1, 0, -275}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 143;
}
);
unicode = 0331;
},
{
color = 6;
glyphname = strokeshortcomb;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = _center;
position = "{72, 82}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"50 77 LINE SMOOTH",
"78 77 OFFCURVE",
"103 80 OFFCURVE",
"123 82 CURVE SMOOTH",
"141 83 OFFCURVE",
"153 85 OFFCURVE",
"184 86 CURVE SMOOTH",
"202 86 OFFCURVE",
"207 88 OFFCURVE",
"207 92 CURVE SMOOTH",
"207 96 OFFCURVE",
"202 98 OFFCURVE",
"184 99 CURVE SMOOTH",
"163 101 OFFCURVE",
"147 102 OFFCURVE",
"135 102 CURVE SMOOTH",
"123 102 OFFCURVE",
"114 101 OFFCURVE",
"104 101 CURVE SMOOTH",
"85 101 OFFCURVE",
"70 100 OFFCURVE",
"59 97 CURVE SMOOTH",
"44 93 OFFCURVE",
"26 87 OFFCURVE",
"26 83 CURVE SMOOTH",
"26 79 OFFCURVE",
"31 77 OFFCURVE",
"43 77 CURVE",
"43 77 LINE"
);
}
);
width = 265;
}
);
unicode = 0335;
},
{
glyphname = dieresis;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = dieresiscomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 109;
}
);
unicode = 00A8;
},
{
glyphname = dotaccent;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = dotaccentcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 44;
}
);
unicode = 02D9;
},
{
glyphname = grave;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = gravecomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 105;
}
);
unicode = 0060;
},
{
glyphname = acute;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = acutecomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 105;
}
);
unicode = 00B4;
},
{
glyphname = hungarumlaut;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = hungarumlautcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 112;
}
);
unicode = 02DD;
},
{
glyphname = circumflex;
layers = (
{
components = (
{
name = circumflexcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
components = (
{
name = caroncomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
components = (
{
name = brevecomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
unicode = 02D8;
},
{
glyphname = ring;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = ringcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 88;
}
);
unicode = 02DA;
},
{
glyphname = tilde;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = tildecomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 156;
}
);
unicode = 02DC;
},
{
glyphname = macron;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = macroncomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 143;
}
);
unicode = 00AF;
},
{
glyphname = cedilla;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = cedillacomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 126;
}
);
unicode = 00B8;
},
{
glyphname = ogonek;
lastChange = "2021-10-05 03:32:01 +0000";
layers = (
{
components = (
{
name = ogonekcomb;
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 122;
}
);
unicode = 02DB;
},
{
color = 6;
glyphname = dieresiscomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{44, 170}";
},
{
name = top;
position = "{55, 224}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"97 210 OFFCURVE",
"109 221 OFFCURVE",
"109 236 CURVE SMOOTH",
"109 245 OFFCURVE",
"103 253 OFFCURVE",
"95 253 CURVE SMOOTH",
"81 253 OFFCURVE",
"68 236 OFFCURVE",
"68 223 CURVE SMOOTH",
"68 214 OFFCURVE",
"73 210 OFFCURVE",
"82 210 CURVE",
"82 210 LINE"
);
},
{
closed = 1;
nodes = (
"29 210 OFFCURVE",
"41 221 OFFCURVE",
"41 236 CURVE SMOOTH",
"41 245 OFFCURVE",
"35 253 OFFCURVE",
"27 253 CURVE SMOOTH",
"13 253 OFFCURVE",
"0 236 OFFCURVE",
"0 223 CURVE SMOOTH",
"0 214 OFFCURVE",
"5 210 OFFCURVE",
"14 210 CURVE",
"14 210 LINE"
);
}
);
width = 109;
}
);
},
{
color = 6;
glyphname = dotaccentcomb.case;
lastChange = "2021-10-05 05:19:17 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{3, 170}";
},
{
name = top;
position = "{27, 230}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"29 211 OFFCURVE",
"44 227 OFFCURVE",
"44 242 CURVE SMOOTH",
"44 251 OFFCURVE",
"38 259 OFFCURVE",
"30 259 CURVE SMOOTH",
"16 259 OFFCURVE",
"0 237 OFFCURVE",
"0 224 CURVE SMOOTH",
"0 215 OFFCURVE",
"5 211 OFFCURVE",
"14 211 CURVE"
);
}
);
width = 44;
}
);
},
{
color = 6;
glyphname = gravecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{77, 170}";
},
{
name = _topviet;
position = "{104, 170}";
},
{
name = top;
position = "{53, 293}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"104 216 OFFCURVE",
"105 217 OFFCURVE",
"105 218 CURVE SMOOTH",
"105 221 OFFCURVE",
"104 223 OFFCURVE",
"102 224 CURVE",
"69 250 OFFCURVE",
"43 270 OFFCURVE",
"23 285 CURVE",
"18 290 OFFCURVE",
"13 292 OFFCURVE",
"9 292 CURVE SMOOTH",
"3 292 OFFCURVE",
"0 288 OFFCURVE",
"0 280 CURVE SMOOTH",
"0 273 OFFCURVE",
"2 268 OFFCURVE",
"6 264 CURVE",
"30 248 OFFCURVE",
"59 237 OFFCURVE",
"92 219 CURVE SMOOTH",
"94 218 OFFCURVE",
"99 216 OFFCURVE",
"101 216 CURVE",
"101 216 LINE"
);
}
);
width = 105;
}
);
},
{
color = 6;
glyphname = acutecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{28, 170}";
},
{
name = top;
position = "{53, 292}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"6 216 OFFCURVE",
"11 218 OFFCURVE",
"13 219 CURVE SMOOTH",
"46 237 OFFCURVE",
"75 248 OFFCURVE",
"99 264 CURVE",
"103 268 OFFCURVE",
"105 273 OFFCURVE",
"105 280 CURVE SMOOTH",
"105 288 OFFCURVE",
"102 292 OFFCURVE",
"96 292 CURVE SMOOTH",
"92 292 OFFCURVE",
"87 290 OFFCURVE",
"82 285 CURVE",
"62 270 OFFCURVE",
"36 250 OFFCURVE",
"3 224 CURVE",
"1 223 OFFCURVE",
"0 221 OFFCURVE",
"0 218 CURVE SMOOTH",
"0 217 OFFCURVE",
"1 216 OFFCURVE",
"4 216 CURVE",
"4 216 LINE"
);
}
);
width = 105;
}
);
},
{
color = 6;
glyphname = hungarumlautcomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{30, 170}";
},
{
name = top;
position = "{56, 309}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"55 210 OFFCURVE",
"65 209 OFFCURVE",
"67 213 CURVE SMOOTH",
"73 223 OFFCURVE",
"107 282 OFFCURVE",
"111 290 CURVE",
"114 300 OFFCURVE",
"111 309 OFFCURVE",
"99 309 CURVE SMOOTH",
"86 309 OFFCURVE",
"82 301 OFFCURVE",
"78 286 CURVE SMOOTH",
"72 259 OFFCURVE",
"67 242 OFFCURVE",
"56 213 CURVE",
"56 213 LINE"
);
},
{
closed = 1;
nodes = (
"-1 210 OFFCURVE",
"8 209 OFFCURVE",
"11 213 CURVE SMOOTH",
"17 223 OFFCURVE",
"51 282 OFFCURVE",
"54 290 CURVE SMOOTH",
"58 300 OFFCURVE",
"54 309 OFFCURVE",
"43 309 CURVE SMOOTH",
"30 309 OFFCURVE",
"25 301 OFFCURVE",
"22 286 CURVE SMOOTH",
"16 259 OFFCURVE",
"11 242 OFFCURVE",
"0 213 CURVE",
"0 213 LINE"
);
}
);
width = 112;
}
);
},
{
color = 6;
glyphname = caroncomb.alt.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{11, 170}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"4 71 OFFCURVE",
"8 73 OFFCURVE",
"15 77 CURVE SMOOTH",
"27 85 OFFCURVE",
"38 98 OFFCURVE",
"49 115 CURVE SMOOTH",
"58 129 OFFCURVE",
"64 143 OFFCURVE",
"64 154 CURVE SMOOTH",
"64 163 OFFCURVE",
"60 170 OFFCURVE",
"49 170 CURVE SMOOTH",
"39 170 OFFCURVE",
"34 160 OFFCURVE",
"34 150 CURVE SMOOTH",
"34 143 OFFCURVE",
"35 135 OFFCURVE",
"36 132 CURVE",
"27 114 OFFCURVE",
"18 98 OFFCURVE",
"8 86 CURVE SMOOTH",
"3 80 OFFCURVE",
"0 75 OFFCURVE",
"0 73 CURVE SMOOTH",
"0 72 OFFCURVE",
"0 71 OFFCURVE",
"2 71 CURVE",
"2 71 LINE"
);
}
);
width = 64;
}
);
},
{
color = 6;
glyphname = circumflexcomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{76, 170}";
},
{
name = top;
position = "{89, 261}";
},
{
name = topviet;
position = "{185, 242}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"152 210 OFFCURVE",
"152 212 OFFCURVE",
"152 213 CURVE",
"128 285 LINE SMOOTH",
"127 287 OFFCURVE",
"118 287 OFFCURVE",
"101 285 CURVE",
"1 213 LINE",
"0 212 LINE",
"0 210 OFFCURVE",
"2 209 OFFCURVE",
"7 210 CURVE SMOOTH",
"12 210 OFFCURVE",
"15 211 OFFCURVE",
"18 213 CURVE SMOOTH",
"107 261 LINE",
"138 213 LINE SMOOTH",
"140 210 OFFCURVE",
"146 209 OFFCURVE",
"150 209 CURVE",
"150 209 LINE"
);
}
);
width = 152;
}
);
},
{
color = 6;
glyphname = caroncomb.case;
lastChange = "2021-10-05 04:00:28 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{28, 170}";
},
{
name = top;
position = "{58, 259}";
}
);
components = (
{
name = circumflexcomb.case;
transform = "{-1, 0, 0, -1, 152, 496}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = brevecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{37, 170}";
},
{
name = top;
position = "{66, 239}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"78 208 OFFCURVE",
"124 234 OFFCURVE",
"139 257 CURVE SMOOTH",
"142 262 OFFCURVE",
"138 264 OFFCURVE",
"135 264 CURVE SMOOTH",
"134 264 OFFCURVE",
"133 264 OFFCURVE",
"132 263 CURVE SMOOTH",
"110 244 OFFCURVE",
"76 230 OFFCURVE",
"53 230 CURVE SMOOTH",
"39 230 OFFCURVE",
"23 236 OFFCURVE",
"15 251 CURVE SMOOTH",
"11 259 OFFCURVE",
"10 263 OFFCURVE",
"8 263 CURVE SMOOTH",
"0 263 OFFCURVE",
"-4 255 OFFCURVE",
"-4 246 CURVE SMOOTH",
"-4 235 OFFCURVE",
"2 223 OFFCURVE",
"12 216 CURVE SMOOTH",
"20 210 OFFCURVE",
"33 208 OFFCURVE",
"44 208 CURVE",
"44 208 LINE"
);
}
);
width = 133;
}
);
},
{
color = 6;
glyphname = ringcomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{18, 170}";
},
{
name = top;
position = "{60, 268}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"61 209 OFFCURVE",
"95 230 OFFCURVE",
"95 268 CURVE SMOOTH",
"95 281 OFFCURVE",
"79 291 OFFCURVE",
"60 291 CURVE SMOOTH",
"24 291 OFFCURVE",
"-6 260 OFFCURVE",
"-6 234 CURVE SMOOTH",
"-6 221 OFFCURVE",
"8 209 OFFCURVE",
"26 209 CURVE",
"26 209 LINE"
);
},
{
closed = 1;
nodes = (
"22 221 OFFCURVE",
"19 230 OFFCURVE",
"19 238 CURVE SMOOTH",
"19 253 OFFCURVE",
"34 280 OFFCURVE",
"53 280 CURVE SMOOTH",
"68 280 OFFCURVE",
"69 271 OFFCURVE",
"69 263 CURVE SMOOTH",
"69 245 OFFCURVE",
"53 221 OFFCURVE",
"32 221 CURVE",
"32 221 LINE"
);
}
);
width = 88;
}
);
},
{
color = 6;
glyphname = tildecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{72, 170}";
},
{
name = _topviet;
position = "{130, 149}";
},
{
name = top;
position = "{78, 237}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"124 208 OFFCURVE",
"141 222 OFFCURVE",
"156 252 CURVE",
"156 254 OFFCURVE",
"153 255 OFFCURVE",
"148 255 CURVE SMOOTH",
"146 255 OFFCURVE",
"145 255 OFFCURVE",
"145 254 CURVE",
"139 241 OFFCURVE",
"130 235 OFFCURVE",
"119 235 CURVE SMOOTH",
"112 235 OFFCURVE",
"100 238 OFFCURVE",
"84 245 CURVE SMOOTH",
"68 251 OFFCURVE",
"56 254 OFFCURVE",
"47 254 CURVE SMOOTH",
"30 254 OFFCURVE",
"14 241 OFFCURVE",
"0 214 CURVE SMOOTH",
"-1 212 OFFCURVE",
"2 212 OFFCURVE",
"8 212 CURVE SMOOTH",
"10 212 OFFCURVE",
"12 212 OFFCURVE",
"12 213 CURVE",
"18 225 OFFCURVE",
"27 231 OFFCURVE",
"37 231 CURVE SMOOTH",
"45 231 OFFCURVE",
"56 227 OFFCURVE",
"72 221 CURVE SMOOTH",
"86 214 OFFCURVE",
"96 211 OFFCURVE",
"103 211 CURVE",
"103 211 LINE"
);
}
);
width = 156;
}
);
},
{
color = 6;
glyphname = tildecomb_dotaccentcomb.case;
lastChange = "2021-10-05 04:43:05 +0000";
layers = (
{
components = (
{
name = tildecomb.case;
},
{
name = dotaccentcomb.case;
transform = "{1, 0, 0, 1, 75, 67}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 156;
}
);
},
{
color = 6;
glyphname = tildecomb_macroncomb.case;
lastChange = "2021-10-05 04:43:03 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{78, 170}";
},
{
name = top;
position = "{78, 298}";
}
);
components = (
{
name = tildecomb.case;
},
{
name = macroncomb.case;
transform = "{1, 0, 0, 1, 10, 67}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 156;
}
);
},
{
color = 6;
glyphname = macroncomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{68, 170}";
},
{
name = top;
position = "{79, 232}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"128 225 LINE SMOOTH",
"135 225 OFFCURVE",
"143 234 OFFCURVE",
"143 240 CURVE SMOOTH",
"143 242 OFFCURVE",
"142 244 OFFCURVE",
"141 245 CURVE",
"16 245 LINE SMOOTH",
"7 245 OFFCURVE",
"0 239 OFFCURVE",
"0 232 CURVE SMOOTH",
"0 230 OFFCURVE",
"1 227 OFFCURVE",
"2 225 CURVE",
"2 225 LINE"
);
}
);
width = 143;
}
);
},
{
color = 6;
glyphname = hookabovecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{25, 170}";
},
{
name = _topviet;
position = "{38, 184}";
},
{
name = top;
position = "{52, 323}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"27 211 OFFCURVE",
"31 213 OFFCURVE",
"36 216 CURVE SMOOTH",
"48 223 OFFCURVE",
"84 244 OFFCURVE",
"84 274 CURVE SMOOTH",
"84 290 OFFCURVE",
"77 305 OFFCURVE",
"53 305 CURVE SMOOTH",
"33 305 OFFCURVE",
"19 293 OFFCURVE",
"10 286 CURVE SMOOTH",
"4 282 OFFCURVE",
"2 276 OFFCURVE",
"2 273 CURVE",
"1 271 OFFCURVE",
"2 270 OFFCURVE",
"4 270 CURVE SMOOTH",
"7 270 OFFCURVE",
"12 273 OFFCURVE",
"17 276 CURVE SMOOTH",
"25 281 OFFCURVE",
"35 284 OFFCURVE",
"45 284 CURVE SMOOTH",
"54 284 OFFCURVE",
"58 280 OFFCURVE",
"58 271 CURVE SMOOTH",
"58 251 OFFCURVE",
"43 241 OFFCURVE",
"23 220 CURVE SMOOTH",
"17 214 OFFCURVE",
"18 211 OFFCURVE",
"23 211 CURVE",
"23 211 LINE"
);
}
);
width = 104;
}
);
},
{
color = 6;
glyphname = dblgravecomb.case;
lastChange = "2021-10-05 04:32:08 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{110, 170}";
},
{
name = top;
position = "{68, 293}";
}
);
components = (
{
name = gravecomb.case;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, 1, 53}";
},
{
name = gravecomb.case;
transform = "{0.89038, -0.17203, 0.18622, 0.82253, -52, 53}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 135;
}
);
},
{
color = 6;
glyphname = breveinvertedcomb.case;
lastChange = "2021-10-05 04:01:24 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{56, 170}";
},
{
name = top;
position = "{68, 265}";
}
);
components = (
{
name = brevecomb.case;
transform = "{-0.99939, 0.0349, -0.12233, -0.99634, 165, 471}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 135;
}
);
},
{
color = 6;
glyphname = commaturnedabovecomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _top;
position = "{9, 170}";
},
{
name = top;
position = "{47, 285}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"35 211 OFFCURVE",
"44 219 OFFCURVE",
"44 232 CURVE SMOOTH",
"44 241 OFFCURVE",
"41 245 OFFCURVE",
"36 247 CURVE",
"44 262 OFFCURVE",
"59 277 OFFCURVE",
"68 285 CURVE SMOOTH",
"74 292 OFFCURVE",
"85 301 OFFCURVE",
"85 304 CURVE SMOOTH",
"85 305 OFFCURVE",
"84 306 OFFCURVE",
"83 306 CURVE SMOOTH",
"81 306 OFFCURVE",
"76 304 OFFCURVE",
"68 301 CURVE",
"54 293 OFFCURVE",
"40 280 OFFCURVE",
"25 264 CURVE",
"16 251 OFFCURVE",
"8 236 OFFCURVE",
"8 225 CURVE SMOOTH",
"8 217 OFFCURVE",
"12 211 OFFCURVE",
"23 211 CURVE",
"23 211 LINE"
);
}
);
width = 93;
}
);
},
{
color = 6;
glyphname = horncomb.case;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
anchors = (
{
name = _topright;
position = "{-40, 166}";
},
{
name = topright;
position = "{117, 238}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"55 137 OFFCURVE",
"79 143 OFFCURVE",
"85 157 CURVE SMOOTH",
"89 165 OFFCURVE",
"92 174 OFFCURVE",
"92 185 CURVE SMOOTH",
"92 192 OFFCURVE",
"91 201 OFFCURVE",
"88 210 CURVE SMOOTH",
"85 218 OFFCURVE",
"75 227 OFFCURVE",
"72 227 CURVE SMOOTH",
"68 227 OFFCURVE",
"65 223 OFFCURVE",
"65 214 CURVE SMOOTH",
"65 193 OFFCURVE",
"63 185 OFFCURVE",
"55 171 CURVE SMOOTH",
"47 158 OFFCURVE",
"36 153 OFFCURVE",
"25 153 CURVE SMOOTH",
"15 153 OFFCURVE",
"4 157 OFFCURVE",
"-5 166 CURVE",
"-10 169 OFFCURVE",
"-13 165 OFFCURVE",
"-13 160 CURVE SMOOTH",
"-13 158 OFFCURVE",
"-12 156 OFFCURVE",
"-10 154 CURVE",
"1 142 OFFCURVE",
"19 137 OFFCURVE",
"35 137 CURVE",
"35 137 LINE"
);
}
);
width = 76;
}
);
},
{
color = 6;
glyphname = cedillacomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _bottom;
position = "{88, 0}";
},
{
name = bottom;
position = "{63, -130}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"102 -129 OFFCURVE",
"126 -101 OFFCURVE",
"126 -76 CURVE SMOOTH",
"126 -54 OFFCURVE",
"109 -35 OFFCURVE",
"79 -35 CURVE SMOOTH",
"72 -35 OFFCURVE",
"66 -36 OFFCURVE",
"60 -37 CURVE",
"106 8 LINE SMOOTH",
"109 11 OFFCURVE",
"106 14 OFFCURVE",
"98 16 CURVE",
"27 -48 LINE SMOOTH",
"25 -50 OFFCURVE",
"24 -53 OFFCURVE",
"24 -56 CURVE SMOOTH",
"24 -60 OFFCURVE",
"26 -63 OFFCURVE",
"31 -63 CURVE SMOOTH",
"32 -63 OFFCURVE",
"33 -63 OFFCURVE",
"35 -62 CURVE SMOOTH",
"46 -55 OFFCURVE",
"56 -49 OFFCURVE",
"74 -49 CURVE SMOOTH",
"85 -49 OFFCURVE",
"100 -55 OFFCURVE",
"100 -73 CURVE SMOOTH",
"100 -102 OFFCURVE",
"73 -118 OFFCURVE",
"47 -118 CURVE SMOOTH",
"35 -118 OFFCURVE",
"24 -115 OFFCURVE",
"15 -108 CURVE SMOOTH",
"8 -103 OFFCURVE",
"5 -100 OFFCURVE",
"4 -100 CURVE SMOOTH",
"1 -100 OFFCURVE",
"0 -101 OFFCURVE",
"0 -103 CURVE SMOOTH",
"0 -122 OFFCURVE",
"33 -130 OFFCURVE",
"50 -130 CURVE",
"50 -130 LINE"
);
}
);
width = 126;
}
);
},
{
color = 6;
glyphname = ogonekcomb.case;
lastChange = "2021-10-05 05:06:45 +0000";
layers = (
{
anchors = (
{
name = _ogonek;
position = "{90, 4}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"46 -114 OFFCURVE",
"61 -111 OFFCURVE",
"82 -105 CURVE SMOOTH",
"107 -97 OFFCURVE",
"121 -90 OFFCURVE",
"122 -84 CURVE SMOOTH",
"123 -79 OFFCURVE",
"121 -77 OFFCURVE",
"116 -77 CURVE",
"116 -77 OFFCURVE",
"73 -94 OFFCURVE",
"56 -94 CURVE SMOOTH",
"38 -94 OFFCURVE",
"31 -87 OFFCURVE",
"31 -74 CURVE SMOOTH",
"31 -71 OFFCURVE",
"31 -68 OFFCURVE",
"32 -64 CURVE SMOOTH",
"37 -44 OFFCURVE",
"57 -15 OFFCURVE",
"69 -2 CURVE SMOOTH",
"75 5 OFFCURVE",
"68 4 OFFCURVE",
"63 4 CURVE SMOOTH",
"54 4 OFFCURVE",
"42 -9 OFFCURVE",
"26 -33 CURVE SMOOTH",
"10 -58 OFFCURVE",
"0 -77 OFFCURVE",
"0 -91 CURVE SMOOTH",
"0 -106 OFFCURVE",
"13 -114 OFFCURVE",
"37 -114 CURVE",
"37 -114 LINE"
);
}
);
width = 122;
}
);
},
{
color = 6;
glyphname = brevecomb_acutecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 38, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_gravecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, -11, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_hookabovecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 39, 61}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_tildecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = brevecomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, -6, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = circumflexcomb_acutecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = acutecomb;
transform = "{1, 0, 0, 1, 48, 73}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_gravecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = gravecomb;
transform = "{1, 0, 0, 1, 67, 60}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_hookabovecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = hookabovecomb;
transform = "{1, 0, 0, 1, 136, 36}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_tildecomb;
lastChange = "2021-10-05 04:54:11 +0000";
layers = (
{
components = (
{
name = circumflexcomb;
},
{
name = tildecomb;
transform = "{1, 0, 0, 1, 37, 80}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = brevecomb_acutecomb.case;
lastChange = "2021-10-05 04:27:32 +0000";
layers = (
{
components = (
{
name = brevecomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 38, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_gravecomb.case;
lastChange = "2021-10-05 04:27:32 +0000";
layers = (
{
components = (
{
name = brevecomb.case;
},
{
name = gravecomb.case;
transform = "{1, 0, 0, 1, -11, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_hookabovecomb.case;
lastChange = "2021-10-05 04:27:32 +0000";
layers = (
{
components = (
{
name = brevecomb.case;
},
{
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 41, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = brevecomb_tildecomb.case;
lastChange = "2021-10-05 04:27:32 +0000";
layers = (
{
components = (
{
name = brevecomb.case;
},
{
name = tildecomb.case;
transform = "{1, 0, 0, 1, -6, 69}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 133;
}
);
},
{
color = 6;
glyphname = circumflexcomb_acutecomb.case;
lastChange = "2021-10-05 04:27:32 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case;
},
{
name = acutecomb.case;
transform = "{1, 0, 0, 1, 61, 91}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_gravecomb.case;
lastChange = "2021-10-05 04:27:39 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = gravecomb.case;
transform = "{1, 0, 0, 1, 81, 72}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_hookabovecomb.case;
lastChange = "2021-10-05 04:27:43 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = hookabovecomb.case;
transform = "{1, 0, 0, 1, 147, 58}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
color = 6;
glyphname = circumflexcomb_tildecomb.case;
lastChange = "2021-10-05 04:27:47 +0000";
layers = (
{
components = (
{
name = circumflexcomb.case;
},
{
anchor = topviet;
name = tildecomb.case;
transform = "{1, 0, 0, 1, 55, 93}";
}
);
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
width = 152;
}
);
},
{
glyphname = robbie;
lastChange = "2021-10-05 05:06:59 +0000";
layers = (
{
layerId = "0CF23081-C341-41E4-8FF8-6B151438961F";
paths = (
{
closed = 1;
nodes = (
"196 -119 LINE",
"252 -119 LINE",
"252 -113 LINE",
"254 -113 LINE",
"254 -111 LINE",
"258 -111 LINE",
"258 -110 LINE",
"261 -110 LINE",
"264 -107 LINE",
"263 -106 OFFCURVE",
"263 -105 OFFCURVE",
"263 -104 CURVE",
"264 -103 OFFCURVE",
"265 -102 OFFCURVE",
"266 -102 CURVE",
"267 -101 OFFCURVE",
"268 -101 OFFCURVE",
"269 -101 CURVE",
"269 -100 OFFCURVE",
"270 -100 OFFCURVE",
"271 -100 CURVE",
"273 -99 LINE",
"272 -99 OFFCURVE",
"271 -99 OFFCURVE",
"271 -98 CURVE",
"275 -98 OFFCURVE",
"278 -97 OFFCURVE",
"279 -96 CURVE SMOOTH",
"284 -92 LINE",
"285 -90 LINE",
"286 -88 LINE SMOOTH",
"287 -87 OFFCURVE",
"288 -85 OFFCURVE",
"288 -84 CURVE",
"289 -84 LINE",
"289 -81 LINE",
"290 -79 LINE",
"292 -77 OFFCURVE",
"293 -77 OFFCURVE",
"293 -78 CURVE",
"294 -79 LINE",
"294 -74 LINE",
"297 -74 LINE",
"297 -73 LINE",
"297 -74 OFFCURVE",
"297 -74 OFFCURVE",
"298 -73 CURVE",
"298 -69 LINE",
"301 -69 LINE",
"303 -66 LINE",
"304 -64 LINE",
"307 -64 LINE SMOOTH",
"308 -64 OFFCURVE",
"308 -64 OFFCURVE",
"308 -63 CURVE SMOOTH",
"308 -62 OFFCURVE",
"308 -61 OFFCURVE",
"307 -61 CURVE",
"308 -61 OFFCURVE",
"309 -61 OFFCURVE",
"310 -60 CURVE SMOOTH",
"311 -59 OFFCURVE",
"312 -59 OFFCURVE",
"313 -59 CURVE",
"313 -58 OFFCURVE",
"313 -58 OFFCURVE",
"314 -58 CURVE",
"314 -56 LINE",
"316 -56 LINE",
"316 -54 OFFCURVE",
"317 -52 OFFCURVE",
"319 -51 CURVE",
"324 -50 LINE",
"324 -48 OFFCURVE",
"324 -47 OFFCURVE",
"323 -47 CURVE",
"323 -46 OFFCURVE",
"323 -46 OFFCURVE",
"324 -46 CURVE SMOOTH",
"326 -46 LINE",
"326 -43 OFFCURVE",
"325 -42 OFFCURVE",
"324 -42 CURVE",
"324 -41 OFFCURVE",
"323 -40 OFFCURVE",
"321 -38 CURVE",
"318 -38 OFFCURVE",
"318 -38 OFFCURVE",
"319 -39 CURVE",
"319 -40 OFFCURVE",
"318 -41 OFFCURVE",
"316 -42 CURVE",
"301 -42 LINE",
"300 -41 OFFCURVE",
"299 -40 OFFCURVE",
"298 -39 CURVE SMOOTH",
"294 -36 LINE",
"294 -34 LINE",
"293 -36 LINE",
"290 -33 LINE",
"266 -33 LINE",
"264 -29 LINE",
"262 -29 LINE SMOOTH",
"261 -29 OFFCURVE",
"261 -29 OFFCURVE",
"261 -28 CURVE",
"258 -28 LINE",
"258 -27 LINE",
"257 -26 OFFCURVE",
"255 -26 OFFCURVE",
"253 -27 CURVE",
"248 -28 LINE",
"243 -27 LINE",
"238 -27 LINE",
"238 -24 LINE",
"234 -23 OFFCURVE",
"234 -25 OFFCURVE",
"232 -25 CURVE SMOOTH",
"231 -25 OFFCURVE",
"231 -25 OFFCURVE",
"231 -24 CURVE",
"221 -16 LINE",
"221 -14 LINE",
"220 -15 OFFCURVE",
"219 -15 OFFCURVE",
"218 -13 CURVE",
"218 -12 OFFCURVE",
"217 -11 OFFCURVE",
"216 -11 CURVE",
"216 -3 LINE SMOOTH",
"216 0 OFFCURVE",
"216 2 OFFCURVE",
"217 3 CURVE",
"217 4 OFFCURVE",
"217 6 OFFCURVE",
"216 7 CURVE SMOOTH",
"214 10 LINE",
"212 10 OFFCURVE",
"211 10 OFFCURVE",
"210 9 CURVE",
"202 9 LINE SMOOTH",
"201 9 OFFCURVE",
"201 9 OFFCURVE",
"202 10 CURVE",
"201 10 LINE",
"201 11 OFFCURVE",
"200 12 OFFCURVE",
"199 13 CURVE SMOOTH",
"198 14 OFFCURVE",
"198 15 OFFCURVE",
"198 17 CURVE",
"201 17 LINE",
"201 47 LINE",
"198 49 LINE",
"201 53 LINE",
"202 55 LINE",
"202 56 LINE",
"206 56 LINE",
"206 59 LINE",
"209 59 OFFCURVE",
"211 58 OFFCURVE",
"211 56 CURVE",
"213 57 OFFCURVE",
"214 58 OFFCURVE",
"214 59 CURVE",
"216 63 LINE",
"216 67 LINE",
"218 67 LINE SMOOTH",
"217 67 OFFCURVE",
"218 67 OFFCURVE",
"219 68 CURVE",
"219 70 LINE",
"225 70 OFFCURVE",
"229 69 OFFCURVE",
"232 66 CURVE SMOOTH",
"235 63 OFFCURVE",
"237 60 OFFCURVE",
"239 56 CURVE",
"244 56 LINE",
"246 55 OFFCURVE",
"249 55 OFFCURVE",
"253 55 CURVE SMOOTH",
"260 55 LINE",
"264 56 LINE",
"264 59 LINE",
"262 60 LINE",
"247 60 LINE",
"247 61 OFFCURVE",
"246 63 OFFCURVE",
"245 65 CURVE SMOOTH",
"243 68 LINE",
"243 78 LINE",
"244 80 LINE",
"245 80 OFFCURVE",
"246 80 OFFCURVE",
"247 81 CURVE",
"247 82 LINE",
"258 82 LINE",
"258 81 LINE",
"262 81 LINE",
"264 77 LINE",
"267 73 LINE",
"289 73 LINE",
"290 74 LINE",
"293 74 LINE",
"297 74 LINE SMOOTH",
"298 74 OFFCURVE",
"298 75 OFFCURVE",
"298 76 CURVE",
"299 77 OFFCURVE",
"300 77 OFFCURVE",
"301 76 CURVE SMOOTH",
"303 74 LINE",
"307 74 LINE SMOOTH",
"308 74 OFFCURVE",
"308 74 OFFCURVE",
"308 73 CURVE",
"316 73 LINE",
"316 70 LINE",
"321 70 LINE",
"321 68 LINE",
"326 68 LINE",
"326 67 LINE",
"334 67 LINE",
"334 63 LINE SMOOTH",
"334 64 OFFCURVE",
"335 64 OFFCURVE",
"336 64 CURVE SMOOTH",
"339 64 LINE",
"339 63 OFFCURVE",
"339 63 OFFCURVE",
"340 63 CURVE SMOOTH",
"341 63 LINE",
"342 62 OFFCURVE",
"344 61 OFFCURVE",
"346 61 CURVE",
"348 62 OFFCURVE",
"349 62 OFFCURVE",
"350 60 CURVE",
"352 59 OFFCURVE",
"353 58 OFFCURVE",
"353 56 CURVE",
"354 56 OFFCURVE",
"355 57 OFFCURVE",
"356 58 CURVE",
"358 58 OFFCURVE",
"360 57 OFFCURVE",
"361 56 CURVE",
"362 58 LINE",
"363 60 LINE",
"365 60 OFFCURVE",
"366 60 OFFCURVE",
"365 61 CURVE",
"364 61 OFFCURVE",
"365 62 OFFCURVE",
"366 64 CURVE",
"368 63 LINE",
"368 68 LINE",
"371 68 LINE",
"370 70 LINE",
"371 70 OFFCURVE",
"370 71 OFFCURVE",
"369 72 CURVE SMOOTH",
"368 73 LINE",
"368 74 LINE",
"371 76 LINE",
"372 78 LINE",
"373 78 LINE SMOOTH",
"375 78 OFFCURVE",
"376 79 OFFCURVE",
"376 81 CURVE",
"384 81 LINE",
"384 78 LINE",
"387 78 LINE",
"388 76 LINE",
"389 74 LINE",
"397 74 LINE",
"402 75 OFFCURVE",
"404 75 OFFCURVE",
"404 76 CURVE",
"406 78 LINE SMOOTH",
"407 79 OFFCURVE",
"408 80 OFFCURVE",
"408 81 CURVE",
"409 82 OFFCURVE",
"409 84 OFFCURVE",
"408 85 CURVE",
"408 90 LINE",
"386 90 LINE",
"386 93 OFFCURVE",
"385 94 OFFCURVE",
"383 94 CURVE SMOOTH",
"382 94 OFFCURVE",
"381 96 OFFCURVE",
"381 99 CURVE",
"378 99 OFFCURVE",
"376 100 OFFCURVE",
"376 102 CURVE",
"373 105 LINE",
"372 105 OFFCURVE",
"372 105 OFFCURVE",
"372 106 CURVE",
"368 109 LINE",
"367 111 LINE",
"366 111 LINE",
"366 113 LINE",
"364 114 LINE",
"363 113 OFFCURVE",
"363 113 OFFCURVE",
"363 114 CURVE",
"362 114 OFFCURVE",
"361 115 OFFCURVE",
"361 117 CURVE SMOOTH",
"361 119 LINE",
"360 120 LINE SMOOTH",
"358 121 OFFCURVE",
"357 122 OFFCURVE",
"358 122 CURVE",
"357 123 OFFCURVE",
"356 123 OFFCURVE",
"354 123 CURVE",
"354 124 LINE SMOOTH",
"354 127 OFFCURVE",
"354 127 OFFCURVE",
"350 128 CURVE",
"349 131 OFFCURVE",
"347 134 OFFCURVE",
"343 136 CURVE",
"343 137 OFFCURVE",
"342 137 OFFCURVE",
"341 136 CURVE SMOOTH",
"340 135 OFFCURVE",
"339 134 OFFCURVE",
"338 134 CURVE",
"338 124 LINE",
"341 123 LINE",
"341 120 LINE",
"343 118 LINE SMOOTH",
"344 117 OFFCURVE",
"344 116 OFFCURVE",
"344 113 CURVE",
"348 113 LINE",
"348 82 LINE",
"345 81 OFFCURVE",
"344 80 OFFCURVE",
"344 78 CURVE",
"330 78 LINE",
"330 76 LINE",
"327 76 OFFCURVE",
"325 76 OFFCURVE",
"323 77 CURVE SMOOTH",
"321 78 OFFCURVE",
"319 77 OFFCURVE",
"316 76 CURVE",
"312 76 LINE",
"311 78 LINE",
"309 79 OFFCURVE",
"308 79 OFFCURVE",
"307 78 CURVE SMOOTH",
"306 77 OFFCURVE",
"305 76 OFFCURVE",
"304 76 CURVE SMOOTH",
"297 76 LINE",
"295 78 LINE",
"293 79 LINE SMOOTH",
"291 80 OFFCURVE",
"290 81 OFFCURVE",
"290 82 CURVE SMOOTH",
"290 86 LINE",
"294 86 OFFCURVE",
"297 87 OFFCURVE",
"298 88 CURVE SMOOTH",
"300 89 OFFCURVE",
"303 89 OFFCURVE",
"307 88 CURVE",
"308 89 LINE",
"307 88 OFFCURVE",
"307 89 OFFCURVE",
"307 90 CURVE",
"311 90 LINE",
"313 96 LINE",
"315 97 OFFCURVE",
"318 97 OFFCURVE",
"321 97 CURVE",
"322 98 LINE",
"323 98 LINE",
"324 97 LINE",
"326 99 LINE",
"325 100 OFFCURVE",
"326 100 OFFCURVE",
"327 101 CURVE",
"327 109 LINE",
"326 109 LINE",
"326 111 LINE",
"324 111 LINE",
"324 113 LINE",
"317 112 LINE",
"312 111 LINE",
"293 111 LINE",
"290 113 LINE",
"288 113 LINE",
"288 114 LINE",
"284 114 LINE",
"284 118 LINE",
"281 118 LINE",
"281 119 LINE",
"275 119 LINE",
"275 120 LINE",
"270 120 LINE",
"267 119 LINE",
"254 119 LINE",
"252 120 LINE",
"251 120 LINE",
"251 132 LINE SMOOTH",
"251 136 OFFCURVE",
"250 139 OFFCURVE",
"248 142 CURVE",
"247 142 OFFCURVE",
"246 142 OFFCURVE",
"245 141 CURVE SMOOTH",
"244 140 OFFCURVE",
"244 141 OFFCURVE",
"244 142 CURVE",
"242 141 LINE",
"243 142 OFFCURVE",
"243 142 OFFCURVE",
"243 141 CURVE",
"238 139 OFFCURVE",
"236 137 OFFCURVE",
"235 135 CURVE SMOOTH",
"231 129 LINE",
"228 129 LINE",
"228 128 LINE",
"224 128 LINE",
"221 127 LINE",
"218 128 OFFCURVE",
"214 127 OFFCURVE",
"208 124 CURVE SMOOTH",
"205 123 OFFCURVE",
"202 123 OFFCURVE",
"200 123 CURVE SMOOTH",
"197 123 OFFCURVE",
"195 123 OFFCURVE",
"193 124 CURVE SMOOTH",
"189 126 LINE",
"187 128 LINE",
"182 128 LINE",
"181 127 OFFCURVE",
"180 127 OFFCURVE",
"179 127 CURVE SMOOTH",
"178 127 OFFCURVE",
"177 127 OFFCURVE",
"176 128 CURVE",
"171 128 LINE",
"169 131 LINE",
"165 134 LINE",
"164 141 LINE",
"163 146 LINE",
"161 151 LINE",
"161 155 LINE",
"160 159 LINE SMOOTH",
"159 162 OFFCURVE",
"160 164 OFFCURVE",
"161 165 CURVE",
"161 166 LINE",
"164 166 LINE SMOOTH",
"169 166 OFFCURVE",
"172 167 OFFCURVE",
"173 169 CURVE SMOOTH",
"174 172 OFFCURVE",
"174 175 OFFCURVE",
"173 176 CURVE SMOOTH",
"171 177 LINE SMOOTH",
"170 178 OFFCURVE",
"169 178 OFFCURVE",
"168 178 CURVE",
"164 180 LINE",
"161 180 LINE",
"161 181 LINE",
"161 180 OFFCURVE",
"161 180 OFFCURVE",
"160 180 CURVE",
"160 181 OFFCURVE",
"159 182 OFFCURVE",
"158 183 CURVE SMOOTH",
"157 184 OFFCURVE",
"157 185 OFFCURVE",
"157 187 CURVE SMOOTH",
"157 190 OFFCURVE",
"158 193 OFFCURVE",
"159 194 CURVE",
"161 194 OFFCURVE",
"163 196 OFFCURVE",
"165 200 CURVE",
"168 200 OFFCURVE",
"170 200 OFFCURVE",
"170 199 CURVE",
"171 199 OFFCURVE",
"172 200 OFFCURVE",
"174 202 CURVE",
"183 202 LINE",
"186 197 LINE",
"188 192 LINE",
"201 192 LINE",
"202 190 OFFCURVE",
"202 189 OFFCURVE",
"201 189 CURVE",
"202 187 LINE",
"204 187 LINE",
"204 185 LINE SMOOTH",
"204 184 OFFCURVE",
"205 184 OFFCURVE",
"206 183 CURVE",
"208 183 LINE",
"208 182 OFFCURVE",
"208 182 OFFCURVE",
"209 182 CURVE",
"210 180 LINE",
"219 180 LINE SMOOTH",
"220 180 OFFCURVE",
"221 180 OFFCURVE",
"221 179 CURVE",
"224 179 LINE",
"224 176 LINE",
"225 176 OFFCURVE",
"225 175 OFFCURVE",
"225 174 CURVE",
"229 174 LINE",
"229 173 LINE",
"241 173 LINE",
"241 174 LINE",
"245 178 LINE",
"246 178 OFFCURVE",
"247 179 OFFCURVE",
"248 180 CURVE",
"275 180 LINE",
"282 181 LINE",
"283 182 OFFCURVE",
"284 184 OFFCURVE",
"284 185 CURVE",
"285 186 OFFCURVE",
"286 188 OFFCURVE",
"286 191 CURVE",
"288 196 LINE",
"289 195 OFFCURVE",
"290 195 OFFCURVE",
"292 198 CURVE SMOOTH",
"293 200 OFFCURVE",
"294 202 OFFCURVE",
"294 203 CURVE SMOOTH",
"294 207 OFFCURVE",
"292 211 OFFCURVE",
"288 216 CURVE SMOOTH",
"283 222 LINE",
"279 226 LINE",
"275 226 LINE",
"272 229 LINE",
"258 230 OFFCURVE",
"239 230 OFFCURVE",
"214 229 CURVE",
"214 228 OFFCURVE",
"213 228 OFFCURVE",
"210 228 CURVE SMOOTH",
"207 228 OFFCURVE",
"206 228 OFFCURVE",
"205 227 CURVE",
"205 226 LINE",
"194 226 LINE",
"194 228 OFFCURVE",
"194 229 OFFCURVE",
"193 229 CURVE",
"193 248 LINE",
"194 248 LINE",
"194 249 LINE",
"198 249 LINE",
"198 250 OFFCURVE",
"198 251 OFFCURVE",
"199 251 CURVE",
"200 252 OFFCURVE",
"201 253 OFFCURVE",
"202 253 CURVE",
"203 255 OFFCURVE",
"204 257 OFFCURVE",
"203 259 CURVE SMOOTH",
"202 261 OFFCURVE",
"202 262 OFFCURVE",
"204 263 CURVE",
"203 270 LINE SMOOTH",
"202 273 OFFCURVE",
"201 275 OFFCURVE",
"201 276 CURVE",
"198 276 LINE",
"198 283 LINE",
"197 283 LINE SMOOTH",
"196 283 OFFCURVE",
"196 283 OFFCURVE",
"196 284 CURVE SMOOTH",
"196 294 LINE",
"194 294 LINE",
"194 298 LINE",
"189 298 LINE",
"187 293 LINE",
"184 290 LINE",
"184 286 LINE",
"184 285 LINE",
"183 283 LINE",
"180 283 OFFCURVE",
"179 282 OFFCURVE",
"179 281 CURVE",
"174 281 OFFCURVE",
"171 282 OFFCURVE",
"171 283 CURVE",
"170 283 OFFCURVE",
"168 284 OFFCURVE",
"165 286 CURVE",
"165 290 LINE",
"164 293 LINE",
"164 306 LINE",
"165 306 LINE",
"167 307 OFFCURVE",
"167 308 OFFCURVE",
"166 309 CURVE SMOOTH",
"165 310 OFFCURVE",
"164 312 OFFCURVE",
"164 313 CURVE",
"163 313 LINE SMOOTH",
"162 313 OFFCURVE",
"161 313 OFFCURVE",
"161 312 CURVE",
"156 318 LINE SMOOTH",
"155 319 OFFCURVE",
"154 319 OFFCURVE",
"155 320 CURVE SMOOTH",
"156 321 OFFCURVE",
"156 322 OFFCURVE",
"156 323 CURVE",
"159 324 LINE",
"160 325 OFFCURVE",
"160 326 OFFCURVE",
"161 326 CURVE SMOOTH",
"162 326 OFFCURVE",
"163 325 OFFCURVE",
"163 324 CURVE",
"165 323 LINE",
"171 324 LINE",
"173 325 OFFCURVE",
"174 325 OFFCURVE",
"174 326 CURVE",
"174 325 OFFCURVE",
"174 324 OFFCURVE",
"175 324 CURVE",
"176 323 OFFCURVE",
"177 323 OFFCURVE",
"178 323 CURVE",
"179 326 LINE",
"182 326 LINE",
"183 323 LINE",
"185 324 LINE",
"186 324 LINE",
"186 325 LINE",
"188 327 LINE",
"191 328 OFFCURVE",
"192 330 OFFCURVE",
"191 331 CURVE",
"190 331 OFFCURVE",
"190 333 OFFCURVE",
"193 336 CURVE",
"193 338 OFFCURVE",
"193 339 OFFCURVE",
"194 339 CURVE",
"196 343 LINE",
"216 343 LINE",
"216 344 LINE",
"219 344 LINE",
"219 346 LINE",
"222 347 OFFCURVE",
"225 349 OFFCURVE",
"226 351 CURVE",
"228 352 OFFCURVE",
"230 353 OFFCURVE",
"233 353 CURVE",
"233 357 LINE",
"234 355 OFFCURVE",
"235 354 OFFCURVE",
"238 354 CURVE",
"238 357 LINE",
"240 358 OFFCURVE",
"241 359 OFFCURVE",
"241 361 CURVE",
"247 364 LINE",
"252 364 LINE",
"252 361 LINE",
"253 361 OFFCURVE",
"253 360 OFFCURVE",
"254 358 CURVE",
"266 358 LINE",
"266 362 LINE",
"267 360 OFFCURVE",
"268 360 OFFCURVE",
"269 361 CURVE",
"270 364 LINE",
"274 364 LINE SMOOTH",
"272 364 OFFCURVE",
"272 365 OFFCURVE",
"273 366 CURVE",
"273 367 OFFCURVE",
"274 368 OFFCURVE",
"275 368 CURVE",
"278 370 OFFCURVE",
"282 371 OFFCURVE",
"285 371 CURVE",
"287 372 OFFCURVE",
"291 372 OFFCURVE",
"298 372 CURVE",
"298 369 LINE",
"301 368 LINE",
"303 368 LINE",
"303 365 OFFCURVE",
"304 362 OFFCURVE",
"307 359 CURVE",
"307 358 OFFCURVE",
"306 358 OFFCURVE",
"305 358 CURVE",
"304 354 LINE",
"307 354 LINE",
"307 350 LINE",
"308 350 LINE",
"308 349 LINE",
"316 349 LINE",
"316 346 LINE",
"318 346 LINE",
"319 345 OFFCURVE",
"320 344 OFFCURVE",
"320 343 CURVE",
"321 343 LINE",
"321 341 LINE",
"327 341 LINE",
"334 340 LINE SMOOTH",
"338 339 OFFCURVE",
"341 340 OFFCURVE",
"343 341 CURVE",
"344 341 OFFCURVE",
"344 341 OFFCURVE",
"344 342 CURVE SMOOTH",
"344 343 LINE",
"349 343 LINE",
"349 344 LINE",
"352 344 OFFCURVE",
"353 344 OFFCURVE",
"352 345 CURVE",
"352 346 OFFCURVE",
"353 346 OFFCURVE",
"354 346 CURVE SMOOTH",
"357 347 OFFCURVE",
"359 347 OFFCURVE",
"361 346 CURVE SMOOTH",
"362 345 OFFCURVE",
"363 345 OFFCURVE",
"363 344 CURVE",
"365 343 OFFCURVE",
"365 343 OFFCURVE",
"365 345 CURVE",
"366 344 LINE SMOOTH",
"367 343 OFFCURVE",
"368 342 OFFCURVE",
"369 339 CURVE",
"373 335 LINE",
"376 335 LINE",
"376 334 LINE",
"384 334 LINE",
"386 331 LINE",
"387 331 OFFCURVE",
"387 331 OFFCURVE",
"386 330 CURVE",
"387 331 LINE",
"387 330 OFFCURVE",
"387 329 OFFCURVE",
"386 330 CURVE SMOOTH",
"389 327 LINE SMOOTH",
"390 326 OFFCURVE",
"391 325 OFFCURVE",
"391 323 CURVE",
"397 323 LINE",
"399 324 OFFCURVE",
"400 325 OFFCURVE",
"401 326 CURVE",
"401 324 OFFCURVE",
"401 323 OFFCURVE",
"402 322 CURVE SMOOTH",
"403 321 LINE",
"403 318 LINE",
"404 318 LINE",
"404 311 LINE",
"408 311 LINE",
"408 306 LINE",
"409 306 LINE",
"409 304 LINE",
"410 304 LINE",
"410 303 LINE",
"414 303 LINE",
"416 301 LINE",
"417 299 LINE",
"418 299 LINE",
"418 297 LINE",
"421 297 LINE",
"421 290 LINE",
"421 288 LINE",
"422 286 LINE",
"422 266 LINE",
"421 266 LINE",
"421 262 LINE",
"418 260 LINE",
"418 257 LINE",
"417 257 OFFCURVE",
"417 257 OFFCURVE",
"417 256 CURVE",
"415 254 OFFCURVE",
"414 250 OFFCURVE",
"414 244 CURVE SMOOTH",
"414 166 LINE",
"413 166 LINE SMOOTH",
"412 166 OFFCURVE",
"411 166 OFFCURVE",
"411 165 CURVE",
"412 164 OFFCURVE",
"413 163 OFFCURVE",
"413 161 CURVE",
"409 161 LINE",
"409 158 LINE SMOOTH",
"409 157 OFFCURVE",
"409 156 OFFCURVE",
"408 156 CURVE",
"406 154 OFFCURVE",
"405 153 OFFCURVE",
"406 153 CURVE",
"407 152 OFFCURVE",
"408 152 OFFCURVE",
"408 151 CURVE",
"405 151 LINE SMOOTH",
"404 151 OFFCURVE",
"404 151 OFFCURVE",
"404 150 CURVE",
"403 148 LINE",
"404 147 OFFCURVE",
"405 146 OFFCURVE",
"408 146 CURVE",
"404 142 LINE",
"408 142 LINE",
"408 139 LINE",
"409 139 LINE",
"409 140 OFFCURVE",
"409 140 OFFCURVE",
"410 138 CURVE",
"411 139 LINE",
"413 142 LINE",
"416 142 LINE",
"418 143 LINE",
"418 148 LINE",
"419 149 LINE",
"421 150 LINE",
"421 156 LINE",
"422 157 OFFCURVE",
"422 158 OFFCURVE",
"422 161 CURVE",
"424 161 LINE",
"424 170 LINE SMOOTH",
"424 173 OFFCURVE",
"425 176 OFFCURVE",
"428 179 CURVE",
"431 179 LINE",
"431 181 OFFCURVE",
"432 184 OFFCURVE",
"434 187 CURVE",
"434 188 LINE",
"432 188 LINE",
"432 194 LINE",
"431 194 LINE",
"431 236 LINE",
"432 235 OFFCURVE",
"432 236 OFFCURVE",
"432 237 CURVE",
"433 238 OFFCURVE",
"433 239 OFFCURVE",
"432 241 CURVE SMOOTH",
"431 245 LINE",
"431 247 LINE",
"430 248 OFFCURVE",
"430 250 OFFCURVE",
"430 253 CURVE SMOOTH",
"430 254 OFFCURVE",
"431 255 OFFCURVE",
"432 256 CURVE",
"432 260 LINE",
"435 260 LINE",
"435 261 OFFCURVE",
"435 261 OFFCURVE",
"434 261 CURVE",
"435 261 OFFCURVE",
"436 261 OFFCURVE",
"436 262 CURVE SMOOTH",
"436 271 LINE",
"440 271 LINE",
"440 296 LINE SMOOTH",
"440 299 OFFCURVE",
"440 303 OFFCURVE",
"439 306 CURVE SMOOTH",
"438 313 OFFCURVE",
"437 318 OFFCURVE",
"434 321 CURVE",
"434 323 LINE",
"428 329 LINE",
"428 343 LINE",
"429 345 LINE",
"429 346 OFFCURVE",
"430 346 OFFCURVE",
"431 346 CURVE",
"431 357 LINE",
"432 357 LINE",
"433 358 OFFCURVE",
"433 360 OFFCURVE",
"433 363 CURVE SMOOTH",
"432 368 LINE",
"431 370 LINE",
"431 371 OFFCURVE",
"430 372 OFFCURVE",
"428 374 CURVE SMOOTH",
"427 375 OFFCURVE",
"426 376 OFFCURVE",
"426 377 CURVE",
"422 385 LINE",
"422 388 OFFCURVE",
"421 390 OFFCURVE",
"418 393 CURVE",
"417 398 LINE",
"416 400 OFFCURVE",
"415 402 OFFCURVE",
"414 403 CURVE SMOOTH",
"413 405 OFFCURVE",
"412 406 OFFCURVE",
"409 407 CURVE",
"406 409 LINE",
"403 410 LINE SMOOTH",
"402 410 OFFCURVE",
"401 411 OFFCURVE",
"401 413 CURVE SMOOTH",
"401 416 LINE",
"398 418 LINE",
"394 419 LINE SMOOTH",
"392 420 OFFCURVE",
"390 421 OFFCURVE",
"389 423 CURVE",
"389 432 LINE",
"387 433 LINE",
"376 436 LINE",
"373 436 OFFCURVE",
"369 437 OFFCURVE",
"366 439 CURVE",
"366 441 LINE",
"364 442 OFFCURVE",
"362 443 OFFCURVE",
"359 445 CURVE SMOOTH",
"355 447 LINE",
"350 449 LINE",
"331 449 LINE",
"326 454 LINE",
"324 457 LINE SMOOTH",
"323 458 OFFCURVE",
"322 458 OFFCURVE",
"320 459 CURVE",
"317 462 OFFCURVE",
"315 463 OFFCURVE",
"313 463 CURVE SMOOTH",
"303 463 LINE",
"298 462 LINE",
"294 460 LINE",
"291 459 LINE",
"289 459 LINE",
"288 458 OFFCURVE",
"286 458 OFFCURVE",
"284 458 CURVE",
"283 459 OFFCURVE",
"282 459 OFFCURVE",
"279 459 CURVE",
"278 458 OFFCURVE",
"276 457 OFFCURVE",
"273 457 CURVE",
"272 456 OFFCURVE",
"270 456 OFFCURVE",
"267 456 CURVE SMOOTH",
"266 456 OFFCURVE",
"265 457 OFFCURVE",
"264 458 CURVE SMOOTH",
"262 460 LINE",
"259 462 LINE",
"256 463 LINE",
"254 463 OFFCURVE",
"253 463 OFFCURVE",
"252 464 CURVE",
"247 465 OFFCURVE",
"241 465 OFFCURVE",
"236 462 CURVE SMOOTH",
"231 459 OFFCURVE",
"227 456 OFFCURVE",
"225 454 CURVE",
"224 454 OFFCURVE",
"221 453 OFFCURVE",
"220 452 CURVE SMOOTH",
"217 449 LINE",
"188 449 LINE",
"188 446 LINE",
"186 446 LINE",
"185 445 OFFCURVE",
"184 445 OFFCURVE",
"183 445 CURVE",
"181 444 OFFCURVE",
"180 442 OFFCURVE",
"180 441 CURVE",
"178 439 LINE",
"173 438 LINE",
"171 436 LINE",
"170 436 OFFCURVE",
"169 435 OFFCURVE",
"169 433 CURVE SMOOTH",
"169 430 LINE",
"167 429 LINE",
"166 428 LINE",
"165 428 LINE",
"165 427 OFFCURVE",
"165 425 OFFCURVE",
"164 424 CURVE",
"164 422 LINE SMOOTH",
"164 420 OFFCURVE",
"163 419 OFFCURVE",
"162 419 CURVE",
"161 418 OFFCURVE",
"160 417 OFFCURVE",
"160 416 CURVE SMOOTH",
"160 414 LINE",
"157 413 LINE",
"156 414 OFFCURVE",
"156 414 OFFCURVE",
"156 413 CURVE",
"152 410 OFFCURVE",
"149 409 OFFCURVE",
"148 406 CURVE",
"144 403 LINE",
"141 400 LINE",
"141 399 OFFCURVE",
"140 399 OFFCURVE",
"139 398 CURVE SMOOTH",
"137 395 LINE",
"133 395 LINE",
"133 393 LINE",
"132 391 LINE SMOOTH",
"131 390 OFFCURVE",
"130 390 OFFCURVE",
"129 389 CURVE SMOOTH",
"128 388 OFFCURVE",
"127 387 OFFCURVE",
"124 387 CURVE",
"123 386 LINE",
"120 387 LINE",
"118 387 LINE",
"118 385 LINE",
"111 379 LINE",
"105 373 LINE",
"105 372 LINE",
"102 369 LINE SMOOTH",
"101 368 OFFCURVE",
"100 367 OFFCURVE",
"100 366 CURVE SMOOTH",
"100 364 LINE",
"98 363 OFFCURVE",
"97 362 OFFCURVE",
"97 361 CURVE",
"94 358 LINE",
"94 339 LINE",
"90 331 LINE SMOOTH",
"89 329 OFFCURVE",
"88 326 OFFCURVE",
"88 323 CURVE SMOOTH",
"88 308 LINE SMOOTH",
"88 300 OFFCURVE",
"89 293 OFFCURVE",
"90 286 CURVE SMOOTH",
"91 279 OFFCURVE",
"93 274 OFFCURVE",
"96 267 CURVE",
"96 261 LINE",
"95 260 OFFCURVE",
"94 258 OFFCURVE",
"94 256 CURVE SMOOTH",
"94 238 LINE",
"99 238 LINE",
"104 237 LINE",
"104 234 LINE",
"105 233 OFFCURVE",
"106 233 OFFCURVE",
"107 233 CURVE",
"108 232 OFFCURVE",
"108 231 OFFCURVE",
"108 230 CURVE",
"111 230 LINE",
"111 223 LINE",
"114 223 LINE",
"114 219 LINE",
"118 219 LINE",
"120 215 LINE",
"120 214 LINE",
"123 214 LINE",
"123 198 LINE",
"120 198 LINE",
"120 194 LINE",
"118 194 LINE",
"118 192 LINE",
"113 192 LINE",
"113 191 OFFCURVE",
"112 190 OFFCURVE",
"111 189 CURVE SMOOTH",
"110 188 OFFCURVE",
"109 188 OFFCURVE",
"109 189 CURVE",
"108 189 LINE",
"108 184 LINE",
"118 184 LINE",
"118 187 LINE",
"128 187 LINE",
"128 185 OFFCURVE",
"129 184 OFFCURVE",
"130 184 CURVE",
"131 183 LINE SMOOTH",
"132 182 OFFCURVE",
"132 180 OFFCURVE",
"131 178 CURVE",
"131 176 LINE SMOOTH",
"131 175 OFFCURVE",
"131 174 OFFCURVE",
"130 173 CURVE",
"129 170 LINE",
"129 167 LINE",
"128 164 LINE",
"127 164 LINE",
"127 156 LINE",
"128 156 LINE",
"130 153 OFFCURVE",
"131 151 OFFCURVE",
"131 152 CURVE SMOOTH",
"131 153 OFFCURVE",
"132 152 OFFCURVE",
"133 151 CURVE",
"132 151 OFFCURVE",
"132 149 OFFCURVE",
"132 146 CURVE SMOOTH",
"132 144 OFFCURVE",
"132 142 OFFCURVE",
"133 141 CURVE",
"132 139 OFFCURVE",
"130 138 OFFCURVE",
"128 138 CURVE",
"128 134 LINE",
"127 134 LINE",
"127 131 LINE",
"128 132 OFFCURVE",
"127 132 OFFCURVE",
"124 129 CURVE",
"124 124 LINE",
"123 124 OFFCURVE",
"122 125 OFFCURVE",
"121 126 CURVE",
"120 126 OFFCURVE",
"119 125 OFFCURVE",
"119 124 CURVE",
"118 124 LINE",
"118 128 LINE",
"116 129 LINE",
"115 128 OFFCURVE",
"115 128 OFFCURVE",
"114 129 CURVE",
"111 129 LINE",
"111 128 OFFCURVE",
"111 127 OFFCURVE",
"110 127 CURVE",
"109 126 OFFCURVE",
"109 125 OFFCURVE",
"109 123 CURVE",
"105 123 LINE",
"105 113 LINE",
"108 113 LINE",
"109 114 LINE",
"109 115 OFFCURVE",
"110 116 OFFCURVE",
"111 116 CURVE",
"114 114 LINE",
"118 113 LINE",
"118 106 LINE",
"119 106 LINE",
"119 101 LINE",
"118 101 LINE",
"118 83 LINE",
"119 82 OFFCURVE",
"119 81 OFFCURVE",
"120 78 CURVE",
"120 68 LINE",
"123 60 LINE",
"125 51 LINE SMOOTH",
"126 45 OFFCURVE",
"127 38 OFFCURVE",
"127 30 CURVE SMOOTH",
"127 17 LINE",
"125 14 LINE",
"123 10 LINE SMOOTH",
"121 7 OFFCURVE",
"120 5 OFFCURVE",
"119 3 CURVE",
"118 -4 LINE",
"115 -9 LINE",
"115 -34 LINE",
"116 -35 OFFCURVE",
"118 -37 OFFCURVE",
"121 -38 CURVE",
"127 -42 LINE",
"127 -46 LINE SMOOTH",
"127 -47 OFFCURVE",
"127 -49 OFFCURVE",
"128 -50 CURVE SMOOTH",
"130 -51 OFFCURVE",
"131 -53 OFFCURVE",
"131 -54 CURVE",
"132 -55 OFFCURVE",
"133 -57 OFFCURVE",
"134 -59 CURVE",
"150 -59 LINE",
"150 -61 LINE",
"153 -63 LINE",
"155 -65 LINE",
"160 -69 LINE",
"160 -71 LINE",
"161 -71 LINE",
"161 -73 LINE",
"167 -78 LINE SMOOTH",
"168 -79 OFFCURVE",
"170 -80 OFFCURVE",
"171 -83 CURVE",
"171 -94 LINE",
"173 -94 LINE",
"173 -96 LINE",
"179 -96 LINE",
"186 -95 LINE SMOOTH",
"191 -95 OFFCURVE",
"195 -96 OFFCURVE",
"196 -98 CURVE",
"196 -100 OFFCURVE",
"196 -101 OFFCURVE",
"197 -101 CURVE",
"197 -102 OFFCURVE",
"197 -103 OFFCURVE",
"198 -103 CURVE",
"198 -107 LINE",
"197 -110 OFFCURVE",
"196 -112 OFFCURVE",
"197 -113 CURVE SMOOTH",
"198 -115 OFFCURVE",
"197 -116 OFFCURVE",
"196 -117 CURVE",
"196 -119 LINE"
);
},
{
closed = 1;
nodes = (
"100 128 LINE",
"101 129 OFFCURVE",
"101 131 OFFCURVE",
"101 133 CURVE SMOOTH",
"101 134 OFFCURVE",
"101 134 OFFCURVE",
"100 134 CURVE",
"99 135 OFFCURVE",
"97 137 OFFCURVE",
"96 140 CURVE",
"96 148 LINE",
"94 148 LINE",
"94 153 LINE",
"92 153 LINE",
"92 155 OFFCURVE",
"92 156 OFFCURVE",
"91 156 CURVE",
"91 157 OFFCURVE",
"90 159 OFFCURVE",
"88 161 CURVE",
"84 161 LINE",
"84 159 LINE",
"82 159 LINE",
"82 156 OFFCURVE",
"82 153 OFFCURVE",
"83 152 CURVE",
"83 146 LINE",
"84 145 OFFCURVE",
"84 144 OFFCURVE",
"84 143 CURVE",
"88 143 LINE",
"87 142 OFFCURVE",
"86 141 OFFCURVE",
"86 138 CURVE",
"88 138 LINE",
"90 135 OFFCURVE",
"92 133 OFFCURVE",
"93 133 CURVE",
"94 132 OFFCURVE",
"94 130 OFFCURVE",
"94 128 CURVE",
"94 128 LINE"
);
},
{
closed = 1;
nodes = (
"108 143 LINE",
"109 144 LINE",
"110 144 LINE SMOOTH",
"111 144 OFFCURVE",
"111 144 OFFCURVE",
"111 145 CURVE",
"112 146 OFFCURVE",
"113 146 OFFCURVE",
"115 146 CURVE",
"115 148 LINE",
"111 148 LINE",
"109 151 LINE SMOOTH",
"108 152 OFFCURVE",
"107 153 OFFCURVE",
"105 153 CURVE",
"105 148 LINE",
"107 146 LINE",
"108 143 LINE"
);
},
{
closed = 1;
nodes = (
"256 10 LINE",
"259 12 OFFCURVE",
"260 13 OFFCURVE",
"261 13 CURVE",
"262 14 OFFCURVE",
"263 14 OFFCURVE",
"266 13 CURVE",
"266 17 LINE",
"268 17 OFFCURVE",
"269 17 OFFCURVE",
"269 18 CURVE",
"270 18 LINE SMOOTH",
"271 18 OFFCURVE",
"271 18 OFFCURVE",
"271 17 CURVE",
"273 18 OFFCURVE",
"274 19 OFFCURVE",
"274 21 CURVE",
"284 21 LINE",
"284 22 LINE",
"289 22 LINE",
"289 23 LINE",
"290 24 LINE",
"290 27 OFFCURVE",
"288 29 OFFCURVE",
"285 32 CURVE",
"285 33 LINE",
"284 33 LINE",
"283 36 LINE",
"282 36 LINE",
"281 37 LINE",
"279 37 LINE",
"278 36 LINE",
"271 36 LINE",
"270 33 LINE",
"261 33 LINE",
"261 36 LINE",
"258 36 LINE SMOOTH",
"255 36 OFFCURVE",
"253 36 OFFCURVE",
"253 35 CURVE SMOOTH",
"253 34 OFFCURVE",
"253 33 OFFCURVE",
"252 33 CURVE SMOOTH",
"248 33 LINE SMOOTH",
"247 33 OFFCURVE",
"247 33 OFFCURVE",
"247 32 CURVE",
"241 32 LINE SMOOTH",
"239 32 OFFCURVE",
"238 32 OFFCURVE",
"238 33 CURVE",
"233 33 OFFCURVE",
"230 33 OFFCURVE",
"229 32 CURVE",
"229 26 LINE",
"228 25 OFFCURVE",
"229 24 OFFCURVE",
"231 24 CURVE",
"231 22 LINE SMOOTH",
"231 21 OFFCURVE",
"232 21 OFFCURVE",
"233 21 CURVE SMOOTH",
"241 21 LINE",
"241 19 OFFCURVE",
"242 18 OFFCURVE",
"243 17 CURVE",
"243 18 OFFCURVE",
"244 18 OFFCURVE",
"247 18 CURVE",
"247 17 OFFCURVE",
"247 17 OFFCURVE",
"248 17 CURVE",
"249 16 OFFCURVE",
"250 15 OFFCURVE",
"253 14 CURVE",
"256 10 LINE"
);
},
{
closed = 1;
nodes = (
"92 171 LINE",
"96 171 LINE",
"96 173 LINE",
"99 175 LINE",
"100 175 OFFCURVE",
"100 175 OFFCURVE",
"99 175 CURVE",
"99 176 OFFCURVE",
"100 175 OFFCURVE",
"101 174 CURVE",
"101 183 LINE",
"100 184 OFFCURVE",
"100 187 OFFCURVE",
"100 192 CURVE",
"98 192 LINE",
"99 193 OFFCURVE",
"98 193 OFFCURVE",
"96 194 CURVE",
"96 198 LINE",
"94 198 LINE",
"94 202 LINE",
"92 202 LINE",
"92 210 LINE",
"86 210 LINE",
"86 200 LINE",
"88 200 LINE",
"88 196 LINE",
"92 196 LINE",
"91 195 OFFCURVE",
"91 194 OFFCURVE",
"91 193 CURVE SMOOTH",
"91 188 LINE",
"94 188 LINE",
"94 183 OFFCURVE",
"92 180 OFFCURVE",
"88 179 CURVE",
"88 176 OFFCURVE",
"88 175 OFFCURVE",
"89 175 CURVE",
"91 173 LINE",
"92 171 LINE"
);
},
{
closed = 1;
nodes = (
"109 203 LINE",
"111 203 LINE",
"114 206 LINE",
"114 207 OFFCURVE",
"113 207 OFFCURVE",
"112 207 CURVE",
"109 210 LINE",
"109 203 LINE"
);
},
{
closed = 1;
nodes = (
"285 44 LINE SMOOTH",
"288 44 OFFCURVE",
"289 44 OFFCURVE",
"290 45 CURVE",
"296 45 LINE SMOOTH",
"297 45 OFFCURVE",
"299 45 OFFCURVE",
"300 46 CURVE",
"303 46 OFFCURVE",
"305 47 OFFCURVE",
"307 49 CURVE",
"308 49 OFFCURVE",
"307 50 OFFCURVE",
"304 53 CURVE",
"284 53 LINE",
"284 49 LINE",
"281 50 LINE",
"281 49 OFFCURVE",
"280 50 OFFCURVE",
"279 51 CURVE",
"277 51 LINE",
"277 46 LINE",
"278 45 OFFCURVE",
"280 44 OFFCURVE",
"281 44 CURVE",
"281 44 LINE"
);
},
{
closed = 1;
nodes = (
"339 -27 OFFCURVE",
"340 -26 OFFCURVE",
"341 -24 CURVE",
"343 -23 LINE",
"349 -23 LINE",
"349 -20 LINE",
"353 -20 LINE",
"353 -17 OFFCURVE",
"353 -15 OFFCURVE",
"354 -14 CURVE",
"353 -11 LINE",
"353 -8 OFFCURVE",
"353 -5 OFFCURVE",
"352 -4 CURVE",
"352 -1 OFFCURVE",
"353 0 OFFCURVE",
"354 1 CURVE SMOOTH",
"355 2 OFFCURVE",
"357 3 OFFCURVE",
"358 2 CURVE",
"358 1 OFFCURVE",
"359 2 OFFCURVE",
"361 3 CURVE",
"361 7 LINE",
"362 8 OFFCURVE",
"363 9 OFFCURVE",
"363 11 CURVE SMOOTH",
"363 12 OFFCURVE",
"363 13 OFFCURVE",
"364 14 CURVE SMOOTH",
"366 15 LINE",
"367 16 LINE",
"368 17 LINE",
"374 21 LINE",
"375 23 OFFCURVE",
"377 25 OFFCURVE",
"380 26 CURVE",
"381 27 OFFCURVE",
"382 28 OFFCURVE",
"384 28 CURVE",
"387 30 LINE",
"387 33 LINE",
"389 33 LINE",
"390 35 LINE",
"389 36 OFFCURVE",
"390 36 OFFCURVE",
"391 37 CURVE",
"391 41 LINE",
"389 44 LINE",
"386 46 OFFCURVE",
"384 46 OFFCURVE",
"384 44 CURVE",
"382 43 OFFCURVE",
"380 42 OFFCURVE",
"379 41 CURVE SMOOTH",
"378 40 OFFCURVE",
"378 39 OFFCURVE",
"378 38 CURVE",
"377 38 OFFCURVE",
"377 38 OFFCURVE",
"377 37 CURVE",
"376 35 LINE",
"373 33 LINE",
"368 33 LINE",
"368 32 LINE",
"364 32 LINE",
"364 31 LINE SMOOTH",
"364 30 OFFCURVE",
"364 30 OFFCURVE",
"363 30 CURVE SMOOTH",
"362 30 OFFCURVE",
"361 29 OFFCURVE",
"361 28 CURVE",
"358 28 LINE",
"358 24 LINE",
"357 24 LINE",
"357 21 LINE SMOOTH",
"357 19 OFFCURVE",
"357 18 OFFCURVE",
"356 18 CURVE SMOOTH",
"354 18 LINE",
"354 17 OFFCURVE",
"355 16 OFFCURVE",
"356 15 CURVE",
"356 14 OFFCURVE",
"355 14 OFFCURVE",
"354 14 CURVE",
"354 13 OFFCURVE",
"354 13 OFFCURVE",
"353 13 CURVE",
"353 4 LINE",
"351 4 LINE SMOOTH",
"350 4 OFFCURVE",
"350 4 OFFCURVE",
"350 3 CURVE",
"353 1 LINE",
"352 0 OFFCURVE",
"350 -1 OFFCURVE",
"348 -4 CURVE SMOOTH",
"343 -9 LINE",
"343 -10 OFFCURVE",
"343 -11 OFFCURVE",
"342 -11 CURVE SMOOTH",
"341 -11 LINE",
"341 -13 LINE",
"339 -13 LINE",
"339 -14 LINE",
"335 -14 LINE",
"337 -16 OFFCURVE",
"337 -18 OFFCURVE",
"336 -19 CURVE SMOOTH",
"335 -20 OFFCURVE",
"334 -22 OFFCURVE",
"334 -23 CURVE SMOOTH",
"334 -24 OFFCURVE",
"334 -24 OFFCURVE",
"335 -24 CURVE",
"336 -25 OFFCURVE",
"337 -26 OFFCURVE",
"338 -26 CURVE",
"338 -26 LINE"
);
},
{
closed = 1;
nodes = (
"349 164 LINE",
"358 164 LINE",
"357 165 LINE",
"361 165 LINE",
"361 166 OFFCURVE",
"363 168 OFFCURVE",
"366 171 CURVE",
"366 173 LINE",
"368 173 LINE",
"371 174 LINE",
"371 177 LINE",
"373 178 LINE",
"373 180 LINE",
"380 180 OFFCURVE",
"385 180 OFFCURVE",
"387 181 CURVE",
"390 181 OFFCURVE",
"392 183 OFFCURVE",
"394 187 CURVE",
"395 188 OFFCURVE",
"394 188 OFFCURVE",
"393 188 CURVE",
"392 189 OFFCURVE",
"392 190 OFFCURVE",
"394 192 CURVE",
"395 192 OFFCURVE",
"395 193 OFFCURVE",
"395 194 CURVE",
"396 195 OFFCURVE",
"397 196 OFFCURVE",
"396 196 CURVE",
"398 198 LINE",
"398 201 LINE",
"397 202 OFFCURVE",
"396 203 OFFCURVE",
"395 203 CURVE SMOOTH",
"394 203 LINE",
"394 206 LINE",
"389 206 LINE",
"389 209 LINE",
"388 208 OFFCURVE",
"387 209 OFFCURVE",
"386 210 CURVE SMOOTH",
"385 211 OFFCURVE",
"384 212 OFFCURVE",
"384 214 CURVE",
"383 214 OFFCURVE",
"381 213 OFFCURVE",
"378 212 CURVE",
"377 211 OFFCURVE",
"375 210 OFFCURVE",
"372 211 CURVE",
"371 214 LINE",
"366 214 LINE",
"365 216 LINE",
"364 217 LINE",
"364 218 LINE",
"363 219 LINE",
"353 219 LINE",
"353 221 LINE",
"350 223 LINE",
"343 221 LINE",
"343 219 LINE",
"335 219 LINE",
"334 218 LINE",
"335 217 OFFCURVE",
"335 217 OFFCURVE",
"334 217 CURVE",
"334 214 LINE",
"328 213 LINE",
"324 211 LINE",
"324 210 LINE",
"321 207 LINE",
"320 207 LINE",
"320 206 OFFCURVE",
"320 206 OFFCURVE",
"321 206 CURVE",
"320 203 LINE",
"319 203 LINE",
"319 202 OFFCURVE",
"319 202 OFFCURVE",
"318 202 CURVE",
"318 200 LINE SMOOTH",
"318 199 OFFCURVE",
"317 198 OFFCURVE",
"316 198 CURVE",
"316 197 OFFCURVE",
"316 195 OFFCURVE",
"317 194 CURVE SMOOTH",
"318 193 OFFCURVE",
"317 191 OFFCURVE",
"316 189 CURVE",
"321 184 LINE SMOOTH",
"323 182 OFFCURVE",
"323 180 OFFCURVE",
"320 177 CURVE",
"321 175 LINE",
"320 174 OFFCURVE",
"320 174 OFFCURVE",
"321 174 CURVE",
"321 173 LINE",
"338 173 LINE SMOOTH",
"339 173 OFFCURVE",
"339 173 OFFCURVE",
"339 172 CURVE",
"340 171 OFFCURVE",
"342 171 OFFCURVE",
"343 171 CURVE",
"343 168 OFFCURVE",
"344 167 OFFCURVE",
"346 167 CURVE",
"349 164 LINE"
);
}
);
width = 490;
}
);
note = robbie;
}
);
instances = (
{
interpolationWeight = 400;
instanceInterpolations = {
"0CF23081-C341-41E4-8FF8-6B151438961F" = 1;
};
name = Regular;
weightClass = Normal;
}
);
kerning = {
"0CF23081-C341-41E4-8FF8-6B151438961F" = {
"@MMK_L_O" = {
comma = -110;
period = -110;
};
"@MMK_L_P" = {
comma = -50;
period = -80;
};
"@MMK_L_V" = {
"@MMK_R_a" = -60;
colon = -80;
comma = -70;
ecircumflex = -50;
ocircumflex = -40;
period = -70;
semicolon = -90;
};
"@MMK_L_W" = {
colon = -90;
comma = -70;
period = -70;
semicolon = -80;
};
C = {
D = 76.875;
};
F = {
e = -11.25;
o = -11.25;
r = -7.5;
};
P = {
a = -78.125;
e = -28.75;
g = -58.125;
i = 15;
l = 20;
o = -33.75;
r = -19.375;
u = -73.125;
v = -63.125;
w = -97.5;
x = -58.125;
y = -43.75;
z = -68.125;
};
T = {
h = 112.5;
};
h = {
a = -10;
r = -13.75;
};
y = {
d = -43.75;
};
};
};
manufacturer = "Robert E. Leuschke";
manufacturerURL = www.typesetit.com;
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 2;
}
